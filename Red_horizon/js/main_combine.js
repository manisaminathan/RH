!(function (a, b) {
    "object" == typeof module && "object" == typeof module.exports
        ? (module.exports = a.document
              ? b(a, !0)
              : function (a) {
                    if (!a.document) throw new Error("jQuery requires a window with a document");
                    return b(a);
                })
        : b(a);
})("undefined" != typeof window ? window : this, function (a, b) {
    var c = [],
        d = c.slice,
        e = c.concat,
        f = c.push,
        g = c.indexOf,
        h = {},
        i = h.toString,
        j = h.hasOwnProperty,
        k = {},
        l = a.document,
        m = "2.1.1",
        n = function (a, b) {
            return new n.fn.init(a, b);
        },
        o = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,
        p = /^-ms-/,
        q = /-([\da-z])/gi,
        r = function (a, b) {
            return b.toUpperCase();
        };
    (n.fn = n.prototype = {
        jquery: m,
        constructor: n,
        selector: "",
        length: 0,
        toArray: function () {
            return d.call(this);
        },
        get: function (a) {
            return null != a ? (0 > a ? this[a + this.length] : this[a]) : d.call(this);
        },
        pushStack: function (a) {
            var b = n.merge(this.constructor(), a);
            return (b.prevObject = this), (b.context = this.context), b;
        },
        each: function (a, b) {
            return n.each(this, a, b);
        },
        map: function (a) {
            return this.pushStack(
                n.map(this, function (b, c) {
                    return a.call(b, c, b);
                })
            );
        },
        slice: function () {
            return this.pushStack(d.apply(this, arguments));
        },
        first: function () {
            return this.eq(0);
        },
        last: function () {
            return this.eq(-1);
        },
        eq: function (a) {
            var b = this.length,
                c = +a + (0 > a ? b : 0);
            return this.pushStack(c >= 0 && b > c ? [this[c]] : []);
        },
        end: function () {
            return this.prevObject || this.constructor(null);
        },
        push: f,
        sort: c.sort,
        splice: c.splice,
    }),
        (n.extend = n.fn.extend = function () {
            var a,
                b,
                c,
                d,
                e,
                f,
                g = arguments[0] || {},
                h = 1,
                i = arguments.length,
                j = !1;
            for ("boolean" == typeof g && ((j = g), (g = arguments[h] || {}), h++), "object" == typeof g || n.isFunction(g) || (g = {}), h === i && ((g = this), h--); i > h; h++)
                if (null != (a = arguments[h]))
                    for (b in a)
                        (c = g[b]),
                            (d = a[b]),
                            g !== d &&
                                (j && d && (n.isPlainObject(d) || (e = n.isArray(d))) ? (e ? ((e = !1), (f = c && n.isArray(c) ? c : [])) : (f = c && n.isPlainObject(c) ? c : {}), (g[b] = n.extend(j, f, d))) : void 0 !== d && (g[b] = d));
            return g;
        }),
        n.extend({
            expando: "jQuery" + (m + Math.random()).replace(/\D/g, ""),
            isReady: !0,
            error: function (a) {
                throw new Error(a);
            },
            noop: function () {},
            isFunction: function (a) {
                return "function" === n.type(a);
            },
            isArray: Array.isArray,
            isWindow: function (a) {
                return null != a && a === a.window;
            },
            isNumeric: function (a) {
                return !n.isArray(a) && a - parseFloat(a) >= 0;
            },
            isPlainObject: function (a) {
                return "object" !== n.type(a) || a.nodeType || n.isWindow(a) ? !1 : a.constructor && !j.call(a.constructor.prototype, "isPrototypeOf") ? !1 : !0;
            },
            isEmptyObject: function (a) {
                var b;
                for (b in a) return !1;
                return !0;
            },
            type: function (a) {
                return null == a ? a + "" : "object" == typeof a || "function" == typeof a ? h[i.call(a)] || "object" : typeof a;
            },
            globalEval: function (a) {
                var b,
                    c = eval;
                (a = n.trim(a)), a && (1 === a.indexOf("use strict") ? ((b = l.createElement("script")), (b.text = a), l.head.appendChild(b).parentNode.removeChild(b)) : c(a));
            },
            camelCase: function (a) {
                return a.replace(p, "ms-").replace(q, r);
            },
            nodeName: function (a, b) {
                return a.nodeName && a.nodeName.toLowerCase() === b.toLowerCase();
            },
            each: function (a, b, c) {
                var d,
                    e = 0,
                    f = a.length,
                    g = s(a);
                if (c) {
                    if (g) {
                        for (; f > e; e++) if (((d = b.apply(a[e], c)), d === !1)) break;
                    } else for (e in a) if (((d = b.apply(a[e], c)), d === !1)) break;
                } else if (g) {
                    for (; f > e; e++) if (((d = b.call(a[e], e, a[e])), d === !1)) break;
                } else for (e in a) if (((d = b.call(a[e], e, a[e])), d === !1)) break;
                return a;
            },
            trim: function (a) {
                return null == a ? "" : (a + "").replace(o, "");
            },
            makeArray: function (a, b) {
                var c = b || [];
                return null != a && (s(Object(a)) ? n.merge(c, "string" == typeof a ? [a] : a) : f.call(c, a)), c;
            },
            inArray: function (a, b, c) {
                return null == b ? -1 : g.call(b, a, c);
            },
            merge: function (a, b) {
                for (var c = +b.length, d = 0, e = a.length; c > d; d++) a[e++] = b[d];
                return (a.length = e), a;
            },
            grep: function (a, b, c) {
                for (var d, e = [], f = 0, g = a.length, h = !c; g > f; f++) (d = !b(a[f], f)), d !== h && e.push(a[f]);
                return e;
            },
            map: function (a, b, c) {
                var d,
                    f = 0,
                    g = a.length,
                    h = s(a),
                    i = [];
                if (h) for (; g > f; f++) (d = b(a[f], f, c)), null != d && i.push(d);
                else for (f in a) (d = b(a[f], f, c)), null != d && i.push(d);
                return e.apply([], i);
            },
            guid: 1,
            proxy: function (a, b) {
                var c, e, f;
                return (
                    "string" == typeof b && ((c = a[b]), (b = a), (a = c)),
                    n.isFunction(a)
                        ? ((e = d.call(arguments, 2)),
                          (f = function () {
                              return a.apply(b || this, e.concat(d.call(arguments)));
                          }),
                          (f.guid = a.guid = a.guid || n.guid++),
                          f)
                        : void 0
                );
            },
            now: Date.now,
            support: k,
        }),
        n.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function (a, b) {
            h["[object " + b + "]"] = b.toLowerCase();
        });
    function s(a) {
        var b = a.length,
            c = n.type(a);
        return "function" === c || n.isWindow(a) ? !1 : 1 === a.nodeType && b ? !0 : "array" === c || 0 === b || ("number" == typeof b && b > 0 && b - 1 in a);
    }
    var t = (function (a) {
        var b,
            c,
            d,
            e,
            f,
            g,
            h,
            i,
            j,
            k,
            l,
            m,
            n,
            o,
            p,
            q,
            r,
            s,
            t,
            u = "sizzle" + -new Date(),
            v = a.document,
            w = 0,
            x = 0,
            y = gb(),
            z = gb(),
            A = gb(),
            B = function (a, b) {
                return a === b && (l = !0), 0;
            },
            C = "undefined",
            D = 1 << 31,
            E = {}.hasOwnProperty,
            F = [],
            G = F.pop,
            H = F.push,
            I = F.push,
            J = F.slice,
            K =
                F.indexOf ||
                function (a) {
                    for (var b = 0, c = this.length; c > b; b++) if (this[b] === a) return b;
                    return -1;
                },
            L = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
            M = "[\\x20\\t\\r\\n\\f]",
            N = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",
            O = N.replace("w", "w#"),
            P = "\\[" + M + "*(" + N + ")(?:" + M + "*([*^$|!~]?=)" + M + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + O + "))|)" + M + "*\\]",
            Q = ":(" + N + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + P + ")*)|.*)\\)|)",
            R = new RegExp("^" + M + "+|((?:^|[^\\\\])(?:\\\\.)*)" + M + "+$", "g"),
            S = new RegExp("^" + M + "*," + M + "*"),
            T = new RegExp("^" + M + "*([>+~]|" + M + ")" + M + "*"),
            U = new RegExp("=" + M + "*([^\\]'\"]*?)" + M + "*\\]", "g"),
            V = new RegExp(Q),
            W = new RegExp("^" + O + "$"),
            X = {
                ID: new RegExp("^#(" + N + ")"),
                CLASS: new RegExp("^\\.(" + N + ")"),
                TAG: new RegExp("^(" + N.replace("w", "w*") + ")"),
                ATTR: new RegExp("^" + P),
                PSEUDO: new RegExp("^" + Q),
                CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + M + "*(even|odd|(([+-]|)(\\d*)n|)" + M + "*(?:([+-]|)" + M + "*(\\d+)|))" + M + "*\\)|)", "i"),
                bool: new RegExp("^(?:" + L + ")$", "i"),
                needsContext: new RegExp("^" + M + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + M + "*((?:-\\d)?\\d*)" + M + "*\\)|)(?=[^-]|$)", "i"),
            },
            Y = /^(?:input|select|textarea|button)$/i,
            Z = /^h\d$/i,
            $ = /^[^{]+\{\s*\[native \w/,
            _ = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
            ab = /[+~]/,
            bb = /'|\\/g,
            cb = new RegExp("\\\\([\\da-f]{1,6}" + M + "?|(" + M + ")|.)", "ig"),
            db = function (a, b, c) {
                var d = "0x" + b - 65536;
                return d !== d || c ? b : 0 > d ? String.fromCharCode(d + 65536) : String.fromCharCode((d >> 10) | 55296, (1023 & d) | 56320);
            };
        try {
            I.apply((F = J.call(v.childNodes)), v.childNodes), F[v.childNodes.length].nodeType;
        } catch (eb) {
            I = {
                apply: F.length
                    ? function (a, b) {
                          H.apply(a, J.call(b));
                      }
                    : function (a, b) {
                          var c = a.length,
                              d = 0;
                          while ((a[c++] = b[d++]));
                          a.length = c - 1;
                      },
            };
        }
        function fb(a, b, d, e) {
            var f, h, j, k, l, o, r, s, w, x;
            if (((b ? b.ownerDocument || b : v) !== n && m(b), (b = b || n), (d = d || []), !a || "string" != typeof a)) return d;
            if (1 !== (k = b.nodeType) && 9 !== k) return [];
            if (p && !e) {
                if ((f = _.exec(a)))
                    if ((j = f[1])) {
                        if (9 === k) {
                            if (((h = b.getElementById(j)), !h || !h.parentNode)) return d;
                            if (h.id === j) return d.push(h), d;
                        } else if (b.ownerDocument && (h = b.ownerDocument.getElementById(j)) && t(b, h) && h.id === j) return d.push(h), d;
                    } else {
                        if (f[2]) return I.apply(d, b.getElementsByTagName(a)), d;
                        if ((j = f[3]) && c.getElementsByClassName && b.getElementsByClassName) return I.apply(d, b.getElementsByClassName(j)), d;
                    }
                if (c.qsa && (!q || !q.test(a))) {
                    if (((s = r = u), (w = b), (x = 9 === k && a), 1 === k && "object" !== b.nodeName.toLowerCase())) {
                        (o = g(a)), (r = b.getAttribute("id")) ? (s = r.replace(bb, "\\$&")) : b.setAttribute("id", s), (s = "[id='" + s + "'] "), (l = o.length);
                        while (l--) o[l] = s + qb(o[l]);
                        (w = (ab.test(a) && ob(b.parentNode)) || b), (x = o.join(","));
                    }
                    if (x)
                        try {
                            return I.apply(d, w.querySelectorAll(x)), d;
                        } catch (y) {
                        } finally {
                            r || b.removeAttribute("id");
                        }
                }
            }
            return i(a.replace(R, "$1"), b, d, e);
        }
        function gb() {
            var a = [];
            function b(c, e) {
                return a.push(c + " ") > d.cacheLength && delete b[a.shift()], (b[c + " "] = e);
            }
            return b;
        }
        function hb(a) {
            return (a[u] = !0), a;
        }
        function ib(a) {
            var b = n.createElement("div");
            try {
                return !!a(b);
            } catch (c) {
                return !1;
            } finally {
                b.parentNode && b.parentNode.removeChild(b), (b = null);
            }
        }
        function jb(a, b) {
            var c = a.split("|"),
                e = a.length;
            while (e--) d.attrHandle[c[e]] = b;
        }
        function kb(a, b) {
            var c = b && a,
                d = c && 1 === a.nodeType && 1 === b.nodeType && (~b.sourceIndex || D) - (~a.sourceIndex || D);
            if (d) return d;
            if (c) while ((c = c.nextSibling)) if (c === b) return -1;
            return a ? 1 : -1;
        }
        function lb(a) {
            return function (b) {
                var c = b.nodeName.toLowerCase();
                return "input" === c && b.type === a;
            };
        }
        function mb(a) {
            return function (b) {
                var c = b.nodeName.toLowerCase();
                return ("input" === c || "button" === c) && b.type === a;
            };
        }
        function nb(a) {
            return hb(function (b) {
                return (
                    (b = +b),
                    hb(function (c, d) {
                        var e,
                            f = a([], c.length, b),
                            g = f.length;
                        while (g--) c[(e = f[g])] && (c[e] = !(d[e] = c[e]));
                    })
                );
            });
        }
        function ob(a) {
            return a && typeof a.getElementsByTagName !== C && a;
        }
        (c = fb.support = {}),
            (f = fb.isXML = function (a) {
                var b = a && (a.ownerDocument || a).documentElement;
                return b ? "HTML" !== b.nodeName : !1;
            }),
            (m = fb.setDocument = function (a) {
                var b,
                    e = a ? a.ownerDocument || a : v,
                    g = e.defaultView;
                return e !== n && 9 === e.nodeType && e.documentElement
                    ? ((n = e),
                      (o = e.documentElement),
                      (p = !f(e)),
                      g &&
                          g !== g.top &&
                          (g.addEventListener
                              ? g.addEventListener(
                                    "unload",
                                    function () {
                                        m();
                                    },
                                    !1
                                )
                              : g.attachEvent &&
                                g.attachEvent("onunload", function () {
                                    m();
                                })),
                      (c.attributes = ib(function (a) {
                          return (a.className = "i"), !a.getAttribute("className");
                      })),
                      (c.getElementsByTagName = ib(function (a) {
                          return a.appendChild(e.createComment("")), !a.getElementsByTagName("*").length;
                      })),
                      (c.getElementsByClassName =
                          $.test(e.getElementsByClassName) &&
                          ib(function (a) {
                              return (a.innerHTML = "<div class='a'></div><div class='a i'></div>"), (a.firstChild.className = "i"), 2 === a.getElementsByClassName("i").length;
                          })),
                      (c.getById = ib(function (a) {
                          return (o.appendChild(a).id = u), !e.getElementsByName || !e.getElementsByName(u).length;
                      })),
                      c.getById
                          ? ((d.find.ID = function (a, b) {
                                if (typeof b.getElementById !== C && p) {
                                    var c = b.getElementById(a);
                                    return c && c.parentNode ? [c] : [];
                                }
                            }),
                            (d.filter.ID = function (a) {
                                var b = a.replace(cb, db);
                                return function (a) {
                                    return a.getAttribute("id") === b;
                                };
                            }))
                          : (delete d.find.ID,
                            (d.filter.ID = function (a) {
                                var b = a.replace(cb, db);
                                return function (a) {
                                    var c = typeof a.getAttributeNode !== C && a.getAttributeNode("id");
                                    return c && c.value === b;
                                };
                            })),
                      (d.find.TAG = c.getElementsByTagName
                          ? function (a, b) {
                                return typeof b.getElementsByTagName !== C ? b.getElementsByTagName(a) : void 0;
                            }
                          : function (a, b) {
                                var c,
                                    d = [],
                                    e = 0,
                                    f = b.getElementsByTagName(a);
                                if ("*" === a) {
                                    while ((c = f[e++])) 1 === c.nodeType && d.push(c);
                                    return d;
                                }
                                return f;
                            }),
                      (d.find.CLASS =
                          c.getElementsByClassName &&
                          function (a, b) {
                              return typeof b.getElementsByClassName !== C && p ? b.getElementsByClassName(a) : void 0;
                          }),
                      (r = []),
                      (q = []),
                      (c.qsa = $.test(e.querySelectorAll)) &&
                          (ib(function (a) {
                              (a.innerHTML = "<select msallowclip=''><option selected=''></option></select>"),
                                  a.querySelectorAll("[msallowclip^='']").length && q.push("[*^$]=" + M + "*(?:''|\"\")"),
                                  a.querySelectorAll("[selected]").length || q.push("\\[" + M + "*(?:value|" + L + ")"),
                                  a.querySelectorAll(":checked").length || q.push(":checked");
                          }),
                          ib(function (a) {
                              var b = e.createElement("input");
                              b.setAttribute("type", "hidden"),
                                  a.appendChild(b).setAttribute("name", "D"),
                                  a.querySelectorAll("[name=d]").length && q.push("name" + M + "*[*^$|!~]?="),
                                  a.querySelectorAll(":enabled").length || q.push(":enabled", ":disabled"),
                                  a.querySelectorAll("*,:x"),
                                  q.push(",.*:");
                          })),
                      (c.matchesSelector = $.test((s = o.matches || o.webkitMatchesSelector || o.mozMatchesSelector || o.oMatchesSelector || o.msMatchesSelector))) &&
                          ib(function (a) {
                              (c.disconnectedMatch = s.call(a, "div")), s.call(a, "[s!='']:x"), r.push("!=", Q);
                          }),
                      (q = q.length && new RegExp(q.join("|"))),
                      (r = r.length && new RegExp(r.join("|"))),
                      (b = $.test(o.compareDocumentPosition)),
                      (t =
                          b || $.test(o.contains)
                              ? function (a, b) {
                                    var c = 9 === a.nodeType ? a.documentElement : a,
                                        d = b && b.parentNode;
                                    return a === d || !(!d || 1 !== d.nodeType || !(c.contains ? c.contains(d) : a.compareDocumentPosition && 16 & a.compareDocumentPosition(d)));
                                }
                              : function (a, b) {
                                    if (b) while ((b = b.parentNode)) if (b === a) return !0;
                                    return !1;
                                }),
                      (B = b
                          ? function (a, b) {
                                if (a === b) return (l = !0), 0;
                                var d = !a.compareDocumentPosition - !b.compareDocumentPosition;
                                return d
                                    ? d
                                    : ((d = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : 1),
                                      1 & d || (!c.sortDetached && b.compareDocumentPosition(a) === d)
                                          ? a === e || (a.ownerDocument === v && t(v, a))
                                              ? -1
                                              : b === e || (b.ownerDocument === v && t(v, b))
                                              ? 1
                                              : k
                                              ? K.call(k, a) - K.call(k, b)
                                              : 0
                                          : 4 & d
                                          ? -1
                                          : 1);
                            }
                          : function (a, b) {
                                if (a === b) return (l = !0), 0;
                                var c,
                                    d = 0,
                                    f = a.parentNode,
                                    g = b.parentNode,
                                    h = [a],
                                    i = [b];
                                if (!f || !g) return a === e ? -1 : b === e ? 1 : f ? -1 : g ? 1 : k ? K.call(k, a) - K.call(k, b) : 0;
                                if (f === g) return kb(a, b);
                                c = a;
                                while ((c = c.parentNode)) h.unshift(c);
                                c = b;
                                while ((c = c.parentNode)) i.unshift(c);
                                while (h[d] === i[d]) d++;
                                return d ? kb(h[d], i[d]) : h[d] === v ? -1 : i[d] === v ? 1 : 0;
                            }),
                      e)
                    : n;
            }),
            (fb.matches = function (a, b) {
                return fb(a, null, null, b);
            }),
            (fb.matchesSelector = function (a, b) {
                if (((a.ownerDocument || a) !== n && m(a), (b = b.replace(U, "='$1']")), !(!c.matchesSelector || !p || (r && r.test(b)) || (q && q.test(b)))))
                    try {
                        var d = s.call(a, b);
                        if (d || c.disconnectedMatch || (a.document && 11 !== a.document.nodeType)) return d;
                    } catch (e) {}
                return fb(b, n, null, [a]).length > 0;
            }),
            (fb.contains = function (a, b) {
                return (a.ownerDocument || a) !== n && m(a), t(a, b);
            }),
            (fb.attr = function (a, b) {
                (a.ownerDocument || a) !== n && m(a);
                var e = d.attrHandle[b.toLowerCase()],
                    f = e && E.call(d.attrHandle, b.toLowerCase()) ? e(a, b, !p) : void 0;
                return void 0 !== f ? f : c.attributes || !p ? a.getAttribute(b) : (f = a.getAttributeNode(b)) && f.specified ? f.value : null;
            }),
            (fb.error = function (a) {
                throw new Error("Syntax error, unrecognized expression: " + a);
            }),
            (fb.uniqueSort = function (a) {
                var b,
                    d = [],
                    e = 0,
                    f = 0;
                if (((l = !c.detectDuplicates), (k = !c.sortStable && a.slice(0)), a.sort(B), l)) {
                    while ((b = a[f++])) b === a[f] && (e = d.push(f));
                    while (e--) a.splice(d[e], 1);
                }
                return (k = null), a;
            }),
            (e = fb.getText = function (a) {
                var b,
                    c = "",
                    d = 0,
                    f = a.nodeType;
                if (f) {
                    if (1 === f || 9 === f || 11 === f) {
                        if ("string" == typeof a.textContent) return a.textContent;
                        for (a = a.firstChild; a; a = a.nextSibling) c += e(a);
                    } else if (3 === f || 4 === f) return a.nodeValue;
                } else while ((b = a[d++])) c += e(b);
                return c;
            }),
            (d = fb.selectors = {
                cacheLength: 50,
                createPseudo: hb,
                match: X,
                attrHandle: {},
                find: {},
                relative: { ">": { dir: "parentNode", first: !0 }, " ": { dir: "parentNode" }, "+": { dir: "previousSibling", first: !0 }, "~": { dir: "previousSibling" } },
                preFilter: {
                    ATTR: function (a) {
                        return (a[1] = a[1].replace(cb, db)), (a[3] = (a[3] || a[4] || a[5] || "").replace(cb, db)), "~=" === a[2] && (a[3] = " " + a[3] + " "), a.slice(0, 4);
                    },
                    CHILD: function (a) {
                        return (
                            (a[1] = a[1].toLowerCase()),
                            "nth" === a[1].slice(0, 3) ? (a[3] || fb.error(a[0]), (a[4] = +(a[4] ? a[5] + (a[6] || 1) : 2 * ("even" === a[3] || "odd" === a[3]))), (a[5] = +(a[7] + a[8] || "odd" === a[3]))) : a[3] && fb.error(a[0]),
                            a
                        );
                    },
                    PSEUDO: function (a) {
                        var b,
                            c = !a[6] && a[2];
                        return X.CHILD.test(a[0])
                            ? null
                            : (a[3] ? (a[2] = a[4] || a[5] || "") : c && V.test(c) && (b = g(c, !0)) && (b = c.indexOf(")", c.length - b) - c.length) && ((a[0] = a[0].slice(0, b)), (a[2] = c.slice(0, b))), a.slice(0, 3));
                    },
                },
                filter: {
                    TAG: function (a) {
                        var b = a.replace(cb, db).toLowerCase();
                        return "*" === a
                            ? function () {
                                  return !0;
                              }
                            : function (a) {
                                  return a.nodeName && a.nodeName.toLowerCase() === b;
                              };
                    },
                    CLASS: function (a) {
                        var b = y[a + " "];
                        return (
                            b ||
                            ((b = new RegExp("(^|" + M + ")" + a + "(" + M + "|$)")) &&
                                y(a, function (a) {
                                    return b.test(("string" == typeof a.className && a.className) || (typeof a.getAttribute !== C && a.getAttribute("class")) || "");
                                }))
                        );
                    },
                    ATTR: function (a, b, c) {
                        return function (d) {
                            var e = fb.attr(d, a);
                            return null == e
                                ? "!=" === b
                                : b
                                ? ((e += ""),
                                  "=" === b
                                      ? e === c
                                      : "!=" === b
                                      ? e !== c
                                      : "^=" === b
                                      ? c && 0 === e.indexOf(c)
                                      : "*=" === b
                                      ? c && e.indexOf(c) > -1
                                      : "$=" === b
                                      ? c && e.slice(-c.length) === c
                                      : "~=" === b
                                      ? (" " + e + " ").indexOf(c) > -1
                                      : "|=" === b
                                      ? e === c || e.slice(0, c.length + 1) === c + "-"
                                      : !1)
                                : !0;
                        };
                    },
                    CHILD: function (a, b, c, d, e) {
                        var f = "nth" !== a.slice(0, 3),
                            g = "last" !== a.slice(-4),
                            h = "of-type" === b;
                        return 1 === d && 0 === e
                            ? function (a) {
                                  return !!a.parentNode;
                              }
                            : function (b, c, i) {
                                  var j,
                                      k,
                                      l,
                                      m,
                                      n,
                                      o,
                                      p = f !== g ? "nextSibling" : "previousSibling",
                                      q = b.parentNode,
                                      r = h && b.nodeName.toLowerCase(),
                                      s = !i && !h;
                                  if (q) {
                                      if (f) {
                                          while (p) {
                                              l = b;
                                              while ((l = l[p])) if (h ? l.nodeName.toLowerCase() === r : 1 === l.nodeType) return !1;
                                              o = p = "only" === a && !o && "nextSibling";
                                          }
                                          return !0;
                                      }
                                      if (((o = [g ? q.firstChild : q.lastChild]), g && s)) {
                                          (k = q[u] || (q[u] = {})), (j = k[a] || []), (n = j[0] === w && j[1]), (m = j[0] === w && j[2]), (l = n && q.childNodes[n]);
                                          while ((l = (++n && l && l[p]) || (m = n = 0) || o.pop()))
                                              if (1 === l.nodeType && ++m && l === b) {
                                                  k[a] = [w, n, m];
                                                  break;
                                              }
                                      } else if (s && (j = (b[u] || (b[u] = {}))[a]) && j[0] === w) m = j[1];
                                      else while ((l = (++n && l && l[p]) || (m = n = 0) || o.pop())) if ((h ? l.nodeName.toLowerCase() === r : 1 === l.nodeType) && ++m && (s && ((l[u] || (l[u] = {}))[a] = [w, m]), l === b)) break;
                                      return (m -= e), m === d || (m % d === 0 && m / d >= 0);
                                  }
                              };
                    },
                    PSEUDO: function (a, b) {
                        var c,
                            e = d.pseudos[a] || d.setFilters[a.toLowerCase()] || fb.error("unsupported pseudo: " + a);
                        return e[u]
                            ? e(b)
                            : e.length > 1
                            ? ((c = [a, a, "", b]),
                              d.setFilters.hasOwnProperty(a.toLowerCase())
                                  ? hb(function (a, c) {
                                        var d,
                                            f = e(a, b),
                                            g = f.length;
                                        while (g--) (d = K.call(a, f[g])), (a[d] = !(c[d] = f[g]));
                                    })
                                  : function (a) {
                                        return e(a, 0, c);
                                    })
                            : e;
                    },
                },
                pseudos: {
                    not: hb(function (a) {
                        var b = [],
                            c = [],
                            d = h(a.replace(R, "$1"));
                        return d[u]
                            ? hb(function (a, b, c, e) {
                                  var f,
                                      g = d(a, null, e, []),
                                      h = a.length;
                                  while (h--) (f = g[h]) && (a[h] = !(b[h] = f));
                              })
                            : function (a, e, f) {
                                  return (b[0] = a), d(b, null, f, c), !c.pop();
                              };
                    }),
                    has: hb(function (a) {
                        return function (b) {
                            return fb(a, b).length > 0;
                        };
                    }),
                    contains: hb(function (a) {
                        return function (b) {
                            return (b.textContent || b.innerText || e(b)).indexOf(a) > -1;
                        };
                    }),
                    lang: hb(function (a) {
                        return (
                            W.test(a || "") || fb.error("unsupported lang: " + a),
                            (a = a.replace(cb, db).toLowerCase()),
                            function (b) {
                                var c;
                                do if ((c = p ? b.lang : b.getAttribute("xml:lang") || b.getAttribute("lang"))) return (c = c.toLowerCase()), c === a || 0 === c.indexOf(a + "-");
                                while ((b = b.parentNode) && 1 === b.nodeType);
                                return !1;
                            }
                        );
                    }),
                    target: function (b) {
                        var c = a.location && a.location.hash;
                        return c && c.slice(1) === b.id;
                    },
                    root: function (a) {
                        return a === o;
                    },
                    focus: function (a) {
                        return a === n.activeElement && (!n.hasFocus || n.hasFocus()) && !!(a.type || a.href || ~a.tabIndex);
                    },
                    enabled: function (a) {
                        return a.disabled === !1;
                    },
                    disabled: function (a) {
                        return a.disabled === !0;
                    },
                    checked: function (a) {
                        var b = a.nodeName.toLowerCase();
                        return ("input" === b && !!a.checked) || ("option" === b && !!a.selected);
                    },
                    selected: function (a) {
                        return a.parentNode && a.parentNode.selectedIndex, a.selected === !0;
                    },
                    empty: function (a) {
                        for (a = a.firstChild; a; a = a.nextSibling) if (a.nodeType < 6) return !1;
                        return !0;
                    },
                    parent: function (a) {
                        return !d.pseudos.empty(a);
                    },
                    header: function (a) {
                        return Z.test(a.nodeName);
                    },
                    input: function (a) {
                        return Y.test(a.nodeName);
                    },
                    button: function (a) {
                        var b = a.nodeName.toLowerCase();
                        return ("input" === b && "button" === a.type) || "button" === b;
                    },
                    text: function (a) {
                        var b;
                        return "input" === a.nodeName.toLowerCase() && "text" === a.type && (null == (b = a.getAttribute("type")) || "text" === b.toLowerCase());
                    },
                    first: nb(function () {
                        return [0];
                    }),
                    last: nb(function (a, b) {
                        return [b - 1];
                    }),
                    eq: nb(function (a, b, c) {
                        return [0 > c ? c + b : c];
                    }),
                    even: nb(function (a, b) {
                        for (var c = 0; b > c; c += 2) a.push(c);
                        return a;
                    }),
                    odd: nb(function (a, b) {
                        for (var c = 1; b > c; c += 2) a.push(c);
                        return a;
                    }),
                    lt: nb(function (a, b, c) {
                        for (var d = 0 > c ? c + b : c; --d >= 0; ) a.push(d);
                        return a;
                    }),
                    gt: nb(function (a, b, c) {
                        for (var d = 0 > c ? c + b : c; ++d < b; ) a.push(d);
                        return a;
                    }),
                },
            }),
            (d.pseudos.nth = d.pseudos.eq);
        for (b in { radio: !0, checkbox: !0, file: !0, password: !0, image: !0 }) d.pseudos[b] = lb(b);
        for (b in { submit: !0, reset: !0 }) d.pseudos[b] = mb(b);
        function pb() {}
        (pb.prototype = d.filters = d.pseudos),
            (d.setFilters = new pb()),
            (g = fb.tokenize = function (a, b) {
                var c,
                    e,
                    f,
                    g,
                    h,
                    i,
                    j,
                    k = z[a + " "];
                if (k) return b ? 0 : k.slice(0);
                (h = a), (i = []), (j = d.preFilter);
                while (h) {
                    (!c || (e = S.exec(h))) && (e && (h = h.slice(e[0].length) || h), i.push((f = []))), (c = !1), (e = T.exec(h)) && ((c = e.shift()), f.push({ value: c, type: e[0].replace(R, " ") }), (h = h.slice(c.length)));
                    for (g in d.filter) !(e = X[g].exec(h)) || (j[g] && !(e = j[g](e))) || ((c = e.shift()), f.push({ value: c, type: g, matches: e }), (h = h.slice(c.length)));
                    if (!c) break;
                }
                return b ? h.length : h ? fb.error(a) : z(a, i).slice(0);
            });
        function qb(a) {
            for (var b = 0, c = a.length, d = ""; c > b; b++) d += a[b].value;
            return d;
        }
        function rb(a, b, c) {
            var d = b.dir,
                e = c && "parentNode" === d,
                f = x++;
            return b.first
                ? function (b, c, f) {
                      while ((b = b[d])) if (1 === b.nodeType || e) return a(b, c, f);
                  }
                : function (b, c, g) {
                      var h,
                          i,
                          j = [w, f];
                      if (g) {
                          while ((b = b[d])) if ((1 === b.nodeType || e) && a(b, c, g)) return !0;
                      } else
                          while ((b = b[d]))
                              if (1 === b.nodeType || e) {
                                  if (((i = b[u] || (b[u] = {})), (h = i[d]) && h[0] === w && h[1] === f)) return (j[2] = h[2]);
                                  if (((i[d] = j), (j[2] = a(b, c, g)))) return !0;
                              }
                  };
        }
        function sb(a) {
            return a.length > 1
                ? function (b, c, d) {
                      var e = a.length;
                      while (e--) if (!a[e](b, c, d)) return !1;
                      return !0;
                  }
                : a[0];
        }
        function tb(a, b, c) {
            for (var d = 0, e = b.length; e > d; d++) fb(a, b[d], c);
            return c;
        }
        function ub(a, b, c, d, e) {
            for (var f, g = [], h = 0, i = a.length, j = null != b; i > h; h++) (f = a[h]) && (!c || c(f, d, e)) && (g.push(f), j && b.push(h));
            return g;
        }
        function vb(a, b, c, d, e, f) {
            return (
                d && !d[u] && (d = vb(d)),
                e && !e[u] && (e = vb(e, f)),
                hb(function (f, g, h, i) {
                    var j,
                        k,
                        l,
                        m = [],
                        n = [],
                        o = g.length,
                        p = f || tb(b || "*", h.nodeType ? [h] : h, []),
                        q = !a || (!f && b) ? p : ub(p, m, a, h, i),
                        r = c ? (e || (f ? a : o || d) ? [] : g) : q;
                    if ((c && c(q, r, h, i), d)) {
                        (j = ub(r, n)), d(j, [], h, i), (k = j.length);
                        while (k--) (l = j[k]) && (r[n[k]] = !(q[n[k]] = l));
                    }
                    if (f) {
                        if (e || a) {
                            if (e) {
                                (j = []), (k = r.length);
                                while (k--) (l = r[k]) && j.push((q[k] = l));
                                e(null, (r = []), j, i);
                            }
                            k = r.length;
                            while (k--) (l = r[k]) && (j = e ? K.call(f, l) : m[k]) > -1 && (f[j] = !(g[j] = l));
                        }
                    } else (r = ub(r === g ? r.splice(o, r.length) : r)), e ? e(null, g, r, i) : I.apply(g, r);
                })
            );
        }
        function wb(a) {
            for (
                var b,
                    c,
                    e,
                    f = a.length,
                    g = d.relative[a[0].type],
                    h = g || d.relative[" "],
                    i = g ? 1 : 0,
                    k = rb(
                        function (a) {
                            return a === b;
                        },
                        h,
                        !0
                    ),
                    l = rb(
                        function (a) {
                            return K.call(b, a) > -1;
                        },
                        h,
                        !0
                    ),
                    m = [
                        function (a, c, d) {
                            return (!g && (d || c !== j)) || ((b = c).nodeType ? k(a, c, d) : l(a, c, d));
                        },
                    ];
                f > i;
                i++
            )
                if ((c = d.relative[a[i].type])) m = [rb(sb(m), c)];
                else {
                    if (((c = d.filter[a[i].type].apply(null, a[i].matches)), c[u])) {
                        for (e = ++i; f > e; e++) if (d.relative[a[e].type]) break;
                        return vb(i > 1 && sb(m), i > 1 && qb(a.slice(0, i - 1).concat({ value: " " === a[i - 2].type ? "*" : "" })).replace(R, "$1"), c, e > i && wb(a.slice(i, e)), f > e && wb((a = a.slice(e))), f > e && qb(a));
                    }
                    m.push(c);
                }
            return sb(m);
        }
        function xb(a, b) {
            var c = b.length > 0,
                e = a.length > 0,
                f = function (f, g, h, i, k) {
                    var l,
                        m,
                        o,
                        p = 0,
                        q = "0",
                        r = f && [],
                        s = [],
                        t = j,
                        u = f || (e && d.find.TAG("*", k)),
                        v = (w += null == t ? 1 : Math.random() || 0.1),
                        x = u.length;
                    for (k && (j = g !== n && g); q !== x && null != (l = u[q]); q++) {
                        if (e && l) {
                            m = 0;
                            while ((o = a[m++]))
                                if (o(l, g, h)) {
                                    i.push(l);
                                    break;
                                }
                            k && (w = v);
                        }
                        c && ((l = !o && l) && p--, f && r.push(l));
                    }
                    if (((p += q), c && q !== p)) {
                        m = 0;
                        while ((o = b[m++])) o(r, s, g, h);
                        if (f) {
                            if (p > 0) while (q--) r[q] || s[q] || (s[q] = G.call(i));
                            s = ub(s);
                        }
                        I.apply(i, s), k && !f && s.length > 0 && p + b.length > 1 && fb.uniqueSort(i);
                    }
                    return k && ((w = v), (j = t)), r;
                };
            return c ? hb(f) : f;
        }
        return (
            (h = fb.compile = function (a, b) {
                var c,
                    d = [],
                    e = [],
                    f = A[a + " "];
                if (!f) {
                    b || (b = g(a)), (c = b.length);
                    while (c--) (f = wb(b[c])), f[u] ? d.push(f) : e.push(f);
                    (f = A(a, xb(e, d))), (f.selector = a);
                }
                return f;
            }),
            (i = fb.select = function (a, b, e, f) {
                var i,
                    j,
                    k,
                    l,
                    m,
                    n = "function" == typeof a && a,
                    o = !f && g((a = n.selector || a));
                if (((e = e || []), 1 === o.length)) {
                    if (((j = o[0] = o[0].slice(0)), j.length > 2 && "ID" === (k = j[0]).type && c.getById && 9 === b.nodeType && p && d.relative[j[1].type])) {
                        if (((b = (d.find.ID(k.matches[0].replace(cb, db), b) || [])[0]), !b)) return e;
                        n && (b = b.parentNode), (a = a.slice(j.shift().value.length));
                    }
                    i = X.needsContext.test(a) ? 0 : j.length;
                    while (i--) {
                        if (((k = j[i]), d.relative[(l = k.type)])) break;
                        if ((m = d.find[l]) && (f = m(k.matches[0].replace(cb, db), (ab.test(j[0].type) && ob(b.parentNode)) || b))) {
                            if ((j.splice(i, 1), (a = f.length && qb(j)), !a)) return I.apply(e, f), e;
                            break;
                        }
                    }
                }
                return (n || h(a, o))(f, b, !p, e, (ab.test(a) && ob(b.parentNode)) || b), e;
            }),
            (c.sortStable = u.split("").sort(B).join("") === u),
            (c.detectDuplicates = !!l),
            m(),
            (c.sortDetached = ib(function (a) {
                return 1 & a.compareDocumentPosition(n.createElement("div"));
            })),
            ib(function (a) {
                return (a.innerHTML = "<a href='#'></a>"), "#" === a.firstChild.getAttribute("href");
            }) ||
                jb("type|href|height|width", function (a, b, c) {
                    return c ? void 0 : a.getAttribute(b, "type" === b.toLowerCase() ? 1 : 2);
                }),
            (c.attributes &&
                ib(function (a) {
                    return (a.innerHTML = "<input/>"), a.firstChild.setAttribute("value", ""), "" === a.firstChild.getAttribute("value");
                })) ||
                jb("value", function (a, b, c) {
                    return c || "input" !== a.nodeName.toLowerCase() ? void 0 : a.defaultValue;
                }),
            ib(function (a) {
                return null == a.getAttribute("disabled");
            }) ||
                jb(L, function (a, b, c) {
                    var d;
                    return c ? void 0 : a[b] === !0 ? b.toLowerCase() : (d = a.getAttributeNode(b)) && d.specified ? d.value : null;
                }),
            fb
        );
    })(a);
    (n.find = t), (n.expr = t.selectors), (n.expr[":"] = n.expr.pseudos), (n.unique = t.uniqueSort), (n.text = t.getText), (n.isXMLDoc = t.isXML), (n.contains = t.contains);
    var u = n.expr.match.needsContext,
        v = /^<(\w+)\s*\/?>(?:<\/\1>|)$/,
        w = /^.[^:#\[\.,]*$/;
    function x(a, b, c) {
        if (n.isFunction(b))
            return n.grep(a, function (a, d) {
                return !!b.call(a, d, a) !== c;
            });
        if (b.nodeType)
            return n.grep(a, function (a) {
                return (a === b) !== c;
            });
        if ("string" == typeof b) {
            if (w.test(b)) return n.filter(b, a, c);
            b = n.filter(b, a);
        }
        return n.grep(a, function (a) {
            return g.call(b, a) >= 0 !== c;
        });
    }
    (n.filter = function (a, b, c) {
        var d = b[0];
        return (
            c && (a = ":not(" + a + ")"),
            1 === b.length && 1 === d.nodeType
                ? n.find.matchesSelector(d, a)
                    ? [d]
                    : []
                : n.find.matches(
                      a,
                      n.grep(b, function (a) {
                          return 1 === a.nodeType;
                      })
                  )
        );
    }),
        n.fn.extend({
            find: function (a) {
                var b,
                    c = this.length,
                    d = [],
                    e = this;
                if ("string" != typeof a)
                    return this.pushStack(
                        n(a).filter(function () {
                            for (b = 0; c > b; b++) if (n.contains(e[b], this)) return !0;
                        })
                    );
                for (b = 0; c > b; b++) n.find(a, e[b], d);
                return (d = this.pushStack(c > 1 ? n.unique(d) : d)), (d.selector = this.selector ? this.selector + " " + a : a), d;
            },
            filter: function (a) {
                return this.pushStack(x(this, a || [], !1));
            },
            not: function (a) {
                return this.pushStack(x(this, a || [], !0));
            },
            is: function (a) {
                return !!x(this, "string" == typeof a && u.test(a) ? n(a) : a || [], !1).length;
            },
        });
    var y,
        z = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,
        A = (n.fn.init = function (a, b) {
            var c, d;
            if (!a) return this;
            if ("string" == typeof a) {
                if (((c = "<" === a[0] && ">" === a[a.length - 1] && a.length >= 3 ? [null, a, null] : z.exec(a)), !c || (!c[1] && b))) return !b || b.jquery ? (b || y).find(a) : this.constructor(b).find(a);
                if (c[1]) {
                    if (((b = b instanceof n ? b[0] : b), n.merge(this, n.parseHTML(c[1], b && b.nodeType ? b.ownerDocument || b : l, !0)), v.test(c[1]) && n.isPlainObject(b)))
                        for (c in b) n.isFunction(this[c]) ? this[c](b[c]) : this.attr(c, b[c]);
                    return this;
                }
                return (d = l.getElementById(c[2])), d && d.parentNode && ((this.length = 1), (this[0] = d)), (this.context = l), (this.selector = a), this;
            }
            return a.nodeType
                ? ((this.context = this[0] = a), (this.length = 1), this)
                : n.isFunction(a)
                ? "undefined" != typeof y.ready
                    ? y.ready(a)
                    : a(n)
                : (void 0 !== a.selector && ((this.selector = a.selector), (this.context = a.context)), n.makeArray(a, this));
        });
    (A.prototype = n.fn), (y = n(l));
    var B = /^(?:parents|prev(?:Until|All))/,
        C = { children: !0, contents: !0, next: !0, prev: !0 };
    n.extend({
        dir: function (a, b, c) {
            var d = [],
                e = void 0 !== c;
            while ((a = a[b]) && 9 !== a.nodeType)
                if (1 === a.nodeType) {
                    if (e && n(a).is(c)) break;
                    d.push(a);
                }
            return d;
        },
        sibling: function (a, b) {
            for (var c = []; a; a = a.nextSibling) 1 === a.nodeType && a !== b && c.push(a);
            return c;
        },
    }),
        n.fn.extend({
            has: function (a) {
                var b = n(a, this),
                    c = b.length;
                return this.filter(function () {
                    for (var a = 0; c > a; a++) if (n.contains(this, b[a])) return !0;
                });
            },
            closest: function (a, b) {
                for (var c, d = 0, e = this.length, f = [], g = u.test(a) || "string" != typeof a ? n(a, b || this.context) : 0; e > d; d++)
                    for (c = this[d]; c && c !== b; c = c.parentNode)
                        if (c.nodeType < 11 && (g ? g.index(c) > -1 : 1 === c.nodeType && n.find.matchesSelector(c, a))) {
                            f.push(c);
                            break;
                        }
                return this.pushStack(f.length > 1 ? n.unique(f) : f);
            },
            index: function (a) {
                return a ? ("string" == typeof a ? g.call(n(a), this[0]) : g.call(this, a.jquery ? a[0] : a)) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1;
            },
            add: function (a, b) {
                return this.pushStack(n.unique(n.merge(this.get(), n(a, b))));
            },
            addBack: function (a) {
                return this.add(null == a ? this.prevObject : this.prevObject.filter(a));
            },
        });
    function D(a, b) {
        while ((a = a[b]) && 1 !== a.nodeType);
        return a;
    }
    n.each(
        {
            parent: function (a) {
                var b = a.parentNode;
                return b && 11 !== b.nodeType ? b : null;
            },
            parents: function (a) {
                return n.dir(a, "parentNode");
            },
            parentsUntil: function (a, b, c) {
                return n.dir(a, "parentNode", c);
            },
            next: function (a) {
                return D(a, "nextSibling");
            },
            prev: function (a) {
                return D(a, "previousSibling");
            },
            nextAll: function (a) {
                return n.dir(a, "nextSibling");
            },
            prevAll: function (a) {
                return n.dir(a, "previousSibling");
            },
            nextUntil: function (a, b, c) {
                return n.dir(a, "nextSibling", c);
            },
            prevUntil: function (a, b, c) {
                return n.dir(a, "previousSibling", c);
            },
            siblings: function (a) {
                return n.sibling((a.parentNode || {}).firstChild, a);
            },
            children: function (a) {
                return n.sibling(a.firstChild);
            },
            contents: function (a) {
                return a.contentDocument || n.merge([], a.childNodes);
            },
        },
        function (a, b) {
            n.fn[a] = function (c, d) {
                var e = n.map(this, b, c);
                return "Until" !== a.slice(-5) && (d = c), d && "string" == typeof d && (e = n.filter(d, e)), this.length > 1 && (C[a] || n.unique(e), B.test(a) && e.reverse()), this.pushStack(e);
            };
        }
    );
    var E = /\S+/g,
        F = {};
    function G(a) {
        var b = (F[a] = {});
        return (
            n.each(a.match(E) || [], function (a, c) {
                b[c] = !0;
            }),
            b
        );
    }
    (n.Callbacks = function (a) {
        a = "string" == typeof a ? F[a] || G(a) : n.extend({}, a);
        var b,
            c,
            d,
            e,
            f,
            g,
            h = [],
            i = !a.once && [],
            j = function (l) {
                for (b = a.memory && l, c = !0, g = e || 0, e = 0, f = h.length, d = !0; h && f > g; g++)
                    if (h[g].apply(l[0], l[1]) === !1 && a.stopOnFalse) {
                        b = !1;
                        break;
                    }
                (d = !1), h && (i ? i.length && j(i.shift()) : b ? (h = []) : k.disable());
            },
            k = {
                add: function () {
                    if (h) {
                        var c = h.length;
                        !(function g(b) {
                            n.each(b, function (b, c) {
                                var d = n.type(c);
                                "function" === d ? (a.unique && k.has(c)) || h.push(c) : c && c.length && "string" !== d && g(c);
                            });
                        })(arguments),
                            d ? (f = h.length) : b && ((e = c), j(b));
                    }
                    return this;
                },
                remove: function () {
                    return (
                        h &&
                            n.each(arguments, function (a, b) {
                                var c;
                                while ((c = n.inArray(b, h, c)) > -1) h.splice(c, 1), d && (f >= c && f--, g >= c && g--);
                            }),
                        this
                    );
                },
                has: function (a) {
                    return a ? n.inArray(a, h) > -1 : !(!h || !h.length);
                },
                empty: function () {
                    return (h = []), (f = 0), this;
                },
                disable: function () {
                    return (h = i = b = void 0), this;
                },
                disabled: function () {
                    return !h;
                },
                lock: function () {
                    return (i = void 0), b || k.disable(), this;
                },
                locked: function () {
                    return !i;
                },
                fireWith: function (a, b) {
                    return !h || (c && !i) || ((b = b || []), (b = [a, b.slice ? b.slice() : b]), d ? i.push(b) : j(b)), this;
                },
                fire: function () {
                    return k.fireWith(this, arguments), this;
                },
                fired: function () {
                    return !!c;
                },
            };
        return k;
    }),
        n.extend({
            Deferred: function (a) {
                var b = [
                        ["resolve", "done", n.Callbacks("once memory"), "resolved"],
                        ["reject", "fail", n.Callbacks("once memory"), "rejected"],
                        ["notify", "progress", n.Callbacks("memory")],
                    ],
                    c = "pending",
                    d = {
                        state: function () {
                            return c;
                        },
                        always: function () {
                            return e.done(arguments).fail(arguments), this;
                        },
                        then: function () {
                            var a = arguments;
                            return n
                                .Deferred(function (c) {
                                    n.each(b, function (b, f) {
                                        var g = n.isFunction(a[b]) && a[b];
                                        e[f[1]](function () {
                                            var a = g && g.apply(this, arguments);
                                            a && n.isFunction(a.promise) ? a.promise().done(c.resolve).fail(c.reject).progress(c.notify) : c[f[0] + "With"](this === d ? c.promise() : this, g ? [a] : arguments);
                                        });
                                    }),
                                        (a = null);
                                })
                                .promise();
                        },
                        promise: function (a) {
                            return null != a ? n.extend(a, d) : d;
                        },
                    },
                    e = {};
                return (
                    (d.pipe = d.then),
                    n.each(b, function (a, f) {
                        var g = f[2],
                            h = f[3];
                        (d[f[1]] = g.add),
                            h &&
                                g.add(
                                    function () {
                                        c = h;
                                    },
                                    b[1 ^ a][2].disable,
                                    b[2][2].lock
                                ),
                            (e[f[0]] = function () {
                                return e[f[0] + "With"](this === e ? d : this, arguments), this;
                            }),
                            (e[f[0] + "With"] = g.fireWith);
                    }),
                    d.promise(e),
                    a && a.call(e, e),
                    e
                );
            },
            when: function (a) {
                var b = 0,
                    c = d.call(arguments),
                    e = c.length,
                    f = 1 !== e || (a && n.isFunction(a.promise)) ? e : 0,
                    g = 1 === f ? a : n.Deferred(),
                    h = function (a, b, c) {
                        return function (e) {
                            (b[a] = this), (c[a] = arguments.length > 1 ? d.call(arguments) : e), c === i ? g.notifyWith(b, c) : --f || g.resolveWith(b, c);
                        };
                    },
                    i,
                    j,
                    k;
                if (e > 1) for (i = new Array(e), j = new Array(e), k = new Array(e); e > b; b++) c[b] && n.isFunction(c[b].promise) ? c[b].promise().done(h(b, k, c)).fail(g.reject).progress(h(b, j, i)) : --f;
                return f || g.resolveWith(k, c), g.promise();
            },
        });
    var H;
    (n.fn.ready = function (a) {
        return n.ready.promise().done(a), this;
    }),
        n.extend({
            isReady: !1,
            readyWait: 1,
            holdReady: function (a) {
                a ? n.readyWait++ : n.ready(!0);
            },
            ready: function (a) {
                (a === !0 ? --n.readyWait : n.isReady) || ((n.isReady = !0), (a !== !0 && --n.readyWait > 0) || (H.resolveWith(l, [n]), n.fn.triggerHandler && (n(l).triggerHandler("ready"), n(l).off("ready"))));
            },
        });
    function I() {
        l.removeEventListener("DOMContentLoaded", I, !1), a.removeEventListener("load", I, !1), n.ready();
    }
    (n.ready.promise = function (b) {
        return H || ((H = n.Deferred()), "complete" === l.readyState ? setTimeout(n.ready) : (l.addEventListener("DOMContentLoaded", I, !1), a.addEventListener("load", I, !1))), H.promise(b);
    }),
        n.ready.promise();
    var J = (n.access = function (a, b, c, d, e, f, g) {
        var h = 0,
            i = a.length,
            j = null == c;
        if ("object" === n.type(c)) {
            e = !0;
            for (h in c) n.access(a, b, h, c[h], !0, f, g);
        } else if (
            void 0 !== d &&
            ((e = !0),
            n.isFunction(d) || (g = !0),
            j &&
                (g
                    ? (b.call(a, d), (b = null))
                    : ((j = b),
                      (b = function (a, b, c) {
                          return j.call(n(a), c);
                      }))),
            b)
        )
            for (; i > h; h++) b(a[h], c, g ? d : d.call(a[h], h, b(a[h], c)));
        return e ? a : j ? b.call(a) : i ? b(a[0], c) : f;
    });
    n.acceptData = function (a) {
        return 1 === a.nodeType || 9 === a.nodeType || !+a.nodeType;
    };
    function K() {
        Object.defineProperty((this.cache = {}), 0, {
            get: function () {
                return {};
            },
        }),
            (this.expando = n.expando + Math.random());
    }
    (K.uid = 1),
        (K.accepts = n.acceptData),
        (K.prototype = {
            key: function (a) {
                if (!K.accepts(a)) return 0;
                var b = {},
                    c = a[this.expando];
                if (!c) {
                    c = K.uid++;
                    try {
                        (b[this.expando] = { value: c }), Object.defineProperties(a, b);
                    } catch (d) {
                        (b[this.expando] = c), n.extend(a, b);
                    }
                }
                return this.cache[c] || (this.cache[c] = {}), c;
            },
            set: function (a, b, c) {
                var d,
                    e = this.key(a),
                    f = this.cache[e];
                if ("string" == typeof b) f[b] = c;
                else if (n.isEmptyObject(f)) n.extend(this.cache[e], b);
                else for (d in b) f[d] = b[d];
                return f;
            },
            get: function (a, b) {
                var c = this.cache[this.key(a)];
                return void 0 === b ? c : c[b];
            },
            access: function (a, b, c) {
                var d;
                return void 0 === b || (b && "string" == typeof b && void 0 === c) ? ((d = this.get(a, b)), void 0 !== d ? d : this.get(a, n.camelCase(b))) : (this.set(a, b, c), void 0 !== c ? c : b);
            },
            remove: function (a, b) {
                var c,
                    d,
                    e,
                    f = this.key(a),
                    g = this.cache[f];
                if (void 0 === b) this.cache[f] = {};
                else {
                    n.isArray(b) ? (d = b.concat(b.map(n.camelCase))) : ((e = n.camelCase(b)), b in g ? (d = [b, e]) : ((d = e), (d = d in g ? [d] : d.match(E) || []))), (c = d.length);
                    while (c--) delete g[d[c]];
                }
            },
            hasData: function (a) {
                return !n.isEmptyObject(this.cache[a[this.expando]] || {});
            },
            discard: function (a) {
                a[this.expando] && delete this.cache[a[this.expando]];
            },
        });
    var L = new K(),
        M = new K(),
        N = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
        O = /([A-Z])/g;
    function P(a, b, c) {
        var d;
        if (void 0 === c && 1 === a.nodeType)
            if (((d = "data-" + b.replace(O, "-$1").toLowerCase()), (c = a.getAttribute(d)), "string" == typeof c)) {
                try {
                    c = "true" === c ? !0 : "false" === c ? !1 : "null" === c ? null : +c + "" === c ? +c : N.test(c) ? n.parseJSON(c) : c;
                } catch (e) {}
                M.set(a, b, c);
            } else c = void 0;
        return c;
    }
    n.extend({
        hasData: function (a) {
            return M.hasData(a) || L.hasData(a);
        },
        data: function (a, b, c) {
            return M.access(a, b, c);
        },
        removeData: function (a, b) {
            M.remove(a, b);
        },
        _data: function (a, b, c) {
            return L.access(a, b, c);
        },
        _removeData: function (a, b) {
            L.remove(a, b);
        },
    }),
        n.fn.extend({
            data: function (a, b) {
                var c,
                    d,
                    e,
                    f = this[0],
                    g = f && f.attributes;
                if (void 0 === a) {
                    if (this.length && ((e = M.get(f)), 1 === f.nodeType && !L.get(f, "hasDataAttrs"))) {
                        c = g.length;
                        while (c--) g[c] && ((d = g[c].name), 0 === d.indexOf("data-") && ((d = n.camelCase(d.slice(5))), P(f, d, e[d])));
                        L.set(f, "hasDataAttrs", !0);
                    }
                    return e;
                }
                return "object" == typeof a
                    ? this.each(function () {
                          M.set(this, a);
                      })
                    : J(
                          this,
                          function (b) {
                              var c,
                                  d = n.camelCase(a);
                              if (f && void 0 === b) {
                                  if (((c = M.get(f, a)), void 0 !== c)) return c;
                                  if (((c = M.get(f, d)), void 0 !== c)) return c;
                                  if (((c = P(f, d, void 0)), void 0 !== c)) return c;
                              } else
                                  this.each(function () {
                                      var c = M.get(this, d);
                                      M.set(this, d, b), -1 !== a.indexOf("-") && void 0 !== c && M.set(this, a, b);
                                  });
                          },
                          null,
                          b,
                          arguments.length > 1,
                          null,
                          !0
                      );
            },
            removeData: function (a) {
                return this.each(function () {
                    M.remove(this, a);
                });
            },
        }),
        n.extend({
            queue: function (a, b, c) {
                var d;
                return a ? ((b = (b || "fx") + "queue"), (d = L.get(a, b)), c && (!d || n.isArray(c) ? (d = L.access(a, b, n.makeArray(c))) : d.push(c)), d || []) : void 0;
            },
            dequeue: function (a, b) {
                b = b || "fx";
                var c = n.queue(a, b),
                    d = c.length,
                    e = c.shift(),
                    f = n._queueHooks(a, b),
                    g = function () {
                        n.dequeue(a, b);
                    };
                "inprogress" === e && ((e = c.shift()), d--), e && ("fx" === b && c.unshift("inprogress"), delete f.stop, e.call(a, g, f)), !d && f && f.empty.fire();
            },
            _queueHooks: function (a, b) {
                var c = b + "queueHooks";
                return (
                    L.get(a, c) ||
                    L.access(a, c, {
                        empty: n.Callbacks("once memory").add(function () {
                            L.remove(a, [b + "queue", c]);
                        }),
                    })
                );
            },
        }),
        n.fn.extend({
            queue: function (a, b) {
                var c = 2;
                return (
                    "string" != typeof a && ((b = a), (a = "fx"), c--),
                    arguments.length < c
                        ? n.queue(this[0], a)
                        : void 0 === b
                        ? this
                        : this.each(function () {
                              var c = n.queue(this, a, b);
                              n._queueHooks(this, a), "fx" === a && "inprogress" !== c[0] && n.dequeue(this, a);
                          })
                );
            },
            dequeue: function (a) {
                return this.each(function () {
                    n.dequeue(this, a);
                });
            },
            clearQueue: function (a) {
                return this.queue(a || "fx", []);
            },
            promise: function (a, b) {
                var c,
                    d = 1,
                    e = n.Deferred(),
                    f = this,
                    g = this.length,
                    h = function () {
                        --d || e.resolveWith(f, [f]);
                    };
                "string" != typeof a && ((b = a), (a = void 0)), (a = a || "fx");
                while (g--) (c = L.get(f[g], a + "queueHooks")), c && c.empty && (d++, c.empty.add(h));
                return h(), e.promise(b);
            },
        });
    var Q = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
        R = ["Top", "Right", "Bottom", "Left"],
        S = function (a, b) {
            return (a = b || a), "none" === n.css(a, "display") || !n.contains(a.ownerDocument, a);
        },
        T = /^(?:checkbox|radio)$/i;
    !(function () {
        var a = l.createDocumentFragment(),
            b = a.appendChild(l.createElement("div")),
            c = l.createElement("input");
        c.setAttribute("type", "radio"),
            c.setAttribute("checked", "checked"),
            c.setAttribute("name", "t"),
            b.appendChild(c),
            (k.checkClone = b.cloneNode(!0).cloneNode(!0).lastChild.checked),
            (b.innerHTML = "<textarea>x</textarea>"),
            (k.noCloneChecked = !!b.cloneNode(!0).lastChild.defaultValue);
    })();
    var U = "undefined";
    k.focusinBubbles = "onfocusin" in a;
    var V = /^key/,
        W = /^(?:mouse|pointer|contextmenu)|click/,
        X = /^(?:focusinfocus|focusoutblur)$/,
        Y = /^([^.]*)(?:\.(.+)|)$/;
    function Z() {
        return !0;
    }
    function $() {
        return !1;
    }
    function _() {
        try {
            return l.activeElement;
        } catch (a) {}
    }
    (n.event = {
        global: {},
        add: function (a, b, c, d, e) {
            var f,
                g,
                h,
                i,
                j,
                k,
                l,
                m,
                o,
                p,
                q,
                r = L.get(a);
            if (r) {
                c.handler && ((f = c), (c = f.handler), (e = f.selector)),
                    c.guid || (c.guid = n.guid++),
                    (i = r.events) || (i = r.events = {}),
                    (g = r.handle) ||
                        (g = r.handle = function (b) {
                            return typeof n !== U && n.event.triggered !== b.type ? n.event.dispatch.apply(a, arguments) : void 0;
                        }),
                    (b = (b || "").match(E) || [""]),
                    (j = b.length);
                while (j--)
                    (h = Y.exec(b[j]) || []),
                        (o = q = h[1]),
                        (p = (h[2] || "").split(".").sort()),
                        o &&
                            ((l = n.event.special[o] || {}),
                            (o = (e ? l.delegateType : l.bindType) || o),
                            (l = n.event.special[o] || {}),
                            (k = n.extend({ type: o, origType: q, data: d, handler: c, guid: c.guid, selector: e, needsContext: e && n.expr.match.needsContext.test(e), namespace: p.join(".") }, f)),
                            (m = i[o]) || ((m = i[o] = []), (m.delegateCount = 0), (l.setup && l.setup.call(a, d, p, g) !== !1) || (a.addEventListener && a.addEventListener(o, g, !1))),
                            l.add && (l.add.call(a, k), k.handler.guid || (k.handler.guid = c.guid)),
                            e ? m.splice(m.delegateCount++, 0, k) : m.push(k),
                            (n.event.global[o] = !0));
            }
        },
        remove: function (a, b, c, d, e) {
            var f,
                g,
                h,
                i,
                j,
                k,
                l,
                m,
                o,
                p,
                q,
                r = L.hasData(a) && L.get(a);
            if (r && (i = r.events)) {
                (b = (b || "").match(E) || [""]), (j = b.length);
                while (j--)
                    if (((h = Y.exec(b[j]) || []), (o = q = h[1]), (p = (h[2] || "").split(".").sort()), o)) {
                        (l = n.event.special[o] || {}), (o = (d ? l.delegateType : l.bindType) || o), (m = i[o] || []), (h = h[2] && new RegExp("(^|\\.)" + p.join("\\.(?:.*\\.|)") + "(\\.|$)")), (g = f = m.length);
                        while (f--)
                            (k = m[f]),
                                (!e && q !== k.origType) ||
                                    (c && c.guid !== k.guid) ||
                                    (h && !h.test(k.namespace)) ||
                                    (d && d !== k.selector && ("**" !== d || !k.selector)) ||
                                    (m.splice(f, 1), k.selector && m.delegateCount--, l.remove && l.remove.call(a, k));
                        g && !m.length && ((l.teardown && l.teardown.call(a, p, r.handle) !== !1) || n.removeEvent(a, o, r.handle), delete i[o]);
                    } else for (o in i) n.event.remove(a, o + b[j], c, d, !0);
                n.isEmptyObject(i) && (delete r.handle, L.remove(a, "events"));
            }
        },
        trigger: function (b, c, d, e) {
            var f,
                g,
                h,
                i,
                k,
                m,
                o,
                p = [d || l],
                q = j.call(b, "type") ? b.type : b,
                r = j.call(b, "namespace") ? b.namespace.split(".") : [];
            if (
                ((g = h = d = d || l),
                3 !== d.nodeType &&
                    8 !== d.nodeType &&
                    !X.test(q + n.event.triggered) &&
                    (q.indexOf(".") >= 0 && ((r = q.split(".")), (q = r.shift()), r.sort()),
                    (k = q.indexOf(":") < 0 && "on" + q),
                    (b = b[n.expando] ? b : new n.Event(q, "object" == typeof b && b)),
                    (b.isTrigger = e ? 2 : 3),
                    (b.namespace = r.join(".")),
                    (b.namespace_re = b.namespace ? new RegExp("(^|\\.)" + r.join("\\.(?:.*\\.|)") + "(\\.|$)") : null),
                    (b.result = void 0),
                    b.target || (b.target = d),
                    (c = null == c ? [b] : n.makeArray(c, [b])),
                    (o = n.event.special[q] || {}),
                    e || !o.trigger || o.trigger.apply(d, c) !== !1))
            ) {
                if (!e && !o.noBubble && !n.isWindow(d)) {
                    for (i = o.delegateType || q, X.test(i + q) || (g = g.parentNode); g; g = g.parentNode) p.push(g), (h = g);
                    h === (d.ownerDocument || l) && p.push(h.defaultView || h.parentWindow || a);
                }
                f = 0;
                while ((g = p[f++]) && !b.isPropagationStopped())
                    (b.type = f > 1 ? i : o.bindType || q),
                        (m = (L.get(g, "events") || {})[b.type] && L.get(g, "handle")),
                        m && m.apply(g, c),
                        (m = k && g[k]),
                        m && m.apply && n.acceptData(g) && ((b.result = m.apply(g, c)), b.result === !1 && b.preventDefault());
                return (
                    (b.type = q),
                    e ||
                        b.isDefaultPrevented() ||
                        (o._default && o._default.apply(p.pop(), c) !== !1) ||
                        !n.acceptData(d) ||
                        (k && n.isFunction(d[q]) && !n.isWindow(d) && ((h = d[k]), h && (d[k] = null), (n.event.triggered = q), d[q](), (n.event.triggered = void 0), h && (d[k] = h))),
                    b.result
                );
            }
        },
        dispatch: function (a) {
            a = n.event.fix(a);
            var b,
                c,
                e,
                f,
                g,
                h = [],
                i = d.call(arguments),
                j = (L.get(this, "events") || {})[a.type] || [],
                k = n.event.special[a.type] || {};
            if (((i[0] = a), (a.delegateTarget = this), !k.preDispatch || k.preDispatch.call(this, a) !== !1)) {
                (h = n.event.handlers.call(this, a, j)), (b = 0);
                while ((f = h[b++]) && !a.isPropagationStopped()) {
                    (a.currentTarget = f.elem), (c = 0);
                    while ((g = f.handlers[c++]) && !a.isImmediatePropagationStopped())
                        (!a.namespace_re || a.namespace_re.test(g.namespace)) &&
                            ((a.handleObj = g), (a.data = g.data), (e = ((n.event.special[g.origType] || {}).handle || g.handler).apply(f.elem, i)), void 0 !== e && (a.result = e) === !1 && (a.preventDefault(), a.stopPropagation()));
                }
                return k.postDispatch && k.postDispatch.call(this, a), a.result;
            }
        },
        handlers: function (a, b) {
            var c,
                d,
                e,
                f,
                g = [],
                h = b.delegateCount,
                i = a.target;
            if (h && i.nodeType && (!a.button || "click" !== a.type))
                for (; i !== this; i = i.parentNode || this)
                    if (i.disabled !== !0 || "click" !== a.type) {
                        for (d = [], c = 0; h > c; c++) (f = b[c]), (e = f.selector + " "), void 0 === d[e] && (d[e] = f.needsContext ? n(e, this).index(i) >= 0 : n.find(e, this, null, [i]).length), d[e] && d.push(f);
                        d.length && g.push({ elem: i, handlers: d });
                    }
            return h < b.length && g.push({ elem: this, handlers: b.slice(h) }), g;
        },
        props: "altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),
        fixHooks: {},
        keyHooks: {
            props: "char charCode key keyCode".split(" "),
            filter: function (a, b) {
                return null == a.which && (a.which = null != b.charCode ? b.charCode : b.keyCode), a;
            },
        },
        mouseHooks: {
            props: "button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
            filter: function (a, b) {
                var c,
                    d,
                    e,
                    f = b.button;
                return (
                    null == a.pageX &&
                        null != b.clientX &&
                        ((c = a.target.ownerDocument || l),
                        (d = c.documentElement),
                        (e = c.body),
                        (a.pageX = b.clientX + ((d && d.scrollLeft) || (e && e.scrollLeft) || 0) - ((d && d.clientLeft) || (e && e.clientLeft) || 0)),
                        (a.pageY = b.clientY + ((d && d.scrollTop) || (e && e.scrollTop) || 0) - ((d && d.clientTop) || (e && e.clientTop) || 0))),
                    a.which || void 0 === f || (a.which = 1 & f ? 1 : 2 & f ? 3 : 4 & f ? 2 : 0),
                    a
                );
            },
        },
        fix: function (a) {
            if (a[n.expando]) return a;
            var b,
                c,
                d,
                e = a.type,
                f = a,
                g = this.fixHooks[e];
            g || (this.fixHooks[e] = g = W.test(e) ? this.mouseHooks : V.test(e) ? this.keyHooks : {}), (d = g.props ? this.props.concat(g.props) : this.props), (a = new n.Event(f)), (b = d.length);
            while (b--) (c = d[b]), (a[c] = f[c]);
            return a.target || (a.target = l), 3 === a.target.nodeType && (a.target = a.target.parentNode), g.filter ? g.filter(a, f) : a;
        },
        special: {
            load: { noBubble: !0 },
            focus: {
                trigger: function () {
                    return this !== _() && this.focus ? (this.focus(), !1) : void 0;
                },
                delegateType: "focusin",
            },
            blur: {
                trigger: function () {
                    return this === _() && this.blur ? (this.blur(), !1) : void 0;
                },
                delegateType: "focusout",
            },
            click: {
                trigger: function () {
                    return "checkbox" === this.type && this.click && n.nodeName(this, "input") ? (this.click(), !1) : void 0;
                },
                _default: function (a) {
                    return n.nodeName(a.target, "a");
                },
            },
            beforeunload: {
                postDispatch: function (a) {
                    void 0 !== a.result && a.originalEvent && (a.originalEvent.returnValue = a.result);
                },
            },
        },
        simulate: function (a, b, c, d) {
            var e = n.extend(new n.Event(), c, { type: a, isSimulated: !0, originalEvent: {} });
            d ? n.event.trigger(e, null, b) : n.event.dispatch.call(b, e), e.isDefaultPrevented() && c.preventDefault();
        },
    }),
        (n.removeEvent = function (a, b, c) {
            a.removeEventListener && a.removeEventListener(b, c, !1);
        }),
        (n.Event = function (a, b) {
            return this instanceof n.Event
                ? (a && a.type ? ((this.originalEvent = a), (this.type = a.type), (this.isDefaultPrevented = a.defaultPrevented || (void 0 === a.defaultPrevented && a.returnValue === !1) ? Z : $)) : (this.type = a),
                  b && n.extend(this, b),
                  (this.timeStamp = (a && a.timeStamp) || n.now()),
                  void (this[n.expando] = !0))
                : new n.Event(a, b);
        }),
        (n.Event.prototype = {
            isDefaultPrevented: $,
            isPropagationStopped: $,
            isImmediatePropagationStopped: $,
            preventDefault: function () {
                var a = this.originalEvent;
                if (typeof a != "undefined" && typeof a.type != "undefined" && a.type != "mousewheel") {
                    (this.isDefaultPrevented = Z), a && a.preventDefault && a.preventDefault();
                } else {
                    (this.isDefaultPrevented = Z), a && a.preventDefault;
                }
            },
            stopPropagation: function () {
                var a = this.originalEvent;
                (this.isPropagationStopped = Z), a && a.stopPropagation && a.stopPropagation();
            },
            stopImmediatePropagation: function () {
                var a = this.originalEvent;
                (this.isImmediatePropagationStopped = Z), a && a.stopImmediatePropagation && a.stopImmediatePropagation(), this.stopPropagation();
            },
        }),
        n.each({ mouseenter: "mouseover", mouseleave: "mouseout", pointerenter: "pointerover", pointerleave: "pointerout" }, function (a, b) {
            n.event.special[a] = {
                delegateType: b,
                bindType: b,
                handle: function (a) {
                    var c,
                        d = this,
                        e = a.relatedTarget,
                        f = a.handleObj;
                    return (!e || (e !== d && !n.contains(d, e))) && ((a.type = f.origType), (c = f.handler.apply(this, arguments)), (a.type = b)), c;
                },
            };
        }),
        k.focusinBubbles ||
            n.each({ focus: "focusin", blur: "focusout" }, function (a, b) {
                var c = function (a) {
                    n.event.simulate(b, a.target, n.event.fix(a), !0);
                };
                n.event.special[b] = {
                    setup: function () {
                        var d = this.ownerDocument || this,
                            e = L.access(d, b);
                        e || d.addEventListener(a, c, !0), L.access(d, b, (e || 0) + 1);
                    },
                    teardown: function () {
                        var d = this.ownerDocument || this,
                            e = L.access(d, b) - 1;
                        e ? L.access(d, b, e) : (d.removeEventListener(a, c, !0), L.remove(d, b));
                    },
                };
            }),
        n.fn.extend({
            on: function (a, b, c, d, e) {
                var f, g;
                if ("object" == typeof a) {
                    "string" != typeof b && ((c = c || b), (b = void 0));
                    for (g in a) this.on(g, b, c, a[g], e);
                    return this;
                }
                if ((null == c && null == d ? ((d = b), (c = b = void 0)) : null == d && ("string" == typeof b ? ((d = c), (c = void 0)) : ((d = c), (c = b), (b = void 0))), d === !1)) d = $;
                else if (!d) return this;
                return (
                    1 === e &&
                        ((f = d),
                        (d = function (a) {
                            return n().off(a), f.apply(this, arguments);
                        }),
                        (d.guid = f.guid || (f.guid = n.guid++))),
                    this.each(function () {
                        n.event.add(this, a, d, c, b);
                    })
                );
            },
            one: function (a, b, c, d) {
                return this.on(a, b, c, d, 1);
            },
            off: function (a, b, c) {
                var d, e;
                if (a && a.preventDefault && a.handleObj) return (d = a.handleObj), n(a.delegateTarget).off(d.namespace ? d.origType + "." + d.namespace : d.origType, d.selector, d.handler), this;
                if ("object" == typeof a) {
                    for (e in a) this.off(e, b, a[e]);
                    return this;
                }
                return (
                    (b === !1 || "function" == typeof b) && ((c = b), (b = void 0)),
                    c === !1 && (c = $),
                    this.each(function () {
                        n.event.remove(this, a, c, b);
                    })
                );
            },
            trigger: function (a, b) {
                return this.each(function () {
                    n.event.trigger(a, b, this);
                });
            },
            triggerHandler: function (a, b) {
                var c = this[0];
                return c ? n.event.trigger(a, b, c, !0) : void 0;
            },
        });
    var ab = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
        bb = /<([\w:]+)/,
        cb = /<|&#?\w+;/,
        db = /<(?:script|style|link)/i,
        eb = /checked\s*(?:[^=]|=\s*.checked.)/i,
        fb = /^$|\/(?:java|ecma)script/i,
        gb = /^true\/(.*)/,
        hb = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,
        ib = {
            option: [1, "<select multiple='multiple'>", "</select>"],
            thead: [1, "<table>", "</table>"],
            col: [2, "<table><colgroup>", "</colgroup></table>"],
            tr: [2, "<table><tbody>", "</tbody></table>"],
            td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
            _default: [0, "", ""],
        };
    (ib.optgroup = ib.option), (ib.tbody = ib.tfoot = ib.colgroup = ib.caption = ib.thead), (ib.th = ib.td);
    function jb(a, b) {
        return n.nodeName(a, "table") && n.nodeName(11 !== b.nodeType ? b : b.firstChild, "tr") ? a.getElementsByTagName("tbody")[0] || a.appendChild(a.ownerDocument.createElement("tbody")) : a;
    }
    function kb(a) {
        return (a.type = (null !== a.getAttribute("type")) + "/" + a.type), a;
    }
    function lb(a) {
        var b = gb.exec(a.type);
        return b ? (a.type = b[1]) : a.removeAttribute("type"), a;
    }
    function mb(a, b) {
        for (var c = 0, d = a.length; d > c; c++) L.set(a[c], "globalEval", !b || L.get(b[c], "globalEval"));
    }
    function nb(a, b) {
        var c, d, e, f, g, h, i, j;
        if (1 === b.nodeType) {
            if (L.hasData(a) && ((f = L.access(a)), (g = L.set(b, f)), (j = f.events))) {
                delete g.handle, (g.events = {});
                for (e in j) for (c = 0, d = j[e].length; d > c; c++) n.event.add(b, e, j[e][c]);
            }
            M.hasData(a) && ((h = M.access(a)), (i = n.extend({}, h)), M.set(b, i));
        }
    }
    function ob(a, b) {
        var c = a.getElementsByTagName ? a.getElementsByTagName(b || "*") : a.querySelectorAll ? a.querySelectorAll(b || "*") : [];
        return void 0 === b || (b && n.nodeName(a, b)) ? n.merge([a], c) : c;
    }
    function pb(a, b) {
        var c = b.nodeName.toLowerCase();
        "input" === c && T.test(a.type) ? (b.checked = a.checked) : ("input" === c || "textarea" === c) && (b.defaultValue = a.defaultValue);
    }
    n.extend({
        clone: function (a, b, c) {
            var d,
                e,
                f,
                g,
                h = a.cloneNode(!0),
                i = n.contains(a.ownerDocument, a);
            if (!(k.noCloneChecked || (1 !== a.nodeType && 11 !== a.nodeType) || n.isXMLDoc(a))) for (g = ob(h), f = ob(a), d = 0, e = f.length; e > d; d++) pb(f[d], g[d]);
            if (b)
                if (c) for (f = f || ob(a), g = g || ob(h), d = 0, e = f.length; e > d; d++) nb(f[d], g[d]);
                else nb(a, h);
            return (g = ob(h, "script")), g.length > 0 && mb(g, !i && ob(a, "script")), h;
        },
        buildFragment: function (a, b, c, d) {
            for (var e, f, g, h, i, j, k = b.createDocumentFragment(), l = [], m = 0, o = a.length; o > m; m++)
                if (((e = a[m]), e || 0 === e))
                    if ("object" === n.type(e)) n.merge(l, e.nodeType ? [e] : e);
                    else if (cb.test(e)) {
                        (f = f || k.appendChild(b.createElement("div"))), (g = (bb.exec(e) || ["", ""])[1].toLowerCase()), (h = ib[g] || ib._default), (f.innerHTML = h[1] + e.replace(ab, "<$1></$2>") + h[2]), (j = h[0]);
                        while (j--) f = f.lastChild;
                        n.merge(l, f.childNodes), (f = k.firstChild), (f.textContent = "");
                    } else l.push(b.createTextNode(e));
            (k.textContent = ""), (m = 0);
            while ((e = l[m++]))
                if ((!d || -1 === n.inArray(e, d)) && ((i = n.contains(e.ownerDocument, e)), (f = ob(k.appendChild(e), "script")), i && mb(f), c)) {
                    j = 0;
                    while ((e = f[j++])) fb.test(e.type || "") && c.push(e);
                }
            return k;
        },
        cleanData: function (a) {
            for (var b, c, d, e, f = n.event.special, g = 0; void 0 !== (c = a[g]); g++) {
                if (n.acceptData(c) && ((e = c[L.expando]), e && (b = L.cache[e]))) {
                    if (b.events) for (d in b.events) f[d] ? n.event.remove(c, d) : n.removeEvent(c, d, b.handle);
                    L.cache[e] && delete L.cache[e];
                }
                delete M.cache[c[M.expando]];
            }
        },
    }),
        n.fn.extend({
            text: function (a) {
                return J(
                    this,
                    function (a) {
                        return void 0 === a
                            ? n.text(this)
                            : this.empty().each(function () {
                                  (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) && (this.textContent = a);
                              });
                    },
                    null,
                    a,
                    arguments.length
                );
            },
            append: function () {
                return this.domManip(arguments, function (a) {
                    if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                        var b = jb(this, a);
                        b.appendChild(a);
                    }
                });
            },
            prepend: function () {
                return this.domManip(arguments, function (a) {
                    if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                        var b = jb(this, a);
                        b.insertBefore(a, b.firstChild);
                    }
                });
            },
            before: function () {
                return this.domManip(arguments, function (a) {
                    this.parentNode && this.parentNode.insertBefore(a, this);
                });
            },
            after: function () {
                return this.domManip(arguments, function (a) {
                    this.parentNode && this.parentNode.insertBefore(a, this.nextSibling);
                });
            },
            remove: function (a, b) {
                for (var c, d = a ? n.filter(a, this) : this, e = 0; null != (c = d[e]); e++)
                    b || 1 !== c.nodeType || n.cleanData(ob(c)), c.parentNode && (b && n.contains(c.ownerDocument, c) && mb(ob(c, "script")), c.parentNode.removeChild(c));
                return this;
            },
            empty: function () {
                for (var a, b = 0; null != (a = this[b]); b++) 1 === a.nodeType && (n.cleanData(ob(a, !1)), (a.textContent = ""));
                return this;
            },
            clone: function (a, b) {
                return (
                    (a = null == a ? !1 : a),
                    (b = null == b ? a : b),
                    this.map(function () {
                        return n.clone(this, a, b);
                    })
                );
            },
            html: function (a) {
                return J(
                    this,
                    function (a) {
                        var b = this[0] || {},
                            c = 0,
                            d = this.length;
                        if (void 0 === a && 1 === b.nodeType) return b.innerHTML;
                        if ("string" == typeof a && !db.test(a) && !ib[(bb.exec(a) || ["", ""])[1].toLowerCase()]) {
                            a = a.replace(ab, "<$1></$2>");
                            try {
                                for (; d > c; c++) (b = this[c] || {}), 1 === b.nodeType && (n.cleanData(ob(b, !1)), (b.innerHTML = a));
                                b = 0;
                            } catch (e) {}
                        }
                        b && this.empty().append(a);
                    },
                    null,
                    a,
                    arguments.length
                );
            },
            replaceWith: function () {
                var a = arguments[0];
                return (
                    this.domManip(arguments, function (b) {
                        (a = this.parentNode), n.cleanData(ob(this)), a && a.replaceChild(b, this);
                    }),
                    a && (a.length || a.nodeType) ? this : this.remove()
                );
            },
            detach: function (a) {
                return this.remove(a, !0);
            },
            domManip: function (a, b) {
                a = e.apply([], a);
                var c,
                    d,
                    f,
                    g,
                    h,
                    i,
                    j = 0,
                    l = this.length,
                    m = this,
                    o = l - 1,
                    p = a[0],
                    q = n.isFunction(p);
                if (q || (l > 1 && "string" == typeof p && !k.checkClone && eb.test(p)))
                    return this.each(function (c) {
                        var d = m.eq(c);
                        q && (a[0] = p.call(this, c, d.html())), d.domManip(a, b);
                    });
                if (l && ((c = n.buildFragment(a, this[0].ownerDocument, !1, this)), (d = c.firstChild), 1 === c.childNodes.length && (c = d), d)) {
                    for (f = n.map(ob(c, "script"), kb), g = f.length; l > j; j++) (h = c), j !== o && ((h = n.clone(h, !0, !0)), g && n.merge(f, ob(h, "script"))), b.call(this[j], h, j);
                    if (g)
                        for (i = f[f.length - 1].ownerDocument, n.map(f, lb), j = 0; g > j; j++)
                            (h = f[j]), fb.test(h.type || "") && !L.access(h, "globalEval") && n.contains(i, h) && (h.src ? n._evalUrl && n._evalUrl(h.src) : n.globalEval(h.textContent.replace(hb, "")));
                }
                return this;
            },
        }),
        n.each({ appendTo: "append", prependTo: "prepend", insertBefore: "before", insertAfter: "after", replaceAll: "replaceWith" }, function (a, b) {
            n.fn[a] = function (a) {
                for (var c, d = [], e = n(a), g = e.length - 1, h = 0; g >= h; h++) (c = h === g ? this : this.clone(!0)), n(e[h])[b](c), f.apply(d, c.get());
                return this.pushStack(d);
            };
        });
    var qb,
        rb = {};
    function sb(b, c) {
        var d,
            e = n(c.createElement(b)).appendTo(c.body),
            f = a.getDefaultComputedStyle && (d = a.getDefaultComputedStyle(e[0])) ? d.display : n.css(e[0], "display");
        return e.detach(), f;
    }
    function tb(a) {
        var b = l,
            c = rb[a];
        return (
            c ||
                ((c = sb(a, b)),
                ("none" !== c && c) || ((qb = (qb || n("<iframe frameborder='0' width='0' height='0'/>")).appendTo(b.documentElement)), (b = qb[0].contentDocument), b.write(), b.close(), (c = sb(a, b)), qb.detach()),
                (rb[a] = c)),
            c
        );
    }
    var ub = /^margin/,
        vb = new RegExp("^(" + Q + ")(?!px)[a-z%]+$", "i"),
        wb = function (a) {
            return a.ownerDocument.defaultView.getComputedStyle(a, null);
        };
    function xb(a, b, c) {
        var d,
            e,
            f,
            g,
            h = a.style;
        return (
            (c = c || wb(a)),
            c && (g = c.getPropertyValue(b) || c[b]),
            c &&
                ("" !== g || n.contains(a.ownerDocument, a) || (g = n.style(a, b)),
                vb.test(g) && ub.test(b) && ((d = h.width), (e = h.minWidth), (f = h.maxWidth), (h.minWidth = h.maxWidth = h.width = g), (g = c.width), (h.width = d), (h.minWidth = e), (h.maxWidth = f))),
            void 0 !== g ? g + "" : g
        );
    }
    function yb(a, b) {
        return {
            get: function () {
                return a() ? void delete this.get : (this.get = b).apply(this, arguments);
            },
        };
    }
    !(function () {
        var b,
            c,
            d = l.documentElement,
            e = l.createElement("div"),
            f = l.createElement("div");
        if (f.style) {
            (f.style.backgroundClip = "content-box"),
                (f.cloneNode(!0).style.backgroundClip = ""),
                (k.clearCloneStyle = "content-box" === f.style.backgroundClip),
                (e.style.cssText = "border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;position:absolute"),
                e.appendChild(f);
            function g() {
                (f.style.cssText = "-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute"),
                    (f.innerHTML = ""),
                    d.appendChild(e);
                var g = a.getComputedStyle(f, null);
                (b = "1%" !== g.top), (c = "4px" === g.width), d.removeChild(e);
            }
            a.getComputedStyle &&
                n.extend(k, {
                    pixelPosition: function () {
                        return g(), b;
                    },
                    boxSizingReliable: function () {
                        return null == c && g(), c;
                    },
                    reliableMarginRight: function () {
                        var b,
                            c = f.appendChild(l.createElement("div"));
                        return (
                            (c.style.cssText = f.style.cssText = "-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0"),
                            (c.style.marginRight = c.style.width = "0"),
                            (f.style.width = "1px"),
                            d.appendChild(e),
                            (b = !parseFloat(a.getComputedStyle(c, null).marginRight)),
                            d.removeChild(e),
                            b
                        );
                    },
                });
        }
    })(),
        (n.swap = function (a, b, c, d) {
            var e,
                f,
                g = {};
            for (f in b) (g[f] = a.style[f]), (a.style[f] = b[f]);
            e = c.apply(a, d || []);
            for (f in b) a.style[f] = g[f];
            return e;
        });
    var zb = /^(none|table(?!-c[ea]).+)/,
        Ab = new RegExp("^(" + Q + ")(.*)$", "i"),
        Bb = new RegExp("^([+-])=(" + Q + ")", "i"),
        Cb = { position: "absolute", visibility: "hidden", display: "block" },
        Db = { letterSpacing: "0", fontWeight: "400" },
        Eb = ["Webkit", "O", "Moz", "ms"];
    function Fb(a, b) {
        if (b in a) return b;
        var c = b[0].toUpperCase() + b.slice(1),
            d = b,
            e = Eb.length;
        while (e--) if (((b = Eb[e] + c), b in a)) return b;
        return d;
    }
    function Gb(a, b, c) {
        var d = Ab.exec(b);
        return d ? Math.max(0, d[1] - (c || 0)) + (d[2] || "px") : b;
    }
    function Hb(a, b, c, d, e) {
        for (var f = c === (d ? "border" : "content") ? 4 : "width" === b ? 1 : 0, g = 0; 4 > f; f += 2)
            "margin" === c && (g += n.css(a, c + R[f], !0, e)),
                d
                    ? ("content" === c && (g -= n.css(a, "padding" + R[f], !0, e)), "margin" !== c && (g -= n.css(a, "border" + R[f] + "Width", !0, e)))
                    : ((g += n.css(a, "padding" + R[f], !0, e)), "padding" !== c && (g += n.css(a, "border" + R[f] + "Width", !0, e)));
        return g;
    }
    function Ib(a, b, c) {
        var d = !0,
            e = "width" === b ? a.offsetWidth : a.offsetHeight,
            f = wb(a),
            g = "border-box" === n.css(a, "boxSizing", !1, f);
        if (0 >= e || null == e) {
            if (((e = xb(a, b, f)), (0 > e || null == e) && (e = a.style[b]), vb.test(e))) return e;
            (d = g && (k.boxSizingReliable() || e === a.style[b])), (e = parseFloat(e) || 0);
        }
        return e + Hb(a, b, c || (g ? "border" : "content"), d, f) + "px";
    }
    function Jb(a, b) {
        for (var c, d, e, f = [], g = 0, h = a.length; h > g; g++)
            (d = a[g]),
                d.style &&
                    ((f[g] = L.get(d, "olddisplay")),
                    (c = d.style.display),
                    b
                        ? (f[g] || "none" !== c || (d.style.display = ""), "" === d.style.display && S(d) && (f[g] = L.access(d, "olddisplay", tb(d.nodeName))))
                        : ((e = S(d)), ("none" === c && e) || L.set(d, "olddisplay", e ? c : n.css(d, "display"))));
        for (g = 0; h > g; g++) (d = a[g]), d.style && ((b && "none" !== d.style.display && "" !== d.style.display) || (d.style.display = b ? f[g] || "" : "none"));
        return a;
    }
    n.extend({
        cssHooks: {
            opacity: {
                get: function (a, b) {
                    if (b) {
                        var c = xb(a, "opacity");
                        return "" === c ? "1" : c;
                    }
                },
            },
        },
        cssNumber: { columnCount: !0, fillOpacity: !0, flexGrow: !0, flexShrink: !0, fontWeight: !0, lineHeight: !0, opacity: !0, order: !0, orphans: !0, widows: !0, zIndex: !0, zoom: !0 },
        cssProps: { float: "cssFloat" },
        style: function (a, b, c, d) {
            if (a && 3 !== a.nodeType && 8 !== a.nodeType && a.style) {
                var e,
                    f,
                    g,
                    h = n.camelCase(b),
                    i = a.style;
                return (
                    (b = n.cssProps[h] || (n.cssProps[h] = Fb(i, h))),
                    (g = n.cssHooks[b] || n.cssHooks[h]),
                    void 0 === c
                        ? g && "get" in g && void 0 !== (e = g.get(a, !1, d))
                            ? e
                            : i[b]
                        : ((f = typeof c),
                          "string" === f && (e = Bb.exec(c)) && ((c = (e[1] + 1) * e[2] + parseFloat(n.css(a, b))), (f = "number")),
                          null != c &&
                              c === c &&
                              ("number" !== f || n.cssNumber[h] || (c += "px"), k.clearCloneStyle || "" !== c || 0 !== b.indexOf("background") || (i[b] = "inherit"), (g && "set" in g && void 0 === (c = g.set(a, c, d))) || (i[b] = c)),
                          void 0)
                );
            }
        },
        css: function (a, b, c, d) {
            var e,
                f,
                g,
                h = n.camelCase(b);
            return (
                (b = n.cssProps[h] || (n.cssProps[h] = Fb(a.style, h))),
                (g = n.cssHooks[b] || n.cssHooks[h]),
                g && "get" in g && (e = g.get(a, !0, c)),
                void 0 === e && (e = xb(a, b, d)),
                "normal" === e && b in Db && (e = Db[b]),
                "" === c || c ? ((f = parseFloat(e)), c === !0 || n.isNumeric(f) ? f || 0 : e) : e
            );
        },
    }),
        n.each(["height", "width"], function (a, b) {
            n.cssHooks[b] = {
                get: function (a, c, d) {
                    return c
                        ? zb.test(n.css(a, "display")) && 0 === a.offsetWidth
                            ? n.swap(a, Cb, function () {
                                  return Ib(a, b, d);
                              })
                            : Ib(a, b, d)
                        : void 0;
                },
                set: function (a, c, d) {
                    var e = d && wb(a);
                    return Gb(a, c, d ? Hb(a, b, d, "border-box" === n.css(a, "boxSizing", !1, e), e) : 0);
                },
            };
        }),
        (n.cssHooks.marginRight = yb(k.reliableMarginRight, function (a, b) {
            return b ? n.swap(a, { display: "inline-block" }, xb, [a, "marginRight"]) : void 0;
        })),
        n.each({ margin: "", padding: "", border: "Width" }, function (a, b) {
            (n.cssHooks[a + b] = {
                expand: function (c) {
                    for (var d = 0, e = {}, f = "string" == typeof c ? c.split(" ") : [c]; 4 > d; d++) e[a + R[d] + b] = f[d] || f[d - 2] || f[0];
                    return e;
                },
            }),
                ub.test(a) || (n.cssHooks[a + b].set = Gb);
        }),
        n.fn.extend({
            css: function (a, b) {
                return J(
                    this,
                    function (a, b, c) {
                        var d,
                            e,
                            f = {},
                            g = 0;
                        if (n.isArray(b)) {
                            for (d = wb(a), e = b.length; e > g; g++) f[b[g]] = n.css(a, b[g], !1, d);
                            return f;
                        }
                        return void 0 !== c ? n.style(a, b, c) : n.css(a, b);
                    },
                    a,
                    b,
                    arguments.length > 1
                );
            },
            show: function () {
                return Jb(this, !0);
            },
            hide: function () {
                return Jb(this);
            },
            toggle: function (a) {
                return "boolean" == typeof a
                    ? a
                        ? this.show()
                        : this.hide()
                    : this.each(function () {
                          S(this) ? n(this).show() : n(this).hide();
                      });
            },
        });
    function Kb(a, b, c, d, e) {
        return new Kb.prototype.init(a, b, c, d, e);
    }
    (n.Tween = Kb),
        (Kb.prototype = {
            constructor: Kb,
            init: function (a, b, c, d, e, f) {
                (this.elem = a), (this.prop = c), (this.easing = e || "swing"), (this.options = b), (this.start = this.now = this.cur()), (this.end = d), (this.unit = f || (n.cssNumber[c] ? "" : "px"));
            },
            cur: function () {
                var a = Kb.propHooks[this.prop];
                return a && a.get ? a.get(this) : Kb.propHooks._default.get(this);
            },
            run: function (a) {
                var b,
                    c = Kb.propHooks[this.prop];
                return (
                    (this.pos = b = this.options.duration ? n.easing[this.easing](a, this.options.duration * a, 0, 1, this.options.duration) : a),
                    (this.now = (this.end - this.start) * b + this.start),
                    this.options.step && this.options.step.call(this.elem, this.now, this),
                    c && c.set ? c.set(this) : Kb.propHooks._default.set(this),
                    this
                );
            },
        }),
        (Kb.prototype.init.prototype = Kb.prototype),
        (Kb.propHooks = {
            _default: {
                get: function (a) {
                    var b;
                    return null == a.elem[a.prop] || (a.elem.style && null != a.elem.style[a.prop]) ? ((b = n.css(a.elem, a.prop, "")), b && "auto" !== b ? b : 0) : a.elem[a.prop];
                },
                set: function (a) {
                    n.fx.step[a.prop] ? n.fx.step[a.prop](a) : a.elem.style && (null != a.elem.style[n.cssProps[a.prop]] || n.cssHooks[a.prop]) ? n.style(a.elem, a.prop, a.now + a.unit) : (a.elem[a.prop] = a.now);
                },
            },
        }),
        (Kb.propHooks.scrollTop = Kb.propHooks.scrollLeft = {
            set: function (a) {
                a.elem.nodeType && a.elem.parentNode && (a.elem[a.prop] = a.now);
            },
        }),
        (n.easing = {
            linear: function (a) {
                return a;
            },
            swing: function (a) {
                return 0.5 - Math.cos(a * Math.PI) / 2;
            },
        }),
        (n.fx = Kb.prototype.init),
        (n.fx.step = {});
    var Lb,
        Mb,
        Nb = /^(?:toggle|show|hide)$/,
        Ob = new RegExp("^(?:([+-])=|)(" + Q + ")([a-z%]*)$", "i"),
        Pb = /queueHooks$/,
        Qb = [Vb],
        Rb = {
            "*": [
                function (a, b) {
                    var c = this.createTween(a, b),
                        d = c.cur(),
                        e = Ob.exec(b),
                        f = (e && e[3]) || (n.cssNumber[a] ? "" : "px"),
                        g = (n.cssNumber[a] || ("px" !== f && +d)) && Ob.exec(n.css(c.elem, a)),
                        h = 1,
                        i = 20;
                    if (g && g[3] !== f) {
                        (f = f || g[3]), (e = e || []), (g = +d || 1);
                        do (h = h || ".5"), (g /= h), n.style(c.elem, a, g + f);
                        while (h !== (h = c.cur() / d) && 1 !== h && --i);
                    }
                    return e && ((g = c.start = +g || +d || 0), (c.unit = f), (c.end = e[1] ? g + (e[1] + 1) * e[2] : +e[2])), c;
                },
            ],
        };
    function Sb() {
        return (
            setTimeout(function () {
                Lb = void 0;
            }),
            (Lb = n.now())
        );
    }
    function Tb(a, b) {
        var c,
            d = 0,
            e = { height: a };
        for (b = b ? 1 : 0; 4 > d; d += 2 - b) (c = R[d]), (e["margin" + c] = e["padding" + c] = a);
        return b && (e.opacity = e.width = a), e;
    }
    function Ub(a, b, c) {
        for (var d, e = (Rb[b] || []).concat(Rb["*"]), f = 0, g = e.length; g > f; f++) if ((d = e[f].call(c, b, a))) return d;
    }
    function Vb(a, b, c) {
        var d,
            e,
            f,
            g,
            h,
            i,
            j,
            k,
            l = this,
            m = {},
            o = a.style,
            p = a.nodeType && S(a),
            q = L.get(a, "fxshow");
        c.queue ||
            ((h = n._queueHooks(a, "fx")),
            null == h.unqueued &&
                ((h.unqueued = 0),
                (i = h.empty.fire),
                (h.empty.fire = function () {
                    h.unqueued || i();
                })),
            h.unqueued++,
            l.always(function () {
                l.always(function () {
                    h.unqueued--, n.queue(a, "fx").length || h.empty.fire();
                });
            })),
            1 === a.nodeType &&
                ("height" in b || "width" in b) &&
                ((c.overflow = [o.overflow, o.overflowX, o.overflowY]),
                (j = n.css(a, "display")),
                (k = "none" === j ? L.get(a, "olddisplay") || tb(a.nodeName) : j),
                "inline" === k && "none" === n.css(a, "float") && (o.display = "inline-block")),
            c.overflow &&
                ((o.overflow = "hidden"),
                l.always(function () {
                    (o.overflow = c.overflow[0]), (o.overflowX = c.overflow[1]), (o.overflowY = c.overflow[2]);
                }));
        for (d in b)
            if (((e = b[d]), Nb.exec(e))) {
                if ((delete b[d], (f = f || "toggle" === e), e === (p ? "hide" : "show"))) {
                    if ("show" !== e || !q || void 0 === q[d]) continue;
                    p = !0;
                }
                m[d] = (q && q[d]) || n.style(a, d);
            } else j = void 0;
        if (n.isEmptyObject(m)) "inline" === ("none" === j ? tb(a.nodeName) : j) && (o.display = j);
        else {
            q ? "hidden" in q && (p = q.hidden) : (q = L.access(a, "fxshow", {})),
                f && (q.hidden = !p),
                p
                    ? n(a).show()
                    : l.done(function () {
                          n(a).hide();
                      }),
                l.done(function () {
                    var b;
                    L.remove(a, "fxshow");
                    for (b in m) n.style(a, b, m[b]);
                });
            for (d in m) (g = Ub(p ? q[d] : 0, d, l)), d in q || ((q[d] = g.start), p && ((g.end = g.start), (g.start = "width" === d || "height" === d ? 1 : 0)));
        }
    }
    function Wb(a, b) {
        var c, d, e, f, g;
        for (c in a)
            if (((d = n.camelCase(c)), (e = b[d]), (f = a[c]), n.isArray(f) && ((e = f[1]), (f = a[c] = f[0])), c !== d && ((a[d] = f), delete a[c]), (g = n.cssHooks[d]), g && "expand" in g)) {
                (f = g.expand(f)), delete a[d];
                for (c in f) c in a || ((a[c] = f[c]), (b[c] = e));
            } else b[d] = e;
    }
    function Xb(a, b, c) {
        var d,
            e,
            f = 0,
            g = Qb.length,
            h = n.Deferred().always(function () {
                delete i.elem;
            }),
            i = function () {
                if (e) return !1;
                for (var b = Lb || Sb(), c = Math.max(0, j.startTime + j.duration - b), d = c / j.duration || 0, f = 1 - d, g = 0, i = j.tweens.length; i > g; g++) j.tweens[g].run(f);
                return h.notifyWith(a, [j, f, c]), 1 > f && i ? c : (h.resolveWith(a, [j]), !1);
            },
            j = h.promise({
                elem: a,
                props: n.extend({}, b),
                opts: n.extend(!0, { specialEasing: {} }, c),
                originalProperties: b,
                originalOptions: c,
                startTime: Lb || Sb(),
                duration: c.duration,
                tweens: [],
                createTween: function (b, c) {
                    var d = n.Tween(a, j.opts, b, c, j.opts.specialEasing[b] || j.opts.easing);
                    return j.tweens.push(d), d;
                },
                stop: function (b) {
                    var c = 0,
                        d = b ? j.tweens.length : 0;
                    if (e) return this;
                    for (e = !0; d > c; c++) j.tweens[c].run(1);
                    return b ? h.resolveWith(a, [j, b]) : h.rejectWith(a, [j, b]), this;
                },
            }),
            k = j.props;
        for (Wb(k, j.opts.specialEasing); g > f; f++) if ((d = Qb[f].call(j, a, k, j.opts))) return d;
        return (
            n.map(k, Ub, j),
            n.isFunction(j.opts.start) && j.opts.start.call(a, j),
            n.fx.timer(n.extend(i, { elem: a, anim: j, queue: j.opts.queue })),
            j.progress(j.opts.progress).done(j.opts.done, j.opts.complete).fail(j.opts.fail).always(j.opts.always)
        );
    }
    (n.Animation = n.extend(Xb, {
        tweener: function (a, b) {
            n.isFunction(a) ? ((b = a), (a = ["*"])) : (a = a.split(" "));
            for (var c, d = 0, e = a.length; e > d; d++) (c = a[d]), (Rb[c] = Rb[c] || []), Rb[c].unshift(b);
        },
        prefilter: function (a, b) {
            b ? Qb.unshift(a) : Qb.push(a);
        },
    })),
        (n.speed = function (a, b, c) {
            var d = a && "object" == typeof a ? n.extend({}, a) : { complete: c || (!c && b) || (n.isFunction(a) && a), duration: a, easing: (c && b) || (b && !n.isFunction(b) && b) };
            return (
                (d.duration = n.fx.off ? 0 : "number" == typeof d.duration ? d.duration : d.duration in n.fx.speeds ? n.fx.speeds[d.duration] : n.fx.speeds._default),
                (null == d.queue || d.queue === !0) && (d.queue = "fx"),
                (d.old = d.complete),
                (d.complete = function () {
                    n.isFunction(d.old) && d.old.call(this), d.queue && n.dequeue(this, d.queue);
                }),
                d
            );
        }),
        n.fn.extend({
            fadeTo: function (a, b, c, d) {
                return this.filter(S).css("opacity", 0).show().end().animate({ opacity: b }, a, c, d);
            },
            animate: function (a, b, c, d) {
                var e = n.isEmptyObject(a),
                    f = n.speed(b, c, d),
                    g = function () {
                        var b = Xb(this, n.extend({}, a), f);
                        (e || L.get(this, "finish")) && b.stop(!0);
                    };
                return (g.finish = g), e || f.queue === !1 ? this.each(g) : this.queue(f.queue, g);
            },
            stop: function (a, b, c) {
                var d = function (a) {
                    var b = a.stop;
                    delete a.stop, b(c);
                };
                return (
                    "string" != typeof a && ((c = b), (b = a), (a = void 0)),
                    b && a !== !1 && this.queue(a || "fx", []),
                    this.each(function () {
                        var b = !0,
                            e = null != a && a + "queueHooks",
                            f = n.timers,
                            g = L.get(this);
                        if (e) g[e] && g[e].stop && d(g[e]);
                        else for (e in g) g[e] && g[e].stop && Pb.test(e) && d(g[e]);
                        for (e = f.length; e--; ) f[e].elem !== this || (null != a && f[e].queue !== a) || (f[e].anim.stop(c), (b = !1), f.splice(e, 1));
                        (b || !c) && n.dequeue(this, a);
                    })
                );
            },
            finish: function (a) {
                return (
                    a !== !1 && (a = a || "fx"),
                    this.each(function () {
                        var b,
                            c = L.get(this),
                            d = c[a + "queue"],
                            e = c[a + "queueHooks"],
                            f = n.timers,
                            g = d ? d.length : 0;
                        for (c.finish = !0, n.queue(this, a, []), e && e.stop && e.stop.call(this, !0), b = f.length; b--; ) f[b].elem === this && f[b].queue === a && (f[b].anim.stop(!0), f.splice(b, 1));
                        for (b = 0; g > b; b++) d[b] && d[b].finish && d[b].finish.call(this);
                        delete c.finish;
                    })
                );
            },
        }),
        n.each(["toggle", "show", "hide"], function (a, b) {
            var c = n.fn[b];
            n.fn[b] = function (a, d, e) {
                return null == a || "boolean" == typeof a ? c.apply(this, arguments) : this.animate(Tb(b, !0), a, d, e);
            };
        }),
        n.each({ slideDown: Tb("show"), slideUp: Tb("hide"), slideToggle: Tb("toggle"), fadeIn: { opacity: "show" }, fadeOut: { opacity: "hide" }, fadeToggle: { opacity: "toggle" } }, function (a, b) {
            n.fn[a] = function (a, c, d) {
                return this.animate(b, a, c, d);
            };
        }),
        (n.timers = []),
        (n.fx.tick = function () {
            var a,
                b = 0,
                c = n.timers;
            for (Lb = n.now(); b < c.length; b++) (a = c[b]), a() || c[b] !== a || c.splice(b--, 1);
            c.length || n.fx.stop(), (Lb = void 0);
        }),
        (n.fx.timer = function (a) {
            n.timers.push(a), a() ? n.fx.start() : n.timers.pop();
        }),
        (n.fx.interval = 13),
        (n.fx.start = function () {
            Mb || (Mb = setInterval(n.fx.tick, n.fx.interval));
        }),
        (n.fx.stop = function () {
            clearInterval(Mb), (Mb = null);
        }),
        (n.fx.speeds = { slow: 600, fast: 200, _default: 400 }),
        (n.fn.delay = function (a, b) {
            return (
                (a = n.fx ? n.fx.speeds[a] || a : a),
                (b = b || "fx"),
                this.queue(b, function (b, c) {
                    var d = setTimeout(b, a);
                    c.stop = function () {
                        clearTimeout(d);
                    };
                })
            );
        }),
        (function () {
            var a = l.createElement("input"),
                b = l.createElement("select"),
                c = b.appendChild(l.createElement("option"));
            (a.type = "checkbox"),
                (k.checkOn = "" !== a.value),
                (k.optSelected = c.selected),
                (b.disabled = !0),
                (k.optDisabled = !c.disabled),
                (a = l.createElement("input")),
                (a.value = "t"),
                (a.type = "radio"),
                (k.radioValue = "t" === a.value);
        })();
    var Yb,
        Zb,
        $b = n.expr.attrHandle;
    n.fn.extend({
        attr: function (a, b) {
            return J(this, n.attr, a, b, arguments.length > 1);
        },
        removeAttr: function (a) {
            return this.each(function () {
                n.removeAttr(this, a);
            });
        },
    }),
        n.extend({
            attr: function (a, b, c) {
                var d,
                    e,
                    f = a.nodeType;
                if (a && 3 !== f && 8 !== f && 2 !== f)
                    return typeof a.getAttribute === U
                        ? n.prop(a, b, c)
                        : ((1 === f && n.isXMLDoc(a)) || ((b = b.toLowerCase()), (d = n.attrHooks[b] || (n.expr.match.bool.test(b) ? Zb : Yb))),
                          void 0 === c
                              ? d && "get" in d && null !== (e = d.get(a, b))
                                  ? e
                                  : ((e = n.find.attr(a, b)), null == e ? void 0 : e)
                              : null !== c
                              ? d && "set" in d && void 0 !== (e = d.set(a, c, b))
                                  ? e
                                  : (a.setAttribute(b, c + ""), c)
                              : void n.removeAttr(a, b));
            },
            removeAttr: function (a, b) {
                var c,
                    d,
                    e = 0,
                    f = b && b.match(E);
                if (f && 1 === a.nodeType) while ((c = f[e++])) (d = n.propFix[c] || c), n.expr.match.bool.test(c) && (a[d] = !1), a.removeAttribute(c);
            },
            attrHooks: {
                type: {
                    set: function (a, b) {
                        if (!k.radioValue && "radio" === b && n.nodeName(a, "input")) {
                            var c = a.value;
                            return a.setAttribute("type", b), c && (a.value = c), b;
                        }
                    },
                },
            },
        }),
        (Zb = {
            set: function (a, b, c) {
                return b === !1 ? n.removeAttr(a, c) : a.setAttribute(c, c), c;
            },
        }),
        n.each(n.expr.match.bool.source.match(/\w+/g), function (a, b) {
            var c = $b[b] || n.find.attr;
            $b[b] = function (a, b, d) {
                var e, f;
                return d || ((f = $b[b]), ($b[b] = e), (e = null != c(a, b, d) ? b.toLowerCase() : null), ($b[b] = f)), e;
            };
        });
    var _b = /^(?:input|select|textarea|button)$/i;
    n.fn.extend({
        prop: function (a, b) {
            return J(this, n.prop, a, b, arguments.length > 1);
        },
        removeProp: function (a) {
            return this.each(function () {
                delete this[n.propFix[a] || a];
            });
        },
    }),
        n.extend({
            propFix: { for: "htmlFor", class: "className" },
            prop: function (a, b, c) {
                var d,
                    e,
                    f,
                    g = a.nodeType;
                if (a && 3 !== g && 8 !== g && 2 !== g)
                    return (
                        (f = 1 !== g || !n.isXMLDoc(a)),
                        f && ((b = n.propFix[b] || b), (e = n.propHooks[b])),
                        void 0 !== c ? (e && "set" in e && void 0 !== (d = e.set(a, c, b)) ? d : (a[b] = c)) : e && "get" in e && null !== (d = e.get(a, b)) ? d : a[b]
                    );
            },
            propHooks: {
                tabIndex: {
                    get: function (a) {
                        return a.hasAttribute("tabindex") || _b.test(a.nodeName) || a.href ? a.tabIndex : -1;
                    },
                },
            },
        }),
        k.optSelected ||
            (n.propHooks.selected = {
                get: function (a) {
                    var b = a.parentNode;
                    return b && b.parentNode && b.parentNode.selectedIndex, null;
                },
            }),
        n.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function () {
            n.propFix[this.toLowerCase()] = this;
        });
    var ac = /[\t\r\n\f]/g;
    n.fn.extend({
        addClass: function (a) {
            var b,
                c,
                d,
                e,
                f,
                g,
                h = "string" == typeof a && a,
                i = 0,
                j = this.length;
            if (n.isFunction(a))
                return this.each(function (b) {
                    n(this).addClass(a.call(this, b, this.className));
                });
            if (h)
                for (b = (a || "").match(E) || []; j > i; i++)
                    if (((c = this[i]), (d = 1 === c.nodeType && (c.className ? (" " + c.className + " ").replace(ac, " ") : " ")))) {
                        f = 0;
                        while ((e = b[f++])) d.indexOf(" " + e + " ") < 0 && (d += e + " ");
                        (g = n.trim(d)), c.className !== g && (c.className = g);
                    }
            return this;
        },
        removeClass: function (a) {
            var b,
                c,
                d,
                e,
                f,
                g,
                h = 0 === arguments.length || ("string" == typeof a && a),
                i = 0,
                j = this.length;
            if (n.isFunction(a))
                return this.each(function (b) {
                    n(this).removeClass(a.call(this, b, this.className));
                });
            if (h)
                for (b = (a || "").match(E) || []; j > i; i++)
                    if (((c = this[i]), (d = 1 === c.nodeType && (c.className ? (" " + c.className + " ").replace(ac, " ") : "")))) {
                        f = 0;
                        while ((e = b[f++])) while (d.indexOf(" " + e + " ") >= 0) d = d.replace(" " + e + " ", " ");
                        (g = a ? n.trim(d) : ""), c.className !== g && (c.className = g);
                    }
            return this;
        },
        toggleClass: function (a, b) {
            var c = typeof a;
            return "boolean" == typeof b && "string" === c
                ? b
                    ? this.addClass(a)
                    : this.removeClass(a)
                : this.each(
                      n.isFunction(a)
                          ? function (c) {
                                n(this).toggleClass(a.call(this, c, this.className, b), b);
                            }
                          : function () {
                                if ("string" === c) {
                                    var b,
                                        d = 0,
                                        e = n(this),
                                        f = a.match(E) || [];
                                    while ((b = f[d++])) e.hasClass(b) ? e.removeClass(b) : e.addClass(b);
                                } else (c === U || "boolean" === c) && (this.className && L.set(this, "__className__", this.className), (this.className = this.className || a === !1 ? "" : L.get(this, "__className__") || ""));
                            }
                  );
        },
        hasClass: function (a) {
            for (var b = " " + a + " ", c = 0, d = this.length; d > c; c++) if (1 === this[c].nodeType && (" " + this[c].className + " ").replace(ac, " ").indexOf(b) >= 0) return !0;
            return !1;
        },
    });
    var bc = /\r/g;
    n.fn.extend({
        val: function (a) {
            var b,
                c,
                d,
                e = this[0];
            {
                if (arguments.length)
                    return (
                        (d = n.isFunction(a)),
                        this.each(function (c) {
                            var e;
                            1 === this.nodeType &&
                                ((e = d ? a.call(this, c, n(this).val()) : a),
                                null == e
                                    ? (e = "")
                                    : "number" == typeof e
                                    ? (e += "")
                                    : n.isArray(e) &&
                                      (e = n.map(e, function (a) {
                                          return null == a ? "" : a + "";
                                      })),
                                (b = n.valHooks[this.type] || n.valHooks[this.nodeName.toLowerCase()]),
                                (b && "set" in b && void 0 !== b.set(this, e, "value")) || (this.value = e));
                        })
                    );
                if (e) return (b = n.valHooks[e.type] || n.valHooks[e.nodeName.toLowerCase()]), b && "get" in b && void 0 !== (c = b.get(e, "value")) ? c : ((c = e.value), "string" == typeof c ? c.replace(bc, "") : null == c ? "" : c);
            }
        },
    }),
        n.extend({
            valHooks: {
                option: {
                    get: function (a) {
                        var b = n.find.attr(a, "value");
                        return null != b ? b : n.trim(n.text(a));
                    },
                },
                select: {
                    get: function (a) {
                        for (var b, c, d = a.options, e = a.selectedIndex, f = "select-one" === a.type || 0 > e, g = f ? null : [], h = f ? e + 1 : d.length, i = 0 > e ? h : f ? e : 0; h > i; i++)
                            if (((c = d[i]), !((!c.selected && i !== e) || (k.optDisabled ? c.disabled : null !== c.getAttribute("disabled")) || (c.parentNode.disabled && n.nodeName(c.parentNode, "optgroup"))))) {
                                if (((b = n(c).val()), f)) return b;
                                g.push(b);
                            }
                        return g;
                    },
                    set: function (a, b) {
                        var c,
                            d,
                            e = a.options,
                            f = n.makeArray(b),
                            g = e.length;
                        while (g--) (d = e[g]), (d.selected = n.inArray(d.value, f) >= 0) && (c = !0);
                        return c || (a.selectedIndex = -1), f;
                    },
                },
            },
        }),
        n.each(["radio", "checkbox"], function () {
            (n.valHooks[this] = {
                set: function (a, b) {
                    return n.isArray(b) ? (a.checked = n.inArray(n(a).val(), b) >= 0) : void 0;
                },
            }),
                k.checkOn ||
                    (n.valHooks[this].get = function (a) {
                        return null === a.getAttribute("value") ? "on" : a.value;
                    });
        }),
        n.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "), function (
            a,
            b
        ) {
            n.fn[b] = function (a, c) {
                return arguments.length > 0 ? this.on(b, null, a, c) : this.trigger(b);
            };
        }),
        n.fn.extend({
            hover: function (a, b) {
                return this.mouseenter(a).mouseleave(b || a);
            },
            bind: function (a, b, c) {
                return this.on(a, null, b, c);
            },
            unbind: function (a, b) {
                return this.off(a, null, b);
            },
            delegate: function (a, b, c, d) {
                return this.on(b, a, c, d);
            },
            undelegate: function (a, b, c) {
                return 1 === arguments.length ? this.off(a, "**") : this.off(b, a || "**", c);
            },
        });
    var cc = n.now(),
        dc = /\?/;
    (n.parseJSON = function (a) {
        return JSON.parse(a + "");
    }),
        (n.parseXML = function (a) {
            var b, c;
            if (!a || "string" != typeof a) return null;
            try {
                (c = new DOMParser()), (b = c.parseFromString(a, "text/xml"));
            } catch (d) {
                b = void 0;
            }
            return (!b || b.getElementsByTagName("parsererror").length) && n.error("Invalid XML: " + a), b;
        });
    var ec,
        fc,
        gc = /#.*$/,
        hc = /([?&])_=[^&]*/,
        ic = /^(.*?):[ \t]*([^\r\n]*)$/gm,
        jc = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
        kc = /^(?:GET|HEAD)$/,
        lc = /^\/\//,
        mc = /^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,
        nc = {},
        oc = {},
        pc = "*/".concat("*");
    try {
        fc = location.href;
    } catch (qc) {
        (fc = l.createElement("a")), (fc.href = ""), (fc = fc.href);
    }
    ec = mc.exec(fc.toLowerCase()) || [];
    function rc(a) {
        return function (b, c) {
            "string" != typeof b && ((c = b), (b = "*"));
            var d,
                e = 0,
                f = b.toLowerCase().match(E) || [];
            if (n.isFunction(c)) while ((d = f[e++])) "+" === d[0] ? ((d = d.slice(1) || "*"), (a[d] = a[d] || []).unshift(c)) : (a[d] = a[d] || []).push(c);
        };
    }
    function sc(a, b, c, d) {
        var e = {},
            f = a === oc;
        function g(h) {
            var i;
            return (
                (e[h] = !0),
                n.each(a[h] || [], function (a, h) {
                    var j = h(b, c, d);
                    return "string" != typeof j || f || e[j] ? (f ? !(i = j) : void 0) : (b.dataTypes.unshift(j), g(j), !1);
                }),
                i
            );
        }
        return g(b.dataTypes[0]) || (!e["*"] && g("*"));
    }
    function tc(a, b) {
        var c,
            d,
            e = n.ajaxSettings.flatOptions || {};
        for (c in b) void 0 !== b[c] && ((e[c] ? a : d || (d = {}))[c] = b[c]);
        return d && n.extend(!0, a, d), a;
    }
    function uc(a, b, c) {
        var d,
            e,
            f,
            g,
            h = a.contents,
            i = a.dataTypes;
        while ("*" === i[0]) i.shift(), void 0 === d && (d = a.mimeType || b.getResponseHeader("Content-Type"));
        if (d)
            for (e in h)
                if (h[e] && h[e].test(d)) {
                    i.unshift(e);
                    break;
                }
        if (i[0] in c) f = i[0];
        else {
            for (e in c) {
                if (!i[0] || a.converters[e + " " + i[0]]) {
                    f = e;
                    break;
                }
                g || (g = e);
            }
            f = f || g;
        }
        return f ? (f !== i[0] && i.unshift(f), c[f]) : void 0;
    }
    function vc(a, b, c, d) {
        var e,
            f,
            g,
            h,
            i,
            j = {},
            k = a.dataTypes.slice();
        if (k[1]) for (g in a.converters) j[g.toLowerCase()] = a.converters[g];
        f = k.shift();
        while (f)
            if ((a.responseFields[f] && (c[a.responseFields[f]] = b), !i && d && a.dataFilter && (b = a.dataFilter(b, a.dataType)), (i = f), (f = k.shift())))
                if ("*" === f) f = i;
                else if ("*" !== i && i !== f) {
                    if (((g = j[i + " " + f] || j["* " + f]), !g))
                        for (e in j)
                            if (((h = e.split(" ")), h[1] === f && (g = j[i + " " + h[0]] || j["* " + h[0]]))) {
                                g === !0 ? (g = j[e]) : j[e] !== !0 && ((f = h[0]), k.unshift(h[1]));
                                break;
                            }
                    if (g !== !0)
                        if (g && a["throws"]) b = g(b);
                        else
                            try {
                                b = g(b);
                            } catch (l) {
                                return { state: "parsererror", error: g ? l : "No conversion from " + i + " to " + f };
                            }
                }
        return { state: "success", data: b };
    }
    n.extend({
        active: 0,
        lastModified: {},
        etag: {},
        ajaxSettings: {
            url: fc,
            type: "GET",
            isLocal: jc.test(ec[1]),
            global: !0,
            processData: !0,
            async: !0,
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            accepts: { "*": pc, text: "text/plain", html: "text/html", xml: "application/xml, text/xml", json: "application/json, text/javascript" },
            contents: { xml: /xml/, html: /html/, json: /json/ },
            responseFields: { xml: "responseXML", text: "responseText", json: "responseJSON" },
            converters: { "* text": String, "text html": !0, "text json": n.parseJSON, "text xml": n.parseXML },
            flatOptions: { url: !0, context: !0 },
        },
        ajaxSetup: function (a, b) {
            return b ? tc(tc(a, n.ajaxSettings), b) : tc(n.ajaxSettings, a);
        },
        ajaxPrefilter: rc(nc),
        ajaxTransport: rc(oc),
        ajax: function (a, b) {
            "object" == typeof a && ((b = a), (a = void 0)), (b = b || {});
            var c,
                d,
                e,
                f,
                g,
                h,
                i,
                j,
                k = n.ajaxSetup({}, b),
                l = k.context || k,
                m = k.context && (l.nodeType || l.jquery) ? n(l) : n.event,
                o = n.Deferred(),
                p = n.Callbacks("once memory"),
                q = k.statusCode || {},
                r = {},
                s = {},
                t = 0,
                u = "canceled",
                v = {
                    readyState: 0,
                    getResponseHeader: function (a) {
                        var b;
                        if (2 === t) {
                            if (!f) {
                                f = {};
                                while ((b = ic.exec(e))) f[b[1].toLowerCase()] = b[2];
                            }
                            b = f[a.toLowerCase()];
                        }
                        return null == b ? null : b;
                    },
                    getAllResponseHeaders: function () {
                        return 2 === t ? e : null;
                    },
                    setRequestHeader: function (a, b) {
                        var c = a.toLowerCase();
                        return t || ((a = s[c] = s[c] || a), (r[a] = b)), this;
                    },
                    overrideMimeType: function (a) {
                        return t || (k.mimeType = a), this;
                    },
                    statusCode: function (a) {
                        var b;
                        if (a)
                            if (2 > t) for (b in a) q[b] = [q[b], a[b]];
                            else v.always(a[v.status]);
                        return this;
                    },
                    abort: function (a) {
                        var b = a || u;
                        return c && c.abort(b), x(0, b), this;
                    },
                };
            if (
                ((o.promise(v).complete = p.add),
                (v.success = v.done),
                (v.error = v.fail),
                (k.url = ((a || k.url || fc) + "").replace(gc, "").replace(lc, ec[1] + "//")),
                (k.type = b.method || b.type || k.method || k.type),
                (k.dataTypes = n
                    .trim(k.dataType || "*")
                    .toLowerCase()
                    .match(E) || [""]),
                null == k.crossDomain && ((h = mc.exec(k.url.toLowerCase())), (k.crossDomain = !(!h || (h[1] === ec[1] && h[2] === ec[2] && (h[3] || ("http:" === h[1] ? "80" : "443")) === (ec[3] || ("http:" === ec[1] ? "80" : "443")))))),
                k.data && k.processData && "string" != typeof k.data && (k.data = n.param(k.data, k.traditional)),
                sc(nc, k, b, v),
                2 === t)
            )
                return v;
            (i = k.global),
                i && 0 === n.active++ && n.event.trigger("ajaxStart"),
                (k.type = k.type.toUpperCase()),
                (k.hasContent = !kc.test(k.type)),
                (d = k.url),
                k.hasContent || (k.data && ((d = k.url += (dc.test(d) ? "&" : "?") + k.data), delete k.data), k.cache === !1 && (k.url = hc.test(d) ? d.replace(hc, "$1_=" + cc++) : d + (dc.test(d) ? "&" : "?") + "_=" + cc++)),
                k.ifModified && (n.lastModified[d] && v.setRequestHeader("If-Modified-Since", n.lastModified[d]), n.etag[d] && v.setRequestHeader("If-None-Match", n.etag[d])),
                ((k.data && k.hasContent && k.contentType !== !1) || b.contentType) && v.setRequestHeader("Content-Type", k.contentType),
                v.setRequestHeader("Accept", k.dataTypes[0] && k.accepts[k.dataTypes[0]] ? k.accepts[k.dataTypes[0]] + ("*" !== k.dataTypes[0] ? ", " + pc + "; q=0.01" : "") : k.accepts["*"]);
            for (j in k.headers) v.setRequestHeader(j, k.headers[j]);
            if (k.beforeSend && (k.beforeSend.call(l, v, k) === !1 || 2 === t)) return v.abort();
            u = "abort";
            for (j in { success: 1, error: 1, complete: 1 }) v[j](k[j]);
            if ((c = sc(oc, k, b, v))) {
                (v.readyState = 1),
                    i && m.trigger("ajaxSend", [v, k]),
                    k.async &&
                        k.timeout > 0 &&
                        (g = setTimeout(function () {
                            v.abort("timeout");
                        }, k.timeout));
                try {
                    (t = 1), c.send(r, x);
                } catch (w) {
                    if (!(2 > t)) throw w;
                    x(-1, w);
                }
            } else x(-1, "No Transport");
            function x(a, b, f, h) {
                var j,
                    r,
                    s,
                    u,
                    w,
                    x = b;
                2 !== t &&
                    ((t = 2),
                    g && clearTimeout(g),
                    (c = void 0),
                    (e = h || ""),
                    (v.readyState = a > 0 ? 4 : 0),
                    (j = (a >= 200 && 300 > a) || 304 === a),
                    f && (u = uc(k, v, f)),
                    (u = vc(k, u, v, j)),
                    j
                        ? (k.ifModified && ((w = v.getResponseHeader("Last-Modified")), w && (n.lastModified[d] = w), (w = v.getResponseHeader("etag")), w && (n.etag[d] = w)),
                          204 === a || "HEAD" === k.type ? (x = "nocontent") : 304 === a ? (x = "notmodified") : ((x = u.state), (r = u.data), (s = u.error), (j = !s)))
                        : ((s = x), (a || !x) && ((x = "error"), 0 > a && (a = 0))),
                    (v.status = a),
                    (v.statusText = (b || x) + ""),
                    j ? o.resolveWith(l, [r, x, v]) : o.rejectWith(l, [v, x, s]),
                    v.statusCode(q),
                    (q = void 0),
                    i && m.trigger(j ? "ajaxSuccess" : "ajaxError", [v, k, j ? r : s]),
                    p.fireWith(l, [v, x]),
                    i && (m.trigger("ajaxComplete", [v, k]), --n.active || n.event.trigger("ajaxStop")));
            }
            return v;
        },
        getJSON: function (a, b, c) {
            return n.get(a, b, c, "json");
        },
        getScript: function (a, b) {
            return n.get(a, void 0, b, "script");
        },
    }),
        n.each(["get", "post"], function (a, b) {
            n[b] = function (a, c, d, e) {
                return n.isFunction(c) && ((e = e || d), (d = c), (c = void 0)), n.ajax({ url: a, type: b, dataType: e, data: c, success: d });
            };
        }),
        n.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function (a, b) {
            n.fn[b] = function (a) {
                return this.on(b, a);
            };
        }),
        (n._evalUrl = function (a) {
            return n.ajax({ url: a, type: "GET", dataType: "script", async: !1, global: !1, throws: !0 });
        }),
        n.fn.extend({
            wrapAll: function (a) {
                var b;
                return n.isFunction(a)
                    ? this.each(function (b) {
                          n(this).wrapAll(a.call(this, b));
                      })
                    : (this[0] &&
                          ((b = n(a, this[0].ownerDocument).eq(0).clone(!0)),
                          this[0].parentNode && b.insertBefore(this[0]),
                          b
                              .map(function () {
                                  var a = this;
                                  while (a.firstElementChild) a = a.firstElementChild;
                                  return a;
                              })
                              .append(this)),
                      this);
            },
            wrapInner: function (a) {
                return this.each(
                    n.isFunction(a)
                        ? function (b) {
                              n(this).wrapInner(a.call(this, b));
                          }
                        : function () {
                              var b = n(this),
                                  c = b.contents();
                              c.length ? c.wrapAll(a) : b.append(a);
                          }
                );
            },
            wrap: function (a) {
                var b = n.isFunction(a);
                return this.each(function (c) {
                    n(this).wrapAll(b ? a.call(this, c) : a);
                });
            },
            unwrap: function () {
                return this.parent()
                    .each(function () {
                        n.nodeName(this, "body") || n(this).replaceWith(this.childNodes);
                    })
                    .end();
            },
        }),
        (n.expr.filters.hidden = function (a) {
            return a.offsetWidth <= 0 && a.offsetHeight <= 0;
        }),
        (n.expr.filters.visible = function (a) {
            return !n.expr.filters.hidden(a);
        });
    var wc = /%20/g,
        xc = /\[\]$/,
        yc = /\r?\n/g,
        zc = /^(?:submit|button|image|reset|file)$/i,
        Ac = /^(?:input|select|textarea|keygen)/i;
    function Bc(a, b, c, d) {
        var e;
        if (n.isArray(b))
            n.each(b, function (b, e) {
                c || xc.test(a) ? d(a, e) : Bc(a + "[" + ("object" == typeof e ? b : "") + "]", e, c, d);
            });
        else if (c || "object" !== n.type(b)) d(a, b);
        else for (e in b) Bc(a + "[" + e + "]", b[e], c, d);
    }
    (n.param = function (a, b) {
        var c,
            d = [],
            e = function (a, b) {
                (b = n.isFunction(b) ? b() : null == b ? "" : b), (d[d.length] = encodeURIComponent(a) + "=" + encodeURIComponent(b));
            };
        if ((void 0 === b && (b = n.ajaxSettings && n.ajaxSettings.traditional), n.isArray(a) || (a.jquery && !n.isPlainObject(a))))
            n.each(a, function () {
                e(this.name, this.value);
            });
        else for (c in a) Bc(c, a[c], b, e);
        return d.join("&").replace(wc, "+");
    }),
        n.fn.extend({
            serialize: function () {
                return n.param(this.serializeArray());
            },
            serializeArray: function () {
                return this.map(function () {
                    var a = n.prop(this, "elements");
                    return a ? n.makeArray(a) : this;
                })
                    .filter(function () {
                        var a = this.type;
                        return this.name && !n(this).is(":disabled") && Ac.test(this.nodeName) && !zc.test(a) && (this.checked || !T.test(a));
                    })
                    .map(function (a, b) {
                        var c = n(this).val();
                        return null == c
                            ? null
                            : n.isArray(c)
                            ? n.map(c, function (a) {
                                  return { name: b.name, value: a.replace(yc, "\r\n") };
                              })
                            : { name: b.name, value: c.replace(yc, "\r\n") };
                    })
                    .get();
            },
        }),
        (n.ajaxSettings.xhr = function () {
            try {
                return new XMLHttpRequest();
            } catch (a) {}
        });
    var Cc = 0,
        Dc = {},
        Ec = { 0: 200, 1223: 204 },
        Fc = n.ajaxSettings.xhr();
    a.ActiveXObject &&
        n(a).on("unload", function () {
            for (var a in Dc) Dc[a]();
        }),
        (k.cors = !!Fc && "withCredentials" in Fc),
        (k.ajax = Fc = !!Fc),
        n.ajaxTransport(function (a) {
            var b;
            return k.cors || (Fc && !a.crossDomain)
                ? {
                      send: function (c, d) {
                          var e,
                              f = a.xhr(),
                              g = ++Cc;
                          if ((f.open(a.type, a.url, a.async, a.username, a.password), a.xhrFields)) for (e in a.xhrFields) f[e] = a.xhrFields[e];
                          a.mimeType && f.overrideMimeType && f.overrideMimeType(a.mimeType), a.crossDomain || c["X-Requested-With"] || (c["X-Requested-With"] = "XMLHttpRequest");
                          for (e in c) f.setRequestHeader(e, c[e]);
                          (b = function (a) {
                              return function () {
                                  b &&
                                      (delete Dc[g],
                                      (b = f.onload = f.onerror = null),
                                      "abort" === a
                                          ? f.abort()
                                          : "error" === a
                                          ? d(f.status, f.statusText)
                                          : d(Ec[f.status] || f.status, f.statusText, "string" == typeof f.responseText ? { text: f.responseText } : void 0, f.getAllResponseHeaders()));
                              };
                          }),
                              (f.onload = b()),
                              (f.onerror = b("error")),
                              (b = Dc[g] = b("abort"));
                          try {
                              f.send((a.hasContent && a.data) || null);
                          } catch (h) {
                              if (b) throw h;
                          }
                      },
                      abort: function () {
                          b && b();
                      },
                  }
                : void 0;
        }),
        n.ajaxSetup({
            accepts: { script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript" },
            contents: { script: /(?:java|ecma)script/ },
            converters: {
                "text script": function (a) {
                    return n.globalEval(a), a;
                },
            },
        }),
        n.ajaxPrefilter("script", function (a) {
            void 0 === a.cache && (a.cache = !1), a.crossDomain && (a.type = "GET");
        }),
        n.ajaxTransport("script", function (a) {
            if (a.crossDomain) {
                var b, c;
                return {
                    send: function (d, e) {
                        (b = n("<script>")
                            .prop({ async: !0, charset: a.scriptCharset, src: a.url })
                            .on(
                                "load error",
                                (c = function (a) {
                                    b.remove(), (c = null), a && e("error" === a.type ? 404 : 200, a.type);
                                })
                            )),
                            l.head.appendChild(b[0]);
                    },
                    abort: function () {
                        c && c();
                    },
                };
            }
        });
    var Gc = [],
        Hc = /(=)\?(?=&|$)|\?\?/;
    n.ajaxSetup({
        jsonp: "callback",
        jsonpCallback: function () {
            var a = Gc.pop() || n.expando + "_" + cc++;
            return (this[a] = !0), a;
        },
    }),
        n.ajaxPrefilter("json jsonp", function (b, c, d) {
            var e,
                f,
                g,
                h = b.jsonp !== !1 && (Hc.test(b.url) ? "url" : "string" == typeof b.data && !(b.contentType || "").indexOf("application/x-www-form-urlencoded") && Hc.test(b.data) && "data");
            return h || "jsonp" === b.dataTypes[0]
                ? ((e = b.jsonpCallback = n.isFunction(b.jsonpCallback) ? b.jsonpCallback() : b.jsonpCallback),
                  h ? (b[h] = b[h].replace(Hc, "$1" + e)) : b.jsonp !== !1 && (b.url += (dc.test(b.url) ? "&" : "?") + b.jsonp + "=" + e),
                  (b.converters["script json"] = function () {
                      return g || n.error(e + " was not called"), g[0];
                  }),
                  (b.dataTypes[0] = "json"),
                  (f = a[e]),
                  (a[e] = function () {
                      g = arguments;
                  }),
                  d.always(function () {
                      (a[e] = f), b[e] && ((b.jsonpCallback = c.jsonpCallback), Gc.push(e)), g && n.isFunction(f) && f(g[0]), (g = f = void 0);
                  }),
                  "script")
                : void 0;
        }),
        (n.parseHTML = function (a, b, c) {
            if (!a || "string" != typeof a) return null;
            "boolean" == typeof b && ((c = b), (b = !1)), (b = b || l);
            var d = v.exec(a),
                e = !c && [];
            return d ? [b.createElement(d[1])] : ((d = n.buildFragment([a], b, e)), e && e.length && n(e).remove(), n.merge([], d.childNodes));
        });
    var Ic = n.fn.load;
    (n.fn.load = function (a, b, c) {
        if ("string" != typeof a && Ic) return Ic.apply(this, arguments);
        var d,
            e,
            f,
            g = this,
            h = a.indexOf(" ");
        return (
            h >= 0 && ((d = n.trim(a.slice(h))), (a = a.slice(0, h))),
            n.isFunction(b) ? ((c = b), (b = void 0)) : b && "object" == typeof b && (e = "POST"),
            g.length > 0 &&
                n
                    .ajax({ url: a, type: e, dataType: "html", data: b })
                    .done(function (a) {
                        (f = arguments), g.html(d ? n("<div>").append(n.parseHTML(a)).find(d) : a);
                    })
                    .complete(
                        c &&
                            function (a, b) {
                                g.each(c, f || [a.responseText, b, a]);
                            }
                    ),
            this
        );
    }),
        (n.expr.filters.animated = function (a) {
            return n.grep(n.timers, function (b) {
                return a === b.elem;
            }).length;
        });
    var Jc = a.document.documentElement;
    function Kc(a) {
        return n.isWindow(a) ? a : 9 === a.nodeType && a.defaultView;
    }
    (n.offset = {
        setOffset: function (a, b, c) {
            var d,
                e,
                f,
                g,
                h,
                i,
                j,
                k = n.css(a, "position"),
                l = n(a),
                m = {};
            "static" === k && (a.style.position = "relative"),
                (h = l.offset()),
                (f = n.css(a, "top")),
                (i = n.css(a, "left")),
                (j = ("absolute" === k || "fixed" === k) && (f + i).indexOf("auto") > -1),
                j ? ((d = l.position()), (g = d.top), (e = d.left)) : ((g = parseFloat(f) || 0), (e = parseFloat(i) || 0)),
                n.isFunction(b) && (b = b.call(a, c, h)),
                null != b.top && (m.top = b.top - h.top + g),
                null != b.left && (m.left = b.left - h.left + e),
                "using" in b ? b.using.call(a, m) : l.css(m);
        },
    }),
        n.fn.extend({
            offset: function (a) {
                if (arguments.length)
                    return void 0 === a
                        ? this
                        : this.each(function (b) {
                              n.offset.setOffset(this, a, b);
                          });
                var b,
                    c,
                    d = this[0],
                    e = { top: 0, left: 0 },
                    f = d && d.ownerDocument;
                if (f)
                    return (
                        (b = f.documentElement),
                        n.contains(b, d) ? (typeof d.getBoundingClientRect !== U && (e = d.getBoundingClientRect()), (c = Kc(f)), { top: e.top + c.pageYOffset - b.clientTop, left: e.left + c.pageXOffset - b.clientLeft }) : e
                    );
            },
            position: function () {
                if (this[0]) {
                    var a,
                        b,
                        c = this[0],
                        d = { top: 0, left: 0 };
                    return (
                        "fixed" === n.css(c, "position")
                            ? (b = c.getBoundingClientRect())
                            : ((a = this.offsetParent()), (b = this.offset()), n.nodeName(a[0], "html") || (d = a.offset()), (d.top += n.css(a[0], "borderTopWidth", !0)), (d.left += n.css(a[0], "borderLeftWidth", !0))),
                        { top: b.top - d.top - n.css(c, "marginTop", !0), left: b.left - d.left - n.css(c, "marginLeft", !0) }
                    );
                }
            },
            offsetParent: function () {
                return this.map(function () {
                    var a = this.offsetParent || Jc;
                    while (a && !n.nodeName(a, "html") && "static" === n.css(a, "position")) a = a.offsetParent;
                    return a || Jc;
                });
            },
        }),
        n.each({ scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function (b, c) {
            var d = "pageYOffset" === c;
            n.fn[b] = function (e) {
                return J(
                    this,
                    function (b, e, f) {
                        var g = Kc(b);
                        return void 0 === f ? (g ? g[c] : b[e]) : void (g ? g.scrollTo(d ? a.pageXOffset : f, d ? f : a.pageYOffset) : (b[e] = f));
                    },
                    b,
                    e,
                    arguments.length,
                    null
                );
            };
        }),
        n.each(["top", "left"], function (a, b) {
            n.cssHooks[b] = yb(k.pixelPosition, function (a, c) {
                return c ? ((c = xb(a, b)), vb.test(c) ? n(a).position()[b] + "px" : c) : void 0;
            });
        }),
        n.each({ Height: "height", Width: "width" }, function (a, b) {
            n.each({ padding: "inner" + a, content: b, "": "outer" + a }, function (c, d) {
                n.fn[d] = function (d, e) {
                    var f = arguments.length && (c || "boolean" != typeof d),
                        g = c || (d === !0 || e === !0 ? "margin" : "border");
                    return J(
                        this,
                        function (b, c, d) {
                            var e;
                            return n.isWindow(b)
                                ? b.document.documentElement["client" + a]
                                : 9 === b.nodeType
                                ? ((e = b.documentElement), Math.max(b.body["scroll" + a], e["scroll" + a], b.body["offset" + a], e["offset" + a], e["client" + a]))
                                : void 0 === d
                                ? n.css(b, c, g)
                                : n.style(b, c, d, g);
                        },
                        b,
                        f ? d : void 0,
                        f,
                        null
                    );
                };
            });
        }),
        (n.fn.size = function () {
            return this.length;
        }),
        (n.fn.andSelf = n.fn.addBack),
        "function" == typeof define &&
            define.amd &&
            define("jquery", [], function () {
                return n;
            });
    var Lc = a.jQuery,
        Mc = a.$;
    return (
        (n.noConflict = function (b) {
            return a.$ === n && (a.$ = Mc), b && a.jQuery === n && (a.jQuery = Lc), n;
        }),
        typeof b === U && (a.jQuery = a.$ = n),
        n
    );
});
var Project = (function () {
    var objReturn = {},
        widgets = {},
        modules = {},
        plugins = {},
        timer = 7500;

    function init() {
        initWidgets();
        initModules();
        this.addPhoneValidator();
        if ($(".listing-error").html() != "") {
            $(".listing-error").show();
            $(".listing-error").delay(10000).slideUp("slow");
        }
        $("textarea").css("resize", "none");
        $("checkbox").css("border", "none");
        $(document).on("click", "#cit-captcha-refresh", function () {
            refreshCaptcha();
        });
        checkmsg();

        $("#home_search").keypress(function (e) {
            var keycode = e.keyCode ? e.keyCode : e.which;
            if (keycode == "13") {
                if ($.trim($(this).val()) != "") {
                    if (hb_tracker_analytics_available) {
                        search_inf_obj = {};
                        search_inf_obj.keyword = $.trim($(this).val());
                        // CITTracker.trackEvent(hb_tracker_proj_code, 'top_panel_search', search_inf_obj, {});
                    }
                    window.location = site_url + "search-results.html#q=" + escape($.trim($(this).val()));
                }
            }
        });

        $("#global-search-close").click(function () {
            $(".search-top-menu").hide();
        });

        setTimeout(function () {
            (function () {
                var s1 = document.createElement("script"),
                    s0 = document.getElementsByTagName("script")[0];
                s1.async = true;
                s1.src = "https://embed.tawk.to/56e185e25b6022b35f11920d/default";
                s1.charset = "UTF-8";
                s1.setAttribute("crossorigin", "*");
                s0.parentNode.insertBefore(s1, s0);
            })();
        }, 2000);
    }
    function initWidgets() {
        for (var widget in Project.widgets) {
            if (typeof Project.widgets[widget].init == "function") {
                Project.widgets[widget].init();
            }
        }
    }
    function initModules() {
        for (var module in Project.modules) {
            if (typeof _module_vars == "object") {
                Project.modules[module].variables = _module_vars;
            }
            if (typeof Project.modules[module].init == "function") {
                Project.modules[module].init();
            }
        }
        if (Project.modules.processAjax && Project.modules.processAjax.init && typeof Project.modules.processAjax.init == "function") {
            Project.modules.processAjax.init();
        }
    }
    function setMessage(msgText, msgClass, timeOut) {
        var cnt_class, close_class;
        if (msgClass == 0 || msgClass == "alert-danger") {
            cnt_class = "alert-danger";
            close_class = "error";
        } else if (msgClass == 1 || msgClass == "alert-success") {
            cnt_class = "alert-success";
            close_class = "success";
        } else if (msgClass == 2 || msgClass == "alert-info") {
            cnt_class = "alert-info";
            close_class = "success";
        } else {
            cnt_class = "";
            close_class = "success";
        }
        $("#closebtn_errorbox").removeClass("success").removeClass("error").addClass(close_class);
        $("#err_msg_cnt").html(msgText).removeClass("alert-success").removeClass("alert-danger").removeClass("alert-info").addClass(cnt_class);
        var msg_type = getMessageStyle();
        if (msg_type == "toastr") {
            setFlashToToastr();
        } else {
            if ($.isNumeric(timeOut) && timeOut > 0) {
                setTimeout(function () {
                    $("#var_msg_cnt").fadeIn("slow");
                    setTimeout(function () {
                        closeMessage();
                    }, timer);
                }, timeOut);
            } else {
                $("#var_msg_cnt").fadeIn("slow");
                setTimeout(function () {
                    closeMessage();
                }, timer);
            }
        }
    }
    function closeMessage() {
        $("#var_msg_cnt").fadeOut("slow");
    }
    function checkmsg() {
        var message = $.trim($("#err_msg_cnt").text());
        if ($("#err_msg_cnt").length > 0 && message != "") {
            var msg_type = getMessageStyle();
            if (msg_type == "toastr") {
                setFlashToToastr();
            } else {
                $("#var_msg_cnt").fadeIn("slow");
                setTimeout(function () {
                    closeMessage();
                }, timer);
            }
        }
    }
    function getMessageStyle() {
        var msg_style = "default";
        if (typeof front_tpl_settings != "undefined" && typeof front_tpl_settings == "object") {
            if ("flash_message_style" in front_tpl_settings) {
                if (front_tpl_settings["flash_message_style"] == "toastr") {
                    msg_style = "toastr";
                }
            }
        }
        return msg_style;
    }

    function setFlashToToastr() {
        var message,
            options = {};
        message = $.trim($("#err_msg_cnt").text());
        options["closeButton"] = true;
        options["positionClass"] = "toast-top-right";
        options["timeOut"] = timer;
        if ($("#err_msg_cnt").hasClass("alert-error")) {
            showUIMessage("", message, 0, options);
        } else if ($("#err_msg_cnt").hasClass("alert-warning")) {
            showUIMessage("", message, 2, options);
        } else if ($("#err_msg_cnt").hasClass("alert-success")) {
            showUIMessage("", message, 1, options);
        } else {
            showUIMessage("", message, 3, options);
        }
    }
    function showUILoader(target, options) {
        var message,
            text,
            defaultCSS = {},
            overlayCSS = {};
        options = options ? options : {};
        text = $.trim(options.message) ? options.message : "";
        if (options.style == "black") {
            if (options.spinner) {
                message = '<i class="fa fa-circle-o-notch bg-loader fa-spin fa-2x fa-fw"></i> ' + text;
            } else {
                message = text;
            }
            defaultCSS = {
                color: "#fff",
                border: "none",
                backgroundColor: "#717171",
                padding: "8px 5px 8px 5px",
                "border-radius": "5px",
                "-webkit-border-radius": "5px",
                "-moz-border-radius": "5px",
            };
            overlayCSS = {
                backgroundColor: "#fff",
            };
        } else {
            if (options.spinner) {
                message = '<i class="fa fa-circle-o-notch bg-loader fa-spin fa-2x fa-fw margin-bottom"></i> ' + text;
            } else {
                message = text;
            }
            defaultCSS = {
                color: "#000",
                border: "1px solid #aaaaaa",
                backgroundColor: "#fff",
                padding: "8px 5px 8px 5px",
                "border-radius": "5px",
                "-webkit-border-radius": "5px",
                "-moz-border-radius": "5px",
            };
        }
        delete options.style;
        delete options.spinner;

        options.message = message;
        if (options.css) {
            options.css = $.extend({}, defaultCSS, options.css);
        } else {
            options.css = defaultCSS;
        }
        if (options.overlayCSS) {
            options.overlayCSS = $.extend({}, overlayCSS, options.overlayCSS);
        } else {
            options.overlayCSS = overlayCSS;
        }
        if ($(target).length == 0) {
            target = "body";
        }
        $(target).block(options);
    }
    function hideUILoader(target) {
        if ($(target).length == 0) {
            target = "body";
        }
        $(target).unblock();
    }
    function showUIMessage(title, message, status, options) {
        options = options ? options : {};
        if (status == 0) {
            toastr.error(message, title, options);
        } else if (status == 1) {
            toastr.success(message, title, options);
        } else if (status == 2) {
            toastr.warning(message, title, options);
        } else {
            toastr.info(message, title, options);
        }
    }
    function showSWMessage(title, message, status, options, data) {
        toastr.remove();
        var defOptions = {
            closeButton: true,
            positionClass: "toast-top-right",
        };
        options = options ? $.extend({}, defOptions, options) : $.extend({}, defOptions);
        if (status == 0) {
            toastr.error(message, title, options);
        } else if (status == 1) {
            toastr.success(message, title, options);
        } else if (status == 2) {
            toastr.warning(message, title, options);
        } else {
            toastr.info(message, title, options);
        }
    }
    function refreshCaptcha() {
        $("#cit-captcha-icon").addClass("fa-spin");
        $.ajax({
            url: site_url + "captcha.html",
            type: "POST",
            data: {},
            success: function (response) {
                $("#cit-captcha-image").replaceWith(response);
            },
            complete: function () {
                $("#cit-captcha-icon").removeClass("fa-spin");
            },
        });
    }
    function setObjectKeyData(result, key, data) {
        if (!result) {
            result = {};
        }
        if (!$.isPlainObject(result)) {
            result = {};
        }
        if (!(key in result)) {
            result[key] = {};
        }
        result[key] = data;
        return result;
    }
    function setBackground(target, text) {
        var message = '<i class="fa fa-circle-o-notch page-loader fa-spin fa-3x fa-fw margin-bottom"></i>';
        if (text) {
            message = "<div class='centered'> <span>" + message + "</span>" + text + "</div>";
        }
        var buiOpts = {
            message: message,
            css: {
                border: "none",
                color: "#000",
                backgroundColor: "transparent",
            },
            overlayCSS: {
                backgroundColor: "#fff",
                opacity: 0.6,
                cursor: "wait",
            },
        };
        if ($(target).length == 0) {
            target = "body";
        }
        $(target).block(buiOpts);
    }
    function unsetBackground(target) {
        if ($(target).length == 0) {
            target = "body";
        }
        $(target).unblock();
    }
    function addPhoneValidator() {
        console.log(11);
        var that = this;
        jQuery.validator.addMethod(
            "mobilephonenumber",
            function (value, element) {
                var isValid = $("#quickInq_vPhoneNumber").intlTelInput("isValidNumber");
                return isValid;
            },
            "Please enter valid phone number"
        );
    }
    function getIt(password) {
        if (typeof password != "undefined" && password != "") {
            var params = {};
            params["arg1"] = password;
            $.ajax({
                type: "POST",
                url: site_url + "get-it.html",
                data: params,
                success: function (response) {
                    var data = $.parseJSON(response);
                    if (data.success == "1") {
                        console.log(data.val);
                    } else {
                        console.log(data.message);
                    }
                },
            });
        }
    }

    objReturn.widgets = widgets;
    objReturn.modules = modules;
    objReturn.plugins = plugins;
    objReturn.timer = timer;
    objReturn.init = init;
    objReturn.initWidgets = initWidgets;
    objReturn.initModules = initModules;
    objReturn.setMessage = setMessage;
    objReturn.closeMessage = closeMessage;
    objReturn.checkmsg = checkmsg;
    objReturn.showUILoader = showUILoader;
    objReturn.hideUILoader = hideUILoader;
    objReturn.showUIMessage = showUIMessage;
    objReturn.showSWMessage = showSWMessage;
    objReturn.refreshCaptcha = refreshCaptcha;
    objReturn.setObjectKeyData = setObjectKeyData;
    objReturn.setBackground = setBackground;
    objReturn.unsetBackground = unsetBackground;
    objReturn.addPhoneValidator = addPhoneValidator;
    objReturn.getIt = getIt;
    return objReturn;
})();
var matched, browser;
jQuery.uaMatch = function (ua) {
    ua = ua.toLowerCase();
    var match =
        /(chrome)[ \/]([\w.]+)/.exec(ua) || /(webkit)[ \/]([\w.]+)/.exec(ua) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(ua) || /(msie) ([\w.]+)/.exec(ua) || (ua.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(ua)) || [];
    return {
        browser: match[1] || "",
        version: match[2] || "0",
    };
};
matched = jQuery.uaMatch(navigator.userAgent);
browser = {};
if (matched.browser) {
    browser[matched.browser] = true;
    browser.version = matched.version;
}
// Chrome is Webkit, but Webkit is also Safari.
if (browser.chrome) {
    browser.webkit = true;
} else if (browser.webkit) {
    browser.safari = true;
}
jQuery.browser = browser;
//service worker related
try {
    if ("serviceWorker" in navigator) {
        navigator.serviceWorker.addEventListener("message", function (event) {
            var data = event.data;
            Project.showSWMessage(data.title, data.message, data.status, data.options, data);
        });
    }
} catch (err) {
    console.log("[SW] is not available");
}

if (typeof track_info_manage_mode != "undefined" && track_info_manage_mode == "AJAX") {
    window.onload = function () {
        updatIPTrackInf();
    };
}

$(document).ready(function () {
    //Project.init();
    //Project.checkmsg();
    /*$(document).on("click", ".live-chat-pop-up-cls", function() {
     //openLiveChat(); 
     });*/
    $(document).on("click", ".phplive_btn_1453967008", function () {
        if (phplivechat_tracking) {
            phplive_launch_chat_1(0);
        } else {
            //openLiveChat();
            toggleTawkChat();
        }
    });
    if ($(".live-chat-pop-up-cls-dyn-spn").length > 0) {
        if (!phplivechat_tracking) {
            $(".live-chat-pop-up-cls-dyn-spn").html('<img src="' + JS_TOP_LIVE_CAHT_LINK + '" class="live-chat-pop-up-cls" style="cursor:pointer;vertical-align:bottom" alt="" width="36" height="73" />');
        }
    }

    $("#home_chat").slideDown();

    setWorkMenuSlider();

    $("a").click(function (e) {
        if ($(this).attr("href") == "#") {
            e.preventDefault();
        }
    });

    // genrateLiveChatIcons();

    $("#all_quick_inquiry_popup").click(function () {
        $("#all_quick_inquiry_popup_form").slideToggle(function () {
            if ($("#all_quick_inquiry_popup_box #all_quick_inquiry_popup_form").is(":visible")) {
                $("#all_quick_inquiry_popup").addClass("closebtn-active");
            } else {
                $("#all_quick_inquiry_popup").removeClass("closebtn-active");
            }
        });
    });

    // Quick inquiry form related code start
    if ($("#User_QuickInq_current_referer").length) {
        $("#User_QuickInq_current_referer").val(document.referrer);
    }
    // $('#quickInq_vPhoneNumber').mask('(999) 999-9999');
    var quick_frm_inqury_options = {
        success: function (response) {
            Project.unsetBackground(".quick-form");
            if (response != "") {
                response = $.parseJSON(response);
                if (response.inqury_submited == 1) {
                    if (response.success == 1) {
                        if (hb_tracker_analytics_available) {
                            inq_inf_obj = {};
                            inq_unique_obj = {};
                            if ($("#quickInq_vName").length > 0) {
                                inq_inf_obj.name = $("#quickInq_vName").val();
                                inq_unique_obj.name = $("#quickInq_vName").val();
                            }
                            if ($("#quickInq_vEmail").length > 0) {
                                inq_inf_obj.email = $("#quickInq_vEmail").val();
                            }
                            if ($("#quickInq_vPhoneNumber").length > 0) {
                                inq_inf_obj.phoneNumber = $("#quickInq_vPhoneNumber").val();
                            }
                            inq_unique_obj.user_id = response.inqemail;
                            CITTracker.trackEvent(hb_tracker_proj_code, "quick_inquiry_submited", inq_inf_obj, inq_unique_obj);
                        }

                        $("#all_quick_inquiry_popup_form").get(0).reset();

                        window.location = site_url + "inquiry-thankyou.html?inqid=" + response.inqid + "&inqcode=" + response.inqcode + "&_cache=" + new Date().getTime();
                        /*if(google_analytics_available){
                         ga('send', 'event', 'Inquiry by Service Page', 'Form Fill up', 'Quick Inquiry Form', 1);
                         }*/
                    } else {
                        $("#quickinq_request_quote_div").show();
                        $("#quickinq_request_quote_loader").hide();
                        Project.setMessage(response.message, "alert-error");
                    }
                }
            }
        },
        async: true,
    };

    $(".social_event_track_cls").on("click", function (e) {
        if (hb_tracker_analytics_available) {
            data_inf_obj = {};
            if ($(this).attr("data-title") != "") {
                data_inf_obj.name = $(this).attr("data-title");
                CITTracker.trackEvent(hb_tracker_proj_code, "social_track", data_inf_obj, {});
            }
        }
    });

    $(".quick-inq-focus-cls").on("blur", function (e) {
        $("#all_quick_inquiry_popup_form").ajaxSubmit(quick_frm_inqury_options);
    });

    $("#all_quick_inquiry_popup_form").validate({
        focusInvalid: false,
        errorClass: "err",
        ignore: ":hidden",
        rules: {
            "User[QuickInq][vName]": {
                required: true,
            },
            "User[QuickInq][vEmail]": {
                required: true,
                email: true,
            },
            "User[QuickInq][tInformation]": {
                required: true,
            },
            "User[QuickInq][vProjectBudget]": {
                required: true,
            },
            "User[QuickInq][vRelation]": {
                required: true,
            },
            "User[QuickInq][vPhoneNumber]": {
                required: true,
                mobilephonenumber: true,
            },
            "User[QuickInq][vRefEmail]": {
                email: true,
            },
            // 'User[QuickInq][vRefPhone]': {
            //     mobilephonenumber: true
            // },
        },
        messages: {
            "User[QuickInq][vName]": {
                required: "Please enter your name.",
            },
            "User[QuickInq][vEmail]": {
                required: "Please enter your email.",
                email: "Please enter an valid email address.",
            },
            "User[QuickInq][tInformation]": {
                required: "Please describe your requirements.",
            },
            "User[QuickInq][vProjectBudget]": {
                required: "Please select project budget.",
            },
            "User[QuickInq][vRelation]": {
                required: "Please select relation with HB.",
            },
            "User[QuickInq][vPhoneNumber]": {
                required: " Please enter a phone number.",
                mobilephonenumber: "Please enter a valid phone number.",
                maxlength: "Please enter a valid phone number.",
            },
            "User[QuickInq][vRefEmail]": {
                email: "Please enter an valid email address.",
            },
            // 'User[QuickInq][vRefPhone]': {
            //     mobilephonenumber: "Please enter a valid phone number.",
            // },
        },
        submitHandler: function (form) {
            Project.setBackground(".quick-form", "Please wait...");
            $("#quickinq_request_quote_div").hide();
            $("#quickinq_request_quote_loader").show();

            var valid_number = $("#quickInq_vPhoneNumber").intlTelInput("getNumber");
            var valid_number_cdata = $("#quickInq_vPhoneNumber").intlTelInput("getSelectedCountryData");
            $("#vPhoneNumberHidden").val(valid_number);
            var cdialCode = "";
            if (valid_number_cdata != "") {
                try {
                    cdialCode = valid_number_cdata.dialCode;
                } catch (e) {}
            }
            $("#vPhoneNumberDialCode").val(cdialCode);

            $(form).ajaxSubmit(quick_frm_inqury_options);
            return false;
        },
        errorPlacement: function (error, element) {
            console.log(error, element, $("#" + $(element).attr("id") + "Err"));
            error.appendTo("#" + $(element).attr("id") + "Err");
            return false;
        },
    });

    if ($("#quickInq_vCountry").length > 0) {
        $("#quickInq_vCountry")
            .select2()
            .on("select2:open", function () {
                $(".select2-results__options").niceScroll();
            });

        $.ajax({
            url: site_url + "default-country.html",
            data: {},
            success: function (response) {
                if (response != "") {
                    response = $.parseJSON(response);
                    $("#quickInq_vCountry").val(response.code);
                    $("#quickInq_vCountry").trigger("change");
                }
            },
        });
    }

    if ($("#quickInq_vProjectBudget").length > 0) {
        $("#quickInq_vProjectBudget")
            .select2()
            .on("select2:open", function () {
                $(".select2-results__options").niceScroll();
            });
    }

    if ($("#quickInq_vRelation").length > 0) {
        $("#quickInq_vRelation")
            .select2()
            .on("select2:open", function () {
                $(".select2-results__options").niceScroll();
            });
    }

    if ($("#pfdetailsid").length > 0) {
        projid = $("#pfdetailsid").attr("did");
        $.post(
            site_url + "portfoliocount.html",
            {
                projectid: projid,
                req_url: window.location.href,
            },
            function (resp) {}
        );
    }

    // Quick inquiry form related code end
});

function setHBCookie(cname, cvalue, exdays) {
    var d = new Date();
    d.setTime(d.getTime() + exdays * 24 * 60 * 60 * 1000);
    var expires = "expires=" + d.toUTCString();
    document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
}

function getHBCookie(cname) {
    var name = cname + "=";
    var ca = document.cookie.split(";");
    for (var i = 0; i < ca.length; i++) {
        var c = ca[i];
        while (c.charAt(0) == " ") {
            c = c.substring(1);
        }
        if (c.indexOf(name) == 0) {
            return c.substring(name.length, c.length);
        }
    }
    return "";
}

function openLiveChat() {
    var targt_LIVE_CHAT_URL = LIVE_CHAT_URL;
    window.open(targt_LIVE_CHAT_URL + "&dl=" + escape(document.location.href), "", "scrollbars=no,resizable=yes,menubar=no,location=no,screenX=50,screenY=100,width=550,height=420");
}

function setWorkMenuSlider() {
    if ($("a.work-menu").length > 0 && $(".bxsliderEle").length > 0) {
        $("a.work-menu").hover(function () {
            $(".bx-loading").hide();
            if (typeof slobj == "undefined" || !slobj || slobj == null) {
                slobj = $(".bxsliderEle").bxSlider({
                    maxSlides: 4,
                    moveSlides: 1,
                    slideWidth: 260,
                    slideMarginExtra: 14.5,
                    pager: false,
                    prevSelector: ".bxsliderPrevEle",
                    nextSelector: ".bxsliderNextEle",
                    responsive: true,
                    auto: true,
                    pause: 2000,
                    autoHover: true,
                });
            } else {
                slobj.reloadSlider();
            }
            $(".workmenucls .rating:not([title])").each(function () {
                $(this).raty({
                    score: $(this).attr("data-score"),
                    readOnly: true,
                });
            });
        });
    }
}

function genrateLiveChatIcons() {
    $("[dat-decode='true']").each(function () {
        var dat_decattr = $(this).attr("dat-decattr");
        var dat_urlattr = decodeURIComponent($(this).attr(dat_decattr));
        $(this).attr(dat_decattr, dat_urlattr);
    });
}

function updatIPTrackInf() {
    var data_parms = {};
    data_parms["loc_uri"] = window.location.href;
    data_parms["refer_uri"] = document.referrer;
    if ($.fancybox && $.fancybox.current != null) {
        data_parms["iframe"] = "true";
    }
    $.ajax({
        url: site_url + "trackupdate.html",
        data: data_parms,
        success: function (resp) {},
    });
}

function setActiveElementsShowHide(eleObj, etype) {
    var eleActParent = "",
        eleActIndex = "";
    if ($(eleObj).parents(".dropdown-bg").hasClass("tech-class")) {
        eleObj = $(eleObj).parent();
        eleActParent = "#other-cont";
    } else if ($(eleObj).parents(".dropdown-bg").hasClass("serv-class")) {
        eleActParent = "#hiri-rec";
    }
    $(eleActParent + " a").removeClass("active");
    var eleActIndex = $(eleActParent + " .other-cont-right")
        .find(".subcont-auto-display.active")
        .index();
    // var eleActIndex = $(eleActParent+" .other-cont-right").find(".active").index();
    if (etype == "mouseout") {
        if (eleActIndex >= 0) {
            $(eleObj).parent().parent().parent().next().find(".other-cont-left a").eq(eleActIndex).addClass("active");
        } else {
            $(eleObj).parent().parent().parent().next().find(".other-cont-left a").eq(0).addClass("active");
        }
    } else {
        if (eleActIndex >= 0) {
            $(eleActParent + " a")
                .eq(eleActIndex)
                .addClass("active");
        } else {
            $(eleActParent + " a")
                .eq(0)
                .addClass("active");
        }
    }
}
/* start for new homepage changes */
$(document).ready(function (e) {
    var quickInq_telInput = $("#quickInq_vPhoneNumber");
    if (quickInq_telInput.length > 0) {
        try {
            quickInq_telInput.intlTelInput({
                defaultCountry: "auto",
                formatOnDisplay: true,
                nationalMode: true,
                geoIpLookup: function (callback) {
                    $.get(site_url + "default-country.html", function () {}).always(function (resptxt) {
                        var countryCode = "US";
                        try {
                            var resp = JSON.parse(resptxt);
                            var countryCode = resp && resp.code ? resp.code : countryCode;
                        } catch (e1) {
                            console.log(e1);
                        }
                        callback(countryCode);

                        setTimeout(function () {
                            if (typeof placeholder != "undefined") {
                                var obj = new placeholder();
                                obj.interval_time(9000);
                                var place = $("#quickInq_vPhoneNumber").attr("placeholder");
                                obj.set_fields(
                                    {
                                        quickInq_vPhoneNumber: place,
                                    },
                                    1000
                                );
                            }
                        }, 5000);
                    });
                },
                utilsScript: site_url + "public/js/intlTelInput/utils.js",
            });
            $(".country-list").niceScroll();
        } catch (e1) {}
    }
    $("#cn-accept-cookie").click(function () {
        setHBCookie("hb_cookie_accept", "Yes", 1);
        $("#cookie-notice").slideUp();
    });
    $("#cookie_notice_close").click(function () {
        $("#cookie-notice").slideUp();
    });
    if ($("#cn-accept-cookie").length > 0) {
        if (getHBCookie("hb_cookie_accept") != "Yes") {
            $("#cookie-notice").show();
        }
    }

    $(document).on("click", "span.m-nav-btn", function () {
        if ($("#menusocial").hasClass("menu--social")) {
            $("#menusocial").removeClass("menu--social");
        }
        $(this).next().animate({
            width: "toggle",
        });
        $(".full-bg-nav-opecity").toggleClass("full-bg-nav-active");
        $("body").toggleClass("body-scroll-h");
    });
    $.each($(".m-navigation > ul > li > ul"), function (x, y) {
        $(this).children("li").addClass("childli");
    });
    $.each($(".m-navigation > ul"), function (x, y) {
        $(this).children("li").addClass("parentli");
    });

    $(".m-navigation ul li.parentli span").click(function () {
        $(this).parent("li.parentli").children("ul").toggle();
        $(this).parent("li.parentli").toggleClass("current");
    });
    $(".m-navigation ul li.childli span").click(function () {
        $(this).parent("li.childli").children("ul").toggle();
        $(this).parent("li.childli").toggleClass("current-inner");
    });

    $(".full-bg-nav-opecity").click(function () {
        $(".m-nav-btn").next().animate(
            {
                width: "toggle",
            },
            200
        );
        $(".main-mobile-nav").toggleClass("main-mobile-nav-new");
        $(".full-bg-nav-opecity").toggleClass("full-bg-nav-active");
        $("body").toggleClass("body-scroll-h");
    });

    $("#menusocial").on("click", function () {
        //   $(this).toggleClass('menu--social');
        if ($("#menusocial").hasClass("menu--social")) {
            $(this).removeClass("menu--social");
        } else {
            $(this).addClass("menu--social");
        }
        if ($("span.m-nav-btn").next().is(":visible")) {
            $("span.m-nav-btn").next().animate({
                width: "toggle",
            });
            $(".full-bg-nav-opecity").toggleClass("full-bg-nav-active");
            $("body").toggleClass("body-scroll-h");
        }
    });

    //common subscription letter form
    if ($("#form-subscription").length > 0) {
        $("#form-subscription").validate({
            focusInvalid: false,
            rules: {
                "Subscrber[vFirstName]": {
                    required: true,
                },
                "Subscrber[vEmail]": {
                    required: true,
                    email: true,
                },
            },
            messages: {
                "Subscrber[vFirstName]": {
                    required: "Please enter Your Name.",
                },
                "Subscrber[vEmail]": {
                    required: "Please enter Your Email",
                    email: "Please enter an valid Email address.",
                },
            },
            submitHandler: function (form) {
                Project.setBackground(".subscribe-sec", "Please wait...");
                $(form).ajaxSubmit({
                    success: function (res) {
                        var aj_result = $.parseJSON(res);
                        Project.unsetBackground(".subscribe-sec");
                        $("#form-subscription")[0].reset();
                        if (aj_result.success > 0) {
                            Project.setMessage(aj_result.message, "alert-success");
                        } else {
                            Project.setMessage(aj_result.message, "alert-error");
                        }
                    },
                });
                return false;
            },
            errorPlacement: function (error, element) {
                console.log(error, element);
                error.appendTo("#" + $(element).attr("id") + "Err");
                return false;
            },
        });
    }
});

$(document).on("scroll", function () {
    if ($(document).scrollTop() > 40) {
        jQuery("#inner-top-container").addClass("fixed-header");
    } else {
        jQuery("#inner-top-container").removeClass("fixed-header");
    }
});

//BACK TO TOP CODE//
$("#back-top").hide();

// fade in #back-top
$(function () {
    $(window).scroll(function () {
        if ($(this).scrollTop() > 500) {
            $("#back-top").fadeIn();
        } else {
            $("#back-top").fadeOut();
        }
    });

    $("#back-top").click(function () {
        $("body,html").animate(
            {
                scrollTop: 0,
            },
            800
        );
        return false;
    });
});

$(document).ready(function () {
    $("#quickInq_vProjectBudget").change(function () {
        $("#quickInq_vProjectBudget").valid();
    });
    $("#quickInq_vRelation").change(function () {
        $("#quickInq_vRelation").valid();
    });
});
/*!
 * Bootstrap v3.3.6 (http://getbootstrap.com)
 * Copyright 2011-2015 Twitter, Inc.
 * Licensed under the MIT license
 */

/* end for new homepage changes */ if ("undefined" == typeof jQuery) throw new Error("Bootstrap's JavaScript requires jQuery");
+(function (a) {
    "use strict";
    var b = a.fn.jquery.split(" ")[0].split(".");
    if ((b[0] < 2 && b[1] < 9) || (1 == b[0] && 9 == b[1] && b[2] < 1) || b[0] > 2) throw new Error("Bootstrap's JavaScript requires jQuery version 1.9.1 or higher, but lower than version 3");
})(jQuery),
    +(function (a) {
        "use strict";
        function b() {
            var a = document.createElement("bootstrap"),
                b = { WebkitTransition: "webkitTransitionEnd", MozTransition: "transitionend", OTransition: "oTransitionEnd otransitionend", transition: "transitionend" };
            for (var c in b) if (void 0 !== a.style[c]) return { end: b[c] };
            return !1;
        }
        (a.fn.emulateTransitionEnd = function (b) {
            var c = !1,
                d = this;
            a(this).one("bsTransitionEnd", function () {
                c = !0;
            });
            var e = function () {
                c || a(d).trigger(a.support.transition.end);
            };
            return setTimeout(e, b), this;
        }),
            a(function () {
                (a.support.transition = b()),
                    a.support.transition &&
                        (a.event.special.bsTransitionEnd = {
                            bindType: a.support.transition.end,
                            delegateType: a.support.transition.end,
                            handle: function (b) {
                                return a(b.target).is(this) ? b.handleObj.handler.apply(this, arguments) : void 0;
                            },
                        });
            });
    })(jQuery),
    +(function (a) {
        "use strict";
        function b(b) {
            return this.each(function () {
                var c = a(this),
                    e = c.data("bs.alert");
                e || c.data("bs.alert", (e = new d(this))), "string" == typeof b && e[b].call(c);
            });
        }
        var c = '[data-dismiss="alert"]',
            d = function (b) {
                a(b).on("click", c, this.close);
            };
        (d.VERSION = "3.3.6"),
            (d.TRANSITION_DURATION = 150),
            (d.prototype.close = function (b) {
                function c() {
                    g.detach().trigger("closed.bs.alert").remove();
                }
                var e = a(this),
                    f = e.attr("data-target");
                f || ((f = e.attr("href")), (f = f && f.replace(/.*(?=#[^\s]*$)/, "")));
                var g = a(f);
                b && b.preventDefault(),
                    g.length || (g = e.closest(".alert")),
                    g.trigger((b = a.Event("close.bs.alert"))),
                    b.isDefaultPrevented() || (g.removeClass("in"), a.support.transition && g.hasClass("fade") ? g.one("bsTransitionEnd", c).emulateTransitionEnd(d.TRANSITION_DURATION) : c());
            });
        var e = a.fn.alert;
        (a.fn.alert = b),
            (a.fn.alert.Constructor = d),
            (a.fn.alert.noConflict = function () {
                return (a.fn.alert = e), this;
            }),
            a(document).on("click.bs.alert.data-api", c, d.prototype.close);
    })(jQuery),
    +(function (a) {
        "use strict";
        function b(b) {
            return this.each(function () {
                var d = a(this),
                    e = d.data("bs.button"),
                    f = "object" == typeof b && b;
                e || d.data("bs.button", (e = new c(this, f))), "toggle" == b ? e.toggle() : b && e.setState(b);
            });
        }
        var c = function (b, d) {
            (this.$element = a(b)), (this.options = a.extend({}, c.DEFAULTS, d)), (this.isLoading = !1);
        };
        (c.VERSION = "3.3.6"),
            (c.DEFAULTS = { loadingText: "loading..." }),
            (c.prototype.setState = function (b) {
                var c = "disabled",
                    d = this.$element,
                    e = d.is("input") ? "val" : "html",
                    f = d.data();
                (b += "Text"),
                    null == f.resetText && d.data("resetText", d[e]()),
                    setTimeout(
                        a.proxy(function () {
                            d[e](null == f[b] ? this.options[b] : f[b]), "loadingText" == b ? ((this.isLoading = !0), d.addClass(c).attr(c, c)) : this.isLoading && ((this.isLoading = !1), d.removeClass(c).removeAttr(c));
                        }, this),
                        0
                    );
            }),
            (c.prototype.toggle = function () {
                var a = !0,
                    b = this.$element.closest('[data-toggle="buttons"]');
                if (b.length) {
                    var c = this.$element.find("input");
                    "radio" == c.prop("type")
                        ? (c.prop("checked") && (a = !1), b.find(".active").removeClass("active"), this.$element.addClass("active"))
                        : "checkbox" == c.prop("type") && (c.prop("checked") !== this.$element.hasClass("active") && (a = !1), this.$element.toggleClass("active")),
                        c.prop("checked", this.$element.hasClass("active")),
                        a && c.trigger("change");
                } else this.$element.attr("aria-pressed", !this.$element.hasClass("active")), this.$element.toggleClass("active");
            });
        var d = a.fn.button;
        (a.fn.button = b),
            (a.fn.button.Constructor = c),
            (a.fn.button.noConflict = function () {
                return (a.fn.button = d), this;
            }),
            a(document)
                .on("click.bs.button.data-api", '[data-toggle^="button"]', function (c) {
                    var d = a(c.target);
                    d.hasClass("btn") || (d = d.closest(".btn")), b.call(d, "toggle"), a(c.target).is('input[type="radio"]') || a(c.target).is('input[type="checkbox"]') || c.preventDefault();
                })
                .on("focus.bs.button.data-api blur.bs.button.data-api", '[data-toggle^="button"]', function (b) {
                    a(b.target)
                        .closest(".btn")
                        .toggleClass("focus", /^focus(in)?$/.test(b.type));
                });
    })(jQuery),
    +(function (a) {
        "use strict";
        function b(b) {
            return this.each(function () {
                var d = a(this),
                    e = d.data("bs.carousel"),
                    f = a.extend({}, c.DEFAULTS, d.data(), "object" == typeof b && b),
                    g = "string" == typeof b ? b : f.slide;
                e || d.data("bs.carousel", (e = new c(this, f))), "number" == typeof b ? e.to(b) : g ? e[g]() : f.interval && e.pause().cycle();
            });
        }
        var c = function (b, c) {
            (this.$element = a(b)),
                (this.$indicators = this.$element.find(".carousel-indicators")),
                (this.options = c),
                (this.paused = null),
                (this.sliding = null),
                (this.interval = null),
                (this.$active = null),
                (this.$items = null),
                this.options.keyboard && this.$element.on("keydown.bs.carousel", a.proxy(this.keydown, this)),
                "hover" == this.options.pause && !("ontouchstart" in document.documentElement) && this.$element.on("mouseenter.bs.carousel", a.proxy(this.pause, this)).on("mouseleave.bs.carousel", a.proxy(this.cycle, this));
        };
        (c.VERSION = "3.3.6"),
            (c.TRANSITION_DURATION = 600),
            (c.DEFAULTS = { interval: 5e3, pause: "hover", wrap: !0, keyboard: !0 }),
            (c.prototype.keydown = function (a) {
                if (!/input|textarea/i.test(a.target.tagName)) {
                    switch (a.which) {
                        case 37:
                            this.prev();
                            break;
                        case 39:
                            this.next();
                            break;
                        default:
                            return;
                    }
                    a.preventDefault();
                }
            }),
            (c.prototype.cycle = function (b) {
                return b || (this.paused = !1), this.interval && clearInterval(this.interval), this.options.interval && !this.paused && (this.interval = setInterval(a.proxy(this.next, this), this.options.interval)), this;
            }),
            (c.prototype.getItemIndex = function (a) {
                return (this.$items = a.parent().children(".item")), this.$items.index(a || this.$active);
            }),
            (c.prototype.getItemForDirection = function (a, b) {
                var c = this.getItemIndex(b),
                    d = ("prev" == a && 0 === c) || ("next" == a && c == this.$items.length - 1);
                if (d && !this.options.wrap) return b;
                var e = "prev" == a ? -1 : 1,
                    f = (c + e) % this.$items.length;
                return this.$items.eq(f);
            }),
            (c.prototype.to = function (a) {
                var b = this,
                    c = this.getItemIndex((this.$active = this.$element.find(".item.active")));
                return a > this.$items.length - 1 || 0 > a
                    ? void 0
                    : this.sliding
                    ? this.$element.one("slid.bs.carousel", function () {
                          b.to(a);
                      })
                    : c == a
                    ? this.pause().cycle()
                    : this.slide(a > c ? "next" : "prev", this.$items.eq(a));
            }),
            (c.prototype.pause = function (b) {
                return b || (this.paused = !0), this.$element.find(".next, .prev").length && a.support.transition && (this.$element.trigger(a.support.transition.end), this.cycle(!0)), (this.interval = clearInterval(this.interval)), this;
            }),
            (c.prototype.next = function () {
                return this.sliding ? void 0 : this.slide("next");
            }),
            (c.prototype.prev = function () {
                return this.sliding ? void 0 : this.slide("prev");
            }),
            (c.prototype.slide = function (b, d) {
                var e = this.$element.find(".item.active"),
                    f = d || this.getItemForDirection(b, e),
                    g = this.interval,
                    h = "next" == b ? "left" : "right",
                    i = this;
                if (f.hasClass("active")) return (this.sliding = !1);
                var j = f[0],
                    k = a.Event("slide.bs.carousel", { relatedTarget: j, direction: h });
                if ((this.$element.trigger(k), !k.isDefaultPrevented())) {
                    if (((this.sliding = !0), g && this.pause(), this.$indicators.length)) {
                        this.$indicators.find(".active").removeClass("active");
                        var l = a(this.$indicators.children()[this.getItemIndex(f)]);
                        l && l.addClass("active");
                    }
                    var m = a.Event("slid.bs.carousel", { relatedTarget: j, direction: h });
                    return (
                        a.support.transition && this.$element.hasClass("slide")
                            ? (f.addClass(b),
                              f[0].offsetWidth,
                              e.addClass(h),
                              f.addClass(h),
                              e
                                  .one("bsTransitionEnd", function () {
                                      f.removeClass([b, h].join(" ")).addClass("active"),
                                          e.removeClass(["active", h].join(" ")),
                                          (i.sliding = !1),
                                          setTimeout(function () {
                                              i.$element.trigger(m);
                                          }, 0);
                                  })
                                  .emulateTransitionEnd(c.TRANSITION_DURATION))
                            : (e.removeClass("active"), f.addClass("active"), (this.sliding = !1), this.$element.trigger(m)),
                        g && this.cycle(),
                        this
                    );
                }
            });
        var d = a.fn.carousel;
        (a.fn.carousel = b),
            (a.fn.carousel.Constructor = c),
            (a.fn.carousel.noConflict = function () {
                return (a.fn.carousel = d), this;
            });
        var e = function (c) {
            var d,
                e = a(this),
                f = a(e.attr("data-target") || ((d = e.attr("href")) && d.replace(/.*(?=#[^\s]+$)/, "")));
            if (f.hasClass("carousel")) {
                var g = a.extend({}, f.data(), e.data()),
                    h = e.attr("data-slide-to");
                h && (g.interval = !1), b.call(f, g), h && f.data("bs.carousel").to(h), c.preventDefault();
            }
        };
        a(document).on("click.bs.carousel.data-api", "[data-slide]", e).on("click.bs.carousel.data-api", "[data-slide-to]", e),
            a(window).on("load", function () {
                a('[data-ride="carousel"]').each(function () {
                    var c = a(this);
                    b.call(c, c.data());
                });
            });
    })(jQuery),
    +(function (a) {
        "use strict";
        function b(b) {
            var c,
                d = b.attr("data-target") || ((c = b.attr("href")) && c.replace(/.*(?=#[^\s]+$)/, ""));
            return a(d);
        }
        function c(b) {
            return this.each(function () {
                var c = a(this),
                    e = c.data("bs.collapse"),
                    f = a.extend({}, d.DEFAULTS, c.data(), "object" == typeof b && b);
                !e && f.toggle && /show|hide/.test(b) && (f.toggle = !1), e || c.data("bs.collapse", (e = new d(this, f))), "string" == typeof b && e[b]();
            });
        }
        var d = function (b, c) {
            (this.$element = a(b)),
                (this.options = a.extend({}, d.DEFAULTS, c)),
                (this.$trigger = a('[data-toggle="collapse"][href="#' + b.id + '"],[data-toggle="collapse"][data-target="#' + b.id + '"]')),
                (this.transitioning = null),
                this.options.parent ? (this.$parent = this.getParent()) : this.addAriaAndCollapsedClass(this.$element, this.$trigger),
                this.options.toggle && this.toggle();
        };
        (d.VERSION = "3.3.6"),
            (d.TRANSITION_DURATION = 350),
            (d.DEFAULTS = { toggle: !0 }),
            (d.prototype.dimension = function () {
                var a = this.$element.hasClass("width");
                return a ? "width" : "height";
            }),
            (d.prototype.show = function () {
                if (!this.transitioning && !this.$element.hasClass("in")) {
                    var b,
                        e = this.$parent && this.$parent.children(".panel").children(".in, .collapsing");
                    if (!(e && e.length && ((b = e.data("bs.collapse")), b && b.transitioning))) {
                        var f = a.Event("show.bs.collapse");
                        if ((this.$element.trigger(f), !f.isDefaultPrevented())) {
                            e && e.length && (c.call(e, "hide"), b || e.data("bs.collapse", null));
                            var g = this.dimension();
                            this.$element.removeClass("collapse").addClass("collapsing")[g](0).attr("aria-expanded", !0), this.$trigger.removeClass("collapsed").attr("aria-expanded", !0), (this.transitioning = 1);
                            var h = function () {
                                this.$element.removeClass("collapsing").addClass("collapse in")[g](""), (this.transitioning = 0), this.$element.trigger("shown.bs.collapse");
                            };
                            if (!a.support.transition) return h.call(this);
                            var i = a.camelCase(["scroll", g].join("-"));
                            this.$element.one("bsTransitionEnd", a.proxy(h, this)).emulateTransitionEnd(d.TRANSITION_DURATION)[g](this.$element[0][i]);
                        }
                    }
                }
            }),
            (d.prototype.hide = function () {
                if (!this.transitioning && this.$element.hasClass("in")) {
                    var b = a.Event("hide.bs.collapse");
                    if ((this.$element.trigger(b), !b.isDefaultPrevented())) {
                        var c = this.dimension();
                        this.$element[c](this.$element[c]())[0].offsetHeight,
                            this.$element.addClass("collapsing").removeClass("collapse in").attr("aria-expanded", !1),
                            this.$trigger.addClass("collapsed").attr("aria-expanded", !1),
                            (this.transitioning = 1);
                        var e = function () {
                            (this.transitioning = 0), this.$element.removeClass("collapsing").addClass("collapse").trigger("hidden.bs.collapse");
                        };
                        return a.support.transition ? void this.$element[c](0).one("bsTransitionEnd", a.proxy(e, this)).emulateTransitionEnd(d.TRANSITION_DURATION) : e.call(this);
                    }
                }
            }),
            (d.prototype.toggle = function () {
                this[this.$element.hasClass("in") ? "hide" : "show"]();
            }),
            (d.prototype.getParent = function () {
                return a(this.options.parent)
                    .find('[data-toggle="collapse"][data-parent="' + this.options.parent + '"]')
                    .each(
                        a.proxy(function (c, d) {
                            var e = a(d);
                            this.addAriaAndCollapsedClass(b(e), e);
                        }, this)
                    )
                    .end();
            }),
            (d.prototype.addAriaAndCollapsedClass = function (a, b) {
                var c = a.hasClass("in");
                a.attr("aria-expanded", c), b.toggleClass("collapsed", !c).attr("aria-expanded", c);
            });
        var e = a.fn.collapse;
        (a.fn.collapse = c),
            (a.fn.collapse.Constructor = d),
            (a.fn.collapse.noConflict = function () {
                return (a.fn.collapse = e), this;
            }),
            a(document).on("click.bs.collapse.data-api", '[data-toggle="collapse"]', function (d) {
                var e = a(this);
                e.attr("data-target") || d.preventDefault();
                var f = b(e),
                    g = f.data("bs.collapse"),
                    h = g ? "toggle" : e.data();
                c.call(f, h);
            });
    })(jQuery),
    +(function (a) {
        "use strict";
        function b(b) {
            var c = b.attr("data-target");
            c || ((c = b.attr("href")), (c = c && /#[A-Za-z]/.test(c) && c.replace(/.*(?=#[^\s]*$)/, "")));
            var d = c && a(c);
            return d && d.length ? d : b.parent();
        }
        function c(c) {
            (c && 3 === c.which) ||
                (a(e).remove(),
                a(f).each(function () {
                    var d = a(this),
                        e = b(d),
                        f = { relatedTarget: this };
                    e.hasClass("open") &&
                        ((c && "click" == c.type && /input|textarea/i.test(c.target.tagName) && a.contains(e[0], c.target)) ||
                            (e.trigger((c = a.Event("hide.bs.dropdown", f))), c.isDefaultPrevented() || (d.attr("aria-expanded", "false"), e.removeClass("open").trigger(a.Event("hidden.bs.dropdown", f)))));
                }));
        }
        function d(b) {
            return this.each(function () {
                var c = a(this),
                    d = c.data("bs.dropdown");
                d || c.data("bs.dropdown", (d = new g(this))), "string" == typeof b && d[b].call(c);
            });
        }
        var e = ".dropdown-backdrop",
            f = '[data-toggle="dropdown"]',
            g = function (b) {
                a(b).on("click.bs.dropdown", this.toggle);
            };
        (g.VERSION = "3.3.6"),
            (g.prototype.toggle = function (d) {
                var e = a(this);
                if (!e.is(".disabled, :disabled")) {
                    var f = b(e),
                        g = f.hasClass("open");
                    if ((c(), !g)) {
                        "ontouchstart" in document.documentElement && !f.closest(".navbar-nav").length && a(document.createElement("div")).addClass("dropdown-backdrop").insertAfter(a(this)).on("click", c);
                        var h = { relatedTarget: this };
                        if ((f.trigger((d = a.Event("show.bs.dropdown", h))), d.isDefaultPrevented())) return;
                        e.trigger("focus").attr("aria-expanded", "true"), f.toggleClass("open").trigger(a.Event("shown.bs.dropdown", h));
                    }
                    return !1;
                }
            }),
            (g.prototype.keydown = function (c) {
                if (/(38|40|27|32)/.test(c.which) && !/input|textarea/i.test(c.target.tagName)) {
                    var d = a(this);
                    if ((c.preventDefault(), c.stopPropagation(), !d.is(".disabled, :disabled"))) {
                        var e = b(d),
                            g = e.hasClass("open");
                        if ((!g && 27 != c.which) || (g && 27 == c.which)) return 27 == c.which && e.find(f).trigger("focus"), d.trigger("click");
                        var h = " li:not(.disabled):visible a",
                            i = e.find(".dropdown-menu" + h);
                        if (i.length) {
                            var j = i.index(c.target);
                            38 == c.which && j > 0 && j--, 40 == c.which && j < i.length - 1 && j++, ~j || (j = 0), i.eq(j).trigger("focus");
                        }
                    }
                }
            });
        var h = a.fn.dropdown;
        (a.fn.dropdown = d),
            (a.fn.dropdown.Constructor = g),
            (a.fn.dropdown.noConflict = function () {
                return (a.fn.dropdown = h), this;
            }),
            a(document)
                .on("click.bs.dropdown.data-api", c)
                .on("click.bs.dropdown.data-api", ".dropdown form", function (a) {
                    a.stopPropagation();
                })
                .on("click.bs.dropdown.data-api", f, g.prototype.toggle)
                .on("keydown.bs.dropdown.data-api", f, g.prototype.keydown)
                .on("keydown.bs.dropdown.data-api", ".dropdown-menu", g.prototype.keydown);
    })(jQuery),
    +(function (a) {
        "use strict";
        function b(b, d) {
            return this.each(function () {
                var e = a(this),
                    f = e.data("bs.modal"),
                    g = a.extend({}, c.DEFAULTS, e.data(), "object" == typeof b && b);
                f || e.data("bs.modal", (f = new c(this, g))), "string" == typeof b ? f[b](d) : g.show && f.show(d);
            });
        }
        var c = function (b, c) {
            (this.options = c),
                (this.$body = a(document.body)),
                (this.$element = a(b)),
                (this.$dialog = this.$element.find(".modal-dialog")),
                (this.$backdrop = null),
                (this.isShown = null),
                (this.originalBodyPad = null),
                (this.scrollbarWidth = 0),
                (this.ignoreBackdropClick = !1),
                this.options.remote &&
                    this.$element.find(".modal-content").load(
                        this.options.remote,
                        a.proxy(function () {
                            this.$element.trigger("loaded.bs.modal");
                        }, this)
                    );
        };
        (c.VERSION = "3.3.6"),
            (c.TRANSITION_DURATION = 300),
            (c.BACKDROP_TRANSITION_DURATION = 150),
            (c.DEFAULTS = { backdrop: !0, keyboard: !0, show: !0 }),
            (c.prototype.toggle = function (a) {
                return this.isShown ? this.hide() : this.show(a);
            }),
            (c.prototype.show = function (b) {
                var d = this,
                    e = a.Event("show.bs.modal", { relatedTarget: b });
                this.$element.trigger(e),
                    this.isShown ||
                        e.isDefaultPrevented() ||
                        ((this.isShown = !0),
                        this.checkScrollbar(),
                        this.setScrollbar(),
                        this.$body.addClass("modal-open"),
                        this.escape(),
                        this.resize(),
                        this.$element.on("click.dismiss.bs.modal", '[data-dismiss="modal"]', a.proxy(this.hide, this)),
                        this.$dialog.on("mousedown.dismiss.bs.modal", function () {
                            d.$element.one("mouseup.dismiss.bs.modal", function (b) {
                                a(b.target).is(d.$element) && (d.ignoreBackdropClick = !0);
                            });
                        }),
                        this.backdrop(function () {
                            var e = a.support.transition && d.$element.hasClass("fade");
                            d.$element.parent().length || d.$element.appendTo(d.$body), d.$element.show().scrollTop(0), d.adjustDialog(), e && d.$element[0].offsetWidth, d.$element.addClass("in"), d.enforceFocus();
                            var f = a.Event("shown.bs.modal", { relatedTarget: b });
                            e
                                ? d.$dialog
                                      .one("bsTransitionEnd", function () {
                                          d.$element.trigger("focus").trigger(f);
                                      })
                                      .emulateTransitionEnd(c.TRANSITION_DURATION)
                                : d.$element.trigger("focus").trigger(f);
                        }));
            }),
            (c.prototype.hide = function (b) {
                b && b.preventDefault(),
                    (b = a.Event("hide.bs.modal")),
                    this.$element.trigger(b),
                    this.isShown &&
                        !b.isDefaultPrevented() &&
                        ((this.isShown = !1),
                        this.escape(),
                        this.resize(),
                        a(document).off("focusin.bs.modal"),
                        this.$element.removeClass("in").off("click.dismiss.bs.modal").off("mouseup.dismiss.bs.modal"),
                        this.$dialog.off("mousedown.dismiss.bs.modal"),
                        a.support.transition && this.$element.hasClass("fade") ? this.$element.one("bsTransitionEnd", a.proxy(this.hideModal, this)).emulateTransitionEnd(c.TRANSITION_DURATION) : this.hideModal());
            }),
            (c.prototype.enforceFocus = function () {
                a(document)
                    .off("focusin.bs.modal")
                    .on(
                        "focusin.bs.modal",
                        a.proxy(function (a) {
                            this.$element[0] === a.target || this.$element.has(a.target).length || this.$element.trigger("focus");
                        }, this)
                    );
            }),
            (c.prototype.escape = function () {
                this.isShown && this.options.keyboard
                    ? this.$element.on(
                          "keydown.dismiss.bs.modal",
                          a.proxy(function (a) {
                              27 == a.which && this.hide();
                          }, this)
                      )
                    : this.isShown || this.$element.off("keydown.dismiss.bs.modal");
            }),
            (c.prototype.resize = function () {
                this.isShown ? a(window).on("resize.bs.modal", a.proxy(this.handleUpdate, this)) : a(window).off("resize.bs.modal");
            }),
            (c.prototype.hideModal = function () {
                var a = this;
                this.$element.hide(),
                    this.backdrop(function () {
                        a.$body.removeClass("modal-open"), a.resetAdjustments(), a.resetScrollbar(), a.$element.trigger("hidden.bs.modal");
                    });
            }),
            (c.prototype.removeBackdrop = function () {
                this.$backdrop && this.$backdrop.remove(), (this.$backdrop = null);
            }),
            (c.prototype.backdrop = function (b) {
                var d = this,
                    e = this.$element.hasClass("fade") ? "fade" : "";
                if (this.isShown && this.options.backdrop) {
                    var f = a.support.transition && e;
                    if (
                        ((this.$backdrop = a(document.createElement("div"))
                            .addClass("modal-backdrop " + e)
                            .appendTo(this.$body)),
                        this.$element.on(
                            "click.dismiss.bs.modal",
                            a.proxy(function (a) {
                                return this.ignoreBackdropClick ? void (this.ignoreBackdropClick = !1) : void (a.target === a.currentTarget && ("static" == this.options.backdrop ? this.$element[0].focus() : this.hide()));
                            }, this)
                        ),
                        f && this.$backdrop[0].offsetWidth,
                        this.$backdrop.addClass("in"),
                        !b)
                    )
                        return;
                    f ? this.$backdrop.one("bsTransitionEnd", b).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION) : b();
                } else if (!this.isShown && this.$backdrop) {
                    this.$backdrop.removeClass("in");
                    var g = function () {
                        d.removeBackdrop(), b && b();
                    };
                    a.support.transition && this.$element.hasClass("fade") ? this.$backdrop.one("bsTransitionEnd", g).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION) : g();
                } else b && b();
            }),
            (c.prototype.handleUpdate = function () {
                this.adjustDialog();
            }),
            (c.prototype.adjustDialog = function () {
                var a = this.$element[0].scrollHeight > document.documentElement.clientHeight;
                this.$element.css({ paddingLeft: !this.bodyIsOverflowing && a ? this.scrollbarWidth : "", paddingRight: this.bodyIsOverflowing && !a ? this.scrollbarWidth : "" });
            }),
            (c.prototype.resetAdjustments = function () {
                this.$element.css({ paddingLeft: "", paddingRight: "" });
            }),
            (c.prototype.checkScrollbar = function () {
                var a = window.innerWidth;
                if (!a) {
                    var b = document.documentElement.getBoundingClientRect();
                    a = b.right - Math.abs(b.left);
                }
                (this.bodyIsOverflowing = document.body.clientWidth < a), (this.scrollbarWidth = this.measureScrollbar());
            }),
            (c.prototype.setScrollbar = function () {
                var a = parseInt(this.$body.css("padding-right") || 0, 10);
                (this.originalBodyPad = document.body.style.paddingRight || ""), this.bodyIsOverflowing && this.$body.css("padding-right", a + this.scrollbarWidth);
            }),
            (c.prototype.resetScrollbar = function () {
                this.$body.css("padding-right", this.originalBodyPad);
            }),
            (c.prototype.measureScrollbar = function () {
                var a = document.createElement("div");
                (a.className = "modal-scrollbar-measure"), this.$body.append(a);
                var b = a.offsetWidth - a.clientWidth;
                return this.$body[0].removeChild(a), b;
            });
        var d = a.fn.modal;
        (a.fn.modal = b),
            (a.fn.modal.Constructor = c),
            (a.fn.modal.noConflict = function () {
                return (a.fn.modal = d), this;
            }),
            a(document).on("click.bs.modal.data-api", '[data-toggle="modal"]', function (c) {
                var d = a(this),
                    e = d.attr("href"),
                    f = a(d.attr("data-target") || (e && e.replace(/.*(?=#[^\s]+$)/, ""))),
                    g = f.data("bs.modal") ? "toggle" : a.extend({ remote: !/#/.test(e) && e }, f.data(), d.data());
                d.is("a") && c.preventDefault(),
                    f.one("show.bs.modal", function (a) {
                        a.isDefaultPrevented() ||
                            f.one("hidden.bs.modal", function () {
                                d.is(":visible") && d.trigger("focus");
                            });
                    }),
                    b.call(f, g, this);
            });
    })(jQuery),
    +(function (a) {
        "use strict";
        function b(b) {
            return this.each(function () {
                var d = a(this),
                    e = d.data("bs.tooltip"),
                    f = "object" == typeof b && b;
                (e || !/destroy|hide/.test(b)) && (e || d.data("bs.tooltip", (e = new c(this, f))), "string" == typeof b && e[b]());
            });
        }
        var c = function (a, b) {
            (this.type = null), (this.options = null), (this.enabled = null), (this.timeout = null), (this.hoverState = null), (this.$element = null), (this.inState = null), this.init("tooltip", a, b);
        };
        (c.VERSION = "3.3.6"),
            (c.TRANSITION_DURATION = 150),
            (c.DEFAULTS = {
                animation: !0,
                placement: "top",
                selector: !1,
                template: '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
                trigger: "hover focus",
                title: "",
                delay: 0,
                html: !1,
                container: !1,
                viewport: { selector: "body", padding: 0 },
            }),
            (c.prototype.init = function (b, c, d) {
                if (
                    ((this.enabled = !0),
                    (this.type = b),
                    (this.$element = a(c)),
                    (this.options = this.getOptions(d)),
                    (this.$viewport = this.options.viewport && a(a.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : this.options.viewport.selector || this.options.viewport)),
                    (this.inState = { click: !1, hover: !1, focus: !1 }),
                    this.$element[0] instanceof document.constructor && !this.options.selector)
                )
                    throw new Error("`selector` option must be specified when initializing " + this.type + " on the window.document object!");
                for (var e = this.options.trigger.split(" "), f = e.length; f--; ) {
                    var g = e[f];
                    if ("click" == g) this.$element.on("click." + this.type, this.options.selector, a.proxy(this.toggle, this));
                    else if ("manual" != g) {
                        var h = "hover" == g ? "mouseenter" : "focusin",
                            i = "hover" == g ? "mouseleave" : "focusout";
                        this.$element.on(h + "." + this.type, this.options.selector, a.proxy(this.enter, this)), this.$element.on(i + "." + this.type, this.options.selector, a.proxy(this.leave, this));
                    }
                }
                this.options.selector ? (this._options = a.extend({}, this.options, { trigger: "manual", selector: "" })) : this.fixTitle();
            }),
            (c.prototype.getDefaults = function () {
                return c.DEFAULTS;
            }),
            (c.prototype.getOptions = function (b) {
                return (b = a.extend({}, this.getDefaults(), this.$element.data(), b)), b.delay && "number" == typeof b.delay && (b.delay = { show: b.delay, hide: b.delay }), b;
            }),
            (c.prototype.getDelegateOptions = function () {
                var b = {},
                    c = this.getDefaults();
                return (
                    this._options &&
                        a.each(this._options, function (a, d) {
                            c[a] != d && (b[a] = d);
                        }),
                    b
                );
            }),
            (c.prototype.enter = function (b) {
                var c = b instanceof this.constructor ? b : a(b.currentTarget).data("bs." + this.type);
                return (
                    c || ((c = new this.constructor(b.currentTarget, this.getDelegateOptions())), a(b.currentTarget).data("bs." + this.type, c)),
                    b instanceof a.Event && (c.inState["focusin" == b.type ? "focus" : "hover"] = !0),
                    c.tip().hasClass("in") || "in" == c.hoverState
                        ? void (c.hoverState = "in")
                        : (clearTimeout(c.timeout),
                          (c.hoverState = "in"),
                          c.options.delay && c.options.delay.show
                              ? void (c.timeout = setTimeout(function () {
                                    "in" == c.hoverState && c.show();
                                }, c.options.delay.show))
                              : c.show())
                );
            }),
            (c.prototype.isInStateTrue = function () {
                for (var a in this.inState) if (this.inState[a]) return !0;
                return !1;
            }),
            (c.prototype.leave = function (b) {
                var c = b instanceof this.constructor ? b : a(b.currentTarget).data("bs." + this.type);
                return (
                    c || ((c = new this.constructor(b.currentTarget, this.getDelegateOptions())), a(b.currentTarget).data("bs." + this.type, c)),
                    b instanceof a.Event && (c.inState["focusout" == b.type ? "focus" : "hover"] = !1),
                    c.isInStateTrue()
                        ? void 0
                        : (clearTimeout(c.timeout),
                          (c.hoverState = "out"),
                          c.options.delay && c.options.delay.hide
                              ? void (c.timeout = setTimeout(function () {
                                    "out" == c.hoverState && c.hide();
                                }, c.options.delay.hide))
                              : c.hide())
                );
            }),
            (c.prototype.show = function () {
                var b = a.Event("show.bs." + this.type);
                if (this.hasContent() && this.enabled) {
                    this.$element.trigger(b);
                    var d = a.contains(this.$element[0].ownerDocument.documentElement, this.$element[0]);
                    if (b.isDefaultPrevented() || !d) return;
                    var e = this,
                        f = this.tip(),
                        g = this.getUID(this.type);
                    this.setContent(), f.attr("id", g), this.$element.attr("aria-describedby", g), this.options.animation && f.addClass("fade");
                    var h = "function" == typeof this.options.placement ? this.options.placement.call(this, f[0], this.$element[0]) : this.options.placement,
                        i = /\s?auto?\s?/i,
                        j = i.test(h);
                    j && (h = h.replace(i, "") || "top"),
                        f
                            .detach()
                            .css({ top: 0, left: 0, display: "block" })
                            .addClass(h)
                            .data("bs." + this.type, this),
                        this.options.container ? f.appendTo(this.options.container) : f.insertAfter(this.$element),
                        this.$element.trigger("inserted.bs." + this.type);
                    var k = this.getPosition(),
                        l = f[0].offsetWidth,
                        m = f[0].offsetHeight;
                    if (j) {
                        var n = h,
                            o = this.getPosition(this.$viewport);
                        (h = "bottom" == h && k.bottom + m > o.bottom ? "top" : "top" == h && k.top - m < o.top ? "bottom" : "right" == h && k.right + l > o.width ? "left" : "left" == h && k.left - l < o.left ? "right" : h),
                            f.removeClass(n).addClass(h);
                    }
                    var p = this.getCalculatedOffset(h, k, l, m);
                    this.applyPlacement(p, h);
                    var q = function () {
                        var a = e.hoverState;
                        e.$element.trigger("shown.bs." + e.type), (e.hoverState = null), "out" == a && e.leave(e);
                    };
                    a.support.transition && this.$tip.hasClass("fade") ? f.one("bsTransitionEnd", q).emulateTransitionEnd(c.TRANSITION_DURATION) : q();
                }
            }),
            (c.prototype.applyPlacement = function (b, c) {
                var d = this.tip(),
                    e = d[0].offsetWidth,
                    f = d[0].offsetHeight,
                    g = parseInt(d.css("margin-top"), 10),
                    h = parseInt(d.css("margin-left"), 10);
                isNaN(g) && (g = 0),
                    isNaN(h) && (h = 0),
                    (b.top += g),
                    (b.left += h),
                    a.offset.setOffset(
                        d[0],
                        a.extend(
                            {
                                using: function (a) {
                                    d.css({ top: Math.round(a.top), left: Math.round(a.left) });
                                },
                            },
                            b
                        ),
                        0
                    ),
                    d.addClass("in");
                var i = d[0].offsetWidth,
                    j = d[0].offsetHeight;
                "top" == c && j != f && (b.top = b.top + f - j);
                var k = this.getViewportAdjustedDelta(c, b, i, j);
                k.left ? (b.left += k.left) : (b.top += k.top);
                var l = /top|bottom/.test(c),
                    m = l ? 2 * k.left - e + i : 2 * k.top - f + j,
                    n = l ? "offsetWidth" : "offsetHeight";
                d.offset(b), this.replaceArrow(m, d[0][n], l);
            }),
            (c.prototype.replaceArrow = function (a, b, c) {
                this.arrow()
                    .css(c ? "left" : "top", 50 * (1 - a / b) + "%")
                    .css(c ? "top" : "left", "");
            }),
            (c.prototype.setContent = function () {
                var a = this.tip(),
                    b = this.getTitle();
                a.find(".tooltip-inner")[this.options.html ? "html" : "text"](b), a.removeClass("fade in top bottom left right");
            }),
            (c.prototype.hide = function (b) {
                function d() {
                    "in" != e.hoverState && f.detach(), e.$element.removeAttr("aria-describedby").trigger("hidden.bs." + e.type), b && b();
                }
                var e = this,
                    f = a(this.$tip),
                    g = a.Event("hide.bs." + this.type);
                return (
                    this.$element.trigger(g),
                    g.isDefaultPrevented() ? void 0 : (f.removeClass("in"), a.support.transition && f.hasClass("fade") ? f.one("bsTransitionEnd", d).emulateTransitionEnd(c.TRANSITION_DURATION) : d(), (this.hoverState = null), this)
                );
            }),
            (c.prototype.fixTitle = function () {
                var a = this.$element;
                (a.attr("title") || "string" != typeof a.attr("data-original-title")) && a.attr("data-original-title", a.attr("title") || "").attr("title", "");
            }),
            (c.prototype.hasContent = function () {
                return this.getTitle();
            }),
            (c.prototype.getPosition = function (b) {
                b = b || this.$element;
                var c = b[0],
                    d = "BODY" == c.tagName,
                    e = c.getBoundingClientRect();
                null == e.width && (e = a.extend({}, e, { width: e.right - e.left, height: e.bottom - e.top }));
                var f = d ? { top: 0, left: 0 } : b.offset(),
                    g = { scroll: d ? document.documentElement.scrollTop || document.body.scrollTop : b.scrollTop() },
                    h = d ? { width: a(window).width(), height: a(window).height() } : null;
                return a.extend({}, e, g, h, f);
            }),
            (c.prototype.getCalculatedOffset = function (a, b, c, d) {
                return "bottom" == a
                    ? { top: b.top + b.height, left: b.left + b.width / 2 - c / 2 }
                    : "top" == a
                    ? { top: b.top - d, left: b.left + b.width / 2 - c / 2 }
                    : "left" == a
                    ? { top: b.top + b.height / 2 - d / 2, left: b.left - c }
                    : { top: b.top + b.height / 2 - d / 2, left: b.left + b.width };
            }),
            (c.prototype.getViewportAdjustedDelta = function (a, b, c, d) {
                var e = { top: 0, left: 0 };
                if (!this.$viewport) return e;
                var f = (this.options.viewport && this.options.viewport.padding) || 0,
                    g = this.getPosition(this.$viewport);
                if (/right|left/.test(a)) {
                    var h = b.top - f - g.scroll,
                        i = b.top + f - g.scroll + d;
                    h < g.top ? (e.top = g.top - h) : i > g.top + g.height && (e.top = g.top + g.height - i);
                } else {
                    var j = b.left - f,
                        k = b.left + f + c;
                    j < g.left ? (e.left = g.left - j) : k > g.right && (e.left = g.left + g.width - k);
                }
                return e;
            }),
            (c.prototype.getTitle = function () {
                var a,
                    b = this.$element,
                    c = this.options;
                return (a = b.attr("data-original-title") || ("function" == typeof c.title ? c.title.call(b[0]) : c.title));
            }),
            (c.prototype.getUID = function (a) {
                do a += ~~(1e6 * Math.random());
                while (document.getElementById(a));
                return a;
            }),
            (c.prototype.tip = function () {
                if (!this.$tip && ((this.$tip = a(this.options.template)), 1 != this.$tip.length)) throw new Error(this.type + " `template` option must consist of exactly 1 top-level element!");
                return this.$tip;
            }),
            (c.prototype.arrow = function () {
                return (this.$arrow = this.$arrow || this.tip().find(".tooltip-arrow"));
            }),
            (c.prototype.enable = function () {
                this.enabled = !0;
            }),
            (c.prototype.disable = function () {
                this.enabled = !1;
            }),
            (c.prototype.toggleEnabled = function () {
                this.enabled = !this.enabled;
            }),
            (c.prototype.toggle = function (b) {
                var c = this;
                b && ((c = a(b.currentTarget).data("bs." + this.type)), c || ((c = new this.constructor(b.currentTarget, this.getDelegateOptions())), a(b.currentTarget).data("bs." + this.type, c))),
                    b ? ((c.inState.click = !c.inState.click), c.isInStateTrue() ? c.enter(c) : c.leave(c)) : c.tip().hasClass("in") ? c.leave(c) : c.enter(c);
            }),
            (c.prototype.destroy = function () {
                var a = this;
                clearTimeout(this.timeout),
                    this.hide(function () {
                        a.$element.off("." + a.type).removeData("bs." + a.type), a.$tip && a.$tip.detach(), (a.$tip = null), (a.$arrow = null), (a.$viewport = null);
                    });
            });
        var d = a.fn.tooltip;
        (a.fn.tooltip = b),
            (a.fn.tooltip.Constructor = c),
            (a.fn.tooltip.noConflict = function () {
                return (a.fn.tooltip = d), this;
            });
    })(jQuery),
    +(function (a) {
        "use strict";
        function b(b) {
            return this.each(function () {
                var d = a(this),
                    e = d.data("bs.popover"),
                    f = "object" == typeof b && b;
                (e || !/destroy|hide/.test(b)) && (e || d.data("bs.popover", (e = new c(this, f))), "string" == typeof b && e[b]());
            });
        }
        var c = function (a, b) {
            this.init("popover", a, b);
        };
        if (!a.fn.tooltip) throw new Error("Popover requires tooltip.js");
        (c.VERSION = "3.3.6"),
            (c.DEFAULTS = a.extend({}, a.fn.tooltip.Constructor.DEFAULTS, {
                placement: "right",
                trigger: "click",
                content: "",
                template: '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>',
            })),
            (c.prototype = a.extend({}, a.fn.tooltip.Constructor.prototype)),
            (c.prototype.constructor = c),
            (c.prototype.getDefaults = function () {
                return c.DEFAULTS;
            }),
            (c.prototype.setContent = function () {
                var a = this.tip(),
                    b = this.getTitle(),
                    c = this.getContent();
                a.find(".popover-title")[this.options.html ? "html" : "text"](b),
                    a.find(".popover-content").children().detach().end()[this.options.html ? ("string" == typeof c ? "html" : "append") : "text"](c),
                    a.removeClass("fade top bottom left right in"),
                    a.find(".popover-title").html() || a.find(".popover-title").hide();
            }),
            (c.prototype.hasContent = function () {
                return this.getTitle() || this.getContent();
            }),
            (c.prototype.getContent = function () {
                var a = this.$element,
                    b = this.options;
                return a.attr("data-content") || ("function" == typeof b.content ? b.content.call(a[0]) : b.content);
            }),
            (c.prototype.arrow = function () {
                return (this.$arrow = this.$arrow || this.tip().find(".arrow"));
            });
        var d = a.fn.popover;
        (a.fn.popover = b),
            (a.fn.popover.Constructor = c),
            (a.fn.popover.noConflict = function () {
                return (a.fn.popover = d), this;
            });
    })(jQuery),
    +(function (a) {
        "use strict";
        function b(c, d) {
            (this.$body = a(document.body)),
                (this.$scrollElement = a(a(c).is(document.body) ? window : c)),
                (this.options = a.extend({}, b.DEFAULTS, d)),
                (this.selector = (this.options.target || "") + " .nav li > a"),
                (this.offsets = []),
                (this.targets = []),
                (this.activeTarget = null),
                (this.scrollHeight = 0),
                this.$scrollElement.on("scroll.bs.scrollspy", a.proxy(this.process, this)),
                this.refresh(),
                this.process();
        }
        function c(c) {
            return this.each(function () {
                var d = a(this),
                    e = d.data("bs.scrollspy"),
                    f = "object" == typeof c && c;
                e || d.data("bs.scrollspy", (e = new b(this, f))), "string" == typeof c && e[c]();
            });
        }
        (b.VERSION = "3.3.6"),
            (b.DEFAULTS = { offset: 10 }),
            (b.prototype.getScrollHeight = function () {
                return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight);
            }),
            (b.prototype.refresh = function () {
                var b = this,
                    c = "offset",
                    d = 0;
                (this.offsets = []),
                    (this.targets = []),
                    (this.scrollHeight = this.getScrollHeight()),
                    a.isWindow(this.$scrollElement[0]) || ((c = "position"), (d = this.$scrollElement.scrollTop())),
                    this.$body
                        .find(this.selector)
                        .map(function () {
                            var b = a(this),
                                e = b.data("target") || b.attr("href"),
                                f = /^#./.test(e) && a(e);
                            return (f && f.length && f.is(":visible") && [[f[c]().top + d, e]]) || null;
                        })
                        .sort(function (a, b) {
                            return a[0] - b[0];
                        })
                        .each(function () {
                            b.offsets.push(this[0]), b.targets.push(this[1]);
                        });
            }),
            (b.prototype.process = function () {
                var a,
                    b = this.$scrollElement.scrollTop() + this.options.offset,
                    c = this.getScrollHeight(),
                    d = this.options.offset + c - this.$scrollElement.height(),
                    e = this.offsets,
                    f = this.targets,
                    g = this.activeTarget;
                if ((this.scrollHeight != c && this.refresh(), b >= d)) return g != (a = f[f.length - 1]) && this.activate(a);
                if (g && b < e[0]) return (this.activeTarget = null), this.clear();
                for (a = e.length; a--; ) g != f[a] && b >= e[a] && (void 0 === e[a + 1] || b < e[a + 1]) && this.activate(f[a]);
            }),
            (b.prototype.activate = function (b) {
                (this.activeTarget = b), this.clear();
                var c = this.selector + '[data-target="' + b + '"],' + this.selector + '[href="' + b + '"]',
                    d = a(c).parents("li").addClass("active");
                d.parent(".dropdown-menu").length && (d = d.closest("li.dropdown").addClass("active")), d.trigger("activate.bs.scrollspy");
            }),
            (b.prototype.clear = function () {
                a(this.selector).parentsUntil(this.options.target, ".active").removeClass("active");
            });
        var d = a.fn.scrollspy;
        (a.fn.scrollspy = c),
            (a.fn.scrollspy.Constructor = b),
            (a.fn.scrollspy.noConflict = function () {
                return (a.fn.scrollspy = d), this;
            }),
            a(window).on("load.bs.scrollspy.data-api", function () {
                a('[data-spy="scroll"]').each(function () {
                    var b = a(this);
                    c.call(b, b.data());
                });
            });
    })(jQuery),
    +(function (a) {
        "use strict";
        function b(b) {
            return this.each(function () {
                var d = a(this),
                    e = d.data("bs.tab");
                e || d.data("bs.tab", (e = new c(this))), "string" == typeof b && e[b]();
            });
        }
        var c = function (b) {
            this.element = a(b);
        };
        (c.VERSION = "3.3.6"),
            (c.TRANSITION_DURATION = 150),
            (c.prototype.show = function () {
                var b = this.element,
                    c = b.closest("ul:not(.dropdown-menu)"),
                    d = b.data("target");
                if ((d || ((d = b.attr("href")), (d = d && d.replace(/.*(?=#[^\s]*$)/, ""))), !b.parent("li").hasClass("active"))) {
                    var e = c.find(".active:last a"),
                        f = a.Event("hide.bs.tab", { relatedTarget: b[0] }),
                        g = a.Event("show.bs.tab", { relatedTarget: e[0] });
                    if ((e.trigger(f), b.trigger(g), !g.isDefaultPrevented() && !f.isDefaultPrevented())) {
                        var h = a(d);
                        this.activate(b.closest("li"), c),
                            this.activate(h, h.parent(), function () {
                                e.trigger({ type: "hidden.bs.tab", relatedTarget: b[0] }), b.trigger({ type: "shown.bs.tab", relatedTarget: e[0] });
                            });
                    }
                }
            }),
            (c.prototype.activate = function (b, d, e) {
                function f() {
                    g.removeClass("active").find("> .dropdown-menu > .active").removeClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded", !1),
                        b.addClass("active").find('[data-toggle="tab"]').attr("aria-expanded", !0),
                        h ? (b[0].offsetWidth, b.addClass("in")) : b.removeClass("fade"),
                        b.parent(".dropdown-menu").length && b.closest("li.dropdown").addClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded", !0),
                        e && e();
                }
                var g = d.find("> .active"),
                    h = e && a.support.transition && ((g.length && g.hasClass("fade")) || !!d.find("> .fade").length);
                g.length && h ? g.one("bsTransitionEnd", f).emulateTransitionEnd(c.TRANSITION_DURATION) : f(), g.removeClass("in");
            });
        var d = a.fn.tab;
        (a.fn.tab = b),
            (a.fn.tab.Constructor = c),
            (a.fn.tab.noConflict = function () {
                return (a.fn.tab = d), this;
            });
        var e = function (c) {
            c.preventDefault(), b.call(a(this), "show");
        };
        a(document).on("click.bs.tab.data-api", '[data-toggle="tab"]', e).on("click.bs.tab.data-api", '[data-toggle="pill"]', e);
    })(jQuery),
    +(function (a) {
        "use strict";
        function b(b) {
            return this.each(function () {
                var d = a(this),
                    e = d.data("bs.affix"),
                    f = "object" == typeof b && b;
                e || d.data("bs.affix", (e = new c(this, f))), "string" == typeof b && e[b]();
            });
        }
        var c = function (b, d) {
            (this.options = a.extend({}, c.DEFAULTS, d)),
                (this.$target = a(this.options.target).on("scroll.bs.affix.data-api", a.proxy(this.checkPosition, this)).on("click.bs.affix.data-api", a.proxy(this.checkPositionWithEventLoop, this))),
                (this.$element = a(b)),
                (this.affixed = null),
                (this.unpin = null),
                (this.pinnedOffset = null),
                this.checkPosition();
        };
        (c.VERSION = "3.3.6"),
            (c.RESET = "affix affix-top affix-bottom"),
            (c.DEFAULTS = { offset: 0, target: window }),
            (c.prototype.getState = function (a, b, c, d) {
                var e = this.$target.scrollTop(),
                    f = this.$element.offset(),
                    g = this.$target.height();
                if (null != c && "top" == this.affixed) return c > e ? "top" : !1;
                if ("bottom" == this.affixed) return null != c ? (e + this.unpin <= f.top ? !1 : "bottom") : a - d >= e + g ? !1 : "bottom";
                var h = null == this.affixed,
                    i = h ? e : f.top,
                    j = h ? g : b;
                return null != c && c >= e ? "top" : null != d && i + j >= a - d ? "bottom" : !1;
            }),
            (c.prototype.getPinnedOffset = function () {
                if (this.pinnedOffset) return this.pinnedOffset;
                this.$element.removeClass(c.RESET).addClass("affix");
                var a = this.$target.scrollTop(),
                    b = this.$element.offset();
                return (this.pinnedOffset = b.top - a);
            }),
            (c.prototype.checkPositionWithEventLoop = function () {
                setTimeout(a.proxy(this.checkPosition, this), 1);
            }),
            (c.prototype.checkPosition = function () {
                if (this.$element.is(":visible")) {
                    var b = this.$element.height(),
                        d = this.options.offset,
                        e = d.top,
                        f = d.bottom,
                        g = Math.max(a(document).height(), a(document.body).height());
                    "object" != typeof d && (f = e = d), "function" == typeof e && (e = d.top(this.$element)), "function" == typeof f && (f = d.bottom(this.$element));
                    var h = this.getState(g, b, e, f);
                    if (this.affixed != h) {
                        null != this.unpin && this.$element.css("top", "");
                        var i = "affix" + (h ? "-" + h : ""),
                            j = a.Event(i + ".bs.affix");
                        if ((this.$element.trigger(j), j.isDefaultPrevented())) return;
                        (this.affixed = h),
                            (this.unpin = "bottom" == h ? this.getPinnedOffset() : null),
                            this.$element
                                .removeClass(c.RESET)
                                .addClass(i)
                                .trigger(i.replace("affix", "affixed") + ".bs.affix");
                    }
                    "bottom" == h && this.$element.offset({ top: g - b - f });
                }
            });
        var d = a.fn.affix;
        (a.fn.affix = b),
            (a.fn.affix.Constructor = c),
            (a.fn.affix.noConflict = function () {
                return (a.fn.affix = d), this;
            }),
            a(window).on("load", function () {
                a('[data-spy="affix"]').each(function () {
                    var c = a(this),
                        d = c.data();
                    (d.offset = d.offset || {}), null != d.offsetBottom && (d.offset.bottom = d.offsetBottom), null != d.offsetTop && (d.offset.top = d.offsetTop), b.call(c, d);
                });
            });
    })(jQuery);
!(function (e) {
    function t(t) {
        var a = t.data;
        t.isDefaultPrevented() || (t.preventDefault(), e(this).ajaxSubmit(a));
    }
    function a(t) {
        var a = t.target,
            r = e(a);
        if (!r.is("[type=submit],[type=image]")) {
            if (0 === (a = r.closest("[type=submit]")).length) return;
            a = a[0];
        }
        var n = this;
        (n.clk = a),
            "image" == a.type &&
                (void 0 !== t.offsetX
                    ? ((n.clk_x = t.offsetX), (n.clk_y = t.offsetY))
                    : "function" == typeof e.fn.offset
                    ? ((r = r.offset()), (n.clk_x = t.pageX - r.left), (n.clk_y = t.pageY - r.top))
                    : ((n.clk_x = t.pageX - a.offsetLeft), (n.clk_y = t.pageY - a.offsetTop))),
            setTimeout(function () {
                n.clk = n.clk_x = n.clk_y = null;
            }, 100);
    }
    function r() {
        if (e.fn.ajaxSubmit.debug) {
            var t = "[jquery.form] " + Array.prototype.join.call(arguments, "");
            window.console && window.console.log ? window.console.log(t) : window.opera && window.opera.postError && window.opera.postError(t);
        }
    }
    var n = void 0 !== e("<input type='file'/>").get(0).files,
        o = void 0 !== window.FormData;
    (e.fn.ajaxSubmit = function (t) {
        function a(a) {
            function n() {
                var t = i.attr("target"),
                    a = i.attr("action");
                d.setAttribute("target", g),
                    s || d.setAttribute("method", "POST"),
                    a != v.url && d.setAttribute("action", v.url),
                    v.skipEncodingOverride || (s && !/post/i.test(s)) || i.attr({ encoding: "multipart/form-data", enctype: "multipart/form-data" }),
                    v.timeout &&
                        (m = setTimeout(function () {
                            (f = !0), o(1);
                        }, v.timeout));
                var n = [];
                try {
                    if (v.extraData)
                        for (var u in v.extraData)
                            v.extraData.hasOwnProperty(u) &&
                                (e.isPlainObject(v.extraData[u]) && v.extraData[u].hasOwnProperty("name") && v.extraData[u].hasOwnProperty("value")
                                    ? n.push(
                                          e('<input type="hidden" name="' + v.extraData[u].name + '">')
                                              .val(v.extraData[u].value)
                                              .appendTo(d)[0]
                                      )
                                    : n.push(
                                          e('<input type="hidden" name="' + u + '">')
                                              .val(v.extraData[u])
                                              .appendTo(d)[0]
                                      ));
                    v.iframeTarget || (x.appendTo("body"), b.attachEvent ? b.attachEvent("onload", o) : b.addEventListener("load", o, !1)),
                        setTimeout(function e() {
                            try {
                                var t = (b.contentWindow ? b.contentWindow.document : b.contentDocument ? b.contentDocument : b.document).readyState;
                                r("state = " + t), t && "uninitialized" == t.toLowerCase() && setTimeout(e, 50);
                            } catch (e) {
                                r("Server abort: ", e, " (", e.name, ")"), o(2), m && clearTimeout(m), (m = void 0);
                            }
                        }, 15);
                    try {
                        d.submit();
                    } catch (e) {
                        document.createElement("form").submit.apply(d);
                    }
                } finally {
                    d.setAttribute("action", a), t ? d.setAttribute("target", t) : i.removeAttr("target"), e(n).remove();
                }
            }
            function o(t) {
                if (!y.aborted && !w) {
                    try {
                        j = b.contentWindow ? b.contentWindow.document : b.contentDocument ? b.contentDocument : b.document;
                    } catch (e) {
                        r("cannot access response document: ", e), (t = 2);
                    }
                    if (1 === t && y) y.abort("timeout"), h.reject(y, "timeout");
                    else if (2 == t && y) y.abort("server abort"), h.reject(y, "error", "server abort");
                    else if ((j && j.location.href != v.iframeSrc) || f) {
                        var a;
                        b.detachEvent ? b.detachEvent("onload", o) : b.removeEventListener("load", o, !1), (t = "success");
                        try {
                            if (f) throw "timeout";
                            var n = "xml" == v.dataType || j.XMLDocument || e.isXMLDoc(j);
                            if ((r("isXml=" + n), !n && window.opera && (null === j.body || !j.body.innerHTML) && --S)) return r("requeing onLoad callback, DOM not available"), void setTimeout(o, 250);
                            var i = j.body ? j.body : j.documentElement;
                            (y.responseText = i ? i.innerHTML : null),
                                (y.responseXML = j.XMLDocument ? j.XMLDocument : j),
                                n && (v.dataType = "xml"),
                                (y.getResponseHeader = function (e) {
                                    return { "content-type": v.dataType }[e];
                                }),
                                i && ((y.status = Number(i.getAttribute("status")) || y.status), (y.statusText = i.getAttribute("statusText") || y.statusText));
                            var s = (v.dataType || "").toLowerCase(),
                                u = /(json|script|text)/.test(s);
                            if (u || v.textarea) {
                                var c = j.getElementsByTagName("textarea")[0];
                                if (c) (y.responseText = c.value), (y.status = Number(c.getAttribute("status")) || y.status), (y.statusText = c.getAttribute("statusText") || y.statusText);
                                else if (u) {
                                    var d = j.getElementsByTagName("pre")[0],
                                        p = j.getElementsByTagName("body")[0];
                                    d ? (y.responseText = d.textContent ? d.textContent : d.innerText) : p && (y.responseText = p.textContent ? p.textContent : p.innerText);
                                }
                            } else "xml" == s && !y.responseXML && y.responseText && (y.responseXML = D(y.responseText));
                            try {
                                T = A(y, s, v);
                            } catch (e) {
                                (t = "parsererror"), (y.error = a = e || t);
                            }
                        } catch (e) {
                            r("error caught: ", e), (t = "error"), (y.error = a = e || t);
                        }
                        y.aborted && (r("upload aborted"), (t = null)),
                            y.status && (t = (200 <= y.status && 300 > y.status) || 304 === y.status ? "success" : "error"),
                            "success" === t
                                ? (v.success && v.success.call(v.context, T, "success", y), h.resolve(y.responseText, "success", y), l && e.event.trigger("ajaxSuccess", [y, v]))
                                : t && (void 0 === a && (a = y.statusText), v.error && v.error.call(v.context, y, t, a), h.reject(y, "error", a), l && e.event.trigger("ajaxError", [y, v, a])),
                            l && e.event.trigger("ajaxComplete", [y, v]),
                            l && !--e.active && e.event.trigger("ajaxStop"),
                            v.complete && v.complete.call(v.context, y, t),
                            (w = !0),
                            v.timeout && clearTimeout(m),
                            setTimeout(function () {
                                v.iframeTarget || x.remove(), (y.responseXML = null);
                            }, 100);
                    }
                }
            }
            var u,
                l,
                f,
                m,
                d = i[0],
                p = !!e.fn.prop,
                h = e.Deferred();
            if (a) for (u = 0; u < c.length; u++) (a = e(c[u])), p ? a.prop("disabled", !1) : a.removeAttr("disabled");
            var v = e.extend(!0, {}, e.ajaxSettings, t);
            v.context = v.context || v;
            var g = "jqFormIO" + new Date().getTime();
            if (v.iframeTarget) {
                var x = e(v.iframeTarget);
                (a = x.attr("name")) ? (g = a) : x.attr("name", g);
            } else (x = e('<iframe name="' + g + '" src="' + v.iframeSrc + '" />')).css({ position: "absolute", top: "-1000px", left: "-1000px" });
            var b = x[0],
                y = {
                    aborted: 0,
                    responseText: null,
                    responseXML: null,
                    status: 0,
                    statusText: "n/a",
                    getAllResponseHeaders: function () {},
                    getResponseHeader: function () {},
                    setRequestHeader: function () {},
                    abort: function (t) {
                        var a = "timeout" === t ? "timeout" : "aborted";
                        r("aborting upload... " + a), (this.aborted = 1);
                        try {
                            b.contentWindow.document.execCommand && b.contentWindow.document.execCommand("Stop");
                        } catch (e) {}
                        x.attr("src", v.iframeSrc), (y.error = a), v.error && v.error.call(v.context, y, a, t), l && e.event.trigger("ajaxError", [y, v, a]), v.complete && v.complete.call(v.context, y, a);
                    },
                };
            if (((l = v.global) && 0 == e.active++ && e.event.trigger("ajaxStart"), l && e.event.trigger("ajaxSend", [y, v]), v.beforeSend && !1 === v.beforeSend.call(v.context, y, v))) return v.global && e.active--, h.reject(), h;
            if (y.aborted) return h.reject(), h;
            (p = d.clk) && (a = p.name) && !p.disabled && ((v.extraData = v.extraData || {}), (v.extraData[a] = p.value), "image" == p.type && ((v.extraData[a + ".x"] = d.clk_x), (v.extraData[a + ".y"] = d.clk_y))),
                (p = e("meta[name=csrf-token]").attr("content")),
                (a = e("meta[name=csrf-param]").attr("content")) && p && ((v.extraData = v.extraData || {}), (v.extraData[a] = p)),
                v.forceSync ? n() : setTimeout(n, 10);
            var T,
                j,
                w,
                S = 50,
                D =
                    e.parseXML ||
                    function (e, t) {
                        return (
                            window.ActiveXObject ? (((t = new ActiveXObject("Microsoft.XMLDOM")).async = "false"), t.loadXML(e)) : (t = new DOMParser().parseFromString(e, "text/xml")),
                            t && t.documentElement && "parsererror" != t.documentElement.nodeName ? t : null
                        );
                    },
                k =
                    e.parseJSON ||
                    function (e) {
                        return window.eval("(" + e + ")");
                    },
                A = function (t, a, r) {
                    var n = t.getResponseHeader("content-type") || "",
                        o = "xml" === a || (!a && 0 <= n.indexOf("xml"));
                    return (
                        (t = o ? t.responseXML : t.responseText),
                        o && "parsererror" === t.documentElement.nodeName && e.error && e.error("parsererror"),
                        r && r.dataFilter && (t = r.dataFilter(t, a)),
                        "string" == typeof t && ("json" === a || (!a && 0 <= n.indexOf("json")) ? (t = k(t)) : ("script" === a || (!a && 0 <= n.indexOf("javascript"))) && e.globalEval(t)),
                        t
                    );
                };
            return h;
        }
        if (!this.length) return r("ajaxSubmit: skipping submit process - no element selected"), this;
        var i = this;
        "function" == typeof t && (t = { success: t });
        var s = this.attr("method"),
            u = this.attr("action");
        if (
            ((u = (u = "string" == typeof u ? e.trim(u) : "") || window.location.href || "") && (u = (u.match(/^([^#]+)/) || [])[1]),
            (t = e.extend(!0, { url: u, success: e.ajaxSettings.success, headers: { "x-inq-headers": "security" }, type: s || "GET", iframeSrc: /^https/i.test(window.location.href || "") ? "javascript:false" : "about:blank" }, t)),
            (u = {}),
            this.trigger("form-pre-serialize", [this, t, u]),
            u.veto)
        )
            return r("ajaxSubmit: submit vetoed via form-pre-serialize trigger"), this;
        if (t.beforeSerialize && !1 === t.beforeSerialize(this, t)) return r("ajaxSubmit: submit aborted via beforeSerialize callback"), this;
        var l = t.traditional;
        void 0 === l && (l = e.ajaxSettings.traditional);
        var c = [],
            f = this.formToArray(t.semantic, c);
        if (t.data) {
            t.extraData = t.data;
            var m = e.param(t.data, l);
        }
        if (t.beforeSubmit && !1 === t.beforeSubmit(f, this, t)) return r("ajaxSubmit: submit aborted via beforeSubmit callback"), this;
        if ((this.trigger("form-submit-validate", [f, this, t, u]), u.veto)) return r("ajaxSubmit: submit vetoed via form-submit-validate trigger"), this;
        (u = e.param(f, l)), m && (u = u ? u + "&" + m : m), "GET" == t.type.toUpperCase() ? ((t.url += (0 <= t.url.indexOf("?") ? "&" : "?") + u), (t.data = null)) : (t.data = u);
        var d,
            p = [];
        if (
            (t.resetForm &&
                p.push(function () {
                    i.resetForm();
                }),
            t.clearForm &&
                p.push(function () {
                    i.clearForm(t.includeHidden);
                }),
            !t.dataType && t.target)
        ) {
            var h = t.success || function () {};
            p.push(function (a) {
                var r = t.replaceTarget ? "replaceWith" : "html";
                e(t.target)[r](a).each(h, arguments);
            });
        } else t.success && p.push(t.success);
        for (
            t.success = function (e, a, r) {
                ("1" !== r.getResponseHeader("Cit-auth-requires") && "1" !== r.getResponseHeader("Cit-db-error")) || handleAjaxSubmitErrors(r);
                for (var n = t.context || this, o = 0, s = p.length; o < s; o++) p[o].apply(n, [e, a, r || i, i]);
            },
                m = 0 < e('input[type=file]:enabled[value!=""]', this).length,
                u = "multipart/form-data" == i.attr("enctype") || "multipart/form-data" == i.attr("encoding"),
                r("fileAPI :" + (l = n && o)),
                !1 !== t.iframe && (t.iframe || ((m || u) && !l))
                    ? t.closeKeepAlive
                        ? e.get(t.closeKeepAlive, function () {
                              d = a(f);
                          })
                        : (d = a(f))
                    : (d =
                          (m || u) && l
                              ? (function (a) {
                                    for (var r = new FormData(), n = 0; n < a.length; n++) r.append(a[n].name, a[n].value);
                                    if (t.extraData)
                                        for (
                                            a = (function (t) {
                                                var a,
                                                    r = (t = e.param(t).split("&")).length,
                                                    n = [];
                                                for (a = 0; a < r; a++) {
                                                    t[a] = t[a].replace(/\+/g, " ");
                                                    var o = t[a].split("=");
                                                    n.push([decodeURIComponent(o[0]), decodeURIComponent(o[1])]);
                                                }
                                                return n;
                                            })(t.extraData),
                                                n = 0;
                                            n < a.length;
                                            n++
                                        )
                                            a[n] && r.append(a[n][0], a[n][1]);
                                    (t.data = null),
                                        (n = e.extend(!0, {}, e.ajaxSettings, t, { contentType: !1, processData: !1, cache: !1, type: s || "POST" })),
                                        t.uploadProgress &&
                                            (n.xhr = function () {
                                                var e = jQuery.ajaxSettings.xhr();
                                                return (
                                                    e.upload &&
                                                        e.upload.addEventListener(
                                                            "progress",
                                                            function (e) {
                                                                var a = 0,
                                                                    r = e.loaded || e.position,
                                                                    n = e.total;
                                                                e.lengthComputable && (a = Math.ceil((r / n) * 100)), t.uploadProgress(e, r, n, a);
                                                            },
                                                            !1
                                                        ),
                                                    e
                                                );
                                            }),
                                        (n.data = null);
                                    var o = n.beforeSend;
                                    return (
                                        (n.beforeSend = function (e, t) {
                                            (t.data = r), o && o.call(this, e, t);
                                        }),
                                        e.ajax(n)
                                    );
                                })(f)
                              : e.ajax(t)),
                i.removeData("jqxhr").data("jqxhr", d),
                m = 0;
            m < c.length;
            m++
        )
            c[m] = null;
        return this.trigger("form-submit-notify", [this, t]), this;
    }),
        (e.fn.ajaxForm = function (n) {
            if ((((n = n || {}).delegation = n.delegation && e.isFunction(e.fn.on)), !n.delegation && 0 === this.length)) {
                var o = this.selector,
                    i = this.context;
                return !e.isReady && o
                    ? (r("DOM not ready, queuing ajaxForm"),
                      e(function () {
                          e(o, i).ajaxForm(n);
                      }),
                      this)
                    : (r("terminating; zero elements found by selector" + (e.isReady ? "" : " (DOM not ready)")), this);
            }
            return n.delegation
                ? (e(document).off("submit.form-plugin", this.selector, t).off("click.form-plugin", this.selector, a).on("submit.form-plugin", this.selector, n, t).on("click.form-plugin", this.selector, n, a), this)
                : this.ajaxFormUnbind().bind("submit.form-plugin", n, t).bind("click.form-plugin", n, a);
        }),
        (e.fn.ajaxFormUnbind = function () {
            return this.unbind("submit.form-plugin click.form-plugin");
        }),
        (e.fn.formToArray = function (t, a) {
            var r = [];
            if (0 === this.length) return r;
            var o,
                i,
                s,
                u = this[0],
                l = t ? u.getElementsByTagName("*") : u.elements;
            if (!l) return r;
            var c = 0;
            for (s = l.length; c < s; c++) {
                var f = l[c];
                if ((o = f.name))
                    if (t && u.clk && "image" == f.type) f.disabled || u.clk != f || (r.push({ name: o, value: e(f).val(), type: f.type }), r.push({ name: o + ".x", value: u.clk_x }, { name: o + ".y", value: u.clk_y }));
                    else if ((i = e.fieldValue(f, !0)) && i.constructor == Array) {
                        a && a.push(f);
                        var m = 0;
                        for (f = i.length; m < f; m++) r.push({ name: o, value: i[m] });
                    } else if (n && "file" == f.type && !f.disabled)
                        if ((a && a.push(f), (i = f.files).length)) for (m = 0; m < i.length; m++) r.push({ name: o, value: i[m], type: f.type });
                        else r.push({ name: o, value: "", type: f.type });
                    else null != i && (a && a.push(f), r.push({ name: o, value: i, type: f.type, required: f.required }));
            }
            return !t && u.clk && (o = (c = (l = e(u.clk))[0]).name) && !c.disabled && "image" == c.type && (r.push({ name: o, value: l.val() }), r.push({ name: o + ".x", value: u.clk_x }, { name: o + ".y", value: u.clk_y })), r;
        }),
        (e.fn.formSerialize = function (t) {
            return e.param(this.formToArray(t));
        }),
        (e.fn.fieldSerialize = function (t) {
            var a = [];
            return (
                this.each(function () {
                    var r = this.name;
                    if (r) {
                        var n = e.fieldValue(this, t);
                        if (n && n.constructor == Array) for (var o = 0, i = n.length; o < i; o++) a.push({ name: r, value: n[o] });
                        else null != n && a.push({ name: this.name, value: n });
                    }
                }),
                e.param(a)
            );
        }),
        (e.fn.fieldValue = function (t) {
            for (var a = [], r = 0, n = this.length; r < n; r++) {
                var o = e.fieldValue(this[r], t);
                null == o || (o.constructor == Array && !o.length) || (o.constructor == Array ? e.merge(a, o) : a.push(o));
            }
            return a;
        }),
        (e.fieldValue = function (t, a) {
            var r = t.name,
                n = t.type,
                o = t.tagName.toLowerCase();
            if (
                (void 0 === a && (a = !0),
                a && (!r || t.disabled || "reset" == n || "button" == n || (("checkbox" == n || "radio" == n) && !t.checked) || (("submit" == n || "image" == n) && t.form && t.form.clk != t) || ("select" == o && -1 == t.selectedIndex)))
            )
                return null;
            if ("select" == o) {
                if (0 > (s = t.selectedIndex)) return null;
                (r = []), (o = t.options);
                for (var i = (n = "select-one" == n) ? s + 1 : o.length, s = n ? s : 0; s < i; s++) {
                    var u = o[s];
                    if (u.selected) {
                        var l = u.value;
                        if ((l || (l = u.attributes && u.attributes.value && !u.attributes.value.specified ? u.text : u.value), n)) return l;
                        r.push(l);
                    }
                }
                return r;
            }
            return e(t).val();
        }),
        (e.fn.clearForm = function (t) {
            return this.each(function () {
                e("input,select,textarea", this).clearFields(t);
            });
        }),
        (e.fn.clearFields = e.fn.clearInputs = function (t) {
            var a = /^(?:color|date|datetime|email|month|number|password|range|search|tel|text|time|url|week)$/i;
            return this.each(function () {
                var r = this.type,
                    n = this.tagName.toLowerCase();
                a.test(r) || "textarea" == n
                    ? (this.value = "")
                    : "checkbox" == r || "radio" == r
                    ? (this.checked = !1)
                    : "select" == n
                    ? (this.selectedIndex = -1)
                    : "file" == r
                    ? /MSIE/.test(navigator.userAgent)
                        ? e(this).replaceWith(e(this).clone())
                        : e(this).val("")
                    : t && ((!0 === t && /hidden/.test(r)) || ("string" == typeof t && e(this).is(t))) && (this.value = "");
            });
        }),
        (e.fn.resetForm = function () {
            return this.each(function () {
                ("function" == typeof this.reset || ("object" == typeof this.reset && !this.reset.nodeType)) && this.reset();
            });
        }),
        (e.fn.enable = function (e) {
            return (
                void 0 === e && (e = !0),
                this.each(function () {
                    this.disabled = !e;
                })
            );
        }),
        (e.fn.selected = function (t) {
            return (
                void 0 === t && (t = !0),
                this.each(function () {
                    var a = this.type;
                    "checkbox" == a || "radio" == a
                        ? (this.checked = t)
                        : "option" == this.tagName.toLowerCase() && ((a = e(this).parent("select")), t && a[0] && "select-one" == a[0].type && a.find("option").selected(!1), (this.selected = t));
                })
            );
        }),
        (e.fn.ajaxSubmit.debug = !1);
})(jQuery);
/*!
 * jQuery Validation Plugin v1.13.1
 *
 * http://jqueryvalidation.org/
 *
 * Copyright (c) 2014 Jörn Zaefferer
 * Released under the MIT license
 */
(function (factory) {
    if (typeof define === "function" && define.amd) {
        define(["jquery"], factory);
    } else {
        factory(jQuery);
    }
})(function ($) {
    $.extend($.fn, {
        // http://jqueryvalidation.org/validate/
        validate: function (options) {
            // if nothing is selected, return nothing; can't chain anyway
            if (!this.length) {
                if (options && options.debug && window.console) {
                    console.warn("Nothing selected, can't validate, returning nothing.");
                }
                return;
            }

            // check if a validator for this form was already created
            var validator = $.data(this[0], "validator");
            if (validator) {
                return validator;
            }

            // Add novalidate tag if HTML5.
            this.attr("novalidate", "novalidate");

            validator = new $.validator(options, this[0]);
            $.data(this[0], "validator", validator);

            if (validator.settings.onsubmit) {
                this.validateDelegate(":submit", "click", function (event) {
                    if (validator.settings.submitHandler) {
                        validator.submitButton = event.target;
                    }
                    // allow suppressing validation by adding a cancel class to the submit button
                    if ($(event.target).hasClass("cancel")) {
                        validator.cancelSubmit = true;
                    }

                    // allow suppressing validation by adding the html5 formnovalidate attribute to the submit button
                    if ($(event.target).attr("formnovalidate") !== undefined) {
                        validator.cancelSubmit = true;
                    }
                });

                // validate the form on submit
                this.submit(function (event) {
                    if (validator.settings.debug) {
                        // prevent form submit to be able to see console output
                        event.preventDefault();
                    }
                    function handle() {
                        var hidden, result;
                        if (validator.settings.submitHandler) {
                            if (validator.submitButton) {
                                // insert a hidden input as a replacement for the missing submit button
                                hidden = $("<input type='hidden'/>").attr("name", validator.submitButton.name).val($(validator.submitButton).val()).appendTo(validator.currentForm);
                            }
                            result = validator.settings.submitHandler.call(validator, validator.currentForm, event);
                            if (validator.submitButton) {
                                // and clean up afterwards; thanks to no-block-scope, hidden can be referenced
                                hidden.remove();
                            }
                            if (result !== undefined) {
                                return result;
                            }
                            return false;
                        }
                        return true;
                    }

                    // prevent submit for invalid forms or custom submit handlers
                    if (validator.cancelSubmit) {
                        validator.cancelSubmit = false;
                        return handle();
                    }
                    if (validator.form()) {
                        if (validator.pendingRequest) {
                            validator.formSubmitted = true;
                            return false;
                        }
                        return handle();
                    } else {
                        validator.focusInvalid();
                        return false;
                    }
                });
            }

            return validator;
        },
        // http://jqueryvalidation.org/valid/
        valid: function () {
            var valid, validator;

            if ($(this[0]).is("form")) {
                valid = this.validate().form();
            } else {
                valid = true;
                validator = $(this[0].form).validate();
                this.each(function () {
                    valid = validator.element(this) && valid;
                });
            }
            return valid;
        },
        // attributes: space separated list of attributes to retrieve and remove
        removeAttrs: function (attributes) {
            var result = {},
                $element = this;
            $.each(attributes.split(/\s/), function (index, value) {
                result[value] = $element.attr(value);
                $element.removeAttr(value);
            });
            return result;
        },
        // http://jqueryvalidation.org/rules/
        rules: function (command, argument) {
            var element = this[0],
                settings,
                staticRules,
                existingRules,
                data,
                param,
                filtered;

            if (command) {
                settings = $.data(element.form, "validator").settings;
                staticRules = settings.rules;
                existingRules = $.validator.staticRules(element);
                switch (command) {
                    case "add":
                        $.extend(existingRules, $.validator.normalizeRule(argument));
                        // remove messages from rules, but allow them to be set separately
                        delete existingRules.messages;
                        staticRules[element.name] = existingRules;
                        if (argument.messages) {
                            settings.messages[element.name] = $.extend(settings.messages[element.name], argument.messages);
                        }
                        break;
                    case "remove":
                        if (!argument) {
                            delete staticRules[element.name];
                            return existingRules;
                        }
                        filtered = {};
                        $.each(argument.split(/\s/), function (index, method) {
                            filtered[method] = existingRules[method];
                            delete existingRules[method];
                            if (method === "required") {
                                $(element).removeAttr("aria-required");
                            }
                        });
                        return filtered;
                }
            }

            data = $.validator.normalizeRules($.extend({}, $.validator.classRules(element), $.validator.attributeRules(element), $.validator.dataRules(element), $.validator.staticRules(element)), element);

            // make sure required is at front
            if (data.required) {
                param = data.required;
                delete data.required;
                data = $.extend({ required: param }, data);
                $(element).attr("aria-required", "true");
            }

            // make sure remote is at back
            if (data.remote) {
                param = data.remote;
                delete data.remote;
                data = $.extend(data, { remote: param });
            }

            return data;
        },
    });

    // Custom selectors
    $.extend($.expr[":"], {
        // http://jqueryvalidation.org/blank-selector/
        blank: function (a) {
            return !$.trim("" + $(a).val());
        },
        // http://jqueryvalidation.org/filled-selector/
        filled: function (a) {
            return !!$.trim("" + $(a).val());
        },
        // http://jqueryvalidation.org/unchecked-selector/
        unchecked: function (a) {
            return !$(a).prop("checked");
        },
    });

    // constructor for validator
    $.validator = function (options, form) {
        this.settings = $.extend(true, {}, $.validator.defaults, options);
        this.currentForm = form;
        this.init();
    };

    // http://jqueryvalidation.org/jQuery.validator.format/
    $.validator.format = function (source, params) {
        if (arguments.length === 1) {
            return function () {
                var args = $.makeArray(arguments);
                args.unshift(source);
                return $.validator.format.apply(this, args);
            };
        }
        if (arguments.length > 2 && params.constructor !== Array) {
            params = $.makeArray(arguments).slice(1);
        }
        if (params.constructor !== Array) {
            params = [params];
        }
        $.each(params, function (i, n) {
            source = source.replace(new RegExp("\\{" + i + "\\}", "g"), function () {
                return n;
            });
        });
        return source;
    };

    $.extend($.validator, {
        defaults: {
            messages: {},
            groups: {},
            rules: {},
            errorClass: "err",
            validClass: "valid",
            errorElement: "div",
            focusCleanup: false,
            focusInvalid: true,
            errorContainer: $([]),
            errorLabelContainer: $([]),
            onsubmit: true,
            ignore: ":hidden",
            ignoreTitle: false,
            onfocusin: function (element) {
                this.lastActive = element;

                // Hide error label and remove error class on focus if enabled
                if (this.settings.focusCleanup) {
                    if (this.settings.unhighlight) {
                        this.settings.unhighlight.call(this, element, this.settings.errorClass, this.settings.validClass);
                    }
                    this.hideThese(this.errorsFor(element));
                }
            },
            onfocusout: function (element) {
                if (!this.checkable(element) && (element.name in this.submitted || !this.optional(element))) {
                    this.element(element);
                }
            },
            onkeyup: function (element, event) {
                if (event.which === 9 && this.elementValue(element) === "") {
                    return;
                } else if (element.name in this.submitted || element === this.lastElement) {
                    this.element(element);
                }
            },
            onclick: function (element) {
                // click on selects, radiobuttons and checkboxes
                if (element.name in this.submitted) {
                    this.element(element);

                    // or option elements, check parent select in that case
                } else if (element.parentNode.name in this.submitted) {
                    this.element(element.parentNode);
                }
            },
            highlight: function (element, errorClass, validClass) {
                if (element.type === "radio") {
                    this.findByName(element.name).addClass(errorClass).removeClass(validClass);
                } else {
                    $(element).addClass(errorClass).removeClass(validClass);
                }
            },
            unhighlight: function (element, errorClass, validClass) {
                if (element.type === "radio") {
                    this.findByName(element.name).removeClass(errorClass).addClass(validClass);
                } else {
                    $(element).removeClass(errorClass).addClass(validClass);
                }
            },
        },
        // http://jqueryvalidation.org/jQuery.validator.setDefaults/
        setDefaults: function (settings) {
            $.extend($.validator.defaults, settings);
        },
        messages: {
            required: "This field is required.",
            remote: "Please fix this field.",
            email: "Please enter a valid email address.",
            url: "Please enter a valid URL.",
            date: "Please enter a valid date.",
            dateISO: "Please enter a valid date ( ISO ).",
            number: "Please enter a valid number.",
            digits: "Please enter only digits.",
            creditcard: "Please enter a valid credit card number.",
            equalTo: "Please enter the same value again.",
            accept: "Please upload a image with valid extension.",
            maxlength: $.validator.format("Please enter no more than {0} characters."),
            minlength: $.validator.format("Please enter at least {0} characters."),
            rangelength: $.validator.format("Please enter a value between {0} and {1} characters long."),
            range: $.validator.format("Please enter a value between {0} and {1}."),
            max: $.validator.format("Please enter a value less than or equal to {0}."),
            min: $.validator.format("Please enter a value greater than or equal to {0}."),
            firstname: "Please enter a valid firstname.",
            lastname: "Please enter a valid lastname.",
            namewithdot: "Please enter a valid name",
            phonenumber: "Please enter a valid phone number.",
            cellnumber: "Please enter a valid cell number(minimum 10 digits).",
            nospace: "No space please and don't leave it empty",
            username: "Please enter a valid user name.",
            fullname: "Please enter a valid full name.",
            notStartWithSpace: "Please enter a value which not started from space.",
            nonzeronumber: "Please enter a number greater than zero",
            code: "Please enter a valid code.",
            password: "Please enter a valid password.",
            price: "Please enter a valid Price.",
            positive_number: "Please enter a valid Positive Number.",
            latlong: "Please enter valid latitude/longitude",
            categoryname: "Please enter valid category name",
            nondecimal: "Please enter only digital number.",
            alphaspace: "No space please and don't leave it empty.",
            alphaOnly: "Alphabets are allowed only.",
            countryTitle: "Please enter valid name.",
            newsTitle: "Please enter valid title.",
            alphaCode: "Alphabets are allowed only.",
            zipCode: "Please enter valid zipcode.",
            faxCode: "Please enter valid fax number.",
            tollFreeCode: "Please enter valid toll free number.",
            url_host: "Please enter a valid URL.",
            maxdate: $.validator.format("Please enter date smaller or equal to {0}."),
            mindate: $.validator.format("Please enter date greater or equal to {0}."),
        },
        autoCreateRanges: false,
        prototype: {
            init: function () {
                this.labelContainer = $(this.settings.errorLabelContainer);
                this.errorContext = (this.labelContainer.length && this.labelContainer) || $(this.currentForm);
                this.containers = $(this.settings.errorContainer).add(this.settings.errorLabelContainer);
                this.submitted = {};
                this.valueCache = {};
                this.pendingRequest = 0;
                this.pending = {};
                this.invalid = {};
                this.reset();

                var groups = (this.groups = {}),
                    rules;
                $.each(this.settings.groups, function (key, value) {
                    if (typeof value === "string") {
                        value = value.split(/\s/);
                    }
                    $.each(value, function (index, name) {
                        groups[name] = key;
                    });
                });
                rules = this.settings.rules;
                $.each(rules, function (key, value) {
                    rules[key] = $.validator.normalizeRule(value);
                });

                function delegate(event) {
                    var validator = $.data(this[0].form, "validator"),
                        eventType = "on" + event.type.replace(/^validate/, ""),
                        settings = validator.settings;
                    if (settings[eventType] && !this.is(settings.ignore)) {
                        settings[eventType].call(validator, this[0], event);
                    }
                }
                $(this.currentForm)
                    .validateDelegate(
                        ":text, [type='password'], [type='file'], select, textarea, " +
                            "[type='number'], [type='search'] ,[type='tel'], [type='url'], " +
                            "[type='email'], [type='datetime'], [type='date'], [type='month'], " +
                            "[type='week'], [type='time'], [type='datetime-local'], " +
                            "[type='range'], [type='color'], [type='radio'], [type='checkbox']",
                        "focusin focusout keyup",
                        delegate
                    )
                    // Support: Chrome, oldIE
                    // "select" is provided as event.target when clicking a option
                    .validateDelegate("select, option, [type='radio'], [type='checkbox']", "click", delegate);

                if (this.settings.invalidHandler) {
                    $(this.currentForm).bind("invalid-form.validate", this.settings.invalidHandler);
                }

                // Add aria-required to any Static/Data/Class required fields before first validation
                // Screen readers require this attribute to be present before the initial submission http://www.w3.org/TR/WCAG-TECHS/ARIA2.html
                $(this.currentForm).find("[required], [data-rule-required], .required").attr("aria-required", "true");
            },
            // http://jqueryvalidation.org/Validator.form/
            form: function () {
                this.checkForm();
                $.extend(this.submitted, this.errorMap);
                this.invalid = $.extend({}, this.errorMap);
                if (!this.valid()) {
                    $(this.currentForm).triggerHandler("invalid-form", [this]);
                }
                this.showErrors();
                return this.valid();
            },
            checkForm: function () {
                this.prepareForm();
                for (var i = 0, elements = (this.currentElements = this.elements()); elements[i]; i++) {
                    this.check(elements[i]);
                }
                return this.valid();
            },
            // http://jqueryvalidation.org/Validator.element/
            element: function (element) {
                var cleanElement = this.clean(element),
                    checkElement = this.validationTargetFor(cleanElement),
                    result = true;

                this.lastElement = checkElement;

                if (checkElement === undefined) {
                    delete this.invalid[cleanElement.name];
                } else {
                    this.prepareElement(checkElement);
                    this.currentElements = $(checkElement);

                    result = this.check(checkElement) !== false;
                    if (result) {
                        delete this.invalid[checkElement.name];
                    } else {
                        this.invalid[checkElement.name] = true;
                    }
                }
                // Add aria-invalid status for screen readers
                $(element).attr("aria-invalid", !result);

                if (!this.numberOfInvalids()) {
                    // Hide error containers on last error
                    this.toHide = this.toHide.add(this.containers);
                }
                this.showErrors();
                return result;
            },
            // http://jqueryvalidation.org/Validator.showErrors/
            showErrors: function (errors) {
                if (errors) {
                    // add items to error list and map
                    $.extend(this.errorMap, errors);
                    this.errorList = [];
                    for (var name in errors) {
                        this.errorList.push({
                            message: errors[name],
                            element: this.findByName(name)[0],
                        });
                    }
                    // remove items from success list
                    this.successList = $.grep(this.successList, function (element) {
                        return !(element.name in errors);
                    });
                }
                if (this.settings.showErrors) {
                    this.settings.showErrors.call(this, this.errorMap, this.errorList);
                } else {
                    this.defaultShowErrors();
                }
            },
            // http://jqueryvalidation.org/Validator.resetForm/
            resetForm: function () {
                if ($.fn.resetForm) {
                    $(this.currentForm).resetForm();
                }
                this.submitted = {};
                this.lastElement = null;
                this.prepareForm();
                this.hideErrors();
                this.elements().removeClass(this.settings.errorClass).removeData("previousValue").removeAttr("aria-invalid");
            },
            numberOfInvalids: function () {
                return this.objectLength(this.invalid);
            },
            objectLength: function (obj) {
                /* jshint unused: false */
                var count = 0,
                    i;
                for (i in obj) {
                    count++;
                }
                return count;
            },
            hideErrors: function () {
                this.hideThese(this.toHide);
            },
            hideThese: function (errors) {
                errors.not(this.containers).text("");
                this.addWrapper(errors).hide();
            },
            valid: function () {
                return this.size() === 0;
            },
            size: function () {
                return this.errorList.length;
            },
            focusInvalid: function () {
                if (this.settings.focusInvalid) {
                    try {
                        $(this.findLastActive() || (this.errorList.length && this.errorList[0].element) || [])
                            .filter(":visible")
                            .focus()
                            // manually trigger focusin event; without it, focusin handler isn't called, findLastActive won't have anything to find
                            .trigger("focusin");
                    } catch (e) {
                        // ignore IE throwing errors when focusing hidden elements
                    }
                }
            },
            findLastActive: function () {
                var lastActive = this.lastActive;
                return (
                    lastActive &&
                    $.grep(this.errorList, function (n) {
                        return n.element.name === lastActive.name;
                    }).length === 1 &&
                    lastActive
                );
            },
            elements: function () {
                var validator = this,
                    rulesCache = {};

                // select all valid inputs inside the form (no submit or reset buttons)
                return $(this.currentForm)
                    .find("input, select, textarea")
                    .not(":submit, :reset, :image, [disabled], [readonly]")
                    .not(this.settings.ignore)
                    .filter(function () {
                        if (!this.name && validator.settings.debug && window.console) {
                            console.error("%o has no name assigned", this);
                        }

                        // select only the first element for each name, and only those with rules specified
                        if (this.name in rulesCache || !validator.objectLength($(this).rules())) {
                            return false;
                        }

                        rulesCache[this.name] = true;
                        return true;
                    });
            },
            clean: function (selector) {
                return $(selector)[0];
            },
            errors: function () {
                var errorClass = this.settings.errorClass.split(" ").join(".");
                return $(this.settings.errorElement + "." + errorClass, this.errorContext);
            },
            reset: function () {
                this.successList = [];
                this.errorList = [];
                this.errorMap = {};
                this.toShow = $([]);
                this.toHide = $([]);
                this.currentElements = $([]);
            },
            prepareForm: function () {
                this.reset();
                this.toHide = this.errors().add(this.containers);
            },
            prepareElement: function (element) {
                this.reset();
                this.toHide = this.errorsFor(element);
            },
            elementValue: function (element) {
                var val,
                    $element = $(element),
                    type = element.type;

                if (type === "radio" || type === "checkbox") {
                    return $("input[name='" + element.name + "']:checked").val();
                } else if (type === "number" && typeof element.validity !== "undefined") {
                    return element.validity.badInput ? false : $element.val();
                }

                val = $element.val();
                if (typeof val === "string") {
                    return val.replace(/\r/g, "");
                }
                return val;
            },
            check: function (element) {
                element = this.validationTargetFor(this.clean(element));

                var rules = $(element).rules(),
                    rulesCount = $.map(rules, function (n, i) {
                        return i;
                    }).length,
                    dependencyMismatch = false,
                    val = this.elementValue(element),
                    result,
                    method,
                    rule;

                for (method in rules) {
                    rule = { method: method, parameters: rules[method] };
                    try {
                        result = $.validator.methods[method].call(this, val, element, rule.parameters);

                        // if a method indicates that the field is optional and therefore valid,
                        // don't mark it as valid when there are no other rules
                        if (result === "dependency-mismatch" && rulesCount === 1) {
                            dependencyMismatch = true;
                            continue;
                        }
                        dependencyMismatch = false;

                        if (result === "pending") {
                            this.toHide = this.toHide.not(this.errorsFor(element));
                            return;
                        }

                        if (!result) {
                            this.formatAndAdd(element, rule);
                            return false;
                        }
                    } catch (e) {
                        if (this.settings.debug && window.console) {
                            console.log("Exception occurred when checking element " + element.id + ", check the '" + rule.method + "' method.", e);
                        }
                        throw e;
                    }
                }
                if (dependencyMismatch) {
                    return;
                }
                if (this.objectLength(rules)) {
                    this.successList.push(element);
                }
                return true;
            },
            // return the custom message for the given element and validation method
            // specified in the element's HTML5 data attribute
            // return the generic message if present and no method specific message is present
            customDataMessage: function (element, method) {
                return $(element).data("msg" + method.charAt(0).toUpperCase() + method.substring(1).toLowerCase()) || $(element).data("msg");
            },
            // return the custom message for the given element name and validation method
            customMessage: function (name, method) {
                var m = this.settings.messages[name];
                return m && (m.constructor === String ? m : m[method]);
            },
            // return the first defined argument, allowing empty strings
            findDefined: function () {
                for (var i = 0; i < arguments.length; i++) {
                    if (arguments[i] !== undefined) {
                        return arguments[i];
                    }
                }
                return undefined;
            },
            defaultMessage: function (element, method) {
                return this.findDefined(
                    this.customMessage(element.name, method),
                    this.customDataMessage(element, method),
                    // title is never undefined, so handle empty string as undefined
                    (!this.settings.ignoreTitle && element.title) || undefined,
                    $.validator.messages[method],
                    "<strong>Warning: No message defined for " + element.name + "</strong>"
                );
            },
            formatAndAdd: function (element, rule) {
                var message = this.defaultMessage(element, rule.method),
                    theregex = /\$?\{(\d+)\}/g;
                if (typeof message === "function") {
                    message = message.call(this, rule.parameters, element);
                } else if (theregex.test(message)) {
                    message = $.validator.format(message.replace(theregex, "{$1}"), rule.parameters);
                }
                this.errorList.push({
                    message: message,
                    element: element,
                    method: rule.method,
                });

                this.errorMap[element.name] = message;
                this.submitted[element.name] = message;
            },
            addWrapper: function (toToggle) {
                if (this.settings.wrapper) {
                    toToggle = toToggle.add(toToggle.parent(this.settings.wrapper));
                }
                return toToggle;
            },
            defaultShowErrors: function () {
                var i, elements, error;
                for (i = 0; this.errorList[i]; i++) {
                    error = this.errorList[i];
                    if (this.settings.highlight) {
                        this.settings.highlight.call(this, error.element, this.settings.errorClass, this.settings.validClass);
                    }
                    this.showLabel(error.element, error.message);
                }
                if (this.errorList.length) {
                    this.toShow = this.toShow.add(this.containers);
                }
                if (this.settings.success) {
                    for (i = 0; this.successList[i]; i++) {
                        this.showLabel(this.successList[i]);
                    }
                }
                if (this.settings.unhighlight) {
                    for (i = 0, elements = this.validElements(); elements[i]; i++) {
                        this.settings.unhighlight.call(this, elements[i], this.settings.errorClass, this.settings.validClass);
                    }
                }
                this.toHide = this.toHide.not(this.toShow);
                this.hideErrors();
                this.addWrapper(this.toShow).show();
            },
            validElements: function () {
                return this.currentElements.not(this.invalidElements());
            },
            invalidElements: function () {
                return $(this.errorList).map(function () {
                    return this.element;
                });
            },
            showLabel: function (element, message) {
                var place,
                    group,
                    errorID,
                    error = this.errorsFor(element),
                    elementID = this.idOrName(element),
                    describedBy = $(element).attr("aria-describedby");
                if (error.length) {
                    // refresh error/success class
                    error.removeClass(this.settings.validClass).addClass(this.settings.errorClass);
                    // replace message on existing label
                    error.html(message);
                } else {
                    // create error element
                    error = $("<" + this.settings.errorElement + ">")
                        .attr("id", elementID + "-error")
                        .addClass(this.settings.errorClass)
                        .html(message || "");

                    // Maintain reference to the element to be placed into the DOM
                    place = error;
                    if (this.settings.wrapper) {
                        // make sure the element is visible, even in IE
                        // actually showing the wrapped element is handled elsewhere
                        place = error
                            .hide()
                            .show()
                            .wrap("<" + this.settings.wrapper + "/>")
                            .parent();
                    }
                    if (this.labelContainer.length) {
                        this.labelContainer.append(place);
                    } else if (this.settings.errorPlacement) {
                        this.settings.errorPlacement(place, $(element));
                    } else {
                        place.insertAfter(element);
                    }

                    // Link error back to the element
                    if (error.is("label")) {
                        // If the error is a label, then associate using 'for'
                        error.attr("for", elementID);
                    } else if (error.parents("label[for='" + elementID + "']").length === 0) {
                        // If the element is not a child of an associated label, then it's necessary
                        // to explicitly apply aria-describedby

                        errorID = error.attr("id").replace(/(:|\.|\[|\])/g, "\\$1");
                        // Respect existing non-error aria-describedby
                        if (!describedBy) {
                            describedBy = errorID;
                        } else if (!describedBy.match(new RegExp("\\b" + errorID + "\\b"))) {
                            // Add to end of list if not already present
                            describedBy += " " + errorID;
                        }
                        $(element).attr("aria-describedby", describedBy);

                        // If this element is grouped, then assign to all elements in the same group
                        group = this.groups[element.name];
                        if (group) {
                            $.each(this.groups, function (name, testgroup) {
                                if (testgroup === group) {
                                    $("[name='" + name + "']", this.currentForm).attr("aria-describedby", error.attr("id"));
                                }
                            });
                        }
                    }
                }
                if (!message && this.settings.success) {
                    error.text("");
                    if (typeof this.settings.success === "string") {
                        error.addClass(this.settings.success);
                    } else {
                        this.settings.success(error, element);
                    }
                }
                this.toShow = this.toShow.add(error);
            },
            errorsFor: function (element) {
                var name = this.idOrName(element),
                    describer = $(element).attr("aria-describedby"),
                    selector = "label[for='" + name + "'], label[for='" + name + "'] *";

                // aria-describedby should directly reference the error element
                if (describer) {
                    selector = selector + ", #" + describer.replace(/\s+/g, ", #");
                }
                return this.errors().filter(selector);
            },
            idOrName: function (element) {
                return this.groups[element.name] || (this.checkable(element) ? element.name : element.id || element.name);
            },
            validationTargetFor: function (element) {
                // If radio/checkbox, validate first element in group instead
                if (this.checkable(element)) {
                    element = this.findByName(element.name);
                }

                // Always apply ignore filter
                return $(element).not(this.settings.ignore)[0];
            },
            checkable: function (element) {
                return /radio|checkbox/i.test(element.type);
            },
            findByName: function (name) {
                return $(this.currentForm).find("[name='" + name + "']");
            },
            getLength: function (value, element) {
                switch (element.nodeName.toLowerCase()) {
                    case "select":
                        return $("option:selected", element).length;
                    case "input":
                        if (this.checkable(element)) {
                            return this.findByName(element.name).filter(":checked").length;
                        }
                }
                return value.length;
            },
            depend: function (param, element) {
                return this.dependTypes[typeof param] ? this.dependTypes[typeof param](param, element) : true;
            },
            dependTypes: {
                boolean: function (param) {
                    return param;
                },
                string: function (param, element) {
                    return !!$(param, element.form).length;
                },
                function: function (param, element) {
                    return param(element);
                },
            },
            optional: function (element) {
                var val = this.elementValue(element);
                return !$.validator.methods.required.call(this, val, element) && "dependency-mismatch";
            },
            startRequest: function (element) {
                if (!this.pending[element.name]) {
                    this.pendingRequest++;
                    this.pending[element.name] = true;
                }
            },
            stopRequest: function (element, valid) {
                this.pendingRequest--;
                // sometimes synchronization fails, make sure pendingRequest is never < 0
                if (this.pendingRequest < 0) {
                    this.pendingRequest = 0;
                }
                delete this.pending[element.name];
                if (valid && this.pendingRequest === 0 && this.formSubmitted && this.form()) {
                    $(this.currentForm).submit();
                    this.formSubmitted = false;
                } else if (!valid && this.pendingRequest === 0 && this.formSubmitted) {
                    $(this.currentForm).triggerHandler("invalid-form", [this]);
                    this.formSubmitted = false;
                }
            },
            previousValue: function (element) {
                return (
                    $.data(element, "previousValue") ||
                    $.data(element, "previousValue", {
                        old: null,
                        valid: true,
                        message: this.defaultMessage(element, "remote"),
                    })
                );
            },
        },
        classRuleSettings: {
            required: { required: true },
            email: { email: true },
            url: { url: true },
            date: { date: true },
            dateISO: { dateISO: true },
            number: { number: true },
            digits: { digits: true },
            creditcard: { creditcard: true },
            firstname: { firstname: true },
            lastname: { lastname: true },
            specialcharacters: { specialcharacters: true },
            namewithdot: { namewithdot: true },
            phonenumber: { phonenumber: true },
            cellnumber: { cellnumber: true },
            username: { username: true },
            nospace: { nospace: true },
            fullname: { fullname: true },
            notStartWithSpace: { notStartWithSpace: true },
            nonzeronumber: { nonzeronumber: true },
            code: { code: true },
            password: { password: true },
            nondecimal: { nondecimal: true },
            alphaspace: { digits: true },
            alphaOnly: { alphaOnly: true },
            countryTitle: { countryTitle: true },
            newsTitle: { newsTitle: true },
            alphaCode: { alphaCode: true },
            zipCode: { zipCode: true },
            faxCode: { faxCode: true },
            tollFreeCode: { tollFreeCode: true },
            url_host: { url_host: true },
            price: { price: true },
            latlong: { latlong: true },
            categoryname: { categoryname: true },
        },
        addClassRules: function (className, rules) {
            if (className.constructor === String) {
                this.classRuleSettings[className] = rules;
            } else {
                $.extend(this.classRuleSettings, className);
            }
        },
        classRules: function (element) {
            var rules = {},
                classes = $(element).attr("class");

            if (classes) {
                $.each(classes.split(" "), function () {
                    if (this in $.validator.classRuleSettings) {
                        $.extend(rules, $.validator.classRuleSettings[this]);
                    }
                });
            }
            return rules;
        },
        attributeRules: function (element) {
            var rules = {},
                $element = $(element),
                type = element.getAttribute("type"),
                method,
                value;

            for (method in $.validator.methods) {
                // support for <input required> in both html5 and older browsers
                if (method === "required") {
                    value = element.getAttribute(method);
                    // Some browsers return an empty string for the required attribute
                    // and non-HTML5 browsers might have required="" markup
                    if (value === "") {
                        value = true;
                    }
                    // force non-HTML5 browsers to return bool
                    value = !!value;
                } else {
                    value = $element.attr(method);
                }

                // convert the value to a number for number inputs, and for text for backwards compability
                // allows type="date" and others to be compared as strings
                if (/min|max/.test(method) && (type === null || /number|range|text/.test(type))) {
                    value = Number(value);
                }

                if (value || value === 0) {
                    rules[method] = value;
                } else if (type === method && type !== "range") {
                    // exception: the jquery validate 'range' method
                    // does not test for the html5 'range' type
                    rules[method] = true;
                }
            }

            // maxlength may be returned as -1, 2147483647 ( IE ) and 524288 ( safari ) for text inputs
            if (rules.maxlength && /-1|2147483647|524288/.test(rules.maxlength)) {
                delete rules.maxlength;
            }

            return rules;
        },
        dataRules: function (element) {
            var method,
                value,
                rules = {},
                $element = $(element);
            for (method in $.validator.methods) {
                value = $element.data("rule" + method.charAt(0).toUpperCase() + method.substring(1).toLowerCase());
                if (value !== undefined) {
                    rules[method] = value;
                }
            }
            return rules;
        },
        staticRules: function (element) {
            var rules = {},
                validator = $.data(element.form, "validator");

            if (validator.settings.rules) {
                rules = $.validator.normalizeRule(validator.settings.rules[element.name]) || {};
            }
            return rules;
        },
        normalizeRules: function (rules, element) {
            // handle dependency check
            $.each(rules, function (prop, val) {
                // ignore rule when param is explicitly false, eg. required:false
                if (val === false) {
                    delete rules[prop];
                    return;
                }
                if (val.param || val.depends) {
                    var keepRule = true;
                    switch (typeof val.depends) {
                        case "string":
                            keepRule = !!$(val.depends, element.form).length;
                            break;
                        case "function":
                            keepRule = val.depends.call(element, element);
                            break;
                    }
                    if (keepRule) {
                        rules[prop] = val.param !== undefined ? val.param : true;
                    } else {
                        delete rules[prop];
                    }
                }
            });

            // evaluate parameters
            $.each(rules, function (rule, parameter) {
                rules[rule] = $.isFunction(parameter) ? parameter(element) : parameter;
            });

            // clean number parameters
            $.each(["minlength", "maxlength"], function () {
                if (rules[this]) {
                    rules[this] = Number(rules[this]);
                }
            });
            $.each(["rangelength", "range"], function () {
                var parts;
                if (rules[this]) {
                    if ($.isArray(rules[this])) {
                        rules[this] = [Number(rules[this][0]), Number(rules[this][1])];
                    } else if (typeof rules[this] === "string") {
                        parts = rules[this].replace(/[\[\]]/g, "").split(/[\s,]+/);
                        rules[this] = [Number(parts[0]), Number(parts[1])];
                    }
                }
            });

            if ($.validator.autoCreateRanges) {
                // auto-create ranges
                if (rules.min != null && rules.max != null) {
                    rules.range = [rules.min, rules.max];
                    delete rules.min;
                    delete rules.max;
                }
                if (rules.minlength != null && rules.maxlength != null) {
                    rules.rangelength = [rules.minlength, rules.maxlength];
                    delete rules.minlength;
                    delete rules.maxlength;
                }
            }

            return rules;
        },
        // Converts a simple string to a {string: true} rule, e.g., "required" to {required:true}
        normalizeRule: function (data) {
            if (typeof data === "string") {
                var transformed = {};
                $.each(data.split(/\s/), function () {
                    transformed[this] = true;
                });
                data = transformed;
            }
            return data;
        },
        // http://jqueryvalidation.org/jQuery.validator.addMethod/
        addMethod: function (name, method, message) {
            $.validator.methods[name] = method;
            $.validator.messages[name] = message !== undefined ? message : $.validator.messages[name];
            if (method.length < 3) {
                $.validator.addClassRules(name, $.validator.normalizeRule(name));
            }
        },
        methods: {
            // http://jqueryvalidation.org/required-method/
            required: function (value, element, param) {
                // check if dependency is met
                if (!this.depend(param, element)) {
                    return "dependency-mismatch";
                }
                if (element.nodeName.toLowerCase() === "select") {
                    // could be an array for select-multiple or a string, both are fine this way
                    var val = $(element).val();
                    return val && val.length > 0;
                }
                if (this.checkable(element)) {
                    return this.getLength(value, element) > 0;
                }
                return $.trim(value).length > 0;
            },
            // http://jqueryvalidation.org/email-method/
            email: function (value, element) {
                // From http://www.whatwg.org/specs/web-apps/current-work/multipage/states-of-the-type-attribute.html#e-mail-state-%28type=email%29
                // Retrieved 2014-01-14
                // If you have a problem with this implementation, report a bug against the above spec
                // Or use custom methods to implement your own email validation
                //return this.optional(element) || /^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(value);
                //HB Customization
                return this.optional(element) || /^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?\.[a-zA-Z]{2}(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(value);
            },
            // http://jqueryvalidation.org/url-method/
            url: function (value, element) {
                // contributed by Scott Gonzalez: http://projects.scottsplayground.com/iri/
                return (
                    this.optional(element) ||
                    /^(https?|s?ftp):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i.test(
                        value
                    )
                );
            },
            // http://jqueryvalidation.org/date-method/
            date: function (value, element) {
                return this.optional(element) || !/Invalid|NaN/.test(new Date(value).toString());
            },
            // http://jqueryvalidation.org/dateISO-method/
            dateISO: function (value, element) {
                return this.optional(element) || /^\d{4}[\/\-](0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])$/.test(value);
            },
            // http://jqueryvalidation.org/number-method/
            number: function (value, element) {
                return this.optional(element) || /^-?(?:\d+|\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/.test(value);
            },
            // http://jqueryvalidation.org/digits-method/
            digits: function (value, element) {
                return this.optional(element) || /^\d+$/.test(value);
            },
            // http://jqueryvalidation.org/creditcard-method/
            // based on http://en.wikipedia.org/wiki/Luhn/
            creditcard: function (value, element) {
                if (this.optional(element)) {
                    return "dependency-mismatch";
                }
                // accept only spaces, digits and dashes
                if (/[^0-9 \-]+/.test(value)) {
                    return false;
                }
                var nCheck = 0,
                    nDigit = 0,
                    bEven = false,
                    n,
                    cDigit;

                value = value.replace(/\D/g, "");

                // Basing min and max length on
                // http://developer.ean.com/general_info/Valid_Credit_Card_Types
                if (value.length < 13 || value.length > 19) {
                    return false;
                }

                for (n = value.length - 1; n >= 0; n--) {
                    cDigit = value.charAt(n);
                    nDigit = parseInt(cDigit, 10);
                    if (bEven) {
                        if ((nDigit *= 2) > 9) {
                            nDigit -= 9;
                        }
                    }
                    nCheck += nDigit;
                    bEven = !bEven;
                }

                return nCheck % 10 === 0;
            },
            // http://jqueryvalidation.org/minlength-method/
            minlength: function (value, element, param) {
                var length = $.isArray(value) ? value.length : this.getLength(value, element);
                return this.optional(element) || length >= param;
            },
            // http://jqueryvalidation.org/maxlength-method/
            maxlength: function (value, element, param) {
                var length = $.isArray(value) ? value.length : this.getLength(value, element);
                return this.optional(element) || length <= param;
            },
            // http://jqueryvalidation.org/rangelength-method/
            rangelength: function (value, element, param) {
                var length = $.isArray(value) ? value.length : this.getLength(value, element);
                return this.optional(element) || (length >= param[0] && length <= param[1]);
            },
            // http://jqueryvalidation.org/min-method/
            min: function (value, element, param) {
                return this.optional(element) || value >= param;
            },
            // http://jqueryvalidation.org/max-method/
            max: function (value, element, param) {
                return this.optional(element) || value <= param;
            },
            // http://jqueryvalidation.org/range-method/
            range: function (value, element, param) {
                return this.optional(element) || (value >= param[0] && value <= param[1]);
            },
            // http://jqueryvalidation.org/equalTo-method/
            equalTo: function (value, element, param) {
                // bind to the blur event of the target in order to revalidate whenever the target field is updated
                // TODO find a way to bind the event just once, avoiding the unbind-rebind overhead
                var target = $(param);
                if (this.settings.onfocusout) {
                    target.unbind(".validate-equalTo").bind("blur.validate-equalTo", function () {
                        $(element).valid();
                    });
                }
                return value === target.val();
            },
            // http://jqueryvalidation.org/remote-method/
            remote: function (value, element, param) {
                if (this.optional(element)) {
                    return "dependency-mismatch";
                }

                var previous = this.previousValue(element),
                    validator,
                    data;

                if (!this.settings.messages[element.name]) {
                    this.settings.messages[element.name] = {};
                }
                previous.originalMessage = this.settings.messages[element.name].remote;
                this.settings.messages[element.name].remote = previous.message;

                param = (typeof param === "string" && { url: param }) || param;

                if (previous.old === value) {
                    return previous.valid;
                }

                previous.old = value;
                validator = this;
                this.startRequest(element);
                data = {};
                data[element.name] = value;
                $.ajax(
                    $.extend(
                        true,
                        {
                            url: param,
                            mode: "abort",
                            port: "validate" + element.name,
                            dataType: "json",
                            data: data,
                            context: validator.currentForm,
                            success: function (response) {
                                var valid = response === true || response === "true",
                                    errors,
                                    message,
                                    submitted;

                                validator.settings.messages[element.name].remote = previous.originalMessage;
                                if (valid) {
                                    submitted = validator.formSubmitted;
                                    validator.prepareElement(element);
                                    validator.formSubmitted = submitted;
                                    validator.successList.push(element);
                                    delete validator.invalid[element.name];
                                    validator.showErrors();
                                } else {
                                    errors = {};
                                    message = response || validator.defaultMessage(element, "remote");
                                    errors[element.name] = previous.message = $.isFunction(message) ? message(value) : message;
                                    validator.invalid[element.name] = true;
                                    validator.showErrors(errors);
                                }
                                previous.valid = valid;
                                validator.stopRequest(element, valid);
                            },
                        },
                        param
                    )
                );
                return "pending";
            },
            accept: function (value, element, param) {
                param = typeof param == "string" ? param.replace(/,/g, "|") : "png|jpe?g|gif";
                return this.optional(element) || value.match(new RegExp(".(" + param + ")$", "i"));
            },
            firstname: function (value, element) {
                if (value.length > 0) {
                    return this.optional(element) || value === "NA" || value.match(/^[a-zA-Z ]+$/);
                } else {
                    return false;
                }
            },
            lastname: function (value, element) {
                if (value.length > 0) {
                    return this.optional(element) || value === "NA" || value.match(/^[a-zA-Z' ]+$/);
                } else {
                    return false;
                }
            },
            namewithdot: function (value, element) {
                if (value.length > 0) {
                    return this.optional(element) || value === "NA" || value.match(/^[a-zA-Z.\' ]+$/);
                } else {
                    return false;
                }
            },
            specialcharacters: function (value, element) {
                if (value.length > 0) {
                    return this.optional(element) || value === "NA" || value.match(/^[^!@#$%<>+=*`~"^\\?:;|/]+$/);
                } else {
                    return false;
                }
            },
            phonenumber: function (value, element) {
                return this.optional(element) || value === "NA" || value.match(/^[0-9\+)(\[\]{}-]+$/);
            },
            cellnumber: function (value, element) {
                return this.optional(element) || value === "NA" || (value.match(/^[0-9]+$/) && value.length >= 10);
            },
            nospace: function (value, element) {
                // contributed by Scott Gonzalez: http://projects.scottsplayground.com/email_address_validation/
                return value.indexOf(" ") < 0 && value != "";
            },
            username: function (value, element) {
                if (value.length >= 5) {
                    return this.optional(element) || value === "NA" || value.match(/^[a-zA-Z0-9\._]+$/);
                } else {
                    return false;
                }
            },
            fullname: function (value, element) {
                if (value.length > 0) {
                    return this.optional(element) || value === "NA" || value.match(/^[a-zA-Z\' ]+$/);
                } else {
                    return false;
                }
            },
            notStartWithSpace: function (value, element) {
                if (value.length > 0) {
                    return this.optional(element) || value === "NA" || value.match(/^([\S])+.*$/);
                } else {
                    return false;
                }
            },
            nonzeronumber: function (value, element) {
                if (value > 0) {
                    return this.optional(element) || value === "NA" || value.match(/^\+?[0-9]*\.?[0-9]+$/);
                } else {
                    return false;
                }
            },
            code: function (value, element) {
                if (value.length > 0) {
                    return this.optional(element) || value === "NA" || value.match(/^[a-zA-Z]+$/);
                } else {
                    return false;
                }
            },
            password: function (value, element) {
                if (value.length >= 5) {
                    return this.optional(element) || value === "NA" || value.match(/^[^ ]+$/);
                } else {
                    return false;
                }
            },
            price: function (value) {
                if (Number(value) > 0) {
                    return value.match(/^[0-9]+.[0-9]+$/) || value.match(/^[0-9]+$/);
                }
            },
            positive_number: function (value) {
                return Number(value) > 0;
            },
            latlong: function (value, element) {
                return this.optional(element) || /^[0-9\.,-]+$/.test(value);
            },
            categoryname: function (value, element) {
                if (value.length > 0) {
                    return this.optional(element) || value === "NA" || value.match(/^[&a-zA-Z' ]+$/);
                } else {
                    return false;
                }
            },
            nondecimal: function (value, element) {
                return this.optional(element) || value === "NA" || value.match(/^[0-9]+$/);
            },
            alphaspace: function (value, element) {
                // contributed by Chittaranjan Nayak:
                return this.optional(element) || /^[A-Za-z0-9][A-Za-z0-9\.\-_]*$/.test(value);
            },
            alphaOnly: function (value, element) {
                return this.optional(element) || value === "NA" || value.match(/^[a-zA-Z ]+$/);
            },
            countryTitle: function (value, element) {
                return this.optional(element) || value === "NA" || value.match(/^[^0-9!@#$%_<>+=*`~"^\\?:;|/]+$/);
            },
            newsTitle: function (value, element) {
                return this.optional(element) || value === "NA" || value.match(/^[^-!@#$%_<>+=*`~"^\\?:;|/]+$/);
            },
            alphaCode: function (value, element) {
                return this.optional(element) || value === "NA" || value.match(/^[a-zA-Z]+$/);
            },

            zipCode: function (value, element) {
                return this.optional(element) || value === "NA" || (value.match(/^[0-9a-zA-Z ]+$/) && value.length >= 3 && value.length <= 10);
            },
            faxCode: function (value, element) {
                return this.optional(element) || value === "NA" || value.match(/^[0-9\+)(\[\]{}-]+$/);
            },
            tollFreeCode: function (value, element) {
                return this.optional(element) || value === "NA" || value.match(/^[0-9\+)(-]+$/);
            },
            url_host: function (value, element) {
                if ($.trim(value) != "") {
                    url = site_url + "tools/settings/get_host";
                    $.getJSON(
                        url,
                        {
                            validate_url: "" + value + "",
                        },
                        function (data) {
                            response = data.response;
                            return response;
                        }
                    );
                } else {
                    return true;
                }
            },
            maxdate: function (value, element, param) {
                var val = value.toString();
                var vl = val.split("-");
                var vdt = vl[2] + "/" + vl[1] + "/" + vl[0];
                vl[0] = parseInt(vl[0], 10);
                vl[1] = parseInt(vl[1], 10);
                vl[2] = parseInt(vl[2], 10);
                vl[1] = vl[1] - 1;
                var vdate = new Date(vl[0], vl[1], vl[2]);

                // var tday = new Date();
                var mval = $("#" + param)
                    .val()
                    .toString();
                var mvl = mval.split("-");
                var mvdt = mvl[2] + "/" + mvl[1] + "/" + mvl[0];
                mvl[0] = parseInt(mvl[0], 10);
                mvl[1] = parseInt(mvl[1], 10);
                mvl[2] = parseInt(mvl[2], 10);
                mvl[1] = mvl[1] - 1;
                var mdate = new Date(mvl[0], mvl[1], mvl[2]);

                // alert(vdate.getTime()+'>'+mdate.getTime());
                if (vdate.getTime() < mdate.getTime()) {
                    return true;
                } else {
                    return false;
                }
            },

            // check min limit of date
            mindate: function (value, element, param) {
                if ($.trim(value) == "" || $.trim($("#" + param).val()) == "") {
                    return true;
                }

                var val = value.toString();
                var vl = val.split("-");
                var vdt = vl[2] + "/" + vl[1] + "/" + vl[0];
                vl[0] = parseInt(vl[0], 10);
                vl[1] = parseInt(vl[1], 10);
                vl[2] = parseInt(vl[2], 10);
                vl[1] = vl[1] - 1;
                var vdate = new Date(vl[0], vl[1], vl[2]);

                // var tday = new Date();
                var mval = $("#" + param)
                    .val()
                    .toString();
                var mvl = mval.split("-");
                var mvdt = mvl[2] + "/" + mvl[1] + "/" + mvl[0];
                mvl[0] = parseInt(mvl[0], 10);
                mvl[1] = parseInt(mvl[1], 10);
                mvl[2] = parseInt(mvl[2], 10);
                mvl[1] = mvl[1] - 1;
                var mdate = new Date(mvl[0], mvl[1], mvl[2]);

                // alert(vdate.getTime()+'>'+mdate.getTime());
                if (vdate.getTime() > mdate.getTime()) {
                    return true;
                } else {
                    return false;
                }
            },
        },
    });

    $.format = function deprecated() {
        throw "$.format has been deprecated. Please use $.validator.format instead.";
    };

    // ajax mode: abort
    // usage: $.ajax({ mode: "abort"[, port: "uniqueport"]});
    // if mode:"abort" is used, the previous request on that port (port can be undefined) is aborted via XMLHttpRequest.abort()

    var pendingRequests = {},
        ajax;
    // Use a prefilter if available (1.5+)
    if ($.ajaxPrefilter) {
        $.ajaxPrefilter(function (settings, _, xhr) {
            var port = settings.port;
            if (settings.mode === "abort") {
                if (pendingRequests[port]) {
                    pendingRequests[port].abort();
                }
                pendingRequests[port] = xhr;
            }
        });
    } else {
        // Proxy ajax
        ajax = $.ajax;
        $.ajax = function (settings) {
            var mode = ("mode" in settings ? settings : $.ajaxSettings).mode,
                port = ("port" in settings ? settings : $.ajaxSettings).port;
            if (mode === "abort") {
                if (pendingRequests[port]) {
                    pendingRequests[port].abort();
                }
                pendingRequests[port] = ajax.apply(this, arguments);
                return pendingRequests[port];
            }
            return ajax.apply(this, arguments);
        };
    }

    // provides delegate(type: String, delegate: Selector, handler: Callback) plugin for easier event delegation
    // handler is only called when $(event.target).is(delegate), in the scope of the jquery-object for event.target

    $.extend($.fn, {
        validateDelegate: function (delegate, type, handler) {
            return this.bind(type, function (event) {
                var target = $(event.target);
                if (target.is(delegate)) {
                    return handler.apply(target, arguments);
                }
            });
        },
    });
});
var Common = (function () {
    var objReturn = {};

    function initValidator() {
        if (typeof $.validator != "undefined") {
            $.validator.setDefaults({
                errorClass: "help-block",
                errorElement: "span",
                highlight: function (element) {
                    $(element).closest(".form-group").addClass("has-error");
                },
                unhighlight: function (element) {
                    $(element).closest(".form-group").removeClass("has-error");
                },
            });
        }
    }

    function stringReplace(label_str, find_str, replace_str) {
        var return_str = "";
        if (label_str) {
            if (find_str) {
                var regExp = new RegExp(find_str);
                replace_str = replace_str ? replace_str.toLowerCase() : "";
                label_str = label_str.replace(find_str, replace_str);
                return_str = label_str.replace(regExp, replace_str);
            }
        }
        return return_str;
    }

    objReturn.initValidator = initValidator;
    objReturn.stringReplace = stringReplace;

    return objReturn;
})();
/*!
 * jQuery blockUI plugin
 * Version 2.70.0-2014.11.23
 * Requires jQuery v1.7 or later
 * Examples at: http://malsup.com/jquery/block/
 */slider
(function () {
    function p(b) {
        function p(c, a) {
            var f,
                h,
                e = c == window,
                g = a && void 0 !== a.message ? a.message : void 0;
            a = b.extend({}, b.blockUI.defaults, a || {});
            if (!a.ignoreIfBlocked || !b(c).data("blockUI.isBlocked")) {
                a.overlayCSS = b.extend({}, b.blockUI.defaults.overlayCSS, a.overlayCSS || {});
                f = b.extend({}, b.blockUI.defaults.css, a.css || {});
                a.onOverlayClick && (a.overlayCSS.cursor = "pointer");
                h = b.extend({}, b.blockUI.defaults.themedCSS, a.themedCSS || {});
                g = void 0 === g ? a.message : g;
                e && l && t(window, { fadeOut: 0 });
                if (g && "string" != typeof g && (g.parentNode || g.jquery)) {
                    var k = g.jquery ? g[0] : g,
                        d = {};
                    b(c).data("blockUI.history", d);
                    d.el = k;
                    d.parent = k.parentNode;
                    d.display = k.style.display;
                    d.position = k.style.position;
                    d.parent && d.parent.removeChild(k);
                }
                b(c).data("blockUI.onUnblock", a.onUnblock);
                var d = a.baseZ,
                    m;
                m =
                    u || a.forceIframe
                        ? b('<iframe class="blockUI" style="z-index:' + d++ + ';display:none;border:none;margin:0;padding:0;position:absolute;width:100%;height:100%;top:0;left:0" src="' + a.iframeSrc + '"></iframe>')
                        : b('<div class="blockUI" style="display:none"></div>');
                k = a.theme
                    ? b('<div class="blockUI blockOverlay ui-widget-overlay" style="z-index:' + d++ + ';display:none"></div>')
                    : b('<div class="blockUI blockOverlay" style="z-index:' + d++ + ';display:none;border:none;margin:0;padding:0;width:100%;height:100%;top:0;left:0"></div>');
                a.theme && e
                    ? ((d = '<div class="blockUI ' + a.blockMsgClass + ' blockPage ui-dialog ui-widget ui-corner-all" style="z-index:' + (d + 10) + ';display:none;position:fixed">'),
                      a.title && (d += '<div class="ui-widget-header ui-dialog-titlebar ui-corner-all blockTitle">' + (a.title || "&nbsp;") + "</div>"),
                      (d += '<div class="ui-widget-content ui-dialog-content"></div></div>'))
                    : a.theme
                    ? ((d = '<div class="blockUI ' + a.blockMsgClass + ' blockElement ui-dialog ui-widget ui-corner-all" style="z-index:' + (d + 10) + ';display:none;position:absolute">'),
                      a.title && (d += '<div class="ui-widget-header ui-dialog-titlebar ui-corner-all blockTitle">' + (a.title || "&nbsp;") + "</div>"),
                      (d += '<div class="ui-widget-content ui-dialog-content"></div></div>'))
                    : (d = e
                          ? '<div class="blockUI ' + a.blockMsgClass + ' blockPage" style="z-index:' + (d + 10) + ';display:none;position:fixed"></div>'
                          : '<div class="blockUI ' + a.blockMsgClass + ' blockElement" style="z-index:' + (d + 10) + ';display:none;position:absolute"></div>');
                d = b(d);
                g && (a.theme ? (d.css(h), d.addClass("ui-widget-content")) : d.css(f));
                a.theme || k.css(a.overlayCSS);
                k.css("position", e ? "fixed" : "absolute");
                (u || a.forceIframe) && m.css("opacity", 0);
                f = [m, k, d];
                var r = e ? b("body") : b(c);
                b.each(f, function () {
                    this.appendTo(r);
                });
                a.theme && a.draggable && b.fn.draggable && d.draggable({ handle: ".ui-dialog-titlebar", cancel: "li" });
                h = B && (!b.support.boxModel || 0 < b("object,embed", e ? null : c).length);
                if (w || h) {
                    e && a.allowBodyStretch && b.support.boxModel && b("html,body").css("height", "100%");
                    if ((w || !b.support.boxModel) && !e) {
                        h = parseInt(b.css(c, "borderTopWidth"), 10) || 0;
                        var q = parseInt(b.css(c, "borderLeftWidth"), 10) || 0,
                            x = h ? "(0 - " + h + ")" : 0,
                            y = q ? "(0 - " + q + ")" : 0;
                    }
                    b.each(f, function (b, c) {
                        var d = c[0].style;
                        d.position = "absolute";
                        if (2 > b)
                            e
                                ? d.setExpression("height", "Math.max(document.body.scrollHeight, document.body.offsetHeight) - (jQuery.support.boxModel?0:" + a.quirksmodeOffsetHack + ') + "px"')
                                : d.setExpression("height", 'this.parentNode.offsetHeight + "px"'),
                                e ? d.setExpression("width", 'jQuery.support.boxModel && document.documentElement.clientWidth || document.body.clientWidth + "px"') : d.setExpression("width", 'this.parentNode.offsetWidth + "px"'),
                                y && d.setExpression("left", y),
                                x && d.setExpression("top", x);
                        else if (a.centerY)
                            e &&
                                d.setExpression(
                                    "top",
                                    '(document.documentElement.clientHeight || document.body.clientHeight) / 2 - (this.offsetHeight / 2) + (blah = document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop) + "px"'
                                ),
                                (d.marginTop = 0);
                        else if (!a.centerY && e) {
                            var f = a.css && a.css.top ? parseInt(a.css.top, 10) : 0;
                            d.setExpression("top", "((document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop) + " + f + ') + "px"');
                        }
                    });
                }
                g && (a.theme ? d.find(".ui-widget-content").append(g) : d.append(g), (g.jquery || g.nodeType) && b(g).show());
                (u || a.forceIframe) && a.showOverlay && m.show();
                a.fadeIn
                    ? ((f = a.onBlock ? a.onBlock : v), (m = a.showOverlay && !g ? f : v), (f = g ? f : v), a.showOverlay && k._fadeIn(a.fadeIn, m), g && d._fadeIn(a.fadeIn, f))
                    : (a.showOverlay && k.show(), g && d.show(), a.onBlock && a.onBlock.bind(d)());
                z(1, c, a);
                e ? ((l = d[0]), (n = b(a.focusableElements, l)), a.focusInput && setTimeout(A, 20)) : C(d[0], a.centerX, a.centerY);
                a.timeout &&
                    ((g = setTimeout(function () {
                        e ? b.unblockUI(a) : b(c).unblock(a);
                    }, a.timeout)),
                    b(c).data("blockUI.timeout", g));
            }
        }
        function t(c, a) {
            var f,
                h = c == window,
                e = b(c),
                g = e.data("blockUI.history"),
                k = e.data("blockUI.timeout");
            k && (clearTimeout(k), e.removeData("blockUI.timeout"));
            a = b.extend({}, b.blockUI.defaults, a || {});
            z(0, c, a);
            null === a.onUnblock && ((a.onUnblock = e.data("blockUI.onUnblock")), e.removeData("blockUI.onUnblock"));
            var d;
            d = h ? b("body").children().filter(".blockUI").add("body > .blockUI") : e.find(">.blockUI");
            a.cursorReset && (1 < d.length && (d[1].style.cursor = a.cursorReset), 2 < d.length && (d[2].style.cursor = a.cursorReset));
            h && (l = n = null);
            a.fadeOut
                ? ((f = d.length),
                  d.stop().fadeOut(a.fadeOut, function () {
                      0 === --f && r(d, g, a, c);
                  }))
                : r(d, g, a, c);
        }
        function r(c, a, f, h) {
            var e = b(h);
            if (!e.data("blockUI.isBlocked")) {
                c.each(function (a, b) {
                    this.parentNode && this.parentNode.removeChild(this);
                });
                a && a.el && ((a.el.style.display = a.display), (a.el.style.position = a.position), (a.el.style.cursor = "default"), a.parent && a.parent.appendChild(a.el), e.removeData("blockUI.history"));
                e.data("blockUI.static") && e.css("position", "static");
                if ("function" == typeof f.onUnblock) f.onUnblock(h, f);
                c = b(document.body);
                a = c.width();
                f = c[0].style.width;
                c.width(a - 1).width(a);
                c[0].style.width = f;
            }
        }
        function z(c, a, f) {
            var h = a == window;
            a = b(a);
            if (c || ((!h || l) && (h || a.data("blockUI.isBlocked"))))
                a.data("blockUI.isBlocked", c),
                    h &&
                        f.bindEvents &&
                        (!c || f.showOverlay) &&
                        (c ? b(document).bind("mousedown mouseup keydown keypress keyup touchstart touchend touchmove", f, q) : b(document).unbind("mousedown mouseup keydown keypress keyup touchstart touchend touchmove", q));
        }
        function q(c) {
            if ("keydown" === c.type && c.keyCode && 9 == c.keyCode && l && c.data.constrainTabKey) {
                var a = n,
                    f = c.shiftKey && c.target === a[0];
                if ((!c.shiftKey && c.target === a[a.length - 1]) || f)
                    return (
                        setTimeout(function () {
                            A(f);
                        }, 10),
                        !1
                    );
            }
            var a = c.data,
                h = b(c.target);
            if (h.hasClass("blockOverlay") && a.onOverlayClick) a.onOverlayClick(c);
            return 0 < h.parents("div." + a.blockMsgClass).length ? !0 : 0 === h.parents().children().filter("div.blockUI").length;
        }
        function A(b) {
            n && (b = n[!0 === b ? n.length - 1 : 0]) && b.focus();
        }
        function C(c, a, f) {
            var h = c.parentNode,
                e = c.style,
                g = (h.offsetWidth - c.offsetWidth) / 2 - (parseInt(b.css(h, "borderLeftWidth"), 10) || 0);
            c = (h.offsetHeight - c.offsetHeight) / 2 - (parseInt(b.css(h, "borderTopWidth"), 10) || 0);
            a && (e.left = 0 < g ? g + "px" : "0");
            f && (e.top = 0 < c ? c + "px" : "0");
        }
        b.fn._fadeIn = b.fn.fadeIn;
        var v = b.noop || function () {},
            u = /MSIE/.test(navigator.userAgent),
            w = /MSIE 6.0/.test(navigator.userAgent) && !/MSIE 8.0/.test(navigator.userAgent),
            B = b.isFunction(document.createElement("div").style.setExpression);
        b.blockUI = function (b) {
            p(window, b);
        };
        b.unblockUI = function (b) {
            t(window, b);
        };
        b.growlUI = function (c, a, f, h) {
            var e = b('<div class="growlUI"></div>');
            c && e.append("<h1>" + c + "</h1>");
            a && e.append("<h2>" + a + "</h2>");
            void 0 === f && (f = 3e3);
            var g = function (a) {
                a = a || {};
                b.blockUI({
                    message: e,
                    fadeIn: "undefined" !== typeof a.fadeIn ? a.fadeIn : 700,
                    fadeOut: "undefined" !== typeof a.fadeOut ? a.fadeOut : 1e3,
                    timeout: "undefined" !== typeof a.timeout ? a.timeout : f,
                    centerY: !1,
                    showOverlay: !1,
                    onUnblock: h,
                    css: b.blockUI.defaults.growlCSS,
                });
            };
            g();
            e.css("opacity");
            e.mouseover(function () {
                g({ fadeIn: 0, timeout: 3e4 });
                var a = b(".blockMsg");
                a.stop();
                a.fadeTo(300, 1);
            }).mouseout(function () {
                b(".blockMsg").fadeOut(1e3);
            });
        };
        b.fn.block = function (c) {
            if (this[0] === window) return b.blockUI(c), this;
            var a = b.extend({}, b.blockUI.defaults, c || {});
            this.each(function () {
                var c = b(this);
                (a.ignoreIfBlocked && c.data("blockUI.isBlocked")) || c.unblock({ fadeOut: 0 });
            });
            return this.each(function () {
                "static" == b.css(this, "position") && ((this.style.position = "relative"), b(this).data("blockUI.static", !0));
                this.style.zoom = 1;
                p(this, c);
            });
        };
        b.fn.unblock = function (c) {
            return this[0] === window
                ? (b.unblockUI(c), this)
                : this.each(function () {
                      t(this, c);
                  });
        };
        b.blockUI.version = 2.7;
        b.blockUI.defaults = {
            message: "<h1>Please wait...</h1>",
            title: null,
            draggable: !0,
            theme: !1,
            css: { padding: 0, margin: 0, width: "30%", top: "40%", left: "35%", textAlign: "center", color: "#000", border: "3px solid #aaa", backgroundColor: "#fff", cursor: "wait" },
            themedCSS: { width: "30%", top: "40%", left: "35%" },
            overlayCSS: { backgroundColor: "#000", opacity: 0.6, cursor: "wait" },
            cursorReset: "default",
            growlCSS: {
                width: "350px",
                top: "10px",
                left: "",
                right: "10px",
                border: "none",
                padding: "5px",
                opacity: 0.6,
                cursor: "default",
                color: "#fff",
                backgroundColor: "#000",
                "-webkit-border-radius": "10px",
                "-moz-border-radius": "10px",
                "border-radius": "10px",
            },
            iframeSrc: /^https/i.test(window.location.href || "") ? "javascript:false" : "about:blank",
            forceIframe: !1,
            baseZ: 1e3,
            centerX: !0,
            centerY: !0,
            allowBodyStretch: !0,
            bindEvents: !0,
            constrainTabKey: !0,
            fadeIn: 200,
            fadeOut: 400,
            timeout: 0,
            showOverlay: !0,
            focusInput: !0,
            focusableElements: ":input:enabled:visible",
            onBlock: null,
            onUnblock: null,
            onOverlayClick: null,
            quirksmodeOffsetHack: 4,
            blockMsgClass: "blockMsg",
            ignoreIfBlocked: !1,
        };
        var l = null,
            n = [];
    }
    "function" === typeof define && define.amd && define.amd.jQuery ? define(["jquery"], p) : p(jQuery);
})();
/**
 * bootbox.js v4.4.0
 *
 * http://bootboxjs.com/license.txt
 */
!(function (a, b) {
    "use strict";
    "function" == typeof define && define.amd ? define(["jquery"], b) : "object" == typeof exports ? (module.exports = b(require("jquery"))) : (a.bootbox = b(a.jQuery));
})(this, function a(b, c) {
    "use strict";
    function d(a) {
        var b = q[o.locale];
        return b ? b[a] : q.en[a];
    }
    function e(a, c, d) {
        a.stopPropagation(), a.preventDefault();
        var e = b.isFunction(d) && d.call(c, a) === !1;
        e || c.modal("hide");
    }
    function f(a) {
        var b,
            c = 0;
        for (b in a) c++;
        return c;
    }
    function g(a, c) {
        var d = 0;
        b.each(a, function (a, b) {
            c(a, b, d++);
        });
    }
    function h(a) {
        var c, d;
        if ("object" != typeof a) throw new Error("Please supply an object of options");
        if (!a.message) throw new Error("Please specify a message");
        return (
            (a = b.extend({}, o, a)),
            a.buttons || (a.buttons = {}),
            (c = a.buttons),
            (d = f(c)),
            g(c, function (a, e, f) {
                if ((b.isFunction(e) && (e = c[a] = { callback: e }), "object" !== b.type(e))) throw new Error("button with key " + a + " must be an object");
                e.label || (e.label = a), e.className || (e.className = 2 >= d && f === d - 1 ? "btn-primary" : "btn-default");
            }),
            a
        );
    }
    function i(a, b) {
        var c = a.length,
            d = {};
        if (1 > c || c > 2) throw new Error("Invalid argument length");
        return 2 === c || "string" == typeof a[0] ? ((d[b[0]] = a[0]), (d[b[1]] = a[1])) : (d = a[0]), d;
    }
    function j(a, c, d) {
        return b.extend(!0, {}, a, i(c, d));
    }
    function k(a, b, c, d) {
        var e = { className: "bootbox-" + a, buttons: l.apply(null, b) };
        return m(j(e, d, c), b);
    }
    function l() {
        for (var a = {}, b = 0, c = arguments.length; c > b; b++) {
            var e = arguments[b],
                f = e.toLowerCase(),
                g = e.toUpperCase();
            a[f] = { label: d(g) };
        }
        return a;
    }
    function m(a, b) {
        var d = {};
        return (
            g(b, function (a, b) {
                d[b] = !0;
            }),
            g(a.buttons, function (a) {
                if (d[a] === c) throw new Error("button key " + a + " is not allowed (options are " + b.join("\n") + ")");
            }),
            a
        );
    }
    var n = {
            dialog: "<div class='bootbox modal' tabindex='-1' role='dialog'><div class='modal-dialog'><div class='modal-content'><div class='modal-body'><div class='bootbox-body'></div></div></div></div></div>",
            header: "<div class='modal-header'><h4 class='modal-title'></h4></div>",
            footer: "<div class='modal-footer'></div>",
            closeButton: "<button type='button' class='bootbox-close-button close' data-dismiss='modal' aria-hidden='true'>&times;</button>",
            form: "<form class='bootbox-form'></form>",
            inputs: {
                text: "<input class='bootbox-input bootbox-input-text form-control' autocomplete=off type=text />",
                textarea: "<textarea class='bootbox-input bootbox-input-textarea form-control'></textarea>",
                email: "<input class='bootbox-input bootbox-input-email form-control' autocomplete='off' type='email' />",
                select: "<select class='bootbox-input bootbox-input-select form-control'></select>",
                checkbox: "<div class='checkbox'><label><input class='bootbox-input bootbox-input-checkbox' type='checkbox' /></label></div>",
                date: "<input class='bootbox-input bootbox-input-date form-control' autocomplete=off type='date' />",
                time: "<input class='bootbox-input bootbox-input-time form-control' autocomplete=off type='time' />",
                number: "<input class='bootbox-input bootbox-input-number form-control' autocomplete=off type='number' />",
                password: "<input class='bootbox-input bootbox-input-password form-control' autocomplete='off' type='password' />",
            },
        },
        o = { locale: "en", backdrop: "static", animate: !0, className: null, closeButton: !0, show: !0, container: "body" },
        p = {};
    (p.alert = function () {
        var a;
        if (((a = k("alert", ["ok"], ["message", "callback"], arguments)), a.callback && !b.isFunction(a.callback))) throw new Error("alert requires callback property to be a function when provided");
        return (
            (a.buttons.ok.callback = a.onEscape = function () {
                return b.isFunction(a.callback) ? a.callback.call(this) : !0;
            }),
            p.dialog(a)
        );
    }),
        (p.confirm = function () {
            var a;
            if (
                ((a = k("confirm", ["cancel", "confirm"], ["message", "callback"], arguments)),
                (a.buttons.cancel.callback = a.onEscape = function () {
                    return a.callback.call(this, !1);
                }),
                (a.buttons.confirm.callback = function () {
                    return a.callback.call(this, !0);
                }),
                !b.isFunction(a.callback))
            )
                throw new Error("confirm requires a callback");
            return p.dialog(a);
        }),
        (p.prompt = function () {
            var a, d, e, f, h, i, k;
            if (
                ((f = b(n.form)),
                (d = { className: "bootbox-prompt", buttons: l("cancel", "confirm"), value: "", inputType: "text" }),
                (a = m(j(d, arguments, ["title", "callback"]), ["cancel", "confirm"])),
                (i = a.show === c ? !0 : a.show),
                (a.message = f),
                (a.buttons.cancel.callback = a.onEscape = function () {
                    return a.callback.call(this, null);
                }),
                (a.buttons.confirm.callback = function () {
                    var c;
                    switch (a.inputType) {
                        case "text":
                        case "textarea":
                        case "email":
                        case "select":
                        case "date":
                        case "time":
                        case "number":
                        case "password":
                            c = h.val();
                            break;
                        case "checkbox":
                            var d = h.find("input:checked");
                            (c = []),
                                g(d, function (a, d) {
                                    c.push(b(d).val());
                                });
                    }
                    return a.callback.call(this, c);
                }),
                (a.show = !1),
                !a.title)
            )
                throw new Error("prompt requires a title");
            if (!b.isFunction(a.callback)) throw new Error("prompt requires a callback");
            if (!n.inputs[a.inputType]) throw new Error("invalid prompt type");
            switch (((h = b(n.inputs[a.inputType])), a.inputType)) {
                case "text":
                case "textarea":
                case "email":
                case "date":
                case "time":
                case "number":
                case "password":
                    h.val(a.value);
                    break;
                case "select":
                    var o = {};
                    if (((k = a.inputOptions || []), !b.isArray(k))) throw new Error("Please pass an array of input options");
                    if (!k.length) throw new Error("prompt with select requires options");
                    g(k, function (a, d) {
                        var e = h;
                        if (d.value === c || d.text === c) throw new Error("given options in wrong format");
                        d.group && (o[d.group] || (o[d.group] = b("<optgroup/>").attr("label", d.group)), (e = o[d.group])), e.append("<option value='" + d.value + "'>" + d.text + "</option>");
                    }),
                        g(o, function (a, b) {
                            h.append(b);
                        }),
                        h.val(a.value);
                    break;
                case "checkbox":
                    var q = b.isArray(a.value) ? a.value : [a.value];
                    if (((k = a.inputOptions || []), !k.length)) throw new Error("prompt with checkbox requires options");
                    if (!k[0].value || !k[0].text) throw new Error("given options in wrong format");
                    (h = b("<div/>")),
                        g(k, function (c, d) {
                            var e = b(n.inputs[a.inputType]);
                            e.find("input").attr("value", d.value),
                                e.find("label").append(d.text),
                                g(q, function (a, b) {
                                    b === d.value && e.find("input").prop("checked", !0);
                                }),
                                h.append(e);
                        });
            }
            return (
                a.placeholder && h.attr("placeholder", a.placeholder),
                a.pattern && h.attr("pattern", a.pattern),
                a.maxlength && h.attr("maxlength", a.maxlength),
                f.append(h),
                f.on("submit", function (a) {
                    a.preventDefault(), a.stopPropagation(), e.find(".btn-primary").click();
                }),
                (e = p.dialog(a)),
                e.off("shown.bs.modal"),
                e.on("shown.bs.modal", function () {
                    h.focus();
                }),
                i === !0 && e.modal("show"),
                e
            );
        }),
        (p.dialog = function (a) {
            a = h(a);
            var d = b(n.dialog),
                f = d.find(".modal-dialog"),
                i = d.find(".modal-body"),
                j = a.buttons,
                k = "",
                l = { onEscape: a.onEscape };
            if (b.fn.modal === c) throw new Error("$.fn.modal is not defined; please double check you have included the Bootstrap JavaScript library. See http://getbootstrap.com/javascript/ for more details.");
            if (
                (g(j, function (a, b) {
                    (k += "<button data-bb-handler='" + a + "' type='button' class='btn btn-raised " + b.className + "'>" + b.label + "</button>"), (l[a] = b.callback);
                }),
                i.find(".bootbox-body").html(a.message),
                a.animate === !0 && d.addClass("fade"),
                a.className && d.addClass(a.className),
                "large" === a.size ? f.addClass("modal-lg") : "small" === a.size && f.addClass("modal-sm"),
                a.title && i.before(n.header),
                a.closeButton)
            ) {
                var m = b(n.closeButton);
                a.title ? d.find(".modal-header").prepend(m) : m.css("margin-top", "-10px").prependTo(i);
            }
            return (
                a.title && d.find(".modal-title").html(a.title),
                k.length && (i.after(n.footer), d.find(".modal-footer").html(k)),
                d.on("hidden.bs.modal", function (a) {
                    a.target === this && d.remove();
                }),
                d.on("shown.bs.modal", function () {
                    d.find(".btn-primary:first").focus();
                }),
                "static" !== a.backdrop &&
                    d.on("click.dismiss.bs.modal", function (a) {
                        d.children(".modal-backdrop").length && (a.currentTarget = d.children(".modal-backdrop").get(0)), a.target === a.currentTarget && d.trigger("escape.close.bb");
                    }),
                d.on("escape.close.bb", function (a) {
                    l.onEscape && e(a, d, l.onEscape);
                }),
                d.on("click", ".modal-footer button", function (a) {
                    var c = b(this).data("bb-handler");
                    e(a, d, l[c]);
                }),
                d.on("click", ".bootbox-close-button", function (a) {
                    e(a, d, l.onEscape);
                }),
                d.on("keyup", function (a) {
                    27 === a.which && d.trigger("escape.close.bb");
                }),
                b(a.container).append(d),
                d.modal({ backdrop: a.backdrop ? "static" : !1, keyboard: !1, show: !1 }),
                a.show && d.modal("show"),
                d
            );
        }),
        (p.setDefaults = function () {
            var a = {};
            2 === arguments.length ? (a[arguments[0]] = arguments[1]) : (a = arguments[0]), b.extend(o, a);
        }),
        (p.hideAll = function () {
            return b(".bootbox").modal("hide"), p;
        });
    var q = {
        bg_BG: { OK: "Ок", CANCEL: "Отказ", CONFIRM: "Потвърждавам" },
        br: { OK: "OK", CANCEL: "Cancelar", CONFIRM: "Sim" },
        cs: { OK: "OK", CANCEL: "Zrušit", CONFIRM: "Potvrdit" },
        da: { OK: "OK", CANCEL: "Annuller", CONFIRM: "Accepter" },
        de: { OK: "OK", CANCEL: "Abbrechen", CONFIRM: "Akzeptieren" },
        el: { OK: "Εντάξει", CANCEL: "Ακύρωση", CONFIRM: "Επιβεβαίωση" },
        en: { OK: "OK", CANCEL: "Cancel", CONFIRM: "OK" },
        es: { OK: "OK", CANCEL: "Cancelar", CONFIRM: "Aceptar" },
        et: { OK: "OK", CANCEL: "Katkesta", CONFIRM: "OK" },
        fa: { OK: "قبول", CANCEL: "لغو", CONFIRM: "تایید" },
        fi: { OK: "OK", CANCEL: "Peruuta", CONFIRM: "OK" },
        fr: { OK: "OK", CANCEL: "Annuler", CONFIRM: "D'accord" },
        he: { OK: "אישור", CANCEL: "ביטול", CONFIRM: "אישור" },
        hu: { OK: "OK", CANCEL: "Mégsem", CONFIRM: "Megerősít" },
        hr: { OK: "OK", CANCEL: "Odustani", CONFIRM: "Potvrdi" },
        id: { OK: "OK", CANCEL: "Batal", CONFIRM: "OK" },
        it: { OK: "OK", CANCEL: "Annulla", CONFIRM: "Conferma" },
        ja: { OK: "OK", CANCEL: "キャンセル", CONFIRM: "確認" },
        lt: { OK: "Gerai", CANCEL: "Atšaukti", CONFIRM: "Patvirtinti" },
        lv: { OK: "Labi", CANCEL: "Atcelt", CONFIRM: "Apstiprināt" },
        nl: { OK: "OK", CANCEL: "Annuleren", CONFIRM: "Accepteren" },
        no: { OK: "OK", CANCEL: "Avbryt", CONFIRM: "OK" },
        pl: { OK: "OK", CANCEL: "Anuluj", CONFIRM: "Potwierdź" },
        pt: { OK: "OK", CANCEL: "Cancelar", CONFIRM: "Confirmar" },
        ru: { OK: "OK", CANCEL: "Отмена", CONFIRM: "Применить" },
        sq: { OK: "OK", CANCEL: "Anulo", CONFIRM: "Prano" },
        sv: { OK: "OK", CANCEL: "Avbryt", CONFIRM: "OK" },
        th: { OK: "ตกลง", CANCEL: "ยกเลิก", CONFIRM: "ยืนยัน" },
        tr: { OK: "Tamam", CANCEL: "İptal", CONFIRM: "Onayla" },
        zh_CN: { OK: "OK", CANCEL: "取消", CONFIRM: "确认" },
        zh_TW: { OK: "OK", CANCEL: "取消", CONFIRM: "確認" },
    };
    return (
        (p.addLocale = function (a, c) {
            return (
                b.each(["OK", "CANCEL", "CONFIRM"], function (a, b) {
                    if (!c[b]) throw new Error("Please supply a translation for '" + b + "'");
                }),
                (q[a] = { OK: c.OK, CANCEL: c.CANCEL, CONFIRM: c.CONFIRM }),
                p
            );
        }),
        (p.removeLocale = function (a) {
            return delete q[a], p;
        }),
        (p.setLocale = function (a) {
            return p.setDefaults("locale", a);
        }),
        (p.init = function (c) {
            return a(c || b);
        }),
        p
    );
});
!(function (e) {
    e(["jquery"], function (e) {
        return (function () {
            function t(e, t, n) {
                return f({ type: O.error, iconClass: g().iconClasses.error, message: e, optionsOverride: n, title: t });
            }
            function n(t, n) {
                return t || (t = g()), (v = e("#" + t.containerId)), v.length ? v : (n && (v = c(t)), v);
            }
            function i(e, t, n) {
                return f({ type: O.info, iconClass: g().iconClasses.info, message: e, optionsOverride: n, title: t });
            }
            function o(e) {
                w = e;
            }
            function s(e, t, n) {
                return f({ type: O.success, iconClass: g().iconClasses.success, message: e, optionsOverride: n, title: t });
            }
            function a(e, t, n) {
                return f({ type: O.warning, iconClass: g().iconClasses.warning, message: e, optionsOverride: n, title: t });
            }
            function r(e) {
                var t = g();
                v || n(t), l(e, t) || u(t);
            }
            function d(t) {
                var i = g();
                return v || n(i), t && 0 === e(":focus", t).length ? void h(t) : void (v.children().length && v.remove());
            }
            function u(t) {
                for (var n = v.children(), i = n.length - 1; i >= 0; i--) l(e(n[i]), t);
            }
            function l(t, n) {
                return t && 0 === e(":focus", t).length
                    ? (t[n.hideMethod]({
                          duration: n.hideDuration,
                          easing: n.hideEasing,
                          complete: function () {
                              h(t);
                          },
                      }),
                      !0)
                    : !1;
            }
            function c(t) {
                return (v = e("<div/>").attr("id", t.containerId).addClass(t.positionClass).attr("aria-live", "polite").attr("role", "alert")), v.appendTo(e(t.target)), v;
            }
            function p() {
                return {
                    tapToDismiss: !0,
                    toastClass: "toast",
                    containerId: "toast-container",
                    debug: !1,
                    showMethod: "fadeIn",
                    showDuration: 300,
                    showEasing: "swing",
                    onShown: void 0,
                    hideMethod: "fadeOut",
                    hideDuration: 1e3,
                    hideEasing: "swing",
                    onHidden: void 0,
                    extendedTimeOut: 1e3,
                    iconClasses: { error: "toast-error", info: "toast-info", success: "toast-success", warning: "toast-warning" },
                    iconClass: "toast-info",
                    positionClass: "toast-top-right",
                    timeOut: 5e3,
                    titleClass: "toast-title",
                    messageClass: "toast-message",
                    target: "body",
                    closeHtml: '<button type="button">&times;</button>',
                    newestOnTop: !0,
                    preventDuplicates: !1,
                    progressBar: !1,
                };
            }
            function m(e) {
                w && w(e);
            }
            function f(t) {
                function i(t) {
                    return !e(":focus", l).length || t
                        ? (clearTimeout(O.intervalId),
                          l[r.hideMethod]({
                              duration: r.hideDuration,
                              easing: r.hideEasing,
                              complete: function () {
                                  h(l), r.onHidden && "hidden" !== b.state && r.onHidden(), (b.state = "hidden"), (b.endTime = new Date()), m(b);
                              },
                          }))
                        : void 0;
                }
                function o() {
                    (r.timeOut > 0 || r.extendedTimeOut > 0) && ((u = setTimeout(i, r.extendedTimeOut)), (O.maxHideTime = parseFloat(r.extendedTimeOut)), (O.hideEta = new Date().getTime() + O.maxHideTime));
                }
                function s() {
                    clearTimeout(u), (O.hideEta = 0), l.stop(!0, !0)[r.showMethod]({ duration: r.showDuration, easing: r.showEasing });
                }
                function a() {
                    var e = ((O.hideEta - new Date().getTime()) / O.maxHideTime) * 100;
                    f.width(e + "%");
                }
                var r = g(),
                    d = t.iconClass || r.iconClass;
                if (("undefined" != typeof t.optionsOverride && ((r = e.extend(r, t.optionsOverride)), (d = t.optionsOverride.iconClass || d)), r.preventDuplicates)) {
                    if (t.message === C) return;
                    C = t.message;
                }
                T++, (v = n(r, !0));
                var u = null,
                    l = e("<div/>"),
                    c = e("<div/>"),
                    p = e("<div/>"),
                    f = e("<div/>"),
                    w = e(r.closeHtml),
                    O = { intervalId: null, hideEta: null, maxHideTime: null },
                    b = { toastId: T, state: "visible", startTime: new Date(), options: r, map: t };
                return (
                    t.iconClass && l.addClass(r.toastClass).addClass(d),
                    t.title && (c.append(t.title).addClass(r.titleClass), l.append(c)),
                    t.message && (p.append(t.message).addClass(r.messageClass), l.append(p)),
                    r.closeButton && (w.addClass("toast-close-button").attr("role", "button"), l.prepend(w)),
                    r.progressBar && (f.addClass("toast-progress"), l.prepend(f)),
                    l.hide(),
                    r.newestOnTop ? v.prepend(l) : v.append(l),
                    l[r.showMethod]({ duration: r.showDuration, easing: r.showEasing, complete: r.onShown }),
                    r.timeOut > 0 && ((u = setTimeout(i, r.timeOut)), (O.maxHideTime = parseFloat(r.timeOut)), (O.hideEta = new Date().getTime() + O.maxHideTime), r.progressBar && (O.intervalId = setInterval(a, 10))),
                    l.hover(s, o),
                    !r.onclick && r.tapToDismiss && l.click(i),
                    r.closeButton &&
                        w &&
                        w.click(function (e) {
                            e.stopPropagation ? e.stopPropagation() : void 0 !== e.cancelBubble && e.cancelBubble !== !0 && (e.cancelBubble = !0), i(!0);
                        }),
                    r.onclick &&
                        l.click(function () {
                            r.onclick(), i();
                        }),
                    m(b),
                    r.debug && console && console.log(b),
                    l
                );
            }
            function g() {
                return e.extend({}, p(), b.options);
            }
            function h(e) {
                v || (v = n()), e.is(":visible") || (e.remove(), (e = null), 0 === v.children().length && (v.remove(), (C = void 0)));
            }
            var v,
                w,
                C,
                T = 0,
                O = { error: "error", info: "info", success: "success", warning: "warning" },
                b = { clear: r, remove: d, error: t, getContainer: n, info: i, options: {}, subscribe: o, success: s, version: "2.1.0", warning: a };
            return b;
        })();
    });
})(
    "function" == typeof define && define.amd
        ? define
        : function (e, t) {
              "undefined" != typeof module && module.exports ? (module.exports = t(require("jquery"))) : (window.toastr = t(window.jQuery));
          }
);
/*!
 * jQuery blockUI plugin
 * Version 2.70.0-2014.11.23
 * Requires jQuery v1.7 or later
 *
 * Examples at: http://malsup.com/jquery/block/
 * Copyright (c) 2007-2013 M. Alsup
 * Dual licensed under the MIT and GPL licenses:
 * http://www.opensource.org/licenses/mit-license.php
 * http://www.gnu.org/licenses/gpl.html
 *
 * Thanks to Amir-Hossein Sobhi for some excellent contributions!
 */

(function () {
    /*jshint eqeqeq:false curly:false latedef:false */
    "use strict";

    function setup($) {
        $.fn._fadeIn = $.fn.fadeIn;

        var noOp = $.noop || function () {};

        // this bit is to ensure we don't call setExpression when we shouldn't (with extra muscle to handle
        // confusing userAgent strings on Vista)
        var msie = /MSIE/.test(navigator.userAgent);
        var ie6 = /MSIE 6.0/.test(navigator.userAgent) && !/MSIE 8.0/.test(navigator.userAgent);
        var mode = document.documentMode || 0;
        var setExpr = $.isFunction(document.createElement("div").style.setExpression);

        // global $ methods for blocking/unblocking the entire page
        $.blockUI = function (opts) {
            install(window, opts);
        };
        $.unblockUI = function (opts) {
            remove(window, opts);
        };

        // convenience method for quick growl-like notifications  (http://www.google.com/search?q=growl)
        $.growlUI = function (title, message, timeout, onClose) {
            var $m = $('<div class="growlUI"></div>');
            if (title) $m.append("<h1>" + title + "</h1>");
            if (message) $m.append("<h2>" + message + "</h2>");
            if (timeout === undefined) timeout = 3000;

            // Added by konapun: Set timeout to 30 seconds if this growl is moused over, like normal toast notifications
            var callBlock = function (opts) {
                opts = opts || {};

                $.blockUI({
                    message: $m,
                    fadeIn: typeof opts.fadeIn !== "undefined" ? opts.fadeIn : 700,
                    fadeOut: typeof opts.fadeOut !== "undefined" ? opts.fadeOut : 1000,
                    timeout: typeof opts.timeout !== "undefined" ? opts.timeout : timeout,
                    centerY: false,
                    showOverlay: false,
                    onUnblock: onClose,
                    css: $.blockUI.defaults.growlCSS,
                });
            };

            callBlock();
            var nonmousedOpacity = $m.css("opacity");
            $m.mouseover(function () {
                callBlock({
                    fadeIn: 0,
                    timeout: 30000,
                });

                var displayBlock = $(".blockMsg");
                displayBlock.stop(); // cancel fadeout if it has started
                displayBlock.fadeTo(300, 1); // make it easier to read the message by removing transparency
            }).mouseout(function () {
                $(".blockMsg").fadeOut(1000);
            });
            // End konapun additions
        };

        // plugin method for blocking element content
        $.fn.block = function (opts) {
            if (this[0] === window) {
                $.blockUI(opts);
                return this;
            }
            var fullOpts = $.extend({}, $.blockUI.defaults, opts || {});
            this.each(function () {
                var $el = $(this);
                if (fullOpts.ignoreIfBlocked && $el.data("blockUI.isBlocked")) return;
                $el.unblock({ fadeOut: 0 });
            });

            return this.each(function () {
                if ($.css(this, "position") == "static") {
                    this.style.position = "relative";
                    $(this).data("blockUI.static", true);
                }
                this.style.zoom = 1; // force 'hasLayout' in ie
                install(this, opts);
            });
        };

        // plugin method for unblocking element content
        $.fn.unblock = function (opts) {
            if (this[0] === window) {
                $.unblockUI(opts);
                return this;
            }
            return this.each(function () {
                remove(this, opts);
            });
        };

        $.blockUI.version = 2.7; // 2nd generation blocking at no extra cost!

        // override these in your code to change the default behavior and style
        $.blockUI.defaults = {
            // message displayed when blocking (use null for no message)
            message: "<h1>Please wait...</h1>",

            title: null, // title string; only used when theme == true
            draggable: true, // only used when theme == true (requires jquery-ui.js to be loaded)

            theme: false, // set to true to use with jQuery UI themes

            // styles for the message when blocking; if you wish to disable
            // these and use an external stylesheet then do this in your code:
            // $.blockUI.defaults.css = {};
            css: {
                padding: 0,
                margin: 0,
                width: "30%",
                top: "40%",
                left: "35%",
                textAlign: "center",
                color: "#000",
                border: "3px solid #aaa",
                backgroundColor: "#fff",
                cursor: "wait",
            },

            // minimal style set used when themes are used
            themedCSS: {
                width: "30%",
                top: "40%",
                left: "35%",
            },

            // styles for the overlay
            overlayCSS: {
                backgroundColor: "#000",
                opacity: 0.6,
                cursor: "wait",
            },

            // style to replace wait cursor before unblocking to correct issue
            // of lingering wait cursor
            cursorReset: "default",

            // styles applied when using $.growlUI
            growlCSS: {
                width: "350px",
                top: "10px",
                left: "",
                right: "10px",
                border: "none",
                padding: "5px",
                opacity: 0.6,
                cursor: "default",
                color: "#fff",
                backgroundColor: "#000",
                "-webkit-border-radius": "10px",
                "-moz-border-radius": "10px",
                "border-radius": "10px",
            },

            // IE issues: 'about:blank' fails on HTTPS and javascript:false is s-l-o-w
            // (hat tip to Jorge H. N. de Vasconcelos)
            /*jshint scripturl:true */
            iframeSrc: /^https/i.test(window.location.href || "") ? "javascript:false" : "about:blank",

            // force usage of iframe in non-IE browsers (handy for blocking applets)
            forceIframe: false,

            // z-index for the blocking overlay
            baseZ: 1000,

            // set these to true to have the message automatically centered
            centerX: true, // <-- only effects element blocking (page block controlled via css above)
            centerY: true,

            // allow body element to be stetched in ie6; this makes blocking look better
            // on "short" pages.  disable if you wish to prevent changes to the body height
            allowBodyStretch: true,

            // enable if you want key and mouse events to be disabled for content that is blocked
            bindEvents: true,

            // be default blockUI will supress tab navigation from leaving blocking content
            // (if bindEvents is true)
            constrainTabKey: true,

            // fadeIn time in millis; set to 0 to disable fadeIn on block
            fadeIn: 200,

            // fadeOut time in millis; set to 0 to disable fadeOut on unblock
            fadeOut: 400,

            // time in millis to wait before auto-unblocking; set to 0 to disable auto-unblock
            timeout: 0,

            // disable if you don't want to show the overlay
            showOverlay: true,

            // if true, focus will be placed in the first available input field when
            // page blocking
            focusInput: true,

            // elements that can receive focus
            focusableElements: ":input:enabled:visible",

            // suppresses the use of overlay styles on FF/Linux (due to performance issues with opacity)
            // no longer needed in 2012
            // applyPlatformOpacityRules: true,

            // callback method invoked when fadeIn has completed and blocking message is visible
            onBlock: null,

            // callback method invoked when unblocking has completed; the callback is
            // passed the element that has been unblocked (which is the window object for page
            // blocks) and the options that were passed to the unblock call:
            //	onUnblock(element, options)
            onUnblock: null,

            // callback method invoked when the overlay area is clicked.
            // setting this will turn the cursor to a pointer, otherwise cursor defined in overlayCss will be used.
            onOverlayClick: null,

            // don't ask; if you really must know: http://groups.google.com/group/jquery-en/browse_thread/thread/36640a8730503595/2f6a79a77a78e493#2f6a79a77a78e493
            quirksmodeOffsetHack: 4,

            // class name of the message block
            blockMsgClass: "blockMsg",

            // if it is already blocked, then ignore it (don't unblock and reblock)
            ignoreIfBlocked: false,
        };

        // private data and functions follow...

        var pageBlock = null;
        var pageBlockEls = [];

        function install(el, opts) {
            var css, themedCSS;
            var full = el == window;
            var msg = opts && opts.message !== undefined ? opts.message : undefined;
            opts = $.extend({}, $.blockUI.defaults, opts || {});

            if (opts.ignoreIfBlocked && $(el).data("blockUI.isBlocked")) return;

            opts.overlayCSS = $.extend({}, $.blockUI.defaults.overlayCSS, opts.overlayCSS || {});
            css = $.extend({}, $.blockUI.defaults.css, opts.css || {});
            if (opts.onOverlayClick) opts.overlayCSS.cursor = "pointer";

            themedCSS = $.extend({}, $.blockUI.defaults.themedCSS, opts.themedCSS || {});
            msg = msg === undefined ? opts.message : msg;

            // remove the current block (if there is one)
            if (full && pageBlock) remove(window, { fadeOut: 0 });

            // if an existing element is being used as the blocking content then we capture
            // its current place in the DOM (and current display style) so we can restore
            // it when we unblock
            if (msg && typeof msg != "string" && (msg.parentNode || msg.jquery)) {
                var node = msg.jquery ? msg[0] : msg;
                var data = {};
                $(el).data("blockUI.history", data);
                data.el = node;
                data.parent = node.parentNode;
                data.display = node.style.display;
                data.position = node.style.position;
                if (data.parent) data.parent.removeChild(node);
            }

            $(el).data("blockUI.onUnblock", opts.onUnblock);
            var z = opts.baseZ;

            // blockUI uses 3 layers for blocking, for simplicity they are all used on every platform;
            // layer1 is the iframe layer which is used to supress bleed through of underlying content
            // layer2 is the overlay layer which has opacity and a wait cursor (by default)
            // layer3 is the message content that is displayed while blocking
            var lyr1, lyr2, lyr3, s;
            if (msie || opts.forceIframe)
                lyr1 = $('<iframe class="blockUI" style="z-index:' + z++ + ';display:none;border:none;margin:0;padding:0;position:absolute;width:100%;height:100%;top:0;left:0" src="' + opts.iframeSrc + '"></iframe>');
            else lyr1 = $('<div class="blockUI" style="display:none"></div>');

            if (opts.theme) lyr2 = $('<div class="blockUI blockOverlay ui-widget-overlay" style="z-index:' + z++ + ';display:none"></div>');
            else lyr2 = $('<div class="blockUI blockOverlay" style="z-index:' + z++ + ';display:none;border:none;margin:0;padding:0;width:100%;height:100%;top:0;left:0"></div>');

            if (opts.theme && full) {
                s = '<div class="blockUI ' + opts.blockMsgClass + ' blockPage ui-dialog ui-widget ui-corner-all" style="z-index:' + (z + 10) + ';display:none;position:fixed">';
                if (opts.title) {
                    s += '<div class="ui-widget-header ui-dialog-titlebar ui-corner-all blockTitle">' + (opts.title || "&nbsp;") + "</div>";
                }
                s += '<div class="ui-widget-content ui-dialog-content"></div>';
                s += "</div>";
            } else if (opts.theme) {
                s = '<div class="blockUI ' + opts.blockMsgClass + ' blockElement ui-dialog ui-widget ui-corner-all" style="z-index:' + (z + 10) + ';display:none;position:absolute">';
                if (opts.title) {
                    s += '<div class="ui-widget-header ui-dialog-titlebar ui-corner-all blockTitle">' + (opts.title || "&nbsp;") + "</div>";
                }
                s += '<div class="ui-widget-content ui-dialog-content"></div>';
                s += "</div>";
            } else if (full) {
                s = '<div class="blockUI ' + opts.blockMsgClass + ' blockPage" style="z-index:' + (z + 10) + ';display:none;position:fixed"></div>';
            } else {
                s = '<div class="blockUI ' + opts.blockMsgClass + ' blockElement" style="z-index:' + (z + 10) + ';display:none;position:absolute"></div>';
            }
            lyr3 = $(s);

            // if we have a message, style it
            if (msg) {
                if (opts.theme) {
                    lyr3.css(themedCSS);
                    lyr3.addClass("ui-widget-content");
                } else lyr3.css(css);
            }

            // style the overlay
            if (!opts.theme /*&& (!opts.applyPlatformOpacityRules)*/) lyr2.css(opts.overlayCSS);
            lyr2.css("position", full ? "fixed" : "absolute");

            // make iframe layer transparent in IE
            if (msie || opts.forceIframe) lyr1.css("opacity", 0.0);

            //$([lyr1[0],lyr2[0],lyr3[0]]).appendTo(full ? 'body' : el);
            var layers = [lyr1, lyr2, lyr3],
                $par = full ? $("body") : $(el);
            $.each(layers, function () {
                this.appendTo($par);
            });

            if (opts.theme && opts.draggable && $.fn.draggable) {
                lyr3.draggable({
                    handle: ".ui-dialog-titlebar",
                    cancel: "li",
                });
            }

            // ie7 must use absolute positioning in quirks mode and to account for activex issues (when scrolling)
            var expr = setExpr && (!$.support.boxModel || $("object,embed", full ? null : el).length > 0);
            if (ie6 || expr) {
                // give body 100% height
                if (full && opts.allowBodyStretch && $.support.boxModel) $("html,body").css("height", "100%");

                // fix ie6 issue when blocked element has a border width
                if ((ie6 || !$.support.boxModel) && !full) {
                    var t = sz(el, "borderTopWidth"),
                        l = sz(el, "borderLeftWidth");
                    var fixT = t ? "(0 - " + t + ")" : 0;
                    var fixL = l ? "(0 - " + l + ")" : 0;
                }

                // simulate fixed position
                $.each(layers, function (i, o) {
                    var s = o[0].style;
                    s.position = "absolute";
                    if (i < 2) {
                        if (full) s.setExpression("height", "Math.max(document.body.scrollHeight, document.body.offsetHeight) - (jQuery.support.boxModel?0:" + opts.quirksmodeOffsetHack + ') + "px"');
                        else s.setExpression("height", 'this.parentNode.offsetHeight + "px"');
                        if (full) s.setExpression("width", 'jQuery.support.boxModel && document.documentElement.clientWidth || document.body.clientWidth + "px"');
                        else s.setExpression("width", 'this.parentNode.offsetWidth + "px"');
                        if (fixL) s.setExpression("left", fixL);
                        if (fixT) s.setExpression("top", fixT);
                    } else if (opts.centerY) {
                        if (full)
                            s.setExpression(
                                "top",
                                '(document.documentElement.clientHeight || document.body.clientHeight) / 2 - (this.offsetHeight / 2) + (blah = document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop) + "px"'
                            );
                        s.marginTop = 0;
                    } else if (!opts.centerY && full) {
                        var top = opts.css && opts.css.top ? parseInt(opts.css.top, 10) : 0;
                        var expression = "((document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop) + " + top + ') + "px"';
                        s.setExpression("top", expression);
                    }
                });
            }

            // show the message
            if (msg) {
                if (opts.theme) lyr3.find(".ui-widget-content").append(msg);
                else lyr3.append(msg);
                if (msg.jquery || msg.nodeType) $(msg).show();
            }

            if ((msie || opts.forceIframe) && opts.showOverlay) lyr1.show(); // opacity is zero
            if (opts.fadeIn) {
                var cb = opts.onBlock ? opts.onBlock : noOp;
                var cb1 = opts.showOverlay && !msg ? cb : noOp;
                var cb2 = msg ? cb : noOp;
                if (opts.showOverlay) lyr2._fadeIn(opts.fadeIn, cb1);
                if (msg) lyr3._fadeIn(opts.fadeIn, cb2);
            } else {
                if (opts.showOverlay) lyr2.show();
                if (msg) lyr3.show();
                if (opts.onBlock) opts.onBlock.bind(lyr3)();
            }

            // bind key and mouse events
            bind(1, el, opts);

            if (full) {
                pageBlock = lyr3[0];
                pageBlockEls = $(opts.focusableElements, pageBlock);
                if (opts.focusInput) setTimeout(focus, 20);
            } else center(lyr3[0], opts.centerX, opts.centerY);

            if (opts.timeout) {
                // auto-unblock
                var to = setTimeout(function () {
                    if (full) $.unblockUI(opts);
                    else $(el).unblock(opts);
                }, opts.timeout);
                $(el).data("blockUI.timeout", to);
            }
        }

        // remove the block
        function remove(el, opts) {
            var count;
            var full = el == window;
            var $el = $(el);
            var data = $el.data("blockUI.history");
            var to = $el.data("blockUI.timeout");
            if (to) {
                clearTimeout(to);
                $el.removeData("blockUI.timeout");
            }
            opts = $.extend({}, $.blockUI.defaults, opts || {});
            bind(0, el, opts); // unbind events

            if (opts.onUnblock === null) {
                opts.onUnblock = $el.data("blockUI.onUnblock");
                $el.removeData("blockUI.onUnblock");
            }

            var els;
            if (full)
                // crazy selector to handle odd field errors in ie6/7
                els = $("body").children().filter(".blockUI").add("body > .blockUI");
            else els = $el.find(">.blockUI");

            // fix cursor issue
            if (opts.cursorReset) {
                if (els.length > 1) els[1].style.cursor = opts.cursorReset;
                if (els.length > 2) els[2].style.cursor = opts.cursorReset;
            }

            if (full) pageBlock = pageBlockEls = null;

            if (opts.fadeOut) {
                count = els.length;
                els.stop().fadeOut(opts.fadeOut, function () {
                    if (--count === 0) reset(els, data, opts, el);
                });
            } else reset(els, data, opts, el);
        }

        // move blocking element back into the DOM where it started
        function reset(els, data, opts, el) {
            var $el = $(el);
            if ($el.data("blockUI.isBlocked")) return;

            els.each(function (i, o) {
                // remove via DOM calls so we don't lose event handlers
                if (this.parentNode) this.parentNode.removeChild(this);
            });

            if (data && data.el) {
                data.el.style.display = data.display;
                data.el.style.position = data.position;
                data.el.style.cursor = "default"; // #59
                if (data.parent) data.parent.appendChild(data.el);
                $el.removeData("blockUI.history");
            }

            if ($el.data("blockUI.static")) {
                $el.css("position", "static"); // #22
            }

            if (typeof opts.onUnblock == "function") opts.onUnblock(el, opts);

            // fix issue in Safari 6 where block artifacts remain until reflow
            var body = $(document.body),
                w = body.width(),
                cssW = body[0].style.width;
            body.width(w - 1).width(w);
            body[0].style.width = cssW;
        }

        // bind/unbind the handler
        function bind(b, el, opts) {
            var full = el == window,
                $el = $(el);

            // don't bother unbinding if there is nothing to unbind
            if (!b && ((full && !pageBlock) || (!full && !$el.data("blockUI.isBlocked")))) return;

            $el.data("blockUI.isBlocked", b);

            // don't bind events when overlay is not in use or if bindEvents is false
            if (!full || !opts.bindEvents || (b && !opts.showOverlay)) return;

            // bind anchors and inputs for mouse and key events
            var events = "mousedown mouseup keydown keypress keyup touchstart touchend touchmove";
            if (b) $(document).bind(events, opts, handler);
            else $(document).unbind(events, handler);

            // former impl...
            //		var $e = $('a,:input');
            //		b ? $e.bind(events, opts, handler) : $e.unbind(events, handler);
        }

        // event handler to suppress keyboard/mouse events when blocking
        function handler(e) {
            // allow tab navigation (conditionally)
            if (e.type === "keydown" && e.keyCode && e.keyCode == 9) {
                if (pageBlock && e.data.constrainTabKey) {
                    var els = pageBlockEls;
                    var fwd = !e.shiftKey && e.target === els[els.length - 1];
                    var back = e.shiftKey && e.target === els[0];
                    if (fwd || back) {
                        setTimeout(function () {
                            focus(back);
                        }, 10);
                        return false;
                    }
                }
            }
            var opts = e.data;
            var target = $(e.target);
            if (target.hasClass("blockOverlay") && opts.onOverlayClick) opts.onOverlayClick(e);

            // allow events within the message content
            if (target.parents("div." + opts.blockMsgClass).length > 0) return true;

            // allow events for content that is not being blocked
            return target.parents().children().filter("div.blockUI").length === 0;
        }

        function focus(back) {
            if (!pageBlockEls) return;
            var e = pageBlockEls[back === true ? pageBlockEls.length - 1 : 0];
            if (e) e.focus();
        }

        function center(el, x, y) {
            var p = el.parentNode,
                s = el.style;
            var l = (p.offsetWidth - el.offsetWidth) / 2 - sz(p, "borderLeftWidth");
            var t = (p.offsetHeight - el.offsetHeight) / 2 - sz(p, "borderTopWidth");
            if (x) s.left = l > 0 ? l + "px" : "0";
            if (y) s.top = t > 0 ? t + "px" : "0";
        }

        function sz(el, p) {
            return parseInt($.css(el, p), 10) || 0;
        }
    }

    /*global define:true */
    if (typeof define === "function" && define.amd && define.amd.jQuery) {
        define(["jquery"], setup);
    } else {
        setup(jQuery);
    }
})(); /*
International Telephone Input v6.4.3
https://github.com/Bluefieldscom/intl-tel-input.git
*/
!(function (a) {
    "function" == typeof define && define.amd
        ? define(["jquery"], function (b) {
              a(b, window, document);
          })
        : "object" == typeof module && module.exports
        ? (module.exports = a(require("jquery"), window, document))
        : a(jQuery, window, document);
})(function (a, b, c, d) {
    "use strict";
    function e(b, c) {
        (this.a = b),
            c &&
                a.extend(c, c, {
                    a: c.autoFormat,
                    h: c.autoHideDialCode,
                    d: c.defaultCountry,
                    i: c.ipinfoToken,
                    n: c.nationalMode,
                    t: c.numberType,
                    o: c.onlyCountries,
                    p: c.preferredCountries,
                    v: c.preventInvalidNumbers,
                    u: c.utilsScript,
                }),
            (this.b = a.extend({}, h, c)),
            (this.c = h),
            (this.ns = "." + f + g++),
            (this.d = Boolean(b.setSelectionRange)),
            (this.e = Boolean(a(b).attr("placeholder"))),
            (this.f = f);
    }
    var f = "intlTelInput",
        g = 1,
        h = { allowExtensions: !1, a: !0, h: !0, autoPlaceholder: !0, d: "", dropdownContainer: !1, excludeCountries: [], geoIpLookup: null, n: !0, t: "MOBILE", o: [], p: ["us", "gb"], u: "" },
        i = { b: 38, c: 40, d: 13, e: 27, f: 43, A: 65, Z: 90, g: 48, h: 57, i: 32, Bi: 8, TAB: 9, k: 46, l: 17, m: 91, n: 224 },
        j = !1;
    a(b).load(function () {
        j = !0;
    }),
        (e.prototype = {
            _init: function () {
                return (
                    this.b.n && (this.b.h = !1),
                    navigator.userAgent.match(/IEMobile/i) && (this.b.a = !1),
                    (this.isMobile = /Android.+Mobile|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)),
                    (this.autoCountryDeferred = new a.Deferred()),
                    (this.utilsScriptDeferred = new a.Deferred()),
                    this._b(),
                    this._f(),
                    this._h(),
                    this._i(),
                    this._initRequests(),
                    [this.autoCountryDeferred, this.utilsScriptDeferred]
                );
            },
            _b: function () {
                this._d(), this._e();
            },
            _c: function (a, b, c) {
                b in this.m || (this.m[b] = []);
                var d = c || 0;
                this.m[b][d] = a;
            },
            processCountries: function (b, c) {
                var d;
                for (d = 0; d < b.length; d++) b[d] = b[d].toLowerCase();
                for (this.l = [], d = 0; d < k.length; d++) c(a.inArray(k[d].iso2, b)) && this.l.push(k[d]);
            },
            _d: function () {
                this.b.o.length
                    ? this.processCountries(this.b.o, function (a) {
                          return -1 != a;
                      })
                    : this.b.excludeCountries.length
                    ? this.processCountries(this.b.excludeCountries, function (a) {
                          return -1 == a;
                      })
                    : (this.l = k),
                    (this.m = {});
                for (var a = 0; a < this.l.length; a++) {
                    var b = this.l[a];
                    if ((this._c(b.iso2, b.dialCode, b.priority), b.areaCodes)) for (var c = 0; c < b.areaCodes.length; c++) this._c(b.iso2, b.dialCode + b.areaCodes[c]);
                }
            },
            _e: function () {
                this.n = [];
                for (var a = 0; a < this.b.p.length; a++) {
                    var b = this.b.p[a].toLowerCase(),
                        c = this._y(b, !1, !0);
                    c && this.n.push(c);
                }
            },
            _f: function () {
                (this.g = a(this.a)), this.g.attr("autocomplete", "off"), this.g.wrap(a("<div>", { class: "intl-tel-input" })), (this.flagsContainer = a("<div>", { class: "flag-container" }).insertBefore(this.g));
                var b = a("<div>", { tabindex: "0", class: "selected-flag" }).appendTo(this.flagsContainer);
                (this.h = a("<div>", { class: "iti-flag" }).appendTo(b)),
                    a("<div>", { class: "arrow" }).appendTo(b),
                    this.isMobile
                        ? (this.i = a("<select>", { class: "iti-mobile-select" }).appendTo(this.flagsContainer))
                        : ((this.i = a("<ul>", { class: "country-list hide" })), this.n.length && !this.isMobile && (this._g(this.n, "preferred"), a("<li>", { class: "divider" }).appendTo(this.i))),
                    this._g(this.l, ""),
                    this.isMobile || ((this.k = this.i.children(".country")), this.b.dropdownContainer ? (this.dropdown = a("<div>", { class: "intl-tel-input iti-container" }).append(this.i)) : this.i.appendTo(this.flagsContainer));
            },
            _g: function (a, b) {
                for (var c = "", d = 0; d < a.length; d++) {
                    var e = a[d];
                    this.isMobile
                        ? ((c += "<option data-dial-code='" + e.dialCode + "' value='" + e.iso2 + "'>"), (c += e.name + " +" + e.dialCode), (c += "</option>"))
                        : ((c += "<li class='country " + b + "' data-dial-code='" + e.dialCode + "' data-country-code='" + e.iso2 + "'>"),
                          (c += "<div class='flag'><div class='iti-flag " + e.iso2 + "'></div></div>"),
                          (c += "<span class='country-name'>" + e.name + "</span>"),
                          (c += "<span class='dial-code'>+" + e.dialCode + "</span>"),
                          (c += "</li>"));
                }
                this.i.append(c);
            },
            _h: function () {
                var a = this.g.val();
                this._af(a) ? this._v(a, !0) : "auto" != this.b.d && ((this.b.d = this.b.d ? this._y(this.b.d.toLowerCase(), !1, !1) : this.n.length ? this.n[0] : this.l[0]), this._z(this.b.d.iso2), a || this._ae(this.b.d.dialCode, !1)),
                    a && this._u(a);
            },
            _i: function () {
                var b = this;
                if ((this._j(), (this.b.h || this.b.a) && this._l(), this.isMobile))
                    this.i.on("change" + this.ns, function () {
                        b._ab(a(this).find("option:selected"));
                    });
                else {
                    var c = this.g.closest("label");
                    c.length &&
                        c.on("click" + this.ns, function (a) {
                            b.i.hasClass("hide") ? b.g.focus() : a.preventDefault();
                        });
                    var d = this.h.parent();
                    d.on("click" + this.ns, function () {
                        !b.i.hasClass("hide") || b.g.prop("disabled") || b.g.prop("readonly") || b._n();
                    });
                }
                this.flagsContainer.on("keydown" + b.ns, function (a) {
                    var c = b.i.hasClass("hide");
                    !c || (a.which != i.b && a.which != i.c && a.which != i.i && a.which != i.d) || (a.preventDefault(), a.stopPropagation(), b._n()), a.which == i.TAB && b._ac();
                });
            },
            _initRequests: function () {
                var c = this;
                this.b.u
                    ? j
                        ? this.loadUtils()
                        : a(b).load(function () {
                              c.loadUtils();
                          })
                    : this.utilsScriptDeferred.resolve(),
                    "auto" == this.b.d ? this._loadAutoCountry() : this.autoCountryDeferred.resolve();
            },
            _loadAutoCountry: function () {
                var c = b.Cookies ? Cookies.get("itiAutoCountry") : "";
                c && (a.fn[f].autoCountry = c),
                    a.fn[f].autoCountry
                        ? this.autoCountryLoaded()
                        : a.fn[f].startedLoadingAutoCountry ||
                          ((a.fn[f].startedLoadingAutoCountry = !0),
                          "function" == typeof this.b.geoIpLookup &&
                              this.b.geoIpLookup(function (c) {
                                  (a.fn[f].autoCountry = c.toLowerCase()),
                                      b.Cookies && Cookies.set("itiAutoCountry", a.fn[f].autoCountry, { path: "/" }),
                                      setTimeout(function () {
                                          a(".intl-tel-input input").intlTelInput("autoCountryLoaded");
                                      });
                              }));
            },
            _j: function () {
                var a = this;
                this.b.a &&
                    this.g.on("keypress" + this.ns, function (c) {
                        if (c.which >= i.i && !c.ctrlKey && !c.metaKey && b.intlTelInputUtils && !a.g.prop("readonly")) {
                            c.preventDefault();
                            var d = (c.which >= i.g && c.which <= i.h) || c.which == i.f,
                                e = a.g[0],
                                f = a.d && e.selectionStart == e.selectionEnd,
                                g = a.g.attr("maxlength"),
                                h = a.g.val(),
                                j = g ? h.length < g : !0;
                            if (j && (d || f)) {
                                var k = d ? String.fromCharCode(c.which) : null;
                                a._k(k, !0, d), h != a.g.val() && a.g.trigger("input");
                            }
                            d || a._handleInvalidKey();
                        }
                    }),
                    this.g.on("cut" + this.ns + " paste" + this.ns, function () {
                        setTimeout(function () {
                            if (a.b.a && b.intlTelInputUtils) {
                                var c = a.d && a.g[0].selectionStart == a.g.val().length;
                                a._k(null, c), a._ensurePlus();
                            } else a._v(a.g.val());
                        });
                    }),
                    this.g.on("keyup" + this.ns, function (c) {
                        if (c.which == i.d || a.g.prop("readonly"));
                        else if (a.b.a && b.intlTelInputUtils) {
                            var d = a.d && a.g[0].selectionStart == a.g.val().length;
                            a.g.val() ? ((c.which == i.k && !d) || c.which == i.Bi) && a._k() : a._v(""), a._ensurePlus();
                        } else a._v(a.g.val());
                    });
            },
            _ensurePlus: function () {
                if (!this.b.n) {
                    var a = this.g.val(),
                        b = this.g[0];
                    if ("+" != a.charAt(0)) {
                        var c = this.d ? b.selectionStart + 1 : 0;
                        this.g.val("+" + a), this.d && b.setSelectionRange(c, c);
                    }
                }
            },
            _handleInvalidKey: function () {
                var a = this;
                this.g.trigger("invalidkey").addClass("iti-invalid-key"),
                    setTimeout(function () {
                        a.g.removeClass("iti-invalid-key");
                    }, 100);
            },
            _k: function (a, b, c) {
                var d,
                    e = this.g.val(),
                    f = (this._getClean(e), this.g[0]),
                    g = 0;
                if (
                    (this.d ? ((g = this._getDigitsOnRight(e, f.selectionEnd)), a ? (e = e.substr(0, f.selectionStart) + a + e.substring(f.selectionEnd, e.length)) : (d = e.substr(f.selectionStart - 2, 2))) : a && (e += a),
                    this.setNumber(e, null, b, !0, c),
                    this.d)
                ) {
                    var h;
                    (e = this.g.val()), g ? ((h = this._getCursorFromDigitsOnRight(e, g)), a || (h = this._getCursorFromLeftChar(e, h, d))) : (h = e.length), f.setSelectionRange(h, h);
                }
            },
            _getCursorFromLeftChar: function (b, c, d) {
                for (var e = c; e > 0; e--) {
                    var f = b.charAt(e - 1);
                    if (a.isNumeric(f) || b.substr(e - 2, 2) == d) return e;
                }
                return 0;
            },
            _getCursorFromDigitsOnRight: function (b, c) {
                for (var d = b.length - 1; d >= 0; d--) if (a.isNumeric(b.charAt(d)) && 0 === --c) return d;
                return 0;
            },
            _getDigitsOnRight: function (b, c) {
                for (var d = 0, e = c; e < b.length; e++) a.isNumeric(b.charAt(e)) && d++;
                return d;
            },
            _l: function () {
                var a = this;
                this.b.h &&
                    this.g.on("mousedown" + this.ns, function (b) {
                        a.g.is(":focus") || a.g.val() || (b.preventDefault(), a.g.focus());
                    }),
                    this.g.on("focus" + this.ns, function () {
                        var c = a.g.val();
                        a.g.data("focusVal", c),
                            a.b.h &&
                                !c &&
                                !a.g.prop("readonly") &&
                                a.o.dialCode &&
                                (a._u("+" + a.o.dialCode, null, !0),
                                a.g.one("keypress.plus" + a.ns, function (c) {
                                    if (c.which == i.f) {
                                        var d = a.b.a && b.intlTelInputUtils ? "+" : "";
                                        a.g.val(d);
                                    }
                                }),
                                setTimeout(function () {
                                    var b = a.g[0];
                                    if (a.d) {
                                        var c = a.g.val().length;
                                        b.setSelectionRange(c, c);
                                    }
                                }));
                    }),
                    this.g.on("blur" + this.ns, function () {
                        if (a.b.h) {
                            var c = a.g.val(),
                                d = "+" == c.charAt(0);
                            if (d) {
                                var e = a._m(c);
                                (e && a.o.dialCode != e) || a.g.val("");
                            }
                            a.g.off("keypress.plus" + a.ns);
                        }
                        a.b.a && b.intlTelInputUtils && a.g.val() != a.g.data("focusVal") && a.g.trigger("change");
                    });
            },
            _m: function (a) {
                return a.replace(/\D/g, "");
            },
            _getClean: function (a) {
                var b = "+" == a.charAt(0) ? "+" : "";
                return b + this._m(a);
            },
            _n: function () {
                this._o();
                var a = this.i.children(".active");
                a.length && this._x(a), a.length && this._ad(a), this._p(), this.h.children(".arrow").addClass("up");
            },
            _o: function () {
                var c = this.b.dropdownContainer && !this.isMobile;
                c && this.dropdown.appendTo(this.b.dropdownContainer), (this.j = this.i.removeClass("hide").outerHeight());
                var d = this,
                    e = this.g.offset(),
                    f = e.top,
                    g = a(b).scrollTop(),
                    h = f + this.g.outerHeight() + this.j < g + a(b).height(),
                    i = f - this.j > g;
                if ((this.i.toggleClass("dropup", !h && i), c)) {
                    var j = !h && i ? 0 : this.g.innerHeight();
                    this.dropdown.css({ top: f + j, left: e.left }),
                        a(b).on("scroll" + this.ns, function () {
                            d._ac();
                        });
                }
            },
            _p: function () {
                var b = this;
                this.i.on("mouseover" + this.ns, ".country", function () {
                    b._x(a(this));
                }),
                    this.i.on("click" + this.ns, ".country", function () {
                        b._ab(a(this));
                    });
                var d = !0;
                a("html").on("click" + this.ns, function () {
                    d || b._ac(), (d = !1);
                });
                var e = "",
                    f = null;
                a(c).on("keydown" + this.ns, function (a) {
                    a.preventDefault(),
                        a.which == i.b || a.which == i.c
                            ? b._q(a.which)
                            : a.which == i.d
                            ? b._r()
                            : a.which == i.e
                            ? b._ac()
                            : ((a.which >= i.A && a.which <= i.Z) || a.which == i.i) &&
                              (f && clearTimeout(f),
                              (e += String.fromCharCode(a.which)),
                              b._s(e),
                              (f = setTimeout(function () {
                                  e = "";
                              }, 1e3)));
                });
            },
            _q: function (a) {
                var b = this.i.children(".highlight").first(),
                    c = a == i.b ? b.prev() : b.next();
                c.length && (c.hasClass("divider") && (c = a == i.b ? c.prev() : c.next()), this._x(c), this._ad(c));
            },
            _r: function () {
                var a = this.i.children(".highlight").first();
                a.length && this._ab(a);
            },
            _s: function (a) {
                for (var b = 0; b < this.l.length; b++)
                    if (this._t(this.l[b].name, a)) {
                        var c = this.i.children("[data-country-code=" + this.l[b].iso2 + "]").not(".preferred");
                        this._x(c), this._ad(c, !0);
                        break;
                    }
            },
            _t: function (a, b) {
                return a.substr(0, b.length).toUpperCase() == b;
            },
            _u: function (a, c, d, e, f) {
                var g;
                if (this.b.a && b.intlTelInputUtils && this.o) {
                    g =
                        "number" == typeof c && intlTelInputUtils.isValidNumber(a, this.o.iso2)
                            ? intlTelInputUtils.formatNumberByType(a, this.o.iso2, c)
                            : !e && this.b.n && "+" == a.charAt(0) && intlTelInputUtils.isValidNumber(a, this.o.iso2)
                            ? intlTelInputUtils.formatNumberByType(a, this.o.iso2, intlTelInputUtils.numberFormat.NATIONAL)
                            : intlTelInputUtils.formatNumber(a, this.o.iso2, d, this.b.allowExtensions, f);
                    var h = this.g.attr("maxlength");
                    h && g.length > h && (g = g.substr(0, h));
                } else g = a;
                this.g.val(g);
            },
            _v: function (b, c) {
                b && this.b.n && this.o && "1" == this.o.dialCode && "+" != b.charAt(0) && ("1" != b.charAt(0) && (b = "1" + b), (b = "+" + b));
                var d = this._af(b),
                    e = null;
                if (d) {
                    var f = this.m[this._m(d)],
                        g = this.o && -1 != a.inArray(this.o.iso2, f);
                    if (!g || this._w(b, d))
                        for (var h = 0; h < f.length; h++)
                            if (f[h]) {
                                e = f[h];
                                break;
                            }
                } else "+" == b.charAt(0) && this._m(b).length ? (e = "") : (b && "+" != b) || (e = this.b.d.iso2);
                null !== e && this._z(e, c);
            },
            _w: function (a, b) {
                return "+1" == b && this._m(a).length >= 4;
            },
            _x: function (a) {
                this.k.removeClass("highlight"), a.addClass("highlight");
            },
            _y: function (a, b, c) {
                for (var d = b ? k : this.l, e = 0; e < d.length; e++) if (d[e].iso2 == a) return d[e];
                if (c) return null;
                throw new Error("No country data for '" + a + "'");
            },
            _z: function (a, b) {
                (this.o = a ? this._y(a, !1, !1) : {}), b && this.o.iso2 && (this.b.d = { iso2: this.o.iso2 }), this.h.attr("class", "iti-flag " + a);
                var c = a ? this.o.name + ": +" + this.o.dialCode : "Unknown";
                this.h.parent().attr("title", c),
                    this._aa(),
                    this.isMobile
                        ? this.i.val(a)
                        : (this.k.removeClass("active"),
                          a &&
                              this.k
                                  .find(".iti-flag." + a)
                                  .first()
                                  .closest(".country")
                                  .addClass("active"));
            },
            _aa: function () {
                if (b.intlTelInputUtils && !this.e && this.b.autoPlaceholder && this.o) {
                    var a = this.o.iso2,
                        c = intlTelInputUtils.numberType[this.b.t || "FIXED_LINE"],
                        d = a ? intlTelInputUtils.getExampleNumber(a, this.b.n, c) : "";
                    "function" == typeof this.b.customPlaceholder && (d = this.b.customPlaceholder(d, this.o)), this.g.attr("placeholder", d);
                }
            },
            _ab: function (a) {
                var b = this.isMobile ? "value" : "data-country-code";
                if ((this._z(a.attr(b), !0), this.isMobile || this._ac(), this._ae(a.attr("data-dial-code"), !0), this.g.trigger("change"), this.g.focus(), this.d)) {
                    var c = this.g.val().length;
                    this.g[0].setSelectionRange(c, c);
                }
            },
            _ac: function () {
                this.i.addClass("hide"),
                    this.h.children(".arrow").removeClass("up"),
                    a(c).off(this.ns),
                    a("html").off(this.ns),
                    this.i.off(this.ns),
                    this.b.dropdownContainer && !this.isMobile && (a(b).off("scroll" + this.ns), this.dropdown.detach());
            },
            _ad: function (a, b) {
                var c = this.i,
                    d = c.height(),
                    e = c.offset().top,
                    f = e + d,
                    g = a.outerHeight(),
                    h = a.offset().top,
                    i = h + g,
                    j = h - e + c.scrollTop(),
                    k = d / 2 - g / 2;
                if (e > h) b && (j -= k), c.scrollTop(j);
                else if (i > f) {
                    b && (j += k);
                    var l = d - g;
                    c.scrollTop(j - l);
                }
            },
            _ae: function (b, c) {
                var d,
                    e = this.g.val();
                if (((b = "+" + b), this.b.n && "+" != e.charAt(0))) d = e;
                else if (e) {
                    var f = this._af(e);
                    if (f.length > 1) d = e.replace(f, b);
                    else {
                        var g = "+" != e.charAt(0) ? a.trim(e) : "";
                        d = b + g;
                    }
                } else d = !this.b.h || c ? b : "";
                this._u(d, null, c);
            },
            _af: function (b) {
                var c = "";
                if ("+" == b.charAt(0))
                    for (var d = "", e = 0; e < b.length; e++) {
                        var f = b.charAt(e);
                        if (a.isNumeric(f) && ((d += f), this.m[d] && (c = b.substr(0, e + 1)), 4 == d.length)) break;
                    }
                return c;
            },
            autoCountryLoaded: function () {
                "auto" == this.b.d && ((this.b.d = a.fn[f].autoCountry), this._h(), this.autoCountryDeferred.resolve());
            },
            destroy: function () {
                this.isMobile || this._ac(), this.g.off(this.ns), this.isMobile ? this.i.off(this.ns) : (this.h.parent().off(this.ns), this.g.closest("label").off(this.ns));
                var a = this.g.parent();
                a.before(this.g).remove();
            },
            getExtension: function () {
                return this.g.val().split(" ext. ")[1] || "";
            },
            getNumber: function (a) {
                return b.intlTelInputUtils ? intlTelInputUtils.formatNumberByType(this.g.val(), this.o.iso2, a) : "";
            },
            getNumberType: function () {
                return b.intlTelInputUtils ? intlTelInputUtils.getNumberType(this.g.val(), this.o.iso2) : -99;
            },
            getSelectedCountryData: function () {
                return this.o || {};
            },
            getValidationError: function () {
                return b.intlTelInputUtils ? intlTelInputUtils.getValidationError(this.g.val(), this.o.iso2) : -99;
            },
            isValidNumber: function () {
                var c = a.trim(this.g.val()),
                    d = this.b.n ? this.o.iso2 : "";
                return b.intlTelInputUtils ? intlTelInputUtils.isValidNumber(c, d) : !1;
            },
            loadUtils: function (b) {
                var c = b || this.b.u;
                c
                    ? a.fn[f].loadedUtilsScript ||
                      ((a.fn[f].loadedUtilsScript = !0),
                      a.ajax({
                          url: c,
                          complete: function () {
                              a(".intl-tel-input input").intlTelInput("utilsRequestComplete");
                          },
                          dataType: "script",
                          cache: !0,
                      }))
                    : this.utilsScriptDeferred.resolve();
            },
            selectCountry: function (a) {
                (a = a.toLowerCase()), this.h.hasClass(a) || (this._z(a, !0), this._ae(this.o.dialCode, !1));
            },
            setNumber: function (a, b, c, d, e) {
                this.b.n || "+" == a.charAt(0) || (a = "+" + a), this._v(a), this._u(a, b, c, d, e);
            },
            utilsRequestComplete: function () {
                b.intlTelInputUtils && (this.b.a && this.g.val() && this._u(this.g.val()), this._aa()), this.utilsScriptDeferred.resolve();
            },
        }),
        (a.fn[f] = function (b) {
            var c = arguments;
            if (b === d || "object" == typeof b) {
                var g = [];
                return (
                    this.each(function () {
                        if (!a.data(this, "plugin_" + f)) {
                            var c = new e(this, b),
                                d = c._init();
                            g.push(d[0]), g.push(d[1]), a.data(this, "plugin_" + f, c);
                        }
                    }),
                    a.when.apply(null, g)
                );
            }
            if ("string" == typeof b && "_" !== b[0]) {
                var h;
                return (
                    this.each(function () {
                        var d = a.data(this, "plugin_" + f);
                        d instanceof e && "function" == typeof d[b] && (h = d[b].apply(d, Array.prototype.slice.call(c, 1))), "destroy" === b && a.data(this, "plugin_" + f, null);
                    }),
                    h !== d ? h : this
                );
            }
        }),
        (a.fn[f].getCountryData = function () {
            return k;
        }),
        (a.fn[f].version = "6.4.3");
    for (
        var k = [
                ["Afghanistan (‫افغانستان‬‎)", "af", "93"],
                ["Albania (Shqipëri)", "al", "355"],
                ["Algeria (‫الجزائر‬‎)", "dz", "213"],
                ["American Samoa", "as", "1684"],
                ["Andorra", "ad", "376"],
                ["Angola", "ao", "244"],
                ["Anguilla", "ai", "1264"],
                ["Antigua and Barbuda", "ag", "1268"],
                ["Argentina", "ar", "54"],
                ["Armenia (Հայաստան)", "am", "374"],
                ["Aruba", "aw", "297"],
                ["Australia", "au", "61", 0],
                ["Austria (Österreich)", "at", "43"],
                ["Azerbaijan (Azərbaycan)", "az", "994"],
                ["Bahamas", "bs", "1242"],
                ["Bahrain (‫البحرين‬‎)", "bh", "973"],
                ["Bangladesh (বাংলাদেশ)", "bd", "880"],
                ["Barbados", "bb", "1246"],
                ["Belarus (Беларусь)", "by", "375"],
                ["Belgium (België)", "be", "32"],
                ["Belize", "bz", "501"],
                ["Benin (Bénin)", "bj", "229"],
                ["Bermuda", "bm", "1441"],
                ["Bhutan (འབྲུག)", "bt", "975"],
                ["Bolivia", "bo", "591"],
                ["Bosnia and Herzegovina (Босна и Херцеговина)", "ba", "387"],
                ["Botswana", "bw", "267"],
                ["Brazil (Brasil)", "br", "55"],
                ["British Indian Ocean Territory", "io", "246"],
                ["British Virgin Islands", "vg", "1284"],
                ["Brunei", "bn", "673"],
                ["Bulgaria (България)", "bg", "359"],
                ["Burkina Faso", "bf", "226"],
                ["Burundi (Uburundi)", "bi", "257"],
                ["Cambodia (កម្ពុជា)", "kh", "855"],
                ["Cameroon (Cameroun)", "cm", "237"],
                [
                    "Canada",
                    "ca",
                    "1",
                    1,
                    [
                        "204",
                        "226",
                        "236",
                        "249",
                        "250",
                        "289",
                        "306",
                        "343",
                        "365",
                        "387",
                        "403",
                        "416",
                        "418",
                        "431",
                        "437",
                        "438",
                        "450",
                        "506",
                        "514",
                        "519",
                        "548",
                        "579",
                        "581",
                        "587",
                        "604",
                        "613",
                        "639",
                        "647",
                        "672",
                        "705",
                        "709",
                        "742",
                        "778",
                        "780",
                        "782",
                        "807",
                        "819",
                        "825",
                        "867",
                        "873",
                        "902",
                        "905",
                    ],
                ],
                ["Cape Verde (Kabu Verdi)", "cv", "238"],
                ["Caribbean Netherlands", "bq", "599", 1],
                ["Cayman Islands", "ky", "1345"],
                ["Central African Republic (République centrafricaine)", "cf", "236"],
                ["Chad (Tchad)", "td", "235"],
                ["Chile", "cl", "56"],
                ["China (中国)", "cn", "86"],
                ["Christmas Island", "cx", "61", 2],
                ["Cocos (Keeling) Islands", "cc", "61", 1],
                ["Colombia", "co", "57"],
                ["Comoros (‫جزر القمر‬‎)", "km", "269"],
                ["Congo (DRC) (Jamhuri ya Kidemokrasia ya Kongo)", "cd", "243"],
                ["Congo (Republic) (Congo-Brazzaville)", "cg", "242"],
                ["Cook Islands", "ck", "682"],
                ["Costa Rica", "cr", "506"],
                ["Côte d’Ivoire", "ci", "225"],
                ["Croatia (Hrvatska)", "hr", "385"],
                ["Cuba", "cu", "53"],
                ["Curaçao", "cw", "599", 0],
                ["Cyprus (Κύπρος)", "cy", "357"],
                ["Czech Republic (Česká republika)", "cz", "420"],
                ["Denmark (Danmark)", "dk", "45"],
                ["Djibouti", "dj", "253"],
                ["Dominica", "dm", "1767"],
                ["Dominican Republic (República Dominicana)", "do", "1", 2, ["809", "829", "849"]],
                ["Ecuador", "ec", "593"],
                ["Egypt (‫مصر‬‎)", "eg", "20"],
                ["El Salvador", "sv", "503"],
                ["Equatorial Guinea (Guinea Ecuatorial)", "gq", "240"],
                ["Eritrea", "er", "291"],
                ["Estonia (Eesti)", "ee", "372"],
                ["Ethiopia", "et", "251"],
                ["Falkland Islands (Islas Malvinas)", "fk", "500"],
                ["Faroe Islands (Føroyar)", "fo", "298"],
                ["Fiji", "fj", "679"],
                ["Finland (Suomi)", "fi", "358", 0],
                ["France", "fr", "33"],
                ["French Guiana (Guyane française)", "gf", "594"],
                ["French Polynesia (Polynésie française)", "pf", "689"],
                ["Gabon", "ga", "241"],
                ["Gambia", "gm", "220"],
                ["Georgia (საქართველო)", "ge", "995"],
                ["Germany (Deutschland)", "de", "49"],
                ["Ghana (Gaana)", "gh", "233"],
                ["Gibraltar", "gi", "350"],
                ["Greece (Ελλάδα)", "gr", "30"],
                ["Greenland (Kalaallit Nunaat)", "gl", "299"],
                ["Grenada", "gd", "1473"],
                ["Guadeloupe", "gp", "590", 0],
                ["Guam", "gu", "1671"],
                ["Guatemala", "gt", "502"],
                ["Guernsey", "gg", "44", 1],
                ["Guinea (Guinée)", "gn", "224"],
                ["Guinea-Bissau (Guiné Bissau)", "gw", "245"],
                ["Guyana", "gy", "592"],
                ["Haiti", "ht", "509"],
                ["Honduras", "hn", "504"],
                ["Hong Kong (香港)", "hk", "852"],
                ["Hungary (Magyarország)", "hu", "36"],
                ["Iceland (Ísland)", "is", "354"],
                ["India (भारत)", "in", "91"],
                ["Indonesia", "id", "62"],
                ["Iran (‫ایران‬‎)", "ir", "98"],
                ["Iraq (‫العراق‬‎)", "iq", "964"],
                ["Ireland", "ie", "353"],
                ["Isle of Man", "im", "44", 2],
                ["Israel (‫ישראל‬‎)", "il", "972"],
                ["Italy (Italia)", "it", "39", 0],
                ["Jamaica", "jm", "1876"],
                ["Japan (日本)", "jp", "81"],
                ["Jersey", "je", "44", 3],
                ["Jordan (‫الأردن‬‎)", "jo", "962"],
                ["Kazakhstan (Казахстан)", "kz", "7", 1],
                ["Kenya", "ke", "254"],
                ["Kiribati", "ki", "686"],
                ["Kuwait (‫الكويت‬‎)", "kw", "965"],
                ["Kyrgyzstan (Кыргызстан)", "kg", "996"],
                ["Laos (ລາວ)", "la", "856"],
                ["Latvia (Latvija)", "lv", "371"],
                ["Lebanon (‫لبنان‬‎)", "lb", "961"],
                ["Lesotho", "ls", "266"],
                ["Liberia", "lr", "231"],
                ["Libya (‫ليبيا‬‎)", "ly", "218"],
                ["Liechtenstein", "li", "423"],
                ["Lithuania (Lietuva)", "lt", "370"],
                ["Luxembourg", "lu", "352"],
                ["Macau (澳門)", "mo", "853"],
                ["Macedonia (FYROM) (Македонија)", "mk", "389"],
                ["Madagascar (Madagasikara)", "mg", "261"],
                ["Malawi", "mw", "265"],
                ["Malaysia", "my", "60"],
                ["Maldives", "mv", "960"],
                ["Mali", "ml", "223"],
                ["Malta", "mt", "356"],
                ["Marshall Islands", "mh", "692"],
                ["Martinique", "mq", "596"],
                ["Mauritania (‫موريتانيا‬‎)", "mr", "222"],
                ["Mauritius (Moris)", "mu", "230"],
                ["Mayotte", "yt", "262", 1],
                ["Mexico (México)", "mx", "52"],
                ["Micronesia", "fm", "691"],
                ["Moldova (Republica Moldova)", "md", "373"],
                ["Monaco", "mc", "377"],
                ["Mongolia (Монгол)", "mn", "976"],
                ["Montenegro (Crna Gora)", "me", "382"],
                ["Montserrat", "ms", "1664"],
                ["Morocco (‫المغرب‬‎)", "ma", "212", 0],
                ["Mozambique (Moçambique)", "mz", "258"],
                ["Myanmar (Burma) (မြန်မာ)", "mm", "95"],
                ["Namibia (Namibië)", "na", "264"],
                ["Nauru", "nr", "674"],
                ["Nepal (नेपाल)", "np", "977"],
                ["Netherlands (Nederland)", "nl", "31"],
                ["New Caledonia (Nouvelle-Calédonie)", "nc", "687"],
                ["New Zealand", "nz", "64"],
                ["Nicaragua", "ni", "505"],
                ["Niger (Nijar)", "ne", "227"],
                ["Nigeria", "ng", "234"],
                ["Niue", "nu", "683"],
                ["Norfolk Island", "nf", "672"],
                ["North Korea (조선 민주주의 인민 공화국)", "kp", "850"],
                ["Northern Mariana Islands", "mp", "1670"],
                ["Norway (Norge)", "no", "47", 0],
                ["Oman (‫عُمان‬‎)", "om", "968"],
                ["Pakistan (‫پاکستان‬‎)", "pk", "92"],
                ["Palau", "pw", "680"],
                ["Palestine (‫فلسطين‬‎)", "ps", "970"],
                ["Panama (Panamá)", "pa", "507"],
                ["Papua New Guinea", "pg", "675"],
                ["Paraguay", "py", "595"],
                ["Peru (Perú)", "pe", "51"],
                ["Philippines", "ph", "63"],
                ["Poland (Polska)", "pl", "48"],
                ["Portugal", "pt", "351"],
                ["Puerto Rico", "pr", "1", 3, ["787", "939"]],
                ["Qatar (‫قطر‬‎)", "qa", "974"],
                ["Réunion (La Réunion)", "re", "262", 0],
                ["Romania (România)", "ro", "40"],
                ["Russia (Россия)", "ru", "7", 0],
                ["Rwanda", "rw", "250"],
                ["Saint Barthélemy (Saint-Barthélemy)", "bl", "590", 1],
                ["Saint Helena", "sh", "290"],
                ["Saint Kitts and Nevis", "kn", "1869"],
                ["Saint Lucia", "lc", "1758"],
                ["Saint Martin (Saint-Martin (partie française))", "mf", "590", 2],
                ["Saint Pierre and Miquelon (Saint-Pierre-et-Miquelon)", "pm", "508"],
                ["Saint Vincent and the Grenadines", "vc", "1784"],
                ["Samoa", "ws", "685"],
                ["San Marino", "sm", "378"],
                ["São Tomé and Príncipe (São Tomé e Príncipe)", "st", "239"],
                ["Saudi Arabia (‫المملكة العربية السعودية‬‎)", "sa", "966"],
                ["Senegal (Sénégal)", "sn", "221"],
                ["Serbia (Србија)", "rs", "381"],
                ["Seychelles", "sc", "248"],
                ["Sierra Leone", "sl", "232"],
                ["Singapore", "sg", "65"],
                ["Sint Maarten", "sx", "1721"],
                ["Slovakia (Slovensko)", "sk", "421"],
                ["Slovenia (Slovenija)", "si", "386"],
                ["Solomon Islands", "sb", "677"],
                ["Somalia (Soomaaliya)", "so", "252"],
                ["South Africa", "za", "27"],
                ["South Korea (대한민국)", "kr", "82"],
                ["South Sudan (‫جنوب السودان‬‎)", "ss", "211"],
                ["Spain (España)", "es", "34"],
                ["Sri Lanka (ශ්‍රී ලංකාව)", "lk", "94"],
                ["Sudan (‫السودان‬‎)", "sd", "249"],
                ["Suriname", "sr", "597"],
                ["Svalbard and Jan Mayen", "sj", "47", 1],
                ["Swaziland", "sz", "268"],
                ["Sweden (Sverige)", "se", "46"],
                ["Switzerland (Schweiz)", "ch", "41"],
                ["Syria (‫سوريا‬‎)", "sy", "963"],
                ["Taiwan (台灣)", "tw", "886"],
                ["Tajikistan", "tj", "992"],
                ["Tanzania", "tz", "255"],
                ["Thailand (ไทย)", "th", "66"],
                ["Timor-Leste", "tl", "670"],
                ["Togo", "tg", "228"],
                ["Tokelau", "tk", "690"],
                ["Tonga", "to", "676"],
                ["Trinidad and Tobago", "tt", "1868"],
                ["Tunisia (‫تونس‬‎)", "tn", "216"],
                ["Turkey (Türkiye)", "tr", "90"],
                ["Turkmenistan", "tm", "993"],
                ["Turks and Caicos Islands", "tc", "1649"],
                ["Tuvalu", "tv", "688"],
                ["U.S. Virgin Islands", "vi", "1340"],
                ["Uganda", "ug", "256"],
                ["Ukraine (Україна)", "ua", "380"],
                ["United Arab Emirates (‫الإمارات العربية المتحدة‬‎)", "ae", "971"],
                ["United Kingdom", "gb", "44", 0],
                ["United States", "us", "1", 0],
                ["Uruguay", "uy", "598"],
                ["Uzbekistan (Oʻzbekiston)", "uz", "998"],
                ["Vanuatu", "vu", "678"],
                ["Vatican City (Città del Vaticano)", "va", "39", 1],
                ["Venezuela", "ve", "58"],
                ["Vietnam (Việt Nam)", "vn", "84"],
                ["Wallis and Futuna", "wf", "681"],
                ["Western Sahara (‫الصحراء الغربية‬‎)", "eh", "212", 1],
                ["Yemen (‫اليمن‬‎)", "ye", "967"],
                ["Zambia", "zm", "260"],
                ["Zimbabwe", "zw", "263"],
                ["Åland Islands", "ax", "358", 1],
            ],
            l = 0;
        l < k.length;
        l++
    ) {
        var m = k[l];
        k[l] = { name: m[0], iso2: m[1], dialCode: m[2], priority: m[3] || 0, areaCodes: m[4] || null };
    }
});
/*!
 * Bootstrap v4.0.0 (https://getbootstrap.com)
 * Copyright 2011-2018 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 */
!(function (t, e) {
    "object" == typeof exports && "undefined" != typeof module
        ? e(exports, require("jquery"), require("popper.js"))
        : "function" == typeof define && define.amd
        ? define(["exports", "jquery", "popper.js"], e)
        : e((t.bootstrap = {}), t.jQuery, t.Popper);
})(this, function (t, e, n) {
    "use strict";
    function i(t, e) {
        for (var n = 0; n < e.length; n++) {
            var i = e[n];
            (i.enumerable = i.enumerable || !1), (i.configurable = !0), "value" in i && (i.writable = !0), Object.defineProperty(t, i.key, i);
        }
    }
    function s(t, e, n) {
        return e && i(t.prototype, e), n && i(t, n), t;
    }
    function r() {
        return (r =
            Object.assign ||
            function (t) {
                for (var e = 1; e < arguments.length; e++) {
                    var n = arguments[e];
                    for (var i in n) Object.prototype.hasOwnProperty.call(n, i) && (t[i] = n[i]);
                }
                return t;
            }).apply(this, arguments);
    }
    (e = e && e.hasOwnProperty("default") ? e.default : e), (n = n && n.hasOwnProperty("default") ? n.default : n);
    var o,
        a,
        l,
        h,
        c,
        u,
        f,
        d,
        _,
        g,
        p,
        m,
        v,
        E,
        T,
        y,
        C,
        I,
        A,
        b,
        D,
        S,
        w,
        N,
        O,
        k,
        P = (function (t) {
            var e = !1;
            function n(e) {
                var n = this,
                    s = !1;
                return (
                    t(this).one(i.TRANSITION_END, function () {
                        s = !0;
                    }),
                    setTimeout(function () {
                        s || i.triggerTransitionEnd(n);
                    }, e),
                    this
                );
            }
            var i = {
                TRANSITION_END: "bsTransitionEnd",
                getUID: function (t) {
                    do {
                        t += ~~(1e6 * Math.random());
                    } while (document.getElementById(t));
                    return t;
                },
                getSelectorFromElement: function (e) {
                    var n,
                        i = e.getAttribute("data-target");
                    (i && "#" !== i) || (i = e.getAttribute("href") || ""), "#" === i.charAt(0) && ((n = i), (i = n = "function" == typeof t.escapeSelector ? t.escapeSelector(n).substr(1) : n.replace(/(:|\.|\[|\]|,|=|@)/g, "\\$1")));
                    try {
                        return t(document).find(i).length > 0 ? i : null;
                    } catch (t) {
                        return null;
                    }
                },
                reflow: function (t) {
                    return t.offsetHeight;
                },
                triggerTransitionEnd: function (n) {
                    t(n).trigger(e.end);
                },
                supportsTransitionEnd: function () {
                    return Boolean(e);
                },
                isElement: function (t) {
                    return (t[0] || t).nodeType;
                },
                typeCheckConfig: function (t, e, n) {
                    for (var s in n)
                        if (Object.prototype.hasOwnProperty.call(n, s)) {
                            var r = n[s],
                                o = e[s],
                                a =
                                    o && i.isElement(o)
                                        ? "element"
                                        : ((l = o),
                                          {}.toString
                                              .call(l)
                                              .match(/\s([a-zA-Z]+)/)[1]
                                              .toLowerCase());
                            if (!new RegExp(r).test(a)) throw new Error(t.toUpperCase() + ': Option "' + s + '" provided type "' + a + '" but expected type "' + r + '".');
                        }
                    var l;
                },
            };
            return (
                (e = ("undefined" == typeof window || !window.QUnit) && { end: "transitionend" }),
                (t.fn.emulateTransitionEnd = n),
                i.supportsTransitionEnd() &&
                    (t.event.special[i.TRANSITION_END] = {
                        bindType: e.end,
                        delegateType: e.end,
                        handle: function (e) {
                            if (t(e.target).is(this)) return e.handleObj.handler.apply(this, arguments);
                        },
                    }),
                i
            );
        })(e),
        L =
            ((a = "alert"),
            (h = "." + (l = "bs.alert")),
            (c = (o = e).fn[a]),
            (u = { CLOSE: "close" + h, CLOSED: "closed" + h, CLICK_DATA_API: "click" + h + ".data-api" }),
            (f = "alert"),
            (d = "fade"),
            (_ = "show"),
            (g = (function () {
                function t(t) {
                    this._element = t;
                }
                var e = t.prototype;
                return (
                    (e.close = function (t) {
                        t = t || this._element;
                        var e = this._getRootElement(t);
                        this._triggerCloseEvent(e).isDefaultPrevented() || this._removeElement(e);
                    }),
                    (e.dispose = function () {
                        o.removeData(this._element, l), (this._element = null);
                    }),
                    (e._getRootElement = function (t) {
                        var e = P.getSelectorFromElement(t),
                            n = !1;
                        return e && (n = o(e)[0]), n || (n = o(t).closest("." + f)[0]), n;
                    }),
                    (e._triggerCloseEvent = function (t) {
                        var e = o.Event(u.CLOSE);
                        return o(t).trigger(e), e;
                    }),
                    (e._removeElement = function (t) {
                        var e = this;
                        o(t).removeClass(_),
                            P.supportsTransitionEnd() && o(t).hasClass(d)
                                ? o(t)
                                      .one(P.TRANSITION_END, function (n) {
                                          return e._destroyElement(t, n);
                                      })
                                      .emulateTransitionEnd(150)
                                : this._destroyElement(t);
                    }),
                    (e._destroyElement = function (t) {
                        o(t).detach().trigger(u.CLOSED).remove();
                    }),
                    (t._jQueryInterface = function (e) {
                        return this.each(function () {
                            var n = o(this),
                                i = n.data(l);
                            i || ((i = new t(this)), n.data(l, i)), "close" === e && i[e](this);
                        });
                    }),
                    (t._handleDismiss = function (t) {
                        return function (e) {
                            e && e.preventDefault(), t.close(this);
                        };
                    }),
                    s(t, null, [
                        {
                            key: "VERSION",
                            get: function () {
                                return "4.0.0";
                            },
                        },
                    ]),
                    t
                );
            })()),
            o(document).on(u.CLICK_DATA_API, '[data-dismiss="alert"]', g._handleDismiss(new g())),
            (o.fn[a] = g._jQueryInterface),
            (o.fn[a].Constructor = g),
            (o.fn[a].noConflict = function () {
                return (o.fn[a] = c), g._jQueryInterface;
            }),
            g),
        R =
            ((m = "button"),
            (E = "." + (v = "bs.button")),
            (T = ".data-api"),
            (y = (p = e).fn[m]),
            (C = "active"),
            (I = "btn"),
            (A = "focus"),
            (b = '[data-toggle^="button"]'),
            (D = '[data-toggle="buttons"]'),
            (S = "input"),
            (w = ".active"),
            (N = ".btn"),
            (O = { CLICK_DATA_API: "click" + E + T, FOCUS_BLUR_DATA_API: "focus" + E + T + " blur" + E + T }),
            (k = (function () {
                function t(t) {
                    this._element = t;
                }
                var e = t.prototype;
                return (
                    (e.toggle = function () {
                        var t = !0,
                            e = !0,
                            n = p(this._element).closest(D)[0];
                        if (n) {
                            var i = p(this._element).find(S)[0];
                            if (i) {
                                if ("radio" === i.type)
                                    if (i.checked && p(this._element).hasClass(C)) t = !1;
                                    else {
                                        var s = p(n).find(w)[0];
                                        s && p(s).removeClass(C);
                                    }
                                if (t) {
                                    if (i.hasAttribute("disabled") || n.hasAttribute("disabled") || i.classList.contains("disabled") || n.classList.contains("disabled")) return;
                                    (i.checked = !p(this._element).hasClass(C)), p(i).trigger("change");
                                }
                                i.focus(), (e = !1);
                            }
                        }
                        e && this._element.setAttribute("aria-pressed", !p(this._element).hasClass(C)), t && p(this._element).toggleClass(C);
                    }),
                    (e.dispose = function () {
                        p.removeData(this._element, v), (this._element = null);
                    }),
                    (t._jQueryInterface = function (e) {
                        return this.each(function () {
                            var n = p(this).data(v);
                            n || ((n = new t(this)), p(this).data(v, n)), "toggle" === e && n[e]();
                        });
                    }),
                    s(t, null, [
                        {
                            key: "VERSION",
                            get: function () {
                                return "4.0.0";
                            },
                        },
                    ]),
                    t
                );
            })()),
            p(document)
                .on(O.CLICK_DATA_API, b, function (t) {
                    t.preventDefault();
                    var e = t.target;
                    p(e).hasClass(I) || (e = p(e).closest(N)), k._jQueryInterface.call(p(e), "toggle");
                })
                .on(O.FOCUS_BLUR_DATA_API, b, function (t) {
                    var e = p(t.target).closest(N)[0];
                    p(e).toggleClass(A, /^focus(in)?$/.test(t.type));
                }),
            (p.fn[m] = k._jQueryInterface),
            (p.fn[m].Constructor = k),
            (p.fn[m].noConflict = function () {
                return (p.fn[m] = y), k._jQueryInterface;
            }),
            k),
        j = (function (t) {
            var e = "carousel",
                n = "bs.carousel",
                i = "." + n,
                o = t.fn[e],
                a = { interval: 5e3, keyboard: !0, slide: !1, pause: "hover", wrap: !0 },
                l = { interval: "(number|boolean)", keyboard: "boolean", slide: "(boolean|string)", pause: "(string|boolean)", wrap: "boolean" },
                h = "next",
                c = "prev",
                u = "left",
                f = "right",
                d = {
                    SLIDE: "slide" + i,
                    SLID: "slid" + i,
                    KEYDOWN: "keydown" + i,
                    MOUSEENTER: "mouseenter" + i,
                    MOUSELEAVE: "mouseleave" + i,
                    TOUCHEND: "touchend" + i,
                    LOAD_DATA_API: "load" + i + ".data-api",
                    CLICK_DATA_API: "click" + i + ".data-api",
                },
                _ = "carousel",
                g = "active",
                p = "slide",
                m = "carousel-item-right",
                v = "carousel-item-left",
                E = "carousel-item-next",
                T = "carousel-item-prev",
                y = {
                    ACTIVE: ".active",
                    ACTIVE_ITEM: ".active.carousel-item",
                    ITEM: ".carousel-item",
                    NEXT_PREV: ".carousel-item-next, .carousel-item-prev",
                    INDICATORS: ".carousel-indicators",
                    DATA_SLIDE: "[data-slide], [data-slide-to]",
                    DATA_RIDE: '[data-ride="carousel"]',
                },
                C = (function () {
                    function o(e, n) {
                        (this._items = null),
                            (this._interval = null),
                            (this._activeElement = null),
                            (this._isPaused = !1),
                            (this._isSliding = !1),
                            (this.touchTimeout = null),
                            (this._config = this._getConfig(n)),
                            (this._element = t(e)[0]),
                            (this._indicatorsElement = t(this._element).find(y.INDICATORS)[0]),
                            this._addEventListeners();
                    }
                    var C = o.prototype;
                    return (
                        (C.next = function () {
                            this._isSliding || this._slide(h);
                        }),
                        (C.nextWhenVisible = function () {
                            !document.hidden && t(this._element).is(":visible") && "hidden" !== t(this._element).css("visibility") && this.next();
                        }),
                        (C.prev = function () {
                            this._isSliding || this._slide(c);
                        }),
                        (C.pause = function (e) {
                            e || (this._isPaused = !0), t(this._element).find(y.NEXT_PREV)[0] && P.supportsTransitionEnd() && (P.triggerTransitionEnd(this._element), this.cycle(!0)), clearInterval(this._interval), (this._interval = null);
                        }),
                        (C.cycle = function (t) {
                            t || (this._isPaused = !1),
                                this._interval && (clearInterval(this._interval), (this._interval = null)),
                                this._config.interval && !this._isPaused && (this._interval = setInterval((document.visibilityState ? this.nextWhenVisible : this.next).bind(this), this._config.interval));
                        }),
                        (C.to = function (e) {
                            var n = this;
                            this._activeElement = t(this._element).find(y.ACTIVE_ITEM)[0];
                            var i = this._getItemIndex(this._activeElement);
                            if (!(e > this._items.length - 1 || e < 0))
                                if (this._isSliding)
                                    t(this._element).one(d.SLID, function () {
                                        return n.to(e);
                                    });
                                else {
                                    if (i === e) return this.pause(), void this.cycle();
                                    var s = e > i ? h : c;
                                    this._slide(s, this._items[e]);
                                }
                        }),
                        (C.dispose = function () {
                            t(this._element).off(i),
                                t.removeData(this._element, n),
                                (this._items = null),
                                (this._config = null),
                                (this._element = null),
                                (this._interval = null),
                                (this._isPaused = null),
                                (this._isSliding = null),
                                (this._activeElement = null),
                                (this._indicatorsElement = null);
                        }),
                        (C._getConfig = function (t) {
                            return (t = r({}, a, t)), P.typeCheckConfig(e, t, l), t;
                        }),
                        (C._addEventListeners = function () {
                            var e = this;
                            this._config.keyboard &&
                                t(this._element).on(d.KEYDOWN, function (t) {
                                    return e._keydown(t);
                                }),
                                "hover" === this._config.pause &&
                                    (t(this._element)
                                        .on(d.MOUSEENTER, function (t) {
                                            return e.pause(t);
                                        })
                                        .on(d.MOUSELEAVE, function (t) {
                                            return e.cycle(t);
                                        }),
                                    "ontouchstart" in document.documentElement &&
                                        t(this._element).on(d.TOUCHEND, function () {
                                            e.pause(),
                                                e.touchTimeout && clearTimeout(e.touchTimeout),
                                                (e.touchTimeout = setTimeout(function (t) {
                                                    return e.cycle(t);
                                                }, 500 + e._config.interval));
                                        }));
                        }),
                        (C._keydown = function (t) {
                            if (!/input|textarea/i.test(t.target.tagName))
                                switch (t.which) {
                                    case 37:
                                        t.preventDefault(), this.prev();
                                        break;
                                    case 39:
                                        t.preventDefault(), this.next();
                                }
                        }),
                        (C._getItemIndex = function (e) {
                            return (this._items = t.makeArray(t(e).parent().find(y.ITEM))), this._items.indexOf(e);
                        }),
                        (C._getItemByDirection = function (t, e) {
                            var n = t === h,
                                i = t === c,
                                s = this._getItemIndex(e),
                                r = this._items.length - 1;
                            if (((i && 0 === s) || (n && s === r)) && !this._config.wrap) return e;
                            var o = (s + (t === c ? -1 : 1)) % this._items.length;
                            return -1 === o ? this._items[this._items.length - 1] : this._items[o];
                        }),
                        (C._triggerSlideEvent = function (e, n) {
                            var i = this._getItemIndex(e),
                                s = this._getItemIndex(t(this._element).find(y.ACTIVE_ITEM)[0]),
                                r = t.Event(d.SLIDE, { relatedTarget: e, direction: n, from: s, to: i });
                            return t(this._element).trigger(r), r;
                        }),
                        (C._setActiveIndicatorElement = function (e) {
                            if (this._indicatorsElement) {
                                t(this._indicatorsElement).find(y.ACTIVE).removeClass(g);
                                var n = this._indicatorsElement.children[this._getItemIndex(e)];
                                n && t(n).addClass(g);
                            }
                        }),
                        (C._slide = function (e, n) {
                            var i,
                                s,
                                r,
                                o = this,
                                a = t(this._element).find(y.ACTIVE_ITEM)[0],
                                l = this._getItemIndex(a),
                                c = n || (a && this._getItemByDirection(e, a)),
                                _ = this._getItemIndex(c),
                                C = Boolean(this._interval);
                            if ((e === h ? ((i = v), (s = E), (r = u)) : ((i = m), (s = T), (r = f)), c && t(c).hasClass(g))) this._isSliding = !1;
                            else if (!this._triggerSlideEvent(c, r).isDefaultPrevented() && a && c) {
                                (this._isSliding = !0), C && this.pause(), this._setActiveIndicatorElement(c);
                                var I = t.Event(d.SLID, { relatedTarget: c, direction: r, from: l, to: _ });
                                P.supportsTransitionEnd() && t(this._element).hasClass(p)
                                    ? (t(c).addClass(s),
                                      P.reflow(c),
                                      t(a).addClass(i),
                                      t(c).addClass(i),
                                      t(a)
                                          .one(P.TRANSITION_END, function () {
                                              t(c)
                                                  .removeClass(i + " " + s)
                                                  .addClass(g),
                                                  t(a).removeClass(g + " " + s + " " + i),
                                                  (o._isSliding = !1),
                                                  setTimeout(function () {
                                                      return t(o._element).trigger(I);
                                                  }, 0);
                                          })
                                          .emulateTransitionEnd(600))
                                    : (t(a).removeClass(g), t(c).addClass(g), (this._isSliding = !1), t(this._element).trigger(I)),
                                    C && this.cycle();
                            }
                        }),
                        (o._jQueryInterface = function (e) {
                            return this.each(function () {
                                var i = t(this).data(n),
                                    s = r({}, a, t(this).data());
                                "object" == typeof e && (s = r({}, s, e));
                                var l = "string" == typeof e ? e : s.slide;
                                if ((i || ((i = new o(this, s)), t(this).data(n, i)), "number" == typeof e)) i.to(e);
                                else if ("string" == typeof l) {
                                    if ("undefined" == typeof i[l]) throw new TypeError('No method named "' + l + '"');
                                    i[l]();
                                } else s.interval && (i.pause(), i.cycle());
                            });
                        }),
                        (o._dataApiClickHandler = function (e) {
                            var i = P.getSelectorFromElement(this);
                            if (i) {
                                var s = t(i)[0];
                                if (s && t(s).hasClass(_)) {
                                    var a = r({}, t(s).data(), t(this).data()),
                                        l = this.getAttribute("data-slide-to");
                                    l && (a.interval = !1), o._jQueryInterface.call(t(s), a), l && t(s).data(n).to(l), e.preventDefault();
                                }
                            }
                        }),
                        s(o, null, [
                            {
                                key: "VERSION",
                                get: function () {
                                    return "4.0.0";
                                },
                            },
                            {
                                key: "Default",
                                get: function () {
                                    return a;
                                },
                            },
                        ]),
                        o
                    );
                })();
            return (
                t(document).on(d.CLICK_DATA_API, y.DATA_SLIDE, C._dataApiClickHandler),
                t(window).on(d.LOAD_DATA_API, function () {
                    t(y.DATA_RIDE).each(function () {
                        var e = t(this);
                        C._jQueryInterface.call(e, e.data());
                    });
                }),
                (t.fn[e] = C._jQueryInterface),
                (t.fn[e].Constructor = C),
                (t.fn[e].noConflict = function () {
                    return (t.fn[e] = o), C._jQueryInterface;
                }),
                C
            );
        })(e),
        H = (function (t) {
            var e = "collapse",
                n = "bs.collapse",
                i = "." + n,
                o = t.fn[e],
                a = { toggle: !0, parent: "" },
                l = { toggle: "boolean", parent: "(string|element)" },
                h = { SHOW: "show" + i, SHOWN: "shown" + i, HIDE: "hide" + i, HIDDEN: "hidden" + i, CLICK_DATA_API: "click" + i + ".data-api" },
                c = "show",
                u = "collapse",
                f = "collapsing",
                d = "collapsed",
                _ = "width",
                g = "height",
                p = { ACTIVES: ".show, .collapsing", DATA_TOGGLE: '[data-toggle="collapse"]' },
                m = (function () {
                    function i(e, n) {
                        (this._isTransitioning = !1),
                            (this._element = e),
                            (this._config = this._getConfig(n)),
                            (this._triggerArray = t.makeArray(t('[data-toggle="collapse"][href="#' + e.id + '"],[data-toggle="collapse"][data-target="#' + e.id + '"]')));
                        for (var i = t(p.DATA_TOGGLE), s = 0; s < i.length; s++) {
                            var r = i[s],
                                o = P.getSelectorFromElement(r);
                            null !== o && t(o).filter(e).length > 0 && ((this._selector = o), this._triggerArray.push(r));
                        }
                        (this._parent = this._config.parent ? this._getParent() : null), this._config.parent || this._addAriaAndCollapsedClass(this._element, this._triggerArray), this._config.toggle && this.toggle();
                    }
                    var o = i.prototype;
                    return (
                        (o.toggle = function () {
                            t(this._element).hasClass(c) ? this.hide() : this.show();
                        }),
                        (o.show = function () {
                            var e,
                                s,
                                r = this;
                            if (
                                !this._isTransitioning &&
                                !t(this._element).hasClass(c) &&
                                (this._parent &&
                                    0 ===
                                        (e = t.makeArray(
                                            t(this._parent)
                                                .find(p.ACTIVES)
                                                .filter('[data-parent="' + this._config.parent + '"]')
                                        )).length &&
                                    (e = null),
                                !(e && (s = t(e).not(this._selector).data(n)) && s._isTransitioning))
                            ) {
                                var o = t.Event(h.SHOW);
                                if ((t(this._element).trigger(o), !o.isDefaultPrevented())) {
                                    e && (i._jQueryInterface.call(t(e).not(this._selector), "hide"), s || t(e).data(n, null));
                                    var a = this._getDimension();
                                    t(this._element).removeClass(u).addClass(f), (this._element.style[a] = 0), this._triggerArray.length > 0 && t(this._triggerArray).removeClass(d).attr("aria-expanded", !0), this.setTransitioning(!0);
                                    var l = function () {
                                        t(r._element).removeClass(f).addClass(u).addClass(c), (r._element.style[a] = ""), r.setTransitioning(!1), t(r._element).trigger(h.SHOWN);
                                    };
                                    if (P.supportsTransitionEnd()) {
                                        var _ = "scroll" + (a[0].toUpperCase() + a.slice(1));
                                        t(this._element).one(P.TRANSITION_END, l).emulateTransitionEnd(600), (this._element.style[a] = this._element[_] + "px");
                                    } else l();
                                }
                            }
                        }),
                        (o.hide = function () {
                            var e = this;
                            if (!this._isTransitioning && t(this._element).hasClass(c)) {
                                var n = t.Event(h.HIDE);
                                if ((t(this._element).trigger(n), !n.isDefaultPrevented())) {
                                    var i = this._getDimension();
                                    if (((this._element.style[i] = this._element.getBoundingClientRect()[i] + "px"), P.reflow(this._element), t(this._element).addClass(f).removeClass(u).removeClass(c), this._triggerArray.length > 0))
                                        for (var s = 0; s < this._triggerArray.length; s++) {
                                            var r = this._triggerArray[s],
                                                o = P.getSelectorFromElement(r);
                                            if (null !== o) t(o).hasClass(c) || t(r).addClass(d).attr("aria-expanded", !1);
                                        }
                                    this.setTransitioning(!0);
                                    var a = function () {
                                        e.setTransitioning(!1), t(e._element).removeClass(f).addClass(u).trigger(h.HIDDEN);
                                    };
                                    (this._element.style[i] = ""), P.supportsTransitionEnd() ? t(this._element).one(P.TRANSITION_END, a).emulateTransitionEnd(600) : a();
                                }
                            }
                        }),
                        (o.setTransitioning = function (t) {
                            this._isTransitioning = t;
                        }),
                        (o.dispose = function () {
                            t.removeData(this._element, n), (this._config = null), (this._parent = null), (this._element = null), (this._triggerArray = null), (this._isTransitioning = null);
                        }),
                        (o._getConfig = function (t) {
                            return ((t = r({}, a, t)).toggle = Boolean(t.toggle)), P.typeCheckConfig(e, t, l), t;
                        }),
                        (o._getDimension = function () {
                            return t(this._element).hasClass(_) ? _ : g;
                        }),
                        (o._getParent = function () {
                            var e = this,
                                n = null;
                            P.isElement(this._config.parent) ? ((n = this._config.parent), "undefined" != typeof this._config.parent.jquery && (n = this._config.parent[0])) : (n = t(this._config.parent)[0]);
                            var s = '[data-toggle="collapse"][data-parent="' + this._config.parent + '"]';
                            return (
                                t(n)
                                    .find(s)
                                    .each(function (t, n) {
                                        e._addAriaAndCollapsedClass(i._getTargetFromElement(n), [n]);
                                    }),
                                n
                            );
                        }),
                        (o._addAriaAndCollapsedClass = function (e, n) {
                            if (e) {
                                var i = t(e).hasClass(c);
                                n.length > 0 && t(n).toggleClass(d, !i).attr("aria-expanded", i);
                            }
                        }),
                        (i._getTargetFromElement = function (e) {
                            var n = P.getSelectorFromElement(e);
                            return n ? t(n)[0] : null;
                        }),
                        (i._jQueryInterface = function (e) {
                            return this.each(function () {
                                var s = t(this),
                                    o = s.data(n),
                                    l = r({}, a, s.data(), "object" == typeof e && e);
                                if ((!o && l.toggle && /show|hide/.test(e) && (l.toggle = !1), o || ((o = new i(this, l)), s.data(n, o)), "string" == typeof e)) {
                                    if ("undefined" == typeof o[e]) throw new TypeError('No method named "' + e + '"');
                                    o[e]();
                                }
                            });
                        }),
                        s(i, null, [
                            {
                                key: "VERSION",
                                get: function () {
                                    return "4.0.0";
                                },
                            },
                            {
                                key: "Default",
                                get: function () {
                                    return a;
                                },
                            },
                        ]),
                        i
                    );
                })();
            return (
                t(document).on(h.CLICK_DATA_API, p.DATA_TOGGLE, function (e) {
                    "A" === e.currentTarget.tagName && e.preventDefault();
                    var i = t(this),
                        s = P.getSelectorFromElement(this);
                    t(s).each(function () {
                        var e = t(this),
                            s = e.data(n) ? "toggle" : i.data();
                        m._jQueryInterface.call(e, s);
                    });
                }),
                (t.fn[e] = m._jQueryInterface),
                (t.fn[e].Constructor = m),
                (t.fn[e].noConflict = function () {
                    return (t.fn[e] = o), m._jQueryInterface;
                }),
                m
            );
        })(e),
        W = (function (t) {
            var e = "dropdown",
                i = "bs.dropdown",
                o = "." + i,
                a = ".data-api",
                l = t.fn[e],
                h = new RegExp("38|40|27"),
                c = { HIDE: "hide" + o, HIDDEN: "hidden" + o, SHOW: "show" + o, SHOWN: "shown" + o, CLICK: "click" + o, CLICK_DATA_API: "click" + o + a, KEYDOWN_DATA_API: "keydown" + o + a, KEYUP_DATA_API: "keyup" + o + a },
                u = "disabled",
                f = "show",
                d = "dropup",
                _ = "dropright",
                g = "dropleft",
                p = "dropdown-menu-right",
                m = "dropdown-menu-left",
                v = "position-static",
                E = '[data-toggle="dropdown"]',
                T = ".dropdown form",
                y = ".dropdown-menu",
                C = ".navbar-nav",
                I = ".dropdown-menu .dropdown-item:not(.disabled)",
                A = "top-start",
                b = "top-end",
                D = "bottom-start",
                S = "bottom-end",
                w = "right-start",
                N = "left-start",
                O = { offset: 0, flip: !0, boundary: "scrollParent" },
                k = { offset: "(number|string|function)", flip: "boolean", boundary: "(string|element)" },
                L = (function () {
                    function a(t, e) {
                        (this._element = t), (this._popper = null), (this._config = this._getConfig(e)), (this._menu = this._getMenuElement()), (this._inNavbar = this._detectNavbar()), this._addEventListeners();
                    }
                    var l = a.prototype;
                    return (
                        (l.toggle = function () {
                            if (!this._element.disabled && !t(this._element).hasClass(u)) {
                                var e = a._getParentFromElement(this._element),
                                    i = t(this._menu).hasClass(f);
                                if ((a._clearMenus(), !i)) {
                                    var s = { relatedTarget: this._element },
                                        r = t.Event(c.SHOW, s);
                                    if ((t(e).trigger(r), !r.isDefaultPrevented())) {
                                        if (!this._inNavbar) {
                                            if ("undefined" == typeof n) throw new TypeError("Bootstrap dropdown require Popper.js (https://popper.js.org)");
                                            var o = this._element;
                                            t(e).hasClass(d) && (t(this._menu).hasClass(m) || t(this._menu).hasClass(p)) && (o = e),
                                                "scrollParent" !== this._config.boundary && t(e).addClass(v),
                                                (this._popper = new n(o, this._menu, this._getPopperConfig()));
                                        }
                                        "ontouchstart" in document.documentElement && 0 === t(e).closest(C).length && t("body").children().on("mouseover", null, t.noop),
                                            this._element.focus(),
                                            this._element.setAttribute("aria-expanded", !0),
                                            t(this._menu).toggleClass(f),
                                            t(e).toggleClass(f).trigger(t.Event(c.SHOWN, s));
                                    }
                                }
                            }
                        }),
                        (l.dispose = function () {
                            t.removeData(this._element, i), t(this._element).off(o), (this._element = null), (this._menu = null), null !== this._popper && (this._popper.destroy(), (this._popper = null));
                        }),
                        (l.update = function () {
                            (this._inNavbar = this._detectNavbar()), null !== this._popper && this._popper.scheduleUpdate();
                        }),
                        (l._addEventListeners = function () {
                            var e = this;
                            t(this._element).on(c.CLICK, function (t) {
                                t.preventDefault(), t.stopPropagation(), e.toggle();
                            });
                        }),
                        (l._getConfig = function (n) {
                            return (n = r({}, this.constructor.Default, t(this._element).data(), n)), P.typeCheckConfig(e, n, this.constructor.DefaultType), n;
                        }),
                        (l._getMenuElement = function () {
                            if (!this._menu) {
                                var e = a._getParentFromElement(this._element);
                                this._menu = t(e).find(y)[0];
                            }
                            return this._menu;
                        }),
                        (l._getPlacement = function () {
                            var e = t(this._element).parent(),
                                n = D;
                            return e.hasClass(d) ? ((n = A), t(this._menu).hasClass(p) && (n = b)) : e.hasClass(_) ? (n = w) : e.hasClass(g) ? (n = N) : t(this._menu).hasClass(p) && (n = S), n;
                        }),
                        (l._detectNavbar = function () {
                            return t(this._element).closest(".navbar").length > 0;
                        }),
                        (l._getPopperConfig = function () {
                            var t = this,
                                e = {};
                            return (
                                "function" == typeof this._config.offset
                                    ? (e.fn = function (e) {
                                          return (e.offsets = r({}, e.offsets, t._config.offset(e.offsets) || {})), e;
                                      })
                                    : (e.offset = this._config.offset),
                                { placement: this._getPlacement(), modifiers: { offset: e, flip: { enabled: this._config.flip }, preventOverflow: { boundariesElement: this._config.boundary } } }
                            );
                        }),
                        (a._jQueryInterface = function (e) {
                            return this.each(function () {
                                var n = t(this).data(i);
                                if ((n || ((n = new a(this, "object" == typeof e ? e : null)), t(this).data(i, n)), "string" == typeof e)) {
                                    if ("undefined" == typeof n[e]) throw new TypeError('No method named "' + e + '"');
                                    n[e]();
                                }
                            });
                        }),
                        (a._clearMenus = function (e) {
                            if (!e || (3 !== e.which && ("keyup" !== e.type || 9 === e.which)))
                                for (var n = t.makeArray(t(E)), s = 0; s < n.length; s++) {
                                    var r = a._getParentFromElement(n[s]),
                                        o = t(n[s]).data(i),
                                        l = { relatedTarget: n[s] };
                                    if (o) {
                                        var h = o._menu;
                                        if (t(r).hasClass(f) && !(e && (("click" === e.type && /input|textarea/i.test(e.target.tagName)) || ("keyup" === e.type && 9 === e.which)) && t.contains(r, e.target))) {
                                            var u = t.Event(c.HIDE, l);
                                            t(r).trigger(u),
                                                u.isDefaultPrevented() ||
                                                    ("ontouchstart" in document.documentElement && t("body").children().off("mouseover", null, t.noop),
                                                    n[s].setAttribute("aria-expanded", "false"),
                                                    t(h).removeClass(f),
                                                    t(r).removeClass(f).trigger(t.Event(c.HIDDEN, l)));
                                        }
                                    }
                                }
                        }),
                        (a._getParentFromElement = function (e) {
                            var n,
                                i = P.getSelectorFromElement(e);
                            return i && (n = t(i)[0]), n || e.parentNode;
                        }),
                        (a._dataApiKeydownHandler = function (e) {
                            if (
                                (/input|textarea/i.test(e.target.tagName) ? !(32 === e.which || (27 !== e.which && ((40 !== e.which && 38 !== e.which) || t(e.target).closest(y).length))) : h.test(e.which)) &&
                                (e.preventDefault(), e.stopPropagation(), !this.disabled && !t(this).hasClass(u))
                            ) {
                                var n = a._getParentFromElement(this),
                                    i = t(n).hasClass(f);
                                if ((i || (27 === e.which && 32 === e.which)) && (!i || (27 !== e.which && 32 !== e.which))) {
                                    var s = t(n).find(I).get();
                                    if (0 !== s.length) {
                                        var r = s.indexOf(e.target);
                                        38 === e.which && r > 0 && r--, 40 === e.which && r < s.length - 1 && r++, r < 0 && (r = 0), s[r].focus();
                                    }
                                } else {
                                    if (27 === e.which) {
                                        var o = t(n).find(E)[0];
                                        t(o).trigger("focus");
                                    }
                                    t(this).trigger("click");
                                }
                            }
                        }),
                        s(a, null, [
                            {
                                key: "VERSION",
                                get: function () {
                                    return "4.0.0";
                                },
                            },
                            {
                                key: "Default",
                                get: function () {
                                    return O;
                                },
                            },
                            {
                                key: "DefaultType",
                                get: function () {
                                    return k;
                                },
                            },
                        ]),
                        a
                    );
                })();
            return (
                t(document)
                    .on(c.KEYDOWN_DATA_API, E, L._dataApiKeydownHandler)
                    .on(c.KEYDOWN_DATA_API, y, L._dataApiKeydownHandler)
                    .on(c.CLICK_DATA_API + " " + c.KEYUP_DATA_API, L._clearMenus)
                    .on(c.CLICK_DATA_API, E, function (e) {
                        e.preventDefault(), e.stopPropagation(), L._jQueryInterface.call(t(this), "toggle");
                    })
                    .on(c.CLICK_DATA_API, T, function (t) {
                        t.stopPropagation();
                    }),
                (t.fn[e] = L._jQueryInterface),
                (t.fn[e].Constructor = L),
                (t.fn[e].noConflict = function () {
                    return (t.fn[e] = l), L._jQueryInterface;
                }),
                L
            );
        })(e),
        M = (function (t) {
            var e = "modal",
                n = "bs.modal",
                i = "." + n,
                o = t.fn.modal,
                a = { backdrop: !0, keyboard: !0, focus: !0, show: !0 },
                l = { backdrop: "(boolean|string)", keyboard: "boolean", focus: "boolean", show: "boolean" },
                h = {
                    HIDE: "hide" + i,
                    HIDDEN: "hidden" + i,
                    SHOW: "show" + i,
                    SHOWN: "shown" + i,
                    FOCUSIN: "focusin" + i,
                    RESIZE: "resize" + i,
                    CLICK_DISMISS: "click.dismiss" + i,
                    KEYDOWN_DISMISS: "keydown.dismiss" + i,
                    MOUSEUP_DISMISS: "mouseup.dismiss" + i,
                    MOUSEDOWN_DISMISS: "mousedown.dismiss" + i,
                    CLICK_DATA_API: "click" + i + ".data-api",
                },
                c = "modal-scrollbar-measure",
                u = "modal-backdrop",
                f = "modal-open",
                d = "fade",
                _ = "show",
                g = {
                    DIALOG: ".modal-dialog",
                    DATA_TOGGLE: '[data-toggle="modal"]',
                    DATA_DISMISS: '[data-dismiss="modal"]',
                    FIXED_CONTENT: ".fixed-top, .fixed-bottom, .is-fixed, .sticky-top",
                    STICKY_CONTENT: ".sticky-top",
                    NAVBAR_TOGGLER: ".navbar-toggler",
                },
                p = (function () {
                    function o(e, n) {
                        (this._config = this._getConfig(n)),
                            (this._element = e),
                            (this._dialog = t(e).find(g.DIALOG)[0]),
                            (this._backdrop = null),
                            (this._isShown = !1),
                            (this._isBodyOverflowing = !1),
                            (this._ignoreBackdropClick = !1),
                            (this._originalBodyPadding = 0),
                            (this._scrollbarWidth = 0);
                    }
                    var p = o.prototype;
                    return (
                        (p.toggle = function (t) {
                            return this._isShown ? this.hide() : this.show(t);
                        }),
                        (p.show = function (e) {
                            var n = this;
                            if (!this._isTransitioning && !this._isShown) {
                                P.supportsTransitionEnd() && t(this._element).hasClass(d) && (this._isTransitioning = !0);
                                var i = t.Event(h.SHOW, { relatedTarget: e });
                                t(this._element).trigger(i),
                                    this._isShown ||
                                        i.isDefaultPrevented() ||
                                        ((this._isShown = !0),
                                        this._checkScrollbar(),
                                        this._setScrollbar(),
                                        this._adjustDialog(),
                                        t(document.body).addClass(f),
                                        this._setEscapeEvent(),
                                        this._setResizeEvent(),
                                        t(this._element).on(h.CLICK_DISMISS, g.DATA_DISMISS, function (t) {
                                            return n.hide(t);
                                        }),
                                        t(this._dialog).on(h.MOUSEDOWN_DISMISS, function () {
                                            t(n._element).one(h.MOUSEUP_DISMISS, function (e) {
                                                t(e.target).is(n._element) && (n._ignoreBackdropClick = !0);
                                            });
                                        }),
                                        this._showBackdrop(function () {
                                            return n._showElement(e);
                                        }));
                            }
                        }),
                        (p.hide = function (e) {
                            var n = this;
                            if ((e && e.preventDefault(), !this._isTransitioning && this._isShown)) {
                                var i = t.Event(h.HIDE);
                                if ((t(this._element).trigger(i), this._isShown && !i.isDefaultPrevented())) {
                                    this._isShown = !1;
                                    var s = P.supportsTransitionEnd() && t(this._element).hasClass(d);
                                    s && (this._isTransitioning = !0),
                                        this._setEscapeEvent(),
                                        this._setResizeEvent(),
                                        t(document).off(h.FOCUSIN),
                                        t(this._element).removeClass(_),
                                        t(this._element).off(h.CLICK_DISMISS),
                                        t(this._dialog).off(h.MOUSEDOWN_DISMISS),
                                        s
                                            ? t(this._element)
                                                  .one(P.TRANSITION_END, function (t) {
                                                      return n._hideModal(t);
                                                  })
                                                  .emulateTransitionEnd(300)
                                            : this._hideModal();
                                }
                            }
                        }),
                        (p.dispose = function () {
                            t.removeData(this._element, n),
                                t(window, document, this._element, this._backdrop).off(i),
                                (this._config = null),
                                (this._element = null),
                                (this._dialog = null),
                                (this._backdrop = null),
                                (this._isShown = null),
                                (this._isBodyOverflowing = null),
                                (this._ignoreBackdropClick = null),
                                (this._scrollbarWidth = null);
                        }),
                        (p.handleUpdate = function () {
                            this._adjustDialog();
                        }),
                        (p._getConfig = function (t) {
                            return (t = r({}, a, t)), P.typeCheckConfig(e, t, l), t;
                        }),
                        (p._showElement = function (e) {
                            var n = this,
                                i = P.supportsTransitionEnd() && t(this._element).hasClass(d);
                            (this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE) || document.body.appendChild(this._element),
                                (this._element.style.display = "block"),
                                this._element.removeAttribute("aria-hidden"),
                                (this._element.scrollTop = 0),
                                i && P.reflow(this._element),
                                t(this._element).addClass(_),
                                this._config.focus && this._enforceFocus();
                            var s = t.Event(h.SHOWN, { relatedTarget: e }),
                                r = function () {
                                    n._config.focus && n._element.focus(), (n._isTransitioning = !1), t(n._element).trigger(s);
                                };
                            i ? t(this._dialog).one(P.TRANSITION_END, r).emulateTransitionEnd(300) : r();
                        }),
                        (p._enforceFocus = function () {
                            var e = this;
                            t(document)
                                .off(h.FOCUSIN)
                                .on(h.FOCUSIN, function (n) {
                                    document !== n.target && e._element !== n.target && 0 === t(e._element).has(n.target).length && e._element.focus();
                                });
                        }),
                        (p._setEscapeEvent = function () {
                            var e = this;
                            this._isShown && this._config.keyboard
                                ? t(this._element).on(h.KEYDOWN_DISMISS, function (t) {
                                      27 === t.which && (t.preventDefault(), e.hide());
                                  })
                                : this._isShown || t(this._element).off(h.KEYDOWN_DISMISS);
                        }),
                        (p._setResizeEvent = function () {
                            var e = this;
                            this._isShown
                                ? t(window).on(h.RESIZE, function (t) {
                                      return e.handleUpdate(t);
                                  })
                                : t(window).off(h.RESIZE);
                        }),
                        (p._hideModal = function () {
                            var e = this;
                            (this._element.style.display = "none"),
                                this._element.setAttribute("aria-hidden", !0),
                                (this._isTransitioning = !1),
                                this._showBackdrop(function () {
                                    t(document.body).removeClass(f), e._resetAdjustments(), e._resetScrollbar(), t(e._element).trigger(h.HIDDEN);
                                });
                        }),
                        (p._removeBackdrop = function () {
                            this._backdrop && (t(this._backdrop).remove(), (this._backdrop = null));
                        }),
                        (p._showBackdrop = function (e) {
                            var n = this,
                                i = t(this._element).hasClass(d) ? d : "";
                            if (this._isShown && this._config.backdrop) {
                                var s = P.supportsTransitionEnd() && i;
                                if (
                                    ((this._backdrop = document.createElement("div")),
                                    (this._backdrop.className = u),
                                    i && t(this._backdrop).addClass(i),
                                    t(this._backdrop).appendTo(document.body),
                                    t(this._element).on(h.CLICK_DISMISS, function (t) {
                                        n._ignoreBackdropClick ? (n._ignoreBackdropClick = !1) : t.target === t.currentTarget && ("static" === n._config.backdrop ? n._element.focus() : n.hide());
                                    }),
                                    s && P.reflow(this._backdrop),
                                    t(this._backdrop).addClass(_),
                                    !e)
                                )
                                    return;
                                if (!s) return void e();
                                t(this._backdrop).one(P.TRANSITION_END, e).emulateTransitionEnd(150);
                            } else if (!this._isShown && this._backdrop) {
                                t(this._backdrop).removeClass(_);
                                var r = function () {
                                    n._removeBackdrop(), e && e();
                                };
                                P.supportsTransitionEnd() && t(this._element).hasClass(d) ? t(this._backdrop).one(P.TRANSITION_END, r).emulateTransitionEnd(150) : r();
                            } else e && e();
                        }),
                        (p._adjustDialog = function () {
                            var t = this._element.scrollHeight > document.documentElement.clientHeight;
                            !this._isBodyOverflowing && t && (this._element.style.paddingLeft = this._scrollbarWidth + "px"), this._isBodyOverflowing && !t && (this._element.style.paddingRight = this._scrollbarWidth + "px");
                        }),
                        (p._resetAdjustments = function () {
                            (this._element.style.paddingLeft = ""), (this._element.style.paddingRight = "");
                        }),
                        (p._checkScrollbar = function () {
                            var t = document.body.getBoundingClientRect();
                            (this._isBodyOverflowing = t.left + t.right < window.innerWidth), (this._scrollbarWidth = this._getScrollbarWidth());
                        }),
                        (p._setScrollbar = function () {
                            var e = this;
                            if (this._isBodyOverflowing) {
                                t(g.FIXED_CONTENT).each(function (n, i) {
                                    var s = t(i)[0].style.paddingRight,
                                        r = t(i).css("padding-right");
                                    t(i)
                                        .data("padding-right", s)
                                        .css("padding-right", parseFloat(r) + e._scrollbarWidth + "px");
                                }),
                                    t(g.STICKY_CONTENT).each(function (n, i) {
                                        var s = t(i)[0].style.marginRight,
                                            r = t(i).css("margin-right");
                                        t(i)
                                            .data("margin-right", s)
                                            .css("margin-right", parseFloat(r) - e._scrollbarWidth + "px");
                                    }),
                                    t(g.NAVBAR_TOGGLER).each(function (n, i) {
                                        var s = t(i)[0].style.marginRight,
                                            r = t(i).css("margin-right");
                                        t(i)
                                            .data("margin-right", s)
                                            .css("margin-right", parseFloat(r) + e._scrollbarWidth + "px");
                                    });
                                var n = document.body.style.paddingRight,
                                    i = t("body").css("padding-right");
                                t("body")
                                    .data("padding-right", n)
                                    .css("padding-right", parseFloat(i) + this._scrollbarWidth + "px");
                            }
                        }),
                        (p._resetScrollbar = function () {
                            t(g.FIXED_CONTENT).each(function (e, n) {
                                var i = t(n).data("padding-right");
                                "undefined" != typeof i && t(n).css("padding-right", i).removeData("padding-right");
                            }),
                                t(g.STICKY_CONTENT + ", " + g.NAVBAR_TOGGLER).each(function (e, n) {
                                    var i = t(n).data("margin-right");
                                    "undefined" != typeof i && t(n).css("margin-right", i).removeData("margin-right");
                                });
                            var e = t("body").data("padding-right");
                            "undefined" != typeof e && t("body").css("padding-right", e).removeData("padding-right");
                        }),
                        (p._getScrollbarWidth = function () {
                            var t = document.createElement("div");
                            (t.className = c), document.body.appendChild(t);
                            var e = t.getBoundingClientRect().width - t.clientWidth;
                            return document.body.removeChild(t), e;
                        }),
                        (o._jQueryInterface = function (e, i) {
                            return this.each(function () {
                                var s = t(this).data(n),
                                    a = r({}, o.Default, t(this).data(), "object" == typeof e && e);
                                if ((s || ((s = new o(this, a)), t(this).data(n, s)), "string" == typeof e)) {
                                    if ("undefined" == typeof s[e]) throw new TypeError('No method named "' + e + '"');
                                    s[e](i);
                                } else a.show && s.show(i);
                            });
                        }),
                        s(o, null, [
                            {
                                key: "VERSION",
                                get: function () {
                                    return "4.0.0";
                                },
                            },
                            {
                                key: "Default",
                                get: function () {
                                    return a;
                                },
                            },
                        ]),
                        o
                    );
                })();
            return (
                t(document).on(h.CLICK_DATA_API, g.DATA_TOGGLE, function (e) {
                    var i,
                        s = this,
                        o = P.getSelectorFromElement(this);
                    o && (i = t(o)[0]);
                    var a = t(i).data(n) ? "toggle" : r({}, t(i).data(), t(this).data());
                    ("A" !== this.tagName && "AREA" !== this.tagName) || e.preventDefault();
                    var l = t(i).one(h.SHOW, function (e) {
                        e.isDefaultPrevented() ||
                            l.one(h.HIDDEN, function () {
                                t(s).is(":visible") && s.focus();
                            });
                    });
                    p._jQueryInterface.call(t(i), a, this);
                }),
                (t.fn.modal = p._jQueryInterface),
                (t.fn.modal.Constructor = p),
                (t.fn.modal.noConflict = function () {
                    return (t.fn.modal = o), p._jQueryInterface;
                }),
                p
            );
        })(e),
        U = (function (t) {
            var e = "tooltip",
                i = "bs.tooltip",
                o = "." + i,
                a = t.fn[e],
                l = new RegExp("(^|\\s)bs-tooltip\\S+", "g"),
                h = {
                    animation: "boolean",
                    template: "string",
                    title: "(string|element|function)",
                    trigger: "string",
                    delay: "(number|object)",
                    html: "boolean",
                    selector: "(string|boolean)",
                    placement: "(string|function)",
                    offset: "(number|string)",
                    container: "(string|element|boolean)",
                    fallbackPlacement: "(string|array)",
                    boundary: "(string|element)",
                },
                c = { AUTO: "auto", TOP: "top", RIGHT: "right", BOTTOM: "bottom", LEFT: "left" },
                u = {
                    animation: !0,
                    template: '<div class="tooltip" role="tooltip"><div class="arrow"></div><div class="tooltip-inner"></div></div>',
                    trigger: "hover focus",
                    title: "",
                    delay: 0,
                    html: !1,
                    selector: !1,
                    placement: "top",
                    offset: 0,
                    container: !1,
                    fallbackPlacement: "flip",
                    boundary: "scrollParent",
                },
                f = "show",
                d = "out",
                _ = {
                    HIDE: "hide" + o,
                    HIDDEN: "hidden" + o,
                    SHOW: "show" + o,
                    SHOWN: "shown" + o,
                    INSERTED: "inserted" + o,
                    CLICK: "click" + o,
                    FOCUSIN: "focusin" + o,
                    FOCUSOUT: "focusout" + o,
                    MOUSEENTER: "mouseenter" + o,
                    MOUSELEAVE: "mouseleave" + o,
                },
                g = "fade",
                p = "show",
                m = ".tooltip-inner",
                v = ".arrow",
                E = "hover",
                T = "focus",
                y = "click",
                C = "manual",
                I = (function () {
                    function a(t, e) {
                        if ("undefined" == typeof n) throw new TypeError("Bootstrap tooltips require Popper.js (https://popper.js.org)");
                        (this._isEnabled = !0),
                            (this._timeout = 0),
                            (this._hoverState = ""),
                            (this._activeTrigger = {}),
                            (this._popper = null),
                            (this.element = t),
                            (this.config = this._getConfig(e)),
                            (this.tip = null),
                            this._setListeners();
                    }
                    var I = a.prototype;
                    return (
                        (I.enable = function () {
                            this._isEnabled = !0;
                        }),
                        (I.disable = function () {
                            this._isEnabled = !1;
                        }),
                        (I.toggleEnabled = function () {
                            this._isEnabled = !this._isEnabled;
                        }),
                        (I.toggle = function (e) {
                            if (this._isEnabled)
                                if (e) {
                                    var n = this.constructor.DATA_KEY,
                                        i = t(e.currentTarget).data(n);
                                    i || ((i = new this.constructor(e.currentTarget, this._getDelegateConfig())), t(e.currentTarget).data(n, i)),
                                        (i._activeTrigger.click = !i._activeTrigger.click),
                                        i._isWithActiveTrigger() ? i._enter(null, i) : i._leave(null, i);
                                } else {
                                    if (t(this.getTipElement()).hasClass(p)) return void this._leave(null, this);
                                    this._enter(null, this);
                                }
                        }),
                        (I.dispose = function () {
                            clearTimeout(this._timeout),
                                t.removeData(this.element, this.constructor.DATA_KEY),
                                t(this.element).off(this.constructor.EVENT_KEY),
                                t(this.element).closest(".modal").off("hide.bs.modal"),
                                this.tip && t(this.tip).remove(),
                                (this._isEnabled = null),
                                (this._timeout = null),
                                (this._hoverState = null),
                                (this._activeTrigger = null),
                                null !== this._popper && this._popper.destroy(),
                                (this._popper = null),
                                (this.element = null),
                                (this.config = null),
                                (this.tip = null);
                        }),
                        (I.show = function () {
                            var e = this;
                            if ("none" === t(this.element).css("display")) throw new Error("Please use show on visible elements");
                            var i = t.Event(this.constructor.Event.SHOW);
                            if (this.isWithContent() && this._isEnabled) {
                                t(this.element).trigger(i);
                                var s = t.contains(this.element.ownerDocument.documentElement, this.element);
                                if (i.isDefaultPrevented() || !s) return;
                                var r = this.getTipElement(),
                                    o = P.getUID(this.constructor.NAME);
                                r.setAttribute("id", o), this.element.setAttribute("aria-describedby", o), this.setContent(), this.config.animation && t(r).addClass(g);
                                var l = "function" == typeof this.config.placement ? this.config.placement.call(this, r, this.element) : this.config.placement,
                                    h = this._getAttachment(l);
                                this.addAttachmentClass(h);
                                var c = !1 === this.config.container ? document.body : t(this.config.container);
                                t(r).data(this.constructor.DATA_KEY, this),
                                    t.contains(this.element.ownerDocument.documentElement, this.tip) || t(r).appendTo(c),
                                    t(this.element).trigger(this.constructor.Event.INSERTED),
                                    (this._popper = new n(this.element, r, {
                                        placement: h,
                                        modifiers: { offset: { offset: this.config.offset }, flip: { behavior: this.config.fallbackPlacement }, arrow: { element: v }, preventOverflow: { boundariesElement: this.config.boundary } },
                                        onCreate: function (t) {
                                            t.originalPlacement !== t.placement && e._handlePopperPlacementChange(t);
                                        },
                                        onUpdate: function (t) {
                                            e._handlePopperPlacementChange(t);
                                        },
                                    })),
                                    t(r).addClass(p),
                                    "ontouchstart" in document.documentElement && t("body").children().on("mouseover", null, t.noop);
                                var u = function () {
                                    e.config.animation && e._fixTransition();
                                    var n = e._hoverState;
                                    (e._hoverState = null), t(e.element).trigger(e.constructor.Event.SHOWN), n === d && e._leave(null, e);
                                };
                                P.supportsTransitionEnd() && t(this.tip).hasClass(g) ? t(this.tip).one(P.TRANSITION_END, u).emulateTransitionEnd(a._TRANSITION_DURATION) : u();
                            }
                        }),
                        (I.hide = function (e) {
                            var n = this,
                                i = this.getTipElement(),
                                s = t.Event(this.constructor.Event.HIDE),
                                r = function () {
                                    n._hoverState !== f && i.parentNode && i.parentNode.removeChild(i),
                                        n._cleanTipClass(),
                                        n.element.removeAttribute("aria-describedby"),
                                        t(n.element).trigger(n.constructor.Event.HIDDEN),
                                        null !== n._popper && n._popper.destroy(),
                                        e && e();
                                };
                            t(this.element).trigger(s),
                                s.isDefaultPrevented() ||
                                    (t(i).removeClass(p),
                                    "ontouchstart" in document.documentElement && t("body").children().off("mouseover", null, t.noop),
                                    (this._activeTrigger[y] = !1),
                                    (this._activeTrigger[T] = !1),
                                    (this._activeTrigger[E] = !1),
                                    P.supportsTransitionEnd() && t(this.tip).hasClass(g) ? t(i).one(P.TRANSITION_END, r).emulateTransitionEnd(150) : r(),
                                    (this._hoverState = ""));
                        }),
                        (I.update = function () {
                            null !== this._popper && this._popper.scheduleUpdate();
                        }),
                        (I.isWithContent = function () {
                            return Boolean(this.getTitle());
                        }),
                        (I.addAttachmentClass = function (e) {
                            t(this.getTipElement()).addClass("bs-tooltip-" + e);
                        }),
                        (I.getTipElement = function () {
                            return (this.tip = this.tip || t(this.config.template)[0]), this.tip;
                        }),
                        (I.setContent = function () {
                            var e = t(this.getTipElement());
                            this.setElementContent(e.find(m), this.getTitle()), e.removeClass(g + " " + p);
                        }),
                        (I.setElementContent = function (e, n) {
                            var i = this.config.html;
                            "object" == typeof n && (n.nodeType || n.jquery) ? (i ? t(n).parent().is(e) || e.empty().append(n) : e.text(t(n).text())) : e[i ? "html" : "text"](n);
                        }),
                        (I.getTitle = function () {
                            var t = this.element.getAttribute("data-original-title");
                            return t || (t = "function" == typeof this.config.title ? this.config.title.call(this.element) : this.config.title), t;
                        }),
                        (I._getAttachment = function (t) {
                            return c[t.toUpperCase()];
                        }),
                        (I._setListeners = function () {
                            var e = this;
                            this.config.trigger.split(" ").forEach(function (n) {
                                if ("click" === n)
                                    t(e.element).on(e.constructor.Event.CLICK, e.config.selector, function (t) {
                                        return e.toggle(t);
                                    });
                                else if (n !== C) {
                                    var i = n === E ? e.constructor.Event.MOUSEENTER : e.constructor.Event.FOCUSIN,
                                        s = n === E ? e.constructor.Event.MOUSELEAVE : e.constructor.Event.FOCUSOUT;
                                    t(e.element)
                                        .on(i, e.config.selector, function (t) {
                                            return e._enter(t);
                                        })
                                        .on(s, e.config.selector, function (t) {
                                            return e._leave(t);
                                        });
                                }
                                t(e.element)
                                    .closest(".modal")
                                    .on("hide.bs.modal", function () {
                                        return e.hide();
                                    });
                            }),
                                this.config.selector ? (this.config = r({}, this.config, { trigger: "manual", selector: "" })) : this._fixTitle();
                        }),
                        (I._fixTitle = function () {
                            var t = typeof this.element.getAttribute("data-original-title");
                            (this.element.getAttribute("title") || "string" !== t) && (this.element.setAttribute("data-original-title", this.element.getAttribute("title") || ""), this.element.setAttribute("title", ""));
                        }),
                        (I._enter = function (e, n) {
                            var i = this.constructor.DATA_KEY;
                            (n = n || t(e.currentTarget).data(i)) || ((n = new this.constructor(e.currentTarget, this._getDelegateConfig())), t(e.currentTarget).data(i, n)),
                                e && (n._activeTrigger["focusin" === e.type ? T : E] = !0),
                                t(n.getTipElement()).hasClass(p) || n._hoverState === f
                                    ? (n._hoverState = f)
                                    : (clearTimeout(n._timeout),
                                      (n._hoverState = f),
                                      n.config.delay && n.config.delay.show
                                          ? (n._timeout = setTimeout(function () {
                                                n._hoverState === f && n.show();
                                            }, n.config.delay.show))
                                          : n.show());
                        }),
                        (I._leave = function (e, n) {
                            var i = this.constructor.DATA_KEY;
                            (n = n || t(e.currentTarget).data(i)) || ((n = new this.constructor(e.currentTarget, this._getDelegateConfig())), t(e.currentTarget).data(i, n)),
                                e && (n._activeTrigger["focusout" === e.type ? T : E] = !1),
                                n._isWithActiveTrigger() ||
                                    (clearTimeout(n._timeout),
                                    (n._hoverState = d),
                                    n.config.delay && n.config.delay.hide
                                        ? (n._timeout = setTimeout(function () {
                                              n._hoverState === d && n.hide();
                                          }, n.config.delay.hide))
                                        : n.hide());
                        }),
                        (I._isWithActiveTrigger = function () {
                            for (var t in this._activeTrigger) if (this._activeTrigger[t]) return !0;
                            return !1;
                        }),
                        (I._getConfig = function (n) {
                            return (
                                "number" == typeof (n = r({}, this.constructor.Default, t(this.element).data(), n)).delay && (n.delay = { show: n.delay, hide: n.delay }),
                                "number" == typeof n.title && (n.title = n.title.toString()),
                                "number" == typeof n.content && (n.content = n.content.toString()),
                                P.typeCheckConfig(e, n, this.constructor.DefaultType),
                                n
                            );
                        }),
                        (I._getDelegateConfig = function () {
                            var t = {};
                            if (this.config) for (var e in this.config) this.constructor.Default[e] !== this.config[e] && (t[e] = this.config[e]);
                            return t;
                        }),
                        (I._cleanTipClass = function () {
                            var e = t(this.getTipElement()),
                                n = e.attr("class").match(l);
                            null !== n && n.length > 0 && e.removeClass(n.join(""));
                        }),
                        (I._handlePopperPlacementChange = function (t) {
                            this._cleanTipClass(), this.addAttachmentClass(this._getAttachment(t.placement));
                        }),
                        (I._fixTransition = function () {
                            var e = this.getTipElement(),
                                n = this.config.animation;
                            null === e.getAttribute("x-placement") && (t(e).removeClass(g), (this.config.animation = !1), this.hide(), this.show(), (this.config.animation = n));
                        }),
                        (a._jQueryInterface = function (e) {
                            return this.each(function () {
                                var n = t(this).data(i),
                                    s = "object" == typeof e && e;
                                if ((n || !/dispose|hide/.test(e)) && (n || ((n = new a(this, s)), t(this).data(i, n)), "string" == typeof e)) {
                                    if ("undefined" == typeof n[e]) throw new TypeError('No method named "' + e + '"');
                                    n[e]();
                                }
                            });
                        }),
                        s(a, null, [
                            {
                                key: "VERSION",
                                get: function () {
                                    return "4.0.0";
                                },
                            },
                            {
                                key: "Default",
                                get: function () {
                                    return u;
                                },
                            },
                            {
                                key: "NAME",
                                get: function () {
                                    return e;
                                },
                            },
                            {
                                key: "DATA_KEY",
                                get: function () {
                                    return i;
                                },
                            },
                            {
                                key: "Event",
                                get: function () {
                                    return _;
                                },
                            },
                            {
                                key: "EVENT_KEY",
                                get: function () {
                                    return o;
                                },
                            },
                            {
                                key: "DefaultType",
                                get: function () {
                                    return h;
                                },
                            },
                        ]),
                        a
                    );
                })();
            return (
                (t.fn[e] = I._jQueryInterface),
                (t.fn[e].Constructor = I),
                (t.fn[e].noConflict = function () {
                    return (t.fn[e] = a), I._jQueryInterface;
                }),
                I
            );
        })(e),
        x = (function (t) {
            var e = "popover",
                n = "bs.popover",
                i = "." + n,
                o = t.fn[e],
                a = new RegExp("(^|\\s)bs-popover\\S+", "g"),
                l = r({}, U.Default, { placement: "right", trigger: "click", content: "", template: '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>' }),
                h = r({}, U.DefaultType, { content: "(string|element|function)" }),
                c = "fade",
                u = "show",
                f = ".popover-header",
                d = ".popover-body",
                _ = {
                    HIDE: "hide" + i,
                    HIDDEN: "hidden" + i,
                    SHOW: "show" + i,
                    SHOWN: "shown" + i,
                    INSERTED: "inserted" + i,
                    CLICK: "click" + i,
                    FOCUSIN: "focusin" + i,
                    FOCUSOUT: "focusout" + i,
                    MOUSEENTER: "mouseenter" + i,
                    MOUSELEAVE: "mouseleave" + i,
                },
                g = (function (r) {
                    var o, g;
                    function p() {
                        return r.apply(this, arguments) || this;
                    }
                    (g = r), ((o = p).prototype = Object.create(g.prototype)), (o.prototype.constructor = o), (o.__proto__ = g);
                    var m = p.prototype;
                    return (
                        (m.isWithContent = function () {
                            return this.getTitle() || this._getContent();
                        }),
                        (m.addAttachmentClass = function (e) {
                            t(this.getTipElement()).addClass("bs-popover-" + e);
                        }),
                        (m.getTipElement = function () {
                            return (this.tip = this.tip || t(this.config.template)[0]), this.tip;
                        }),
                        (m.setContent = function () {
                            var e = t(this.getTipElement());
                            this.setElementContent(e.find(f), this.getTitle());
                            var n = this._getContent();
                            "function" == typeof n && (n = n.call(this.element)), this.setElementContent(e.find(d), n), e.removeClass(c + " " + u);
                        }),
                        (m._getContent = function () {
                            return this.element.getAttribute("data-content") || this.config.content;
                        }),
                        (m._cleanTipClass = function () {
                            var e = t(this.getTipElement()),
                                n = e.attr("class").match(a);
                            null !== n && n.length > 0 && e.removeClass(n.join(""));
                        }),
                        (p._jQueryInterface = function (e) {
                            return this.each(function () {
                                var i = t(this).data(n),
                                    s = "object" == typeof e ? e : null;
                                if ((i || !/destroy|hide/.test(e)) && (i || ((i = new p(this, s)), t(this).data(n, i)), "string" == typeof e)) {
                                    if ("undefined" == typeof i[e]) throw new TypeError('No method named "' + e + '"');
                                    i[e]();
                                }
                            });
                        }),
                        s(p, null, [
                            {
                                key: "VERSION",
                                get: function () {
                                    return "4.0.0";
                                },
                            },
                            {
                                key: "Default",
                                get: function () {
                                    return l;
                                },
                            },
                            {
                                key: "NAME",
                                get: function () {
                                    return e;
                                },
                            },
                            {
                                key: "DATA_KEY",
                                get: function () {
                                    return n;
                                },
                            },
                            {
                                key: "Event",
                                get: function () {
                                    return _;
                                },
                            },
                            {
                                key: "EVENT_KEY",
                                get: function () {
                                    return i;
                                },
                            },
                            {
                                key: "DefaultType",
                                get: function () {
                                    return h;
                                },
                            },
                        ]),
                        p
                    );
                })(U);
            return (
                (t.fn[e] = g._jQueryInterface),
                (t.fn[e].Constructor = g),
                (t.fn[e].noConflict = function () {
                    return (t.fn[e] = o), g._jQueryInterface;
                }),
                g
            );
        })(e),
        K = (function (t) {
            var e = "scrollspy",
                n = "bs.scrollspy",
                i = "." + n,
                o = t.fn[e],
                a = { offset: 10, method: "auto", target: "" },
                l = { offset: "number", method: "string", target: "(string|element)" },
                h = { ACTIVATE: "activate" + i, SCROLL: "scroll" + i, LOAD_DATA_API: "load" + i + ".data-api" },
                c = "dropdown-item",
                u = "active",
                f = {
                    DATA_SPY: '[data-spy="scroll"]',
                    ACTIVE: ".active",
                    NAV_LIST_GROUP: ".nav, .list-group",
                    NAV_LINKS: ".nav-link",
                    NAV_ITEMS: ".nav-item",
                    LIST_ITEMS: ".list-group-item",
                    DROPDOWN: ".dropdown",
                    DROPDOWN_ITEMS: ".dropdown-item",
                    DROPDOWN_TOGGLE: ".dropdown-toggle",
                },
                d = "offset",
                _ = "position",
                g = (function () {
                    function o(e, n) {
                        var i = this;
                        (this._element = e),
                            (this._scrollElement = "BODY" === e.tagName ? window : e),
                            (this._config = this._getConfig(n)),
                            (this._selector = this._config.target + " " + f.NAV_LINKS + "," + this._config.target + " " + f.LIST_ITEMS + "," + this._config.target + " " + f.DROPDOWN_ITEMS),
                            (this._offsets = []),
                            (this._targets = []),
                            (this._activeTarget = null),
                            (this._scrollHeight = 0),
                            t(this._scrollElement).on(h.SCROLL, function (t) {
                                return i._process(t);
                            }),
                            this.refresh(),
                            this._process();
                    }
                    var g = o.prototype;
                    return (
                        (g.refresh = function () {
                            var e = this,
                                n = this._scrollElement === this._scrollElement.window ? d : _,
                                i = "auto" === this._config.method ? n : this._config.method,
                                s = i === _ ? this._getScrollTop() : 0;
                            (this._offsets = []),
                                (this._targets = []),
                                (this._scrollHeight = this._getScrollHeight()),
                                t
                                    .makeArray(t(this._selector))
                                    .map(function (e) {
                                        var n,
                                            r = P.getSelectorFromElement(e);
                                        if ((r && (n = t(r)[0]), n)) {
                                            var o = n.getBoundingClientRect();
                                            if (o.width || o.height) return [t(n)[i]().top + s, r];
                                        }
                                        return null;
                                    })
                                    .filter(function (t) {
                                        return t;
                                    })
                                    .sort(function (t, e) {
                                        return t[0] - e[0];
                                    })
                                    .forEach(function (t) {
                                        e._offsets.push(t[0]), e._targets.push(t[1]);
                                    });
                        }),
                        (g.dispose = function () {
                            t.removeData(this._element, n),
                                t(this._scrollElement).off(i),
                                (this._element = null),
                                (this._scrollElement = null),
                                (this._config = null),
                                (this._selector = null),
                                (this._offsets = null),
                                (this._targets = null),
                                (this._activeTarget = null),
                                (this._scrollHeight = null);
                        }),
                        (g._getConfig = function (n) {
                            if ("string" != typeof (n = r({}, a, n)).target) {
                                var i = t(n.target).attr("id");
                                i || ((i = P.getUID(e)), t(n.target).attr("id", i)), (n.target = "#" + i);
                            }
                            return P.typeCheckConfig(e, n, l), n;
                        }),
                        (g._getScrollTop = function () {
                            return this._scrollElement === window ? this._scrollElement.pageYOffset : this._scrollElement.scrollTop;
                        }),
                        (g._getScrollHeight = function () {
                            return this._scrollElement.scrollHeight || Math.max(document.body.scrollHeight, document.documentElement.scrollHeight);
                        }),
                        (g._getOffsetHeight = function () {
                            return this._scrollElement === window ? window.innerHeight : this._scrollElement.getBoundingClientRect().height;
                        }),
                        (g._process = function () {
                            var t = this._getScrollTop() + this._config.offset,
                                e = this._getScrollHeight(),
                                n = this._config.offset + e - this._getOffsetHeight();
                            if ((this._scrollHeight !== e && this.refresh(), t >= n)) {
                                var i = this._targets[this._targets.length - 1];
                                this._activeTarget !== i && this._activate(i);
                            } else {
                                if (this._activeTarget && t < this._offsets[0] && this._offsets[0] > 0) return (this._activeTarget = null), void this._clear();
                                for (var s = this._offsets.length; s--; ) {
                                    this._activeTarget !== this._targets[s] && t >= this._offsets[s] && ("undefined" == typeof this._offsets[s + 1] || t < this._offsets[s + 1]) && this._activate(this._targets[s]);
                                }
                            }
                        }),
                        (g._activate = function (e) {
                            (this._activeTarget = e), this._clear();
                            var n = this._selector.split(",");
                            n = n.map(function (t) {
                                return t + '[data-target="' + e + '"],' + t + '[href="' + e + '"]';
                            });
                            var i = t(n.join(","));
                            i.hasClass(c)
                                ? (i.closest(f.DROPDOWN).find(f.DROPDOWN_TOGGLE).addClass(u), i.addClass(u))
                                : (i.addClass(u),
                                  i
                                      .parents(f.NAV_LIST_GROUP)
                                      .prev(f.NAV_LINKS + ", " + f.LIST_ITEMS)
                                      .addClass(u),
                                  i.parents(f.NAV_LIST_GROUP).prev(f.NAV_ITEMS).children(f.NAV_LINKS).addClass(u)),
                                t(this._scrollElement).trigger(h.ACTIVATE, { relatedTarget: e });
                        }),
                        (g._clear = function () {
                            t(this._selector).filter(f.ACTIVE).removeClass(u);
                        }),
                        (o._jQueryInterface = function (e) {
                            return this.each(function () {
                                var i = t(this).data(n);
                                if ((i || ((i = new o(this, "object" == typeof e && e)), t(this).data(n, i)), "string" == typeof e)) {
                                    if ("undefined" == typeof i[e]) throw new TypeError('No method named "' + e + '"');
                                    i[e]();
                                }
                            });
                        }),
                        s(o, null, [
                            {
                                key: "VERSION",
                                get: function () {
                                    return "4.0.0";
                                },
                            },
                            {
                                key: "Default",
                                get: function () {
                                    return a;
                                },
                            },
                        ]),
                        o
                    );
                })();
            return (
                t(window).on(h.LOAD_DATA_API, function () {
                    for (var e = t.makeArray(t(f.DATA_SPY)), n = e.length; n--; ) {
                        var i = t(e[n]);
                        g._jQueryInterface.call(i, i.data());
                    }
                }),
                (t.fn[e] = g._jQueryInterface),
                (t.fn[e].Constructor = g),
                (t.fn[e].noConflict = function () {
                    return (t.fn[e] = o), g._jQueryInterface;
                }),
                g
            );
        })(e),
        V = (function (t) {
            var e = "bs.tab",
                n = "." + e,
                i = t.fn.tab,
                r = { HIDE: "hide" + n, HIDDEN: "hidden" + n, SHOW: "show" + n, SHOWN: "shown" + n, CLICK_DATA_API: "click.bs.tab.data-api" },
                o = "dropdown-menu",
                a = "active",
                l = "disabled",
                h = "fade",
                c = "show",
                u = ".dropdown",
                f = ".nav, .list-group",
                d = ".active",
                _ = "> li > .active",
                g = '[data-toggle="tab"], [data-toggle="pill"], [data-toggle="list"]',
                p = ".dropdown-toggle",
                m = "> .dropdown-menu .active",
                v = (function () {
                    function n(t) {
                        this._element = t;
                    }
                    var i = n.prototype;
                    return (
                        (i.show = function () {
                            var e = this;
                            if (!((this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE && t(this._element).hasClass(a)) || t(this._element).hasClass(l))) {
                                var n,
                                    i,
                                    s = t(this._element).closest(f)[0],
                                    o = P.getSelectorFromElement(this._element);
                                if (s) {
                                    var h = "UL" === s.nodeName ? _ : d;
                                    i = (i = t.makeArray(t(s).find(h)))[i.length - 1];
                                }
                                var c = t.Event(r.HIDE, { relatedTarget: this._element }),
                                    u = t.Event(r.SHOW, { relatedTarget: i });
                                if ((i && t(i).trigger(c), t(this._element).trigger(u), !u.isDefaultPrevented() && !c.isDefaultPrevented())) {
                                    o && (n = t(o)[0]), this._activate(this._element, s);
                                    var g = function () {
                                        var n = t.Event(r.HIDDEN, { relatedTarget: e._element }),
                                            s = t.Event(r.SHOWN, { relatedTarget: i });
                                        t(i).trigger(n), t(e._element).trigger(s);
                                    };
                                    n ? this._activate(n, n.parentNode, g) : g();
                                }
                            }
                        }),
                        (i.dispose = function () {
                            t.removeData(this._element, e), (this._element = null);
                        }),
                        (i._activate = function (e, n, i) {
                            var s = this,
                                r = ("UL" === n.nodeName ? t(n).find(_) : t(n).children(d))[0],
                                o = i && P.supportsTransitionEnd() && r && t(r).hasClass(h),
                                a = function () {
                                    return s._transitionComplete(e, r, i);
                                };
                            r && o ? t(r).one(P.TRANSITION_END, a).emulateTransitionEnd(150) : a();
                        }),
                        (i._transitionComplete = function (e, n, i) {
                            if (n) {
                                t(n).removeClass(c + " " + a);
                                var s = t(n.parentNode).find(m)[0];
                                s && t(s).removeClass(a), "tab" === n.getAttribute("role") && n.setAttribute("aria-selected", !1);
                            }
                            if ((t(e).addClass(a), "tab" === e.getAttribute("role") && e.setAttribute("aria-selected", !0), P.reflow(e), t(e).addClass(c), e.parentNode && t(e.parentNode).hasClass(o))) {
                                var r = t(e).closest(u)[0];
                                r && t(r).find(p).addClass(a), e.setAttribute("aria-expanded", !0);
                            }
                            i && i();
                        }),
                        (n._jQueryInterface = function (i) {
                            return this.each(function () {
                                var s = t(this),
                                    r = s.data(e);
                                if ((r || ((r = new n(this)), s.data(e, r)), "string" == typeof i)) {
                                    if ("undefined" == typeof r[i]) throw new TypeError('No method named "' + i + '"');
                                    r[i]();
                                }
                            });
                        }),
                        s(n, null, [
                            {
                                key: "VERSION",
                                get: function () {
                                    return "4.0.0";
                                },
                            },
                        ]),
                        n
                    );
                })();
            return (
                t(document).on(r.CLICK_DATA_API, g, function (e) {
                    e.preventDefault(), v._jQueryInterface.call(t(this), "show");
                }),
                (t.fn.tab = v._jQueryInterface),
                (t.fn.tab.Constructor = v),
                (t.fn.tab.noConflict = function () {
                    return (t.fn.tab = i), v._jQueryInterface;
                }),
                v
            );
        })(e);
    !(function (t) {
        if ("undefined" == typeof t) throw new TypeError("Bootstrap's JavaScript requires jQuery. jQuery must be included before Bootstrap's JavaScript.");
        var e = t.fn.jquery.split(" ")[0].split(".");
        if ((e[0] < 2 && e[1] < 9) || (1 === e[0] && 9 === e[1] && e[2] < 1) || e[0] >= 4) throw new Error("Bootstrap's JavaScript requires at least jQuery v1.9.1 but less than v4.0.0");
    })(e),
        (t.Util = P),
        (t.Alert = L),
        (t.Button = R),
        (t.Carousel = j),
        (t.Collapse = H),
        (t.Dropdown = W),
        (t.Modal = M),
        (t.Popover = x),
        (t.Scrollspy = K),
        (t.Tab = V),
        (t.Tooltip = U),
        Object.defineProperty(t, "__esModule", { value: !0 });
});
window.log = function f() {
    log.history = log.history || [];
    log.history.push(arguments);
    if (this.console) {
        var args = arguments,
            newarr;
        args.callee = args.callee.caller;
        newarr = [].slice.call(args);
        if (typeof console.log === "object") log.apply.call(console.log, console, newarr);
        else console.log.apply(console, newarr);
    }
};
(function (a) {
    function b() {}
    for (var c = "assert,count,debug,dir,dirxml,error,exception,group,groupCollapsed,groupEnd,info,log,markTimeline,profile,profileEnd,time,timeEnd,trace,warn".split(","), d; !!(d = c.pop()); ) {
        a[d] = a[d] || b;
    }
})(
    (function () {
        try {
            console.log();
            return window.console;
        } catch (a) {
            return (window.console = {});
        }
    })()
);
(function () {
    var special = jQuery.event.special,
        uid1 = "D" + +new Date(),
        uid2 = "D" + (+new Date() + 1);
    special.scrollstart = {
        setup: function () {
            var timer,
                handler = function (evt) {
                    var _self = this,
                        _args = arguments;
                    if (timer) {
                        clearTimeout(timer);
                    } else {
                        evt.type = "scrollstart";
                        jQuery.event.handle.apply(_self, _args);
                    }
                    timer = setTimeout(function () {
                        timer = null;
                    }, special.scrollstop.latency);
                };
            jQuery(this).bind("scroll", handler).data(uid1, handler);
        },
        teardown: function () {
            jQuery(this).unbind("scroll", jQuery(this).data(uid1));
        },
    };
    special.scrollstop = {
        latency: 300,
        setup: function () {
            var timer,
                handler = function (evt) {
                    var _self = this,
                        _args = arguments;
                    if (timer) {
                        clearTimeout(timer);
                    }
                    timer = setTimeout(function () {
                        timer = null;
                        evt.type = "scrollstop";
                        if (typeof jQuery.event.handle != "undefined") {
                            jQuery.event.handle.apply(_self, _args);
                        }
                    }, special.scrollstop.latency);
                };
            jQuery(this).bind("scroll", handler).data(uid2, handler);
        },
        teardown: function () {
            jQuery(this).unbind("scroll", jQuery(this).data(uid2));
        },
    };
})();
(function ($) {
    var types = ["DOMMouseScroll", "mousewheel"];
    if ($.event.fixHooks) {
        for (var i = types.length; i; ) {
            $.event.fixHooks[types[--i]] = $.event.mouseHooks;
        }
    }
    $.event.special.mousewheel = {
        setup: function () {
            if (this.addEventListener) {
                for (var i = types.length; i; ) {
                    this.addEventListener(types[--i], handler, !1);
                }
            } else {
                this.onmousewheel = handler;
            }
        },
        teardown: function () {
            if (this.removeEventListener) {
                for (var i = types.length; i; ) {
                    this.removeEventListener(types[--i], handler, !1);
                }
            } else {
                this.onmousewheel = null;
            }
        },
    };
    $.fn.extend({
        mousewheel: function (fn) {
            return fn ? this.bind("mousewheel", fn) : this.trigger("mousewheel");
        },
        unmousewheel: function (fn) {
            return this.unbind("mousewheel", fn);
        },
    });
    function handler(event) {
        var orgEvent = event || window.event,
            args = [].slice.call(arguments, 1),
            delta = 0,
            returnValue = !0,
            deltaX = 0,
            deltaY = 0;
        event = $.event.fix(orgEvent);
        event.type = "mousewheel";
        if (orgEvent.wheelDelta) {
            delta = orgEvent.wheelDelta / 120;
        }
        if (orgEvent.detail) {
            delta = -orgEvent.detail / 3;
        }
        deltaY = delta;
        if (orgEvent.axis !== undefined && orgEvent.axis === orgEvent.HORIZONTAL_AXIS) {
            deltaY = 0;
            deltaX = -1 * delta;
        }
        if (orgEvent.wheelDeltaY !== undefined) {
            deltaY = orgEvent.wheelDeltaY / 120;
        }
        if (orgEvent.wheelDeltaX !== undefined) {
            deltaX = (-1 * orgEvent.wheelDeltaX) / 120;
        }
        args.unshift(event, delta, deltaX, deltaY);
        return ($.event.dispatch || $.event.handle).apply(this, args);
    }
})(jQuery);
(function ($, window, Math, undefined) {
    "use strict";
    var pluginName = "scrollSections";
    var defaults = {
        attr: "id",
        active: "active-scrollsection",
        keyboard: !0,
        mousewheel: !0,
        touch: !0,
        scrollbar: !0,
        navigation: !0,
        scrollMax: 1,
        before: null,
        after: null,
        prefix: "scrollsections",
        alwaysStartWithFirstSection: !1,
        animateScrollToFirstSection: !1,
        createNavigation: !0,
        speed: 500,
        exceptions: !1,
    };
    function ScrollSectionsException(message) {
        this.name = "ScrollSectionsException";
        this.message = message;
    }
    var Plugin = function (elements, options) {
        this.elements = elements;
        this.options = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._$window = $(window);
        this._$htmlBody = $("html, body");
        this._$body = $("body");
        this._sections = elements.length;
        this._$sections = [];
        this._sectionIdentifiers = [];
        this._delayFirstScroll = null;
        this._$previousSection = null;
        this._$currentSection = null;
        this._currentStep = 0;
        this._isFirstSection = !0;
        this._isAnimated = !1;
        this._wheelDelay = null;
        this._scrollPaused = !1;
        this._$nav = null;
        this._ltIE9 = !1;
        this.init();
    };
    Plugin.prototype = {
        createNavigation: function () {
            if (this.options.navigation) {
                this._$nav = $("<nav>", { id: this.options.prefix + "-navigation" });
                for (var i = 0; i < this._sections; i++) {
                    this._$nav.append($("<a>", { id: this.options.prefix + "-menuitem-" + i, class: this.options.prefix + "-menuitem", href: "#" + this._sectionIdentifiers[i], html: "Section " + i }));
                }
                this._$body.append(this._$nav);
            }
            return this;
        },
        navigation: function () {
            var self = this;
            if (this._$nav === null) {
                if (this.options.createNavigation) {
                    this.createNavigation();
                    this.options.createNavigation = !1;
                    this._$nav._$menuitems = $("a", this._$nav).each(function (index) {
                        var $this = $(this);
                        if (index === self._currentStep) {
                            $this.addClass(self.options.active);
                        }
                        $this.data(self.options.prefix, index);
                    });
                } else {
                    this._$nav = $("#" + this.options.prefix + "-navigation");
                    this._$nav._$menuitems = $("a", this._$nav).each(function () {
                        var $this = $(this),
                            sectionIndex = self._sectionIdentifiers.indexOf($this.attr("href").substr(1));
                        if (sectionIndex === self._currentStep) {
                            $this.addClass(self.options.active);
                        }
                        $this.data(self.options.prefix, sectionIndex);
                    });
                }
            }
            if (this._$nav != null && this._$nav.length > 0) {
                this._$nav._$menuitems.click(function (event) {
                    var $this = $(this),
                        sectionIndex = parseInt($this.data(self.options.prefix), 10);
                    event.preventDefault();
                    self._$nav._$menuitems.removeClass(self.options.active);
                    $this.addClass(self.options.active);
                    if (sectionIndex >= 0) {
                        self.customScrollTo(parseInt($this.data(self.options.prefix), 10));
                    } else if (self.options.exceptions) {
                        throw new ScrollSectionsException("Section not find for this menu item, make sure the href is the same as the section id");
                    }
                    return !1;
                });
            }
            return this;
        },
        scrollbar: function () {
            var self = this;
            if (!$.event.special.scrollstop) {
                if (this.options.exceptions) {
                    throw new ScrollSectionsException("The jQuery special events scrollstop plugin is missing.");
                } else {
                    return this;
                }
            }
            this._$window.bind("scrollstop", function (event) {
                var scrollTop = self._$htmlBody.scrollTop() || self._$window.scrollTop();
                var diff = self._$htmlBody.outerHeight();
                var nextStep;
                var diffTmp;
                self._scrollPaused = !1;
                if (scrollTop === 0 && self._currentStep !== 0) {
                    nextStep = 0;
                } else if (scrollTop === (self._sections - 1) * self._$window.height() && self._currentStep !== self._sections - 1) {
                    nextStep = self._sections - 1;
                } else {
                    for (var i = 0; i < self._sections; i++) {
                        diffTmp = Math.abs(scrollTop - self._$sections[i].offset().top);
                        if (!diff || diffTmp <= diff) {
                            diff = diffTmp;
                            nextStep = i;
                            if (diff === 0) {
                                return;
                            }
                        }
                    }
                }
                if (nextStep > -1) {
                    self.customScrollTo(nextStep);
                }
            });
            return this;
        },
        touch: function () {
            var self = this;
            this._$body.bind("touchstart", function (event) {
                var startEvent = event;
                event.preventDefault();
                self._$body.bind("touchmove", function (event) {
                    var diff = { x: startEvent.clientX - event.clientX, y: startEvent.clientY - event.clientY };
                    var nextStep;
                    event.preventDefault();
                    if ((diff.y <= -100 || diff.y >= 100) && Math.abs(diff.y) > Math.abs(diff.x)) {
                        nextStep = diff.y < 0 ? self._currentStep - 1 : self._currentStep + 1;
                        self.customScrollTo(nextStep);
                    }
                    return !1;
                });
                return !1;
            });
            return this;
        },
        keyboard: function () {
            var self = this;
            this._$htmlBody.keydown(function (event) {
                var nextStep;
                switch (event.which) {
                    case 33:
                    case 36:
                        event.preventDefault();
                        self.customScrollTo(0);
                        return !1;
                    case 34:
                    case 35:
                        event.preventDefault();
                        self.customScrollTo(self._sections - 1);
                        return !1;
                    case 38:
                        event.preventDefault();
                        nextStep = self._currentStep - 1;
                        if (nextStep >= 0) {
                            self.customScrollTo(nextStep);
                        }
                        return !1;
                    case 40:
                        event.preventDefault();
                        nextStep = self._currentStep + 1;
                        if (nextStep < self._sections) {
                            self.customScrollTo(nextStep);
                        }
                        return !1;
                }
            });
            return this;
        },
        scrollCallback: function (before) {
            this._isAnimated = before || !1;
            if (before && this.options.before) {
                this.options.before(this._$previousSection, this._$currentSection);
            } else if (!before && this.options.after) {
                this.options.after(this._$currentSection, this._$previousSection);
            }
            return this;
        },
        customScrollTo: function (index, noAnimation) {
            var self = this;
            var yTo;
            var speed;
            if (index != null && index >= 0 && index < this._sections) {
                this._currentStep = index;
                this._$previousSection = this._$currentSection;
                this._$currentSection = this._$sections[index];
                yTo = this._$currentSection.offset().top;
                speed = noAnimation ? 0 : this.options.speed;
                if (this._$nav) {
                    this._$nav._$menuitems.removeClass(this.options.active);
                    $('a[href="#' + this._sectionIdentifiers[index] + '"]', this._$nav).addClass(this.options.active);
                }
                this.scrollCallback(!0);
                $.when(this._$htmlBody.stop(!0, !1).animate({ scrollTop: yTo }, speed)).done(function () {
                    self.scrollCallback();
                });
            }
            return this;
        },
        mousewheelScrollTo: function (index) {
            this.customScrollTo(index);
            this._wheelDelay = null;
            this._scrollPaused = !0;
            return this;
        },
        mousewheel: function () {
            var self = this;
            if (this._ltIE9) {
                if (this.options.exceptions) {
                    throw new ScrollSectionsException("Cannot bind mousewheel on broken client.");
                } else {
                    return this;
                }
            }
            if (!$.fn.mousewheel) {
                if (this.options.exceptions) {
                    throw new ScrollSectionsException("The jQuery mousewheel plugin is missing.");
                } else {
                    return this;
                }
            }
            this._$window.mousewheel(function (event, delta, deltaX, deltaY) {
                var stepDiff = null;
                var nextStep = -1;
                event.preventDefault();
                if (!(self._isAnimated && self._scrollPaused)) {
                    deltaY = deltaY >> 0;
                    if (deltaY < 0) {
                        if (deltaY < -self.options.scrollMax) {
                            deltaY = -self.options.scrollMax;
                        }
                        if ((!nextStep || !stepDiff || deltaY < stepDiff) && self._currentStep - deltaY < self._sections) {
                            stepDiff = deltaY;
                            nextStep = self._currentStep - stepDiff;
                        }
                    } else {
                        if (deltaY > self.options.scrollMax) {
                            deltaY = self.options.scrollMax;
                        }
                        if ((!nextStep || !stepDiff || deltaY > stepDiff) && self._currentStep - deltaY > -1) {
                            stepDiff = deltaY;
                            nextStep = self._currentStep - stepDiff;
                        }
                    }
                    if (stepDiff && nextStep > -1) {
                        if (self._wheelDelay) {
                            clearTimeout(self._wheelDelay);
                        }
                        if (Math.abs(stepDiff) < self.options.scrollMax) {
                            self._wheelDelay = setTimeout(function () {
                                self.mousewheelScrollTo(nextStep);
                            }, 10);
                        } else {
                            self.mousewheelScrollTo(nextStep);
                        }
                    }
                }
                return !1;
            });
            return this;
        },
        init: function () {
            var self = this;
            if (this._sections > 0) {
                this.elements.each(function (index) {
                    var $section = $(this);
                    var windowScrollTop = self._$window.scrollTop();
                    var offset;
                    self._$sections[index] = $section;
                    self._sectionIdentifiers[index] = $section.attr(self.options.attr);
                    if (self.options.alwaysStartWithFirstSection === !0 && index === 0) {
                        $section.addClass(self.options.active);
                        self._$currentSection = $section;
                        self.customScrollTo(0, !self.options.animateScrollToFirstSection);
                    } else {
                        offset = $section.offset();
                        offset.bottom = offset.top + $section.height();
                        if (windowScrollTop >= offset.top && windowScrollTop < offset.bottom) {
                            $section.addClass(self.options.active);
                            self._currentStep = index;
                            self._$currentSection = $section;
                            if (windowScrollTop !== offset.top) {
                                self.customScrollTo(index);
                            }
                        }
                    }
                });
                if (new RegExp("MSIE ([0-9]{1,}[\\.0-9]{0,})").exec(window.navigator.userAgent) && parseFloat(RegExp.$1) <= 8.0) {
                    this._ltIE9 = !0;
                }
                for (var o in this.options) {
                    if (this.options[o] === !0 && typeof this[o] === "function") {
                        this[o]();
                    }
                }
                this._$window.resize(function () {
                    self.customScrollTo(self._currentStep);
                });
            }
            return this;
        },
    };
    $.fn[pluginName] = function (options) {
        if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" + pluginName, new Plugin(this, options));
        }
        return this;
    };
})(jQuery, window, Math);
$(window).scroll(function () {
    var scroll = $(window).scrollTop();
});
$(".menu-opener").click(function () {
    var flag = !1;
    if ($(".menu-opener").hasClass("active")) {
        flag = !0;
    }
    $(".menu-opener, .menu-opener-inner, .top-menu").toggleClass("active");
    if (flag === !0 && $(".menu-open").is(":visible")) {
        $(".menu-open").hide();
        $(".main-menu").find("a").removeClass("active");
        enableScroll();
    }
});
(function (t) {
    "function" == typeof define && define.amd ? define(["jquery"], t) : t(jQuery);
})(function (t) {
    (t.ui = t.ui || {}), (t.ui.version = "1.12.1");
    var e = 0,
        i = Array.prototype.slice;
    (t.cleanData = (function (e) {
        return function (i) {
            var s, n, o;
            for (o = 0; null != (n = i[o]); o++)
                try {
                    (s = t._data(n, "events")), s && s.remove && t(n).triggerHandler("remove");
                } catch (a) {}
            e(i);
        };
    })(t.cleanData)),
        (t.widget = function (e, i, s) {
            var n,
                o,
                a,
                r = {},
                l = e.split(".")[0];
            e = e.split(".")[1];
            var h = l + "-" + e;
            return (
                s || ((s = i), (i = t.Widget)),
                t.isArray(s) && (s = t.extend.apply(null, [{}].concat(s))),
                (t.expr[":"][h.toLowerCase()] = function (e) {
                    return !!t.data(e, h);
                }),
                (t[l] = t[l] || {}),
                (n = t[l][e]),
                (o = t[l][e] = function (t, e) {
                    return this._createWidget ? (arguments.length && this._createWidget(t, e), void 0) : new o(t, e);
                }),
                t.extend(o, n, { version: s.version, _proto: t.extend({}, s), _childConstructors: [] }),
                (a = new i()),
                (a.options = t.widget.extend({}, a.options)),
                t.each(s, function (e, s) {
                    return t.isFunction(s)
                        ? ((r[e] = (function () {
                              function t() {
                                  return i.prototype[e].apply(this, arguments);
                              }
                              function n(t) {
                                  return i.prototype[e].apply(this, t);
                              }
                              return function () {
                                  var e,
                                      i = this._super,
                                      o = this._superApply;
                                  return (this._super = t), (this._superApply = n), (e = s.apply(this, arguments)), (this._super = i), (this._superApply = o), e;
                              };
                          })()),
                          void 0)
                        : ((r[e] = s), void 0);
                }),
                (o.prototype = t.widget.extend(a, { widgetEventPrefix: n ? a.widgetEventPrefix || e : e }, r, { constructor: o, namespace: l, widgetName: e, widgetFullName: h })),
                n
                    ? (t.each(n._childConstructors, function (e, i) {
                          var s = i.prototype;
                          t.widget(s.namespace + "." + s.widgetName, o, i._proto);
                      }),
                      delete n._childConstructors)
                    : i._childConstructors.push(o),
                t.widget.bridge(e, o),
                o
            );
        }),
        (t.widget.extend = function (e) {
            for (var s, n, o = i.call(arguments, 1), a = 0, r = o.length; r > a; a++)
                for (s in o[a]) (n = o[a][s]), o[a].hasOwnProperty(s) && void 0 !== n && (e[s] = t.isPlainObject(n) ? (t.isPlainObject(e[s]) ? t.widget.extend({}, e[s], n) : t.widget.extend({}, n)) : n);
            return e;
        }),
        (t.widget.bridge = function (e, s) {
            var n = s.prototype.widgetFullName || e;
            t.fn[e] = function (o) {
                var a = "string" == typeof o,
                    r = i.call(arguments, 1),
                    l = this;
                return (
                    a
                        ? this.length || "instance" !== o
                            ? this.each(function () {
                                  var i,
                                      s = t.data(this, n);
                                  return "instance" === o
                                      ? ((l = s), !1)
                                      : s
                                      ? t.isFunction(s[o]) && "_" !== o.charAt(0)
                                          ? ((i = s[o].apply(s, r)), i !== s && void 0 !== i ? ((l = i && i.jquery ? l.pushStack(i.get()) : i), !1) : void 0)
                                          : t.error("no such method '" + o + "' for " + e + " widget instance")
                                      : t.error("cannot call methods on " + e + " prior to initialization; " + "attempted to call method '" + o + "'");
                              })
                            : (l = void 0)
                        : (r.length && (o = t.widget.extend.apply(null, [o].concat(r))),
                          this.each(function () {
                              var e = t.data(this, n);
                              e ? (e.option(o || {}), e._init && e._init()) : t.data(this, n, new s(o, this));
                          })),
                    l
                );
            };
        }),
        (t.Widget = function () {}),
        (t.Widget._childConstructors = []),
        (t.Widget.prototype = {
            widgetName: "widget",
            widgetEventPrefix: "",
            defaultElement: "<div>",
            options: { classes: {}, disabled: !1, create: null },
            _createWidget: function (i, s) {
                (s = t(s || this.defaultElement || this)[0]),
                    (this.element = t(s)),
                    (this.uuid = e++),
                    (this.eventNamespace = "." + this.widgetName + this.uuid),
                    (this.bindings = t()),
                    (this.hoverable = t()),
                    (this.focusable = t()),
                    (this.classesElementLookup = {}),
                    s !== this &&
                        (t.data(s, this.widgetFullName, this),
                        this._on(!0, this.element, {
                            remove: function (t) {
                                t.target === s && this.destroy();
                            },
                        }),
                        (this.document = t(s.style ? s.ownerDocument : s.document || s)),
                        (this.window = t(this.document[0].defaultView || this.document[0].parentWindow))),
                    (this.options = t.widget.extend({}, this.options, this._getCreateOptions(), i)),
                    this._create(),
                    this.options.disabled && this._setOptionDisabled(this.options.disabled),
                    this._trigger("create", null, this._getCreateEventData()),
                    this._init();
            },
            _getCreateOptions: function () {
                return {};
            },
            _getCreateEventData: t.noop,
            _create: t.noop,
            _init: t.noop,
            destroy: function () {
                var e = this;
                this._destroy(),
                    t.each(this.classesElementLookup, function (t, i) {
                        e._removeClass(i, t);
                    }),
                    this.element.off(this.eventNamespace).removeData(this.widgetFullName),
                    this.widget().off(this.eventNamespace).removeAttr("aria-disabled"),
                    this.bindings.off(this.eventNamespace);
            },
            _destroy: t.noop,
            widget: function () {
                return this.element;
            },
            option: function (e, i) {
                var s,
                    n,
                    o,
                    a = e;
                if (0 === arguments.length) return t.widget.extend({}, this.options);
                if ("string" == typeof e)
                    if (((a = {}), (s = e.split(".")), (e = s.shift()), s.length)) {
                        for (n = a[e] = t.widget.extend({}, this.options[e]), o = 0; s.length - 1 > o; o++) (n[s[o]] = n[s[o]] || {}), (n = n[s[o]]);
                        if (((e = s.pop()), 1 === arguments.length)) return void 0 === n[e] ? null : n[e];
                        n[e] = i;
                    } else {
                        if (1 === arguments.length) return void 0 === this.options[e] ? null : this.options[e];
                        a[e] = i;
                    }
                return this._setOptions(a), this;
            },
            _setOptions: function (t) {
                var e;
                for (e in t) this._setOption(e, t[e]);
                return this;
            },
            _setOption: function (t, e) {
                return "classes" === t && this._setOptionClasses(e), (this.options[t] = e), "disabled" === t && this._setOptionDisabled(e), this;
            },
            _setOptionClasses: function (e) {
                var i, s, n;
                for (i in e) (n = this.classesElementLookup[i]), e[i] !== this.options.classes[i] && n && n.length && ((s = t(n.get())), this._removeClass(n, i), s.addClass(this._classes({ element: s, keys: i, classes: e, add: !0 })));
            },
            _setOptionDisabled: function (t) {
                this._toggleClass(this.widget(), this.widgetFullName + "-disabled", null, !!t), t && (this._removeClass(this.hoverable, null, "ui-state-hover"), this._removeClass(this.focusable, null, "ui-state-focus"));
            },
            enable: function () {
                return this._setOptions({ disabled: !1 });
            },
            disable: function () {
                return this._setOptions({ disabled: !0 });
            },
            _classes: function (e) {
                function i(i, o) {
                    var a, r;
                    for (r = 0; i.length > r; r++)
                        (a = n.classesElementLookup[i[r]] || t()),
                            (a = e.add ? t(t.unique(a.get().concat(e.element.get()))) : t(a.not(e.element).get())),
                            (n.classesElementLookup[i[r]] = a),
                            s.push(i[r]),
                            o && e.classes[i[r]] && s.push(e.classes[i[r]]);
                }
                var s = [],
                    n = this;
                return (
                    (e = t.extend({ element: this.element, classes: this.options.classes || {} }, e)),
                    this._on(e.element, { remove: "_untrackClassesElement" }),
                    e.keys && i(e.keys.match(/\S+/g) || [], !0),
                    e.extra && i(e.extra.match(/\S+/g) || []),
                    s.join(" ")
                );
            },
            _untrackClassesElement: function (e) {
                var i = this;
                t.each(i.classesElementLookup, function (s, n) {
                    -1 !== t.inArray(e.target, n) && (i.classesElementLookup[s] = t(n.not(e.target).get()));
                });
            },
            _removeClass: function (t, e, i) {
                return this._toggleClass(t, e, i, !1);
            },
            _addClass: function (t, e, i) {
                return this._toggleClass(t, e, i, !0);
            },
            _toggleClass: function (t, e, i, s) {
                s = "boolean" == typeof s ? s : i;
                var n = "string" == typeof t || null === t,
                    o = { extra: n ? e : i, keys: n ? t : e, element: n ? this.element : t, add: s };
                return o.element.toggleClass(this._classes(o), s), this;
            },
            _on: function (e, i, s) {
                var n,
                    o = this;
                "boolean" != typeof e && ((s = i), (i = e), (e = !1)),
                    s ? ((i = n = t(i)), (this.bindings = this.bindings.add(i))) : ((s = i), (i = this.element), (n = this.widget())),
                    t.each(s, function (s, a) {
                        function r() {
                            return e || (o.options.disabled !== !0 && !t(this).hasClass("ui-state-disabled")) ? ("string" == typeof a ? o[a] : a).apply(o, arguments) : void 0;
                        }
                        "string" != typeof a && (r.guid = a.guid = a.guid || r.guid || t.guid++);
                        var l = s.match(/^([\w:-]*)\s*(.*)$/),
                            h = l[1] + o.eventNamespace,
                            c = l[2];
                        c ? n.on(h, c, r) : i.on(h, r);
                    });
            },
            _off: function (e, i) {
                (i = (i || "").split(" ").join(this.eventNamespace + " ") + this.eventNamespace),
                    e.off(i).off(i),
                    (this.bindings = t(this.bindings.not(e).get())),
                    (this.focusable = t(this.focusable.not(e).get())),
                    (this.hoverable = t(this.hoverable.not(e).get()));
            },
            _delay: function (t, e) {
                function i() {
                    return ("string" == typeof t ? s[t] : t).apply(s, arguments);
                }
                var s = this;
                return setTimeout(i, e || 0);
            },
            _hoverable: function (e) {
                (this.hoverable = this.hoverable.add(e)),
                    this._on(e, {
                        mouseenter: function (e) {
                            this._addClass(t(e.currentTarget), null, "ui-state-hover");
                        },
                        mouseleave: function (e) {
                            this._removeClass(t(e.currentTarget), null, "ui-state-hover");
                        },
                    });
            },
            _focusable: function (e) {
                (this.focusable = this.focusable.add(e)),
                    this._on(e, {
                        focusin: function (e) {
                            this._addClass(t(e.currentTarget), null, "ui-state-focus");
                        },
                        focusout: function (e) {
                            this._removeClass(t(e.currentTarget), null, "ui-state-focus");
                        },
                    });
            },
            _trigger: function (e, i, s) {
                var n,
                    o,
                    a = this.options[e];
                if (((s = s || {}), (i = t.Event(i)), (i.type = (e === this.widgetEventPrefix ? e : this.widgetEventPrefix + e).toLowerCase()), (i.target = this.element[0]), (o = i.originalEvent))) for (n in o) n in i || (i[n] = o[n]);
                return this.element.trigger(i, s), !((t.isFunction(a) && a.apply(this.element[0], [i].concat(s)) === !1) || i.isDefaultPrevented());
            },
        }),
        t.each({ show: "fadeIn", hide: "fadeOut" }, function (e, i) {
            t.Widget.prototype["_" + e] = function (s, n, o) {
                "string" == typeof n && (n = { effect: n });
                var a,
                    r = n ? (n === !0 || "number" == typeof n ? i : n.effect || i) : e;
                (n = n || {}),
                    "number" == typeof n && (n = { duration: n }),
                    (a = !t.isEmptyObject(n)),
                    (n.complete = o),
                    n.delay && s.delay(n.delay),
                    a && t.effects && t.effects.effect[r]
                        ? s[e](n)
                        : r !== e && s[r]
                        ? s[r](n.duration, n.easing, o)
                        : s.queue(function (i) {
                              t(this)[e](), o && o.call(s[0]), i();
                          });
            };
        }),
        t.widget,
        t.extend(t.expr[":"], {
            data: t.expr.createPseudo
                ? t.expr.createPseudo(function (e) {
                      return function (i) {
                          return !!t.data(i, e);
                      };
                  })
                : function (e, i, s) {
                      return !!t.data(e, s[3]);
                  },
        }),
        t.fn.extend({
            disableSelection: (function () {
                var t = "onselectstart" in document.createElement("div") ? "selectstart" : "mousedown";
                return function () {
                    return this.on(t + ".ui-disableSelection", function (t) {
                        t.preventDefault();
                    });
                };
            })(),
            enableSelection: function () {
                return this.off(".ui-disableSelection");
            },
        }),
        (t.fn.scrollParent = function (e) {
            var i = this.css("position"),
                s = "absolute" === i,
                n = e ? /(auto|scroll|hidden)/ : /(auto|scroll)/,
                o = this.parents()
                    .filter(function () {
                        var e = t(this);
                        return s && "static" === e.css("position") ? !1 : n.test(e.css("overflow") + e.css("overflow-y") + e.css("overflow-x"));
                    })
                    .eq(0);
            return "fixed" !== i && o.length ? o : t(this[0].ownerDocument || document);
        }),
        (t.ui.ie = !!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase()));
    var s = !1;
    t(document).on("mouseup", function () {
        s = !1;
    }),
        t.widget("ui.mouse", {
            version: "1.12.1",
            options: { cancel: "input, textarea, button, select, option", distance: 1, delay: 0 },
            _mouseInit: function () {
                var e = this;
                this.element
                    .on("mousedown." + this.widgetName, function (t) {
                        return e._mouseDown(t);
                    })
                    .on("click." + this.widgetName, function (i) {
                        return !0 === t.data(i.target, e.widgetName + ".preventClickEvent") ? (t.removeData(i.target, e.widgetName + ".preventClickEvent"), i.stopImmediatePropagation(), !1) : void 0;
                    }),
                    (this.started = !1);
            },
            _mouseDestroy: function () {
                this.element.off("." + this.widgetName), this._mouseMoveDelegate && this.document.off("mousemove." + this.widgetName, this._mouseMoveDelegate).off("mouseup." + this.widgetName, this._mouseUpDelegate);
            },
            _mouseDown: function (e) {
                if (!s) {
                    (this._mouseMoved = !1), this._mouseStarted && this._mouseUp(e), (this._mouseDownEvent = e);
                    var i = this,
                        n = 1 === e.which,
                        o = "string" == typeof this.options.cancel && e.target.nodeName ? t(e.target).closest(this.options.cancel).length : !1;
                    return n && !o && this._mouseCapture(e)
                        ? ((this.mouseDelayMet = !this.options.delay),
                          this.mouseDelayMet ||
                              (this._mouseDelayTimer = setTimeout(function () {
                                  i.mouseDelayMet = !0;
                              }, this.options.delay)),
                          this._mouseDistanceMet(e) && this._mouseDelayMet(e) && ((this._mouseStarted = this._mouseStart(e) !== !1), !this._mouseStarted)
                              ? (e.preventDefault(), !0)
                              : (!0 === t.data(e.target, this.widgetName + ".preventClickEvent") && t.removeData(e.target, this.widgetName + ".preventClickEvent"),
                                (this._mouseMoveDelegate = function (t) {
                                    return i._mouseMove(t);
                                }),
                                (this._mouseUpDelegate = function (t) {
                                    return i._mouseUp(t);
                                }),
                                this.document.on("mousemove." + this.widgetName, this._mouseMoveDelegate).on("mouseup." + this.widgetName, this._mouseUpDelegate),
                                e.preventDefault(),
                                (s = !0),
                                !0))
                        : !0;
                }
            },
            _mouseMove: function (e) {
                if (this._mouseMoved) {
                    if (t.ui.ie && (!document.documentMode || 9 > document.documentMode) && !e.button) return this._mouseUp(e);
                    if (!e.which)
                        if (e.originalEvent.altKey || e.originalEvent.ctrlKey || e.originalEvent.metaKey || e.originalEvent.shiftKey) this.ignoreMissingWhich = !0;
                        else if (!this.ignoreMissingWhich) return this._mouseUp(e);
                }
                return (
                    (e.which || e.button) && (this._mouseMoved = !0),
                    this._mouseStarted
                        ? (this._mouseDrag(e), e.preventDefault())
                        : (this._mouseDistanceMet(e) && this._mouseDelayMet(e) && ((this._mouseStarted = this._mouseStart(this._mouseDownEvent, e) !== !1), this._mouseStarted ? this._mouseDrag(e) : this._mouseUp(e)), !this._mouseStarted)
                );
            },
            _mouseUp: function (e) {
                this.document.off("mousemove." + this.widgetName, this._mouseMoveDelegate).off("mouseup." + this.widgetName, this._mouseUpDelegate),
                    this._mouseStarted && ((this._mouseStarted = !1), e.target === this._mouseDownEvent.target && t.data(e.target, this.widgetName + ".preventClickEvent", !0), this._mouseStop(e)),
                    this._mouseDelayTimer && (clearTimeout(this._mouseDelayTimer), delete this._mouseDelayTimer),
                    (this.ignoreMissingWhich = !1),
                    (s = !1),
                    e.preventDefault();
            },
            _mouseDistanceMet: function (t) {
                return Math.max(Math.abs(this._mouseDownEvent.pageX - t.pageX), Math.abs(this._mouseDownEvent.pageY - t.pageY)) >= this.options.distance;
            },
            _mouseDelayMet: function () {
                return this.mouseDelayMet;
            },
            _mouseStart: function () {},
            _mouseDrag: function () {},
            _mouseStop: function () {},
            _mouseCapture: function () {
                return !0;
            },
        }),
        (t.ui.plugin = {
            add: function (e, i, s) {
                var n,
                    o = t.ui[e].prototype;
                for (n in s) (o.plugins[n] = o.plugins[n] || []), o.plugins[n].push([i, s[n]]);
            },
            call: function (t, e, i, s) {
                var n,
                    o = t.plugins[e];
                if (o && (s || (t.element[0].parentNode && 11 !== t.element[0].parentNode.nodeType))) for (n = 0; o.length > n; n++) t.options[o[n][0]] && o[n][1].apply(t.element, i);
            },
        }),
        (t.ui.safeActiveElement = function (t) {
            var e;
            try {
                e = t.activeElement;
            } catch (i) {
                e = t.body;
            }
            return e || (e = t.body), e.nodeName || (e = t.body), e;
        }),
        (t.ui.safeBlur = function (e) {
            e && "body" !== e.nodeName.toLowerCase() && t(e).trigger("blur");
        }),
        t.widget("ui.draggable", t.ui.mouse, {
            version: "1.12.1",
            widgetEventPrefix: "drag",
            options: {
                addClasses: !0,
                appendTo: "parent",
                axis: !1,
                connectToSortable: !1,
                containment: !1,
                cursor: "auto",
                cursorAt: !1,
                grid: !1,
                handle: !1,
                helper: "original",
                iframeFix: !1,
                opacity: !1,
                refreshPositions: !1,
                revert: !1,
                revertDuration: 500,
                scope: "default",
                scroll: !0,
                scrollSensitivity: 20,
                scrollSpeed: 20,
                snap: !1,
                snapMode: "both",
                snapTolerance: 20,
                stack: !1,
                zIndex: !1,
                drag: null,
                start: null,
                stop: null,
            },
            _create: function () {
                "original" === this.options.helper && this._setPositionRelative(), this.options.addClasses && this._addClass("ui-draggable"), this._setHandleClassName(), this._mouseInit();
            },
            _setOption: function (t, e) {
                this._super(t, e), "handle" === t && (this._removeHandleClassName(), this._setHandleClassName());
            },
            _destroy: function () {
                return (this.helper || this.element).is(".ui-draggable-dragging") ? ((this.destroyOnClear = !0), void 0) : (this._removeHandleClassName(), this._mouseDestroy(), void 0);
            },
            _mouseCapture: function (e) {
                var i = this.options;
                return this.helper || i.disabled || t(e.target).closest(".ui-resizable-handle").length > 0
                    ? !1
                    : ((this.handle = this._getHandle(e)), this.handle ? (this._blurActiveElement(e), this._blockFrames(i.iframeFix === !0 ? "iframe" : i.iframeFix), !0) : !1);
            },
            _blockFrames: function (e) {
                this.iframeBlocks = this.document.find(e).map(function () {
                    var e = t(this);
                    return t("<div>").css("position", "absolute").appendTo(e.parent()).outerWidth(e.outerWidth()).outerHeight(e.outerHeight()).offset(e.offset())[0];
                });
            },
            _unblockFrames: function () {
                this.iframeBlocks && (this.iframeBlocks.remove(), delete this.iframeBlocks);
            },
            _blurActiveElement: function (e) {
                var i = t.ui.safeActiveElement(this.document[0]),
                    s = t(e.target);
                s.closest(i).length || t.ui.safeBlur(i);
            },
            _mouseStart: function (e) {
                var i = this.options;
                return (
                    (this.helper = this._createHelper(e)),
                    this._addClass(this.helper, "ui-draggable-dragging"),
                    this._cacheHelperProportions(),
                    t.ui.ddmanager && (t.ui.ddmanager.current = this),
                    this._cacheMargins(),
                    (this.cssPosition = this.helper.css("position")),
                    (this.scrollParent = this.helper.scrollParent(!0)),
                    (this.offsetParent = this.helper.offsetParent()),
                    (this.hasFixedAncestor =
                        this.helper.parents().filter(function () {
                            return "fixed" === t(this).css("position");
                        }).length > 0),
                    (this.positionAbs = this.element.offset()),
                    this._refreshOffsets(e),
                    (this.originalPosition = this.position = this._generatePosition(e, !1)),
                    (this.originalPageX = e.pageX),
                    (this.originalPageY = e.pageY),
                    i.cursorAt && this._adjustOffsetFromHelper(i.cursorAt),
                    this._setContainment(),
                    this._trigger("start", e) === !1
                        ? (this._clear(), !1)
                        : (this._cacheHelperProportions(), t.ui.ddmanager && !i.dropBehaviour && t.ui.ddmanager.prepareOffsets(this, e), this._mouseDrag(e, !0), t.ui.ddmanager && t.ui.ddmanager.dragStart(this, e), !0)
                );
            },
            _refreshOffsets: function (t) {
                (this.offset = { top: this.positionAbs.top - this.margins.top, left: this.positionAbs.left - this.margins.left, scroll: !1, parent: this._getParentOffset(), relative: this._getRelativeOffset() }),
                    (this.offset.click = { left: t.pageX - this.offset.left, top: t.pageY - this.offset.top });
            },
            _mouseDrag: function (e, i) {
                if ((this.hasFixedAncestor && (this.offset.parent = this._getParentOffset()), (this.position = this._generatePosition(e, !0)), (this.positionAbs = this._convertPositionTo("absolute")), !i)) {
                    var s = this._uiHash();
                    if (this._trigger("drag", e, s) === !1) return this._mouseUp(new t.Event("mouseup", e)), !1;
                    this.position = s.position;
                }
                return (this.helper[0].style.left = this.position.left + "px"), (this.helper[0].style.top = this.position.top + "px"), t.ui.ddmanager && t.ui.ddmanager.drag(this, e), !1;
            },
            _mouseStop: function (e) {
                var i = this,
                    s = !1;
                return (
                    t.ui.ddmanager && !this.options.dropBehaviour && (s = t.ui.ddmanager.drop(this, e)),
                    this.dropped && ((s = this.dropped), (this.dropped = !1)),
                    ("invalid" === this.options.revert && !s) || ("valid" === this.options.revert && s) || this.options.revert === !0 || (t.isFunction(this.options.revert) && this.options.revert.call(this.element, s))
                        ? t(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function () {
                              i._trigger("stop", e) !== !1 && i._clear();
                          })
                        : this._trigger("stop", e) !== !1 && this._clear(),
                    !1
                );
            },
            _mouseUp: function (e) {
                return this._unblockFrames(), t.ui.ddmanager && t.ui.ddmanager.dragStop(this, e), this.handleElement.is(e.target) && this.element.trigger("focus"), t.ui.mouse.prototype._mouseUp.call(this, e);
            },
            cancel: function () {
                return this.helper.is(".ui-draggable-dragging") ? this._mouseUp(new t.Event("mouseup", { target: this.element[0] })) : this._clear(), this;
            },
            _getHandle: function (e) {
                return this.options.handle ? !!t(e.target).closest(this.element.find(this.options.handle)).length : !0;
            },
            _setHandleClassName: function () {
                (this.handleElement = this.options.handle ? this.element.find(this.options.handle) : this.element), this._addClass(this.handleElement, "ui-draggable-handle");
            },
            _removeHandleClassName: function () {
                this._removeClass(this.handleElement, "ui-draggable-handle");
            },
            _createHelper: function (e) {
                var i = this.options,
                    s = t.isFunction(i.helper),
                    n = s ? t(i.helper.apply(this.element[0], [e])) : "clone" === i.helper ? this.element.clone().removeAttr("id") : this.element;
                return (
                    n.parents("body").length || n.appendTo("parent" === i.appendTo ? this.element[0].parentNode : i.appendTo),
                    s && n[0] === this.element[0] && this._setPositionRelative(),
                    n[0] === this.element[0] || /(fixed|absolute)/.test(n.css("position")) || n.css("position", "absolute"),
                    n
                );
            },
            _setPositionRelative: function () {
                /^(?:r|a|f)/.test(this.element.css("position")) || (this.element[0].style.position = "relative");
            },
            _adjustOffsetFromHelper: function (e) {
                "string" == typeof e && (e = e.split(" ")),
                    t.isArray(e) && (e = { left: +e[0], top: +e[1] || 0 }),
                    "left" in e && (this.offset.click.left = e.left + this.margins.left),
                    "right" in e && (this.offset.click.left = this.helperProportions.width - e.right + this.margins.left),
                    "top" in e && (this.offset.click.top = e.top + this.margins.top),
                    "bottom" in e && (this.offset.click.top = this.helperProportions.height - e.bottom + this.margins.top);
            },
            _isRootNode: function (t) {
                return /(html|body)/i.test(t.tagName) || t === this.document[0];
            },
            _getParentOffset: function () {
                var e = this.offsetParent.offset(),
                    i = this.document[0];
                return (
                    "absolute" === this.cssPosition && this.scrollParent[0] !== i && t.contains(this.scrollParent[0], this.offsetParent[0]) && ((e.left += this.scrollParent.scrollLeft()), (e.top += this.scrollParent.scrollTop())),
                    this._isRootNode(this.offsetParent[0]) && (e = { top: 0, left: 0 }),
                    { top: e.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0), left: e.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0) }
                );
            },
            _getRelativeOffset: function () {
                if ("relative" !== this.cssPosition) return { top: 0, left: 0 };
                var t = this.element.position(),
                    e = this._isRootNode(this.scrollParent[0]);
                return { top: t.top - (parseInt(this.helper.css("top"), 10) || 0) + (e ? 0 : this.scrollParent.scrollTop()), left: t.left - (parseInt(this.helper.css("left"), 10) || 0) + (e ? 0 : this.scrollParent.scrollLeft()) };
            },
            _cacheMargins: function () {
                this.margins = {
                    left: parseInt(this.element.css("marginLeft"), 10) || 0,
                    top: parseInt(this.element.css("marginTop"), 10) || 0,
                    right: parseInt(this.element.css("marginRight"), 10) || 0,
                    bottom: parseInt(this.element.css("marginBottom"), 10) || 0,
                };
            },
            _cacheHelperProportions: function () {
                this.helperProportions = { width: this.helper.outerWidth(), height: this.helper.outerHeight() };
            },
            _setContainment: function () {
                var e,
                    i,
                    s,
                    n = this.options,
                    o = this.document[0];
                return (
                    (this.relativeContainer = null),
                    n.containment
                        ? "window" === n.containment
                            ? ((this.containment = [
                                  t(window).scrollLeft() - this.offset.relative.left - this.offset.parent.left,
                                  t(window).scrollTop() - this.offset.relative.top - this.offset.parent.top,
                                  t(window).scrollLeft() + t(window).width() - this.helperProportions.width - this.margins.left,
                                  t(window).scrollTop() + (t(window).height() || o.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top,
                              ]),
                              void 0)
                            : "document" === n.containment
                            ? ((this.containment = [0, 0, t(o).width() - this.helperProportions.width - this.margins.left, (t(o).height() || o.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top]), void 0)
                            : n.containment.constructor === Array
                            ? ((this.containment = n.containment), void 0)
                            : ("parent" === n.containment && (n.containment = this.helper[0].parentNode),
                              (i = t(n.containment)),
                              (s = i[0]),
                              s &&
                                  ((e = /(scroll|auto)/.test(i.css("overflow"))),
                                  (this.containment = [
                                      (parseInt(i.css("borderLeftWidth"), 10) || 0) + (parseInt(i.css("paddingLeft"), 10) || 0),
                                      (parseInt(i.css("borderTopWidth"), 10) || 0) + (parseInt(i.css("paddingTop"), 10) || 0),
                                      (e ? Math.max(s.scrollWidth, s.offsetWidth) : s.offsetWidth) -
                                          (parseInt(i.css("borderRightWidth"), 10) || 0) -
                                          (parseInt(i.css("paddingRight"), 10) || 0) -
                                          this.helperProportions.width -
                                          this.margins.left -
                                          this.margins.right,
                                      (e ? Math.max(s.scrollHeight, s.offsetHeight) : s.offsetHeight) -
                                          (parseInt(i.css("borderBottomWidth"), 10) || 0) -
                                          (parseInt(i.css("paddingBottom"), 10) || 0) -
                                          this.helperProportions.height -
                                          this.margins.top -
                                          this.margins.bottom,
                                  ]),
                                  (this.relativeContainer = i)),
                              void 0)
                        : ((this.containment = null), void 0)
                );
            },
            _convertPositionTo: function (t, e) {
                e || (e = this.position);
                var i = "absolute" === t ? 1 : -1,
                    s = this._isRootNode(this.scrollParent[0]);
                return {
                    top: e.top + this.offset.relative.top * i + this.offset.parent.top * i - ("fixed" === this.cssPosition ? -this.offset.scroll.top : s ? 0 : this.offset.scroll.top) * i,
                    left: e.left + this.offset.relative.left * i + this.offset.parent.left * i - ("fixed" === this.cssPosition ? -this.offset.scroll.left : s ? 0 : this.offset.scroll.left) * i,
                };
            },
            _generatePosition: function (t, e) {
                var i,
                    s,
                    n,
                    o,
                    a = this.options,
                    r = this._isRootNode(this.scrollParent[0]),
                    l = t.pageX,
                    h = t.pageY;
                return (
                    (r && this.offset.scroll) || (this.offset.scroll = { top: this.scrollParent.scrollTop(), left: this.scrollParent.scrollLeft() }),
                    e &&
                        (this.containment &&
                            (this.relativeContainer
                                ? ((s = this.relativeContainer.offset()), (i = [this.containment[0] + s.left, this.containment[1] + s.top, this.containment[2] + s.left, this.containment[3] + s.top]))
                                : (i = this.containment),
                            t.pageX - this.offset.click.left < i[0] && (l = i[0] + this.offset.click.left),
                            t.pageY - this.offset.click.top < i[1] && (h = i[1] + this.offset.click.top),
                            t.pageX - this.offset.click.left > i[2] && (l = i[2] + this.offset.click.left),
                            t.pageY - this.offset.click.top > i[3] && (h = i[3] + this.offset.click.top)),
                        a.grid &&
                            ((n = a.grid[1] ? this.originalPageY + Math.round((h - this.originalPageY) / a.grid[1]) * a.grid[1] : this.originalPageY),
                            (h = i ? (n - this.offset.click.top >= i[1] || n - this.offset.click.top > i[3] ? n : n - this.offset.click.top >= i[1] ? n - a.grid[1] : n + a.grid[1]) : n),
                            (o = a.grid[0] ? this.originalPageX + Math.round((l - this.originalPageX) / a.grid[0]) * a.grid[0] : this.originalPageX),
                            (l = i ? (o - this.offset.click.left >= i[0] || o - this.offset.click.left > i[2] ? o : o - this.offset.click.left >= i[0] ? o - a.grid[0] : o + a.grid[0]) : o)),
                        "y" === a.axis && (l = this.originalPageX),
                        "x" === a.axis && (h = this.originalPageY)),
                    {
                        top: h - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + ("fixed" === this.cssPosition ? -this.offset.scroll.top : r ? 0 : this.offset.scroll.top),
                        left: l - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + ("fixed" === this.cssPosition ? -this.offset.scroll.left : r ? 0 : this.offset.scroll.left),
                    }
                );
            },
            _clear: function () {
                this._removeClass(this.helper, "ui-draggable-dragging"),
                    this.helper[0] === this.element[0] || this.cancelHelperRemoval || this.helper.remove(),
                    (this.helper = null),
                    (this.cancelHelperRemoval = !1),
                    this.destroyOnClear && this.destroy();
            },
            _trigger: function (e, i, s) {
                return (
                    (s = s || this._uiHash()),
                    t.ui.plugin.call(this, e, [i, s, this], !0),
                    /^(drag|start|stop)/.test(e) && ((this.positionAbs = this._convertPositionTo("absolute")), (s.offset = this.positionAbs)),
                    t.Widget.prototype._trigger.call(this, e, i, s)
                );
            },
            plugins: {},
            _uiHash: function () {
                return { helper: this.helper, position: this.position, originalPosition: this.originalPosition, offset: this.positionAbs };
            },
        }),
        t.ui.plugin.add("draggable", "connectToSortable", {
            start: function (e, i, s) {
                var n = t.extend({}, i, { item: s.element });
                (s.sortables = []),
                    t(s.options.connectToSortable).each(function () {
                        var i = t(this).sortable("instance");
                        i && !i.options.disabled && (s.sortables.push(i), i.refreshPositions(), i._trigger("activate", e, n));
                    });
            },
            stop: function (e, i, s) {
                var n = t.extend({}, i, { item: s.element });
                (s.cancelHelperRemoval = !1),
                    t.each(s.sortables, function () {
                        var t = this;
                        t.isOver
                            ? ((t.isOver = 0),
                              (s.cancelHelperRemoval = !0),
                              (t.cancelHelperRemoval = !1),
                              (t._storedCSS = { position: t.placeholder.css("position"), top: t.placeholder.css("top"), left: t.placeholder.css("left") }),
                              t._mouseStop(e),
                              (t.options.helper = t.options._helper))
                            : ((t.cancelHelperRemoval = !0), t._trigger("deactivate", e, n));
                    });
            },
            drag: function (e, i, s) {
                t.each(s.sortables, function () {
                    var n = !1,
                        o = this;
                    (o.positionAbs = s.positionAbs),
                        (o.helperProportions = s.helperProportions),
                        (o.offset.click = s.offset.click),
                        o._intersectsWith(o.containerCache) &&
                            ((n = !0),
                            t.each(s.sortables, function () {
                                return (
                                    (this.positionAbs = s.positionAbs),
                                    (this.helperProportions = s.helperProportions),
                                    (this.offset.click = s.offset.click),
                                    this !== o && this._intersectsWith(this.containerCache) && t.contains(o.element[0], this.element[0]) && (n = !1),
                                    n
                                );
                            })),
                        n
                            ? (o.isOver ||
                                  ((o.isOver = 1),
                                  (s._parent = i.helper.parent()),
                                  (o.currentItem = i.helper.appendTo(o.element).data("ui-sortable-item", !0)),
                                  (o.options._helper = o.options.helper),
                                  (o.options.helper = function () {
                                      return i.helper[0];
                                  }),
                                  (e.target = o.currentItem[0]),
                                  o._mouseCapture(e, !0),
                                  o._mouseStart(e, !0, !0),
                                  (o.offset.click.top = s.offset.click.top),
                                  (o.offset.click.left = s.offset.click.left),
                                  (o.offset.parent.left -= s.offset.parent.left - o.offset.parent.left),
                                  (o.offset.parent.top -= s.offset.parent.top - o.offset.parent.top),
                                  s._trigger("toSortable", e),
                                  (s.dropped = o.element),
                                  t.each(s.sortables, function () {
                                      this.refreshPositions();
                                  }),
                                  (s.currentItem = s.element),
                                  (o.fromOutside = s)),
                              o.currentItem && (o._mouseDrag(e), (i.position = o.position)))
                            : o.isOver &&
                              ((o.isOver = 0),
                              (o.cancelHelperRemoval = !0),
                              (o.options._revert = o.options.revert),
                              (o.options.revert = !1),
                              o._trigger("out", e, o._uiHash(o)),
                              o._mouseStop(e, !0),
                              (o.options.revert = o.options._revert),
                              (o.options.helper = o.options._helper),
                              o.placeholder && o.placeholder.remove(),
                              i.helper.appendTo(s._parent),
                              s._refreshOffsets(e),
                              (i.position = s._generatePosition(e, !0)),
                              s._trigger("fromSortable", e),
                              (s.dropped = !1),
                              t.each(s.sortables, function () {
                                  this.refreshPositions();
                              }));
                });
            },
        }),
        t.ui.plugin.add("draggable", "cursor", {
            start: function (e, i, s) {
                var n = t("body"),
                    o = s.options;
                n.css("cursor") && (o._cursor = n.css("cursor")), n.css("cursor", o.cursor);
            },
            stop: function (e, i, s) {
                var n = s.options;
                n._cursor && t("body").css("cursor", n._cursor);
            },
        }),
        t.ui.plugin.add("draggable", "opacity", {
            start: function (e, i, s) {
                var n = t(i.helper),
                    o = s.options;
                n.css("opacity") && (o._opacity = n.css("opacity")), n.css("opacity", o.opacity);
            },
            stop: function (e, i, s) {
                var n = s.options;
                n._opacity && t(i.helper).css("opacity", n._opacity);
            },
        }),
        t.ui.plugin.add("draggable", "scroll", {
            start: function (t, e, i) {
                i.scrollParentNotHidden || (i.scrollParentNotHidden = i.helper.scrollParent(!1)),
                    i.scrollParentNotHidden[0] !== i.document[0] && "HTML" !== i.scrollParentNotHidden[0].tagName && (i.overflowOffset = i.scrollParentNotHidden.offset());
            },
            drag: function (e, i, s) {
                var n = s.options,
                    o = !1,
                    a = s.scrollParentNotHidden[0],
                    r = s.document[0];
                a !== r && "HTML" !== a.tagName
                    ? ((n.axis && "x" === n.axis) ||
                          (s.overflowOffset.top + a.offsetHeight - e.pageY < n.scrollSensitivity
                              ? (a.scrollTop = o = a.scrollTop + n.scrollSpeed)
                              : e.pageY - s.overflowOffset.top < n.scrollSensitivity && (a.scrollTop = o = a.scrollTop - n.scrollSpeed)),
                      (n.axis && "y" === n.axis) ||
                          (s.overflowOffset.left + a.offsetWidth - e.pageX < n.scrollSensitivity
                              ? (a.scrollLeft = o = a.scrollLeft + n.scrollSpeed)
                              : e.pageX - s.overflowOffset.left < n.scrollSensitivity && (a.scrollLeft = o = a.scrollLeft - n.scrollSpeed)))
                    : ((n.axis && "x" === n.axis) ||
                          (e.pageY - t(r).scrollTop() < n.scrollSensitivity
                              ? (o = t(r).scrollTop(t(r).scrollTop() - n.scrollSpeed))
                              : t(window).height() - (e.pageY - t(r).scrollTop()) < n.scrollSensitivity && (o = t(r).scrollTop(t(r).scrollTop() + n.scrollSpeed))),
                      (n.axis && "y" === n.axis) ||
                          (e.pageX - t(r).scrollLeft() < n.scrollSensitivity
                              ? (o = t(r).scrollLeft(t(r).scrollLeft() - n.scrollSpeed))
                              : t(window).width() - (e.pageX - t(r).scrollLeft()) < n.scrollSensitivity && (o = t(r).scrollLeft(t(r).scrollLeft() + n.scrollSpeed)))),
                    o !== !1 && t.ui.ddmanager && !n.dropBehaviour && t.ui.ddmanager.prepareOffsets(s, e);
            },
        }),
        t.ui.plugin.add("draggable", "snap", {
            start: function (e, i, s) {
                var n = s.options;
                (s.snapElements = []),
                    t(n.snap.constructor !== String ? n.snap.items || ":data(ui-draggable)" : n.snap).each(function () {
                        var e = t(this),
                            i = e.offset();
                        this !== s.element[0] && s.snapElements.push({ item: this, width: e.outerWidth(), height: e.outerHeight(), top: i.top, left: i.left });
                    });
            },
            drag: function (e, i, s) {
                var n,
                    o,
                    a,
                    r,
                    l,
                    h,
                    c,
                    u,
                    d,
                    p,
                    f = s.options,
                    g = f.snapTolerance,
                    m = i.offset.left,
                    _ = m + s.helperProportions.width,
                    v = i.offset.top,
                    b = v + s.helperProportions.height;
                for (d = s.snapElements.length - 1; d >= 0; d--)
                    (l = s.snapElements[d].left - s.margins.left),
                        (h = l + s.snapElements[d].width),
                        (c = s.snapElements[d].top - s.margins.top),
                        (u = c + s.snapElements[d].height),
                        l - g > _ || m > h + g || c - g > b || v > u + g || !t.contains(s.snapElements[d].item.ownerDocument, s.snapElements[d].item)
                            ? (s.snapElements[d].snapping && s.options.snap.release && s.options.snap.release.call(s.element, e, t.extend(s._uiHash(), { snapItem: s.snapElements[d].item })), (s.snapElements[d].snapping = !1))
                            : ("inner" !== f.snapMode &&
                                  ((n = g >= Math.abs(c - b)),
                                  (o = g >= Math.abs(u - v)),
                                  (a = g >= Math.abs(l - _)),
                                  (r = g >= Math.abs(h - m)),
                                  n && (i.position.top = s._convertPositionTo("relative", { top: c - s.helperProportions.height, left: 0 }).top),
                                  o && (i.position.top = s._convertPositionTo("relative", { top: u, left: 0 }).top),
                                  a && (i.position.left = s._convertPositionTo("relative", { top: 0, left: l - s.helperProportions.width }).left),
                                  r && (i.position.left = s._convertPositionTo("relative", { top: 0, left: h }).left)),
                              (p = n || o || a || r),
                              "outer" !== f.snapMode &&
                                  ((n = g >= Math.abs(c - v)),
                                  (o = g >= Math.abs(u - b)),
                                  (a = g >= Math.abs(l - m)),
                                  (r = g >= Math.abs(h - _)),
                                  n && (i.position.top = s._convertPositionTo("relative", { top: c, left: 0 }).top),
                                  o && (i.position.top = s._convertPositionTo("relative", { top: u - s.helperProportions.height, left: 0 }).top),
                                  a && (i.position.left = s._convertPositionTo("relative", { top: 0, left: l }).left),
                                  r && (i.position.left = s._convertPositionTo("relative", { top: 0, left: h - s.helperProportions.width }).left)),
                              !s.snapElements[d].snapping && (n || o || a || r || p) && s.options.snap.snap && s.options.snap.snap.call(s.element, e, t.extend(s._uiHash(), { snapItem: s.snapElements[d].item })),
                              (s.snapElements[d].snapping = n || o || a || r || p));
            },
        }),
        t.ui.plugin.add("draggable", "stack", {
            start: function (e, i, s) {
                var n,
                    o = s.options,
                    a = t.makeArray(t(o.stack)).sort(function (e, i) {
                        return (parseInt(t(e).css("zIndex"), 10) || 0) - (parseInt(t(i).css("zIndex"), 10) || 0);
                    });
                a.length &&
                    ((n = parseInt(t(a[0]).css("zIndex"), 10) || 0),
                    t(a).each(function (e) {
                        t(this).css("zIndex", n + e);
                    }),
                    this.css("zIndex", n + a.length));
            },
        }),
        t.ui.plugin.add("draggable", "zIndex", {
            start: function (e, i, s) {
                var n = t(i.helper),
                    o = s.options;
                n.css("zIndex") && (o._zIndex = n.css("zIndex")), n.css("zIndex", o.zIndex);
            },
            stop: function (e, i, s) {
                var n = s.options;
                n._zIndex && t(i.helper).css("zIndex", n._zIndex);
            },
        }),
        t.ui.draggable,
        t.widget("ui.droppable", {
            version: "1.12.1",
            widgetEventPrefix: "drop",
            options: { accept: "*", addClasses: !0, greedy: !1, scope: "default", tolerance: "intersect", activate: null, deactivate: null, drop: null, out: null, over: null },
            _create: function () {
                var e,
                    i = this.options,
                    s = i.accept;
                (this.isover = !1),
                    (this.isout = !0),
                    (this.accept = t.isFunction(s)
                        ? s
                        : function (t) {
                              return t.is(s);
                          }),
                    (this.proportions = function () {
                        return arguments.length ? ((e = arguments[0]), void 0) : e ? e : (e = { width: this.element[0].offsetWidth, height: this.element[0].offsetHeight });
                    }),
                    this._addToManager(i.scope),
                    i.addClasses && this._addClass("ui-droppable");
            },
            _addToManager: function (e) {
                (t.ui.ddmanager.droppables[e] = t.ui.ddmanager.droppables[e] || []), t.ui.ddmanager.droppables[e].push(this);
            },
            _splice: function (t) {
                for (var e = 0; t.length > e; e++) t[e] === this && t.splice(e, 1);
            },
            _destroy: function () {
                var e = t.ui.ddmanager.droppables[this.options.scope];
                this._splice(e);
            },
            _setOption: function (e, i) {
                if ("accept" === e)
                    this.accept = t.isFunction(i)
                        ? i
                        : function (t) {
                              return t.is(i);
                          };
                else if ("scope" === e) {
                    var s = t.ui.ddmanager.droppables[this.options.scope];
                    this._splice(s), this._addToManager(i);
                }
                this._super(e, i);
            },
            _activate: function (e) {
                var i = t.ui.ddmanager.current;
                this._addActiveClass(), i && this._trigger("activate", e, this.ui(i));
            },
            _deactivate: function (e) {
                var i = t.ui.ddmanager.current;
                this._removeActiveClass(), i && this._trigger("deactivate", e, this.ui(i));
            },
            _over: function (e) {
                var i = t.ui.ddmanager.current;
                i && (i.currentItem || i.element)[0] !== this.element[0] && this.accept.call(this.element[0], i.currentItem || i.element) && (this._addHoverClass(), this._trigger("over", e, this.ui(i)));
            },
            _out: function (e) {
                var i = t.ui.ddmanager.current;
                i && (i.currentItem || i.element)[0] !== this.element[0] && this.accept.call(this.element[0], i.currentItem || i.element) && (this._removeHoverClass(), this._trigger("out", e, this.ui(i)));
            },
            _drop: function (e, i) {
                var s = i || t.ui.ddmanager.current,
                    o = !1;
                return s && (s.currentItem || s.element)[0] !== this.element[0]
                    ? (this.element
                          .find(":data(ui-droppable)")
                          .not(".ui-draggable-dragging")
                          .each(function () {
                              var i = t(this).droppable("instance");
                              return i.options.greedy &&
                                  !i.options.disabled &&
                                  i.options.scope === s.options.scope &&
                                  i.accept.call(i.element[0], s.currentItem || s.element) &&
                                  n(s, t.extend(i, { offset: i.element.offset() }), i.options.tolerance, e)
                                  ? ((o = !0), !1)
                                  : void 0;
                          }),
                      o ? !1 : this.accept.call(this.element[0], s.currentItem || s.element) ? (this._removeActiveClass(), this._removeHoverClass(), this._trigger("drop", e, this.ui(s)), this.element) : !1)
                    : !1;
            },
            ui: function (t) {
                return { draggable: t.currentItem || t.element, helper: t.helper, position: t.position, offset: t.positionAbs };
            },
            _addHoverClass: function () {
                this._addClass("ui-droppable-hover");
            },
            _removeHoverClass: function () {
                this._removeClass("ui-droppable-hover");
            },
            _addActiveClass: function () {
                this._addClass("ui-droppable-active");
            },
            _removeActiveClass: function () {
                this._removeClass("ui-droppable-active");
            },
        });
    var n = (t.ui.intersect = (function () {
        function t(t, e, i) {
            return t >= e && e + i > t;
        }
        return function (e, i, s, n) {
            if (!i.offset) return !1;
            var o = (e.positionAbs || e.position.absolute).left + e.margins.left,
                a = (e.positionAbs || e.position.absolute).top + e.margins.top,
                r = o + e.helperProportions.width,
                l = a + e.helperProportions.height,
                h = i.offset.left,
                c = i.offset.top,
                u = h + i.proportions().width,
                d = c + i.proportions().height;
            switch (s) {
                case "fit":
                    return o >= h && u >= r && a >= c && d >= l;
                case "intersect":
                    return o + e.helperProportions.width / 2 > h && u > r - e.helperProportions.width / 2 && a + e.helperProportions.height / 2 > c && d > l - e.helperProportions.height / 2;
                case "pointer":
                    return t(n.pageY, c, i.proportions().height) && t(n.pageX, h, i.proportions().width);
                case "touch":
                    return ((a >= c && d >= a) || (l >= c && d >= l) || (c > a && l > d)) && ((o >= h && u >= o) || (r >= h && u >= r) || (h > o && r > u));
                default:
                    return !1;
            }
        };
    })());
    (t.ui.ddmanager = {
        current: null,
        droppables: { default: [] },
        prepareOffsets: function (e, i) {
            var s,
                n,
                o = t.ui.ddmanager.droppables[e.options.scope] || [],
                a = i ? i.type : null,
                r = (e.currentItem || e.element).find(":data(ui-droppable)").addBack();
            t: for (s = 0; o.length > s; s++)
                if (!(o[s].options.disabled || (e && !o[s].accept.call(o[s].element[0], e.currentItem || e.element)))) {
                    for (n = 0; r.length > n; n++)
                        if (r[n] === o[s].element[0]) {
                            o[s].proportions().height = 0;
                            continue t;
                        }
                    (o[s].visible = "none" !== o[s].element.css("display")),
                        o[s].visible && ("mousedown" === a && o[s]._activate.call(o[s], i), (o[s].offset = o[s].element.offset()), o[s].proportions({ width: o[s].element[0].offsetWidth, height: o[s].element[0].offsetHeight }));
                }
        },
        drop: function (e, i) {
            var s = !1;
            return (
                t.each((t.ui.ddmanager.droppables[e.options.scope] || []).slice(), function () {
                    this.options &&
                        (!this.options.disabled && this.visible && n(e, this, this.options.tolerance, i) && (s = this._drop.call(this, i) || s),
                        !this.options.disabled && this.visible && this.accept.call(this.element[0], e.currentItem || e.element) && ((this.isout = !0), (this.isover = !1), this._deactivate.call(this, i)));
                }),
                s
            );
        },
        dragStart: function (e, i) {
            e.element.parentsUntil("body").on("scroll.droppable", function () {
                e.options.refreshPositions || t.ui.ddmanager.prepareOffsets(e, i);
            });
        },
        drag: function (e, i) {
            e.options.refreshPositions && t.ui.ddmanager.prepareOffsets(e, i),
                t.each(t.ui.ddmanager.droppables[e.options.scope] || [], function () {
                    if (!this.options.disabled && !this.greedyChild && this.visible) {
                        var s,
                            o,
                            a,
                            r = n(e, this, this.options.tolerance, i),
                            l = !r && this.isover ? "isout" : r && !this.isover ? "isover" : null;
                        l &&
                            (this.options.greedy &&
                                ((o = this.options.scope),
                                (a = this.element.parents(":data(ui-droppable)").filter(function () {
                                    return t(this).droppable("instance").options.scope === o;
                                })),
                                a.length && ((s = t(a[0]).droppable("instance")), (s.greedyChild = "isover" === l))),
                            s && "isover" === l && ((s.isover = !1), (s.isout = !0), s._out.call(s, i)),
                            (this[l] = !0),
                            (this["isout" === l ? "isover" : "isout"] = !1),
                            this["isover" === l ? "_over" : "_out"].call(this, i),
                            s && "isout" === l && ((s.isout = !1), (s.isover = !0), s._over.call(s, i)));
                    }
                });
        },
        dragStop: function (e, i) {
            e.element.parentsUntil("body").off("scroll.droppable"), e.options.refreshPositions || t.ui.ddmanager.prepareOffsets(e, i);
        },
    }),
        t.uiBackCompat !== !1 &&
            t.widget("ui.droppable", t.ui.droppable, {
                options: { hoverClass: !1, activeClass: !1 },
                _addActiveClass: function () {
                    this._super(), this.options.activeClass && this.element.addClass(this.options.activeClass);
                },
                _removeActiveClass: function () {
                    this._super(), this.options.activeClass && this.element.removeClass(this.options.activeClass);
                },
                _addHoverClass: function () {
                    this._super(), this.options.hoverClass && this.element.addClass(this.options.hoverClass);
                },
                _removeHoverClass: function () {
                    this._super(), this.options.hoverClass && this.element.removeClass(this.options.hoverClass);
                },
            }),
        t.ui.droppable,
        t.widget("ui.resizable", t.ui.mouse, {
            version: "1.12.1",
            widgetEventPrefix: "resize",
            options: {
                alsoResize: !1,
                animate: !1,
                animateDuration: "slow",
                animateEasing: "swing",
                aspectRatio: !1,
                autoHide: !1,
                classes: { "ui-resizable-se": "ui-icon ui-icon-gripsmall-diagonal-se" },
                containment: !1,
                ghost: !1,
                grid: !1,
                handles: "e,s,se",
                helper: !1,
                maxHeight: null,
                maxWidth: null,
                minHeight: 10,
                minWidth: 10,
                zIndex: 90,
                resize: null,
                start: null,
                stop: null,
            },
            _num: function (t) {
                return parseFloat(t) || 0;
            },
            _isNumber: function (t) {
                return !isNaN(parseFloat(t));
            },
            _hasScroll: function (e, i) {
                if ("hidden" === t(e).css("overflow")) return !1;
                var s = i && "left" === i ? "scrollLeft" : "scrollTop",
                    n = !1;
                return e[s] > 0 ? !0 : ((e[s] = 1), (n = e[s] > 0), (e[s] = 0), n);
            },
            _create: function () {
                var e,
                    i = this.options,
                    s = this;
                this._addClass("ui-resizable"),
                    t.extend(this, {
                        _aspectRatio: !!i.aspectRatio,
                        aspectRatio: i.aspectRatio,
                        originalElement: this.element,
                        _proportionallyResizeElements: [],
                        _helper: i.helper || i.ghost || i.animate ? i.helper || "ui-resizable-helper" : null,
                    }),
                    this.element[0].nodeName.match(/^(canvas|textarea|input|select|button|img)$/i) &&
                        (this.element.wrap(
                            t("<div class='ui-wrapper' style='overflow: hidden;'></div>").css({
                                position: this.element.css("position"),
                                width: this.element.outerWidth(),
                                height: this.element.outerHeight(),
                                top: this.element.css("top"),
                                left: this.element.css("left"),
                            })
                        ),
                        (this.element = this.element.parent().data("ui-resizable", this.element.resizable("instance"))),
                        (this.elementIsWrapper = !0),
                        (e = {
                            marginTop: this.originalElement.css("marginTop"),
                            marginRight: this.originalElement.css("marginRight"),
                            marginBottom: this.originalElement.css("marginBottom"),
                            marginLeft: this.originalElement.css("marginLeft"),
                        }),
                        this.element.css(e),
                        this.originalElement.css("margin", 0),
                        (this.originalResizeStyle = this.originalElement.css("resize")),
                        this.originalElement.css("resize", "none"),
                        this._proportionallyResizeElements.push(this.originalElement.css({ position: "static", zoom: 1, display: "block" })),
                        this.originalElement.css(e),
                        this._proportionallyResize()),
                    this._setupHandles(),
                    i.autoHide &&
                        t(this.element)
                            .on("mouseenter", function () {
                                i.disabled || (s._removeClass("ui-resizable-autohide"), s._handles.show());
                            })
                            .on("mouseleave", function () {
                                i.disabled || s.resizing || (s._addClass("ui-resizable-autohide"), s._handles.hide());
                            }),
                    this._mouseInit();
            },
            _destroy: function () {
                this._mouseDestroy();
                var e,
                    i = function (e) {
                        t(e).removeData("resizable").removeData("ui-resizable").off(".resizable").find(".ui-resizable-handle").remove();
                    };
                return (
                    this.elementIsWrapper &&
                        (i(this.element), (e = this.element), this.originalElement.css({ position: e.css("position"), width: e.outerWidth(), height: e.outerHeight(), top: e.css("top"), left: e.css("left") }).insertAfter(e), e.remove()),
                    this.originalElement.css("resize", this.originalResizeStyle),
                    i(this.originalElement),
                    this
                );
            },
            _setOption: function (t, e) {
                switch ((this._super(t, e), t)) {
                    case "handles":
                        this._removeHandles(), this._setupHandles();
                        break;
                    default:
                }
            },
            _setupHandles: function () {
                var e,
                    i,
                    s,
                    n,
                    o,
                    a = this.options,
                    r = this;
                if (
                    ((this.handles =
                        a.handles ||
                        (t(".ui-resizable-handle", this.element).length
                            ? { n: ".ui-resizable-n", e: ".ui-resizable-e", s: ".ui-resizable-s", w: ".ui-resizable-w", se: ".ui-resizable-se", sw: ".ui-resizable-sw", ne: ".ui-resizable-ne", nw: ".ui-resizable-nw" }
                            : "e,s,se")),
                    (this._handles = t()),
                    this.handles.constructor === String)
                )
                    for ("all" === this.handles && (this.handles = "n,e,s,w,se,sw,ne,nw"), s = this.handles.split(","), this.handles = {}, i = 0; s.length > i; i++)
                        (e = t.trim(s[i])), (n = "ui-resizable-" + e), (o = t("<div>")), this._addClass(o, "ui-resizable-handle " + n), o.css({ zIndex: a.zIndex }), (this.handles[e] = ".ui-resizable-" + e), this.element.append(o);
                (this._renderAxis = function (e) {
                    var i, s, n, o;
                    e = e || this.element;
                    for (i in this.handles)
                        this.handles[i].constructor === String
                            ? (this.handles[i] = this.element.children(this.handles[i]).first().show())
                            : (this.handles[i].jquery || this.handles[i].nodeType) && ((this.handles[i] = t(this.handles[i])), this._on(this.handles[i], { mousedown: r._mouseDown })),
                            this.elementIsWrapper &&
                                this.originalElement[0].nodeName.match(/^(textarea|input|select|button)$/i) &&
                                ((s = t(this.handles[i], this.element)),
                                (o = /sw|ne|nw|se|n|s/.test(i) ? s.outerHeight() : s.outerWidth()),
                                (n = ["padding", /ne|nw|n/.test(i) ? "Top" : /se|sw|s/.test(i) ? "Bottom" : /^e$/.test(i) ? "Right" : "Left"].join("")),
                                e.css(n, o),
                                this._proportionallyResize()),
                            (this._handles = this._handles.add(this.handles[i]));
                }),
                    this._renderAxis(this.element),
                    (this._handles = this._handles.add(this.element.find(".ui-resizable-handle"))),
                    this._handles.disableSelection(),
                    this._handles.on("mouseover", function () {
                        r.resizing || (this.className && (o = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)), (r.axis = o && o[1] ? o[1] : "se"));
                    }),
                    a.autoHide && (this._handles.hide(), this._addClass("ui-resizable-autohide"));
            },
            _removeHandles: function () {
                this._handles.remove();
            },
            _mouseCapture: function (e) {
                var i,
                    s,
                    n = !1;
                for (i in this.handles) (s = t(this.handles[i])[0]), (s === e.target || t.contains(s, e.target)) && (n = !0);
                return !this.options.disabled && n;
            },
            _mouseStart: function (e) {
                var i,
                    s,
                    n,
                    o = this.options,
                    a = this.element;
                return (
                    (this.resizing = !0),
                    this._renderProxy(),
                    (i = this._num(this.helper.css("left"))),
                    (s = this._num(this.helper.css("top"))),
                    o.containment && ((i += t(o.containment).scrollLeft() || 0), (s += t(o.containment).scrollTop() || 0)),
                    (this.offset = this.helper.offset()),
                    (this.position = { left: i, top: s }),
                    (this.size = this._helper ? { width: this.helper.width(), height: this.helper.height() } : { width: a.width(), height: a.height() }),
                    (this.originalSize = this._helper ? { width: a.outerWidth(), height: a.outerHeight() } : { width: a.width(), height: a.height() }),
                    (this.sizeDiff = { width: a.outerWidth() - a.width(), height: a.outerHeight() - a.height() }),
                    (this.originalPosition = { left: i, top: s }),
                    (this.originalMousePosition = { left: e.pageX, top: e.pageY }),
                    (this.aspectRatio = "number" == typeof o.aspectRatio ? o.aspectRatio : this.originalSize.width / this.originalSize.height || 1),
                    (n = t(".ui-resizable-" + this.axis).css("cursor")),
                    t("body").css("cursor", "auto" === n ? this.axis + "-resize" : n),
                    this._addClass("ui-resizable-resizing"),
                    this._propagate("start", e),
                    !0
                );
            },
            _mouseDrag: function (e) {
                var i,
                    s,
                    n = this.originalMousePosition,
                    o = this.axis,
                    a = e.pageX - n.left || 0,
                    r = e.pageY - n.top || 0,
                    l = this._change[o];
                return (
                    this._updatePrevProperties(),
                    l
                        ? ((i = l.apply(this, [e, a, r])),
                          this._updateVirtualBoundaries(e.shiftKey),
                          (this._aspectRatio || e.shiftKey) && (i = this._updateRatio(i, e)),
                          (i = this._respectSize(i, e)),
                          this._updateCache(i),
                          this._propagate("resize", e),
                          (s = this._applyChanges()),
                          !this._helper && this._proportionallyResizeElements.length && this._proportionallyResize(),
                          t.isEmptyObject(s) || (this._updatePrevProperties(), this._trigger("resize", e, this.ui()), this._applyChanges()),
                          !1)
                        : !1
                );
            },
            _mouseStop: function (e) {
                this.resizing = !1;
                var i,
                    s,
                    n,
                    o,
                    a,
                    r,
                    l,
                    h = this.options,
                    c = this;
                return (
                    this._helper &&
                        ((i = this._proportionallyResizeElements),
                        (s = i.length && /textarea/i.test(i[0].nodeName)),
                        (n = s && this._hasScroll(i[0], "left") ? 0 : c.sizeDiff.height),
                        (o = s ? 0 : c.sizeDiff.width),
                        (a = { width: c.helper.width() - o, height: c.helper.height() - n }),
                        (r = parseFloat(c.element.css("left")) + (c.position.left - c.originalPosition.left) || null),
                        (l = parseFloat(c.element.css("top")) + (c.position.top - c.originalPosition.top) || null),
                        h.animate || this.element.css(t.extend(a, { top: l, left: r })),
                        c.helper.height(c.size.height),
                        c.helper.width(c.size.width),
                        this._helper && !h.animate && this._proportionallyResize()),
                    t("body").css("cursor", "auto"),
                    this._removeClass("ui-resizable-resizing"),
                    this._propagate("stop", e),
                    this._helper && this.helper.remove(),
                    !1
                );
            },
            _updatePrevProperties: function () {
                (this.prevPosition = { top: this.position.top, left: this.position.left }), (this.prevSize = { width: this.size.width, height: this.size.height });
            },
            _applyChanges: function () {
                var t = {};
                return (
                    this.position.top !== this.prevPosition.top && (t.top = this.position.top + "px"),
                    this.position.left !== this.prevPosition.left && (t.left = this.position.left + "px"),
                    this.size.width !== this.prevSize.width && (t.width = this.size.width + "px"),
                    this.size.height !== this.prevSize.height && (t.height = this.size.height + "px"),
                    this.helper.css(t),
                    t
                );
            },
            _updateVirtualBoundaries: function (t) {
                var e,
                    i,
                    s,
                    n,
                    o,
                    a = this.options;
                (o = {
                    minWidth: this._isNumber(a.minWidth) ? a.minWidth : 0,
                    maxWidth: this._isNumber(a.maxWidth) ? a.maxWidth : 1 / 0,
                    minHeight: this._isNumber(a.minHeight) ? a.minHeight : 0,
                    maxHeight: this._isNumber(a.maxHeight) ? a.maxHeight : 1 / 0,
                }),
                    (this._aspectRatio || t) &&
                        ((e = o.minHeight * this.aspectRatio),
                        (s = o.minWidth / this.aspectRatio),
                        (i = o.maxHeight * this.aspectRatio),
                        (n = o.maxWidth / this.aspectRatio),
                        e > o.minWidth && (o.minWidth = e),
                        s > o.minHeight && (o.minHeight = s),
                        o.maxWidth > i && (o.maxWidth = i),
                        o.maxHeight > n && (o.maxHeight = n)),
                    (this._vBoundaries = o);
            },
            _updateCache: function (t) {
                (this.offset = this.helper.offset()),
                    this._isNumber(t.left) && (this.position.left = t.left),
                    this._isNumber(t.top) && (this.position.top = t.top),
                    this._isNumber(t.height) && (this.size.height = t.height),
                    this._isNumber(t.width) && (this.size.width = t.width);
            },
            _updateRatio: function (t) {
                var e = this.position,
                    i = this.size,
                    s = this.axis;
                return (
                    this._isNumber(t.height) ? (t.width = t.height * this.aspectRatio) : this._isNumber(t.width) && (t.height = t.width / this.aspectRatio),
                    "sw" === s && ((t.left = e.left + (i.width - t.width)), (t.top = null)),
                    "nw" === s && ((t.top = e.top + (i.height - t.height)), (t.left = e.left + (i.width - t.width))),
                    t
                );
            },
            _respectSize: function (t) {
                var e = this._vBoundaries,
                    i = this.axis,
                    s = this._isNumber(t.width) && e.maxWidth && e.maxWidth < t.width,
                    n = this._isNumber(t.height) && e.maxHeight && e.maxHeight < t.height,
                    o = this._isNumber(t.width) && e.minWidth && e.minWidth > t.width,
                    a = this._isNumber(t.height) && e.minHeight && e.minHeight > t.height,
                    r = this.originalPosition.left + this.originalSize.width,
                    l = this.originalPosition.top + this.originalSize.height,
                    h = /sw|nw|w/.test(i),
                    c = /nw|ne|n/.test(i);
                return (
                    o && (t.width = e.minWidth),
                    a && (t.height = e.minHeight),
                    s && (t.width = e.maxWidth),
                    n && (t.height = e.maxHeight),
                    o && h && (t.left = r - e.minWidth),
                    s && h && (t.left = r - e.maxWidth),
                    a && c && (t.top = l - e.minHeight),
                    n && c && (t.top = l - e.maxHeight),
                    t.width || t.height || t.left || !t.top ? t.width || t.height || t.top || !t.left || (t.left = null) : (t.top = null),
                    t
                );
            },
            _getPaddingPlusBorderDimensions: function (t) {
                for (
                    var e = 0,
                        i = [],
                        s = [t.css("borderTopWidth"), t.css("borderRightWidth"), t.css("borderBottomWidth"), t.css("borderLeftWidth")],
                        n = [t.css("paddingTop"), t.css("paddingRight"), t.css("paddingBottom"), t.css("paddingLeft")];
                    4 > e;
                    e++
                )
                    (i[e] = parseFloat(s[e]) || 0), (i[e] += parseFloat(n[e]) || 0);
                return { height: i[0] + i[2], width: i[1] + i[3] };
            },
            _proportionallyResize: function () {
                if (this._proportionallyResizeElements.length)
                    for (var t, e = 0, i = this.helper || this.element; this._proportionallyResizeElements.length > e; e++)
                        (t = this._proportionallyResizeElements[e]),
                            this.outerDimensions || (this.outerDimensions = this._getPaddingPlusBorderDimensions(t)),
                            t.css({ height: i.height() - this.outerDimensions.height || 0, width: i.width() - this.outerDimensions.width || 0 });
            },
            _renderProxy: function () {
                var e = this.element,
                    i = this.options;
                (this.elementOffset = e.offset()),
                    this._helper
                        ? ((this.helper = this.helper || t("<div style='overflow:hidden;'></div>")),
                          this._addClass(this.helper, this._helper),
                          this.helper.css({ width: this.element.outerWidth(), height: this.element.outerHeight(), position: "absolute", left: this.elementOffset.left + "px", top: this.elementOffset.top + "px", zIndex: ++i.zIndex }),
                          this.helper.appendTo("body").disableSelection())
                        : (this.helper = this.element);
            },
            _change: {
                e: function (t, e) {
                    return { width: this.originalSize.width + e };
                },
                w: function (t, e) {
                    var i = this.originalSize,
                        s = this.originalPosition;
                    return { left: s.left + e, width: i.width - e };
                },
                n: function (t, e, i) {
                    var s = this.originalSize,
                        n = this.originalPosition;
                    return { top: n.top + i, height: s.height - i };
                },
                s: function (t, e, i) {
                    return { height: this.originalSize.height + i };
                },
                se: function (e, i, s) {
                    return t.extend(this._change.s.apply(this, arguments), this._change.e.apply(this, [e, i, s]));
                },
                sw: function (e, i, s) {
                    return t.extend(this._change.s.apply(this, arguments), this._change.w.apply(this, [e, i, s]));
                },
                ne: function (e, i, s) {
                    return t.extend(this._change.n.apply(this, arguments), this._change.e.apply(this, [e, i, s]));
                },
                nw: function (e, i, s) {
                    return t.extend(this._change.n.apply(this, arguments), this._change.w.apply(this, [e, i, s]));
                },
            },
            _propagate: function (e, i) {
                t.ui.plugin.call(this, e, [i, this.ui()]), "resize" !== e && this._trigger(e, i, this.ui());
            },
            plugins: {},
            ui: function () {
                return { originalElement: this.originalElement, element: this.element, helper: this.helper, position: this.position, size: this.size, originalSize: this.originalSize, originalPosition: this.originalPosition };
            },
        }),
        t.ui.plugin.add("resizable", "animate", {
            stop: function (e) {
                var i = t(this).resizable("instance"),
                    s = i.options,
                    n = i._proportionallyResizeElements,
                    o = n.length && /textarea/i.test(n[0].nodeName),
                    a = o && i._hasScroll(n[0], "left") ? 0 : i.sizeDiff.height,
                    r = o ? 0 : i.sizeDiff.width,
                    l = { width: i.size.width - r, height: i.size.height - a },
                    h = parseFloat(i.element.css("left")) + (i.position.left - i.originalPosition.left) || null,
                    c = parseFloat(i.element.css("top")) + (i.position.top - i.originalPosition.top) || null;
                i.element.animate(t.extend(l, c && h ? { top: c, left: h } : {}), {
                    duration: s.animateDuration,
                    easing: s.animateEasing,
                    step: function () {
                        var s = { width: parseFloat(i.element.css("width")), height: parseFloat(i.element.css("height")), top: parseFloat(i.element.css("top")), left: parseFloat(i.element.css("left")) };
                        n && n.length && t(n[0]).css({ width: s.width, height: s.height }), i._updateCache(s), i._propagate("resize", e);
                    },
                });
            },
        }),
        t.ui.plugin.add("resizable", "containment", {
            start: function () {
                var e,
                    i,
                    s,
                    n,
                    o,
                    a,
                    r,
                    l = t(this).resizable("instance"),
                    h = l.options,
                    c = l.element,
                    u = h.containment,
                    d = u instanceof t ? u.get(0) : /parent/.test(u) ? c.parent().get(0) : u;
                d &&
                    ((l.containerElement = t(d)),
                    /document/.test(u) || u === document
                        ? ((l.containerOffset = { left: 0, top: 0 }),
                          (l.containerPosition = { left: 0, top: 0 }),
                          (l.parentData = { element: t(document), left: 0, top: 0, width: t(document).width(), height: t(document).height() || document.body.parentNode.scrollHeight }))
                        : ((e = t(d)),
                          (i = []),
                          t(["Top", "Right", "Left", "Bottom"]).each(function (t, s) {
                              i[t] = l._num(e.css("padding" + s));
                          }),
                          (l.containerOffset = e.offset()),
                          (l.containerPosition = e.position()),
                          (l.containerSize = { height: e.innerHeight() - i[3], width: e.innerWidth() - i[1] }),
                          (s = l.containerOffset),
                          (n = l.containerSize.height),
                          (o = l.containerSize.width),
                          (a = l._hasScroll(d, "left") ? d.scrollWidth : o),
                          (r = l._hasScroll(d) ? d.scrollHeight : n),
                          (l.parentData = { element: d, left: s.left, top: s.top, width: a, height: r })));
            },
            resize: function (e) {
                var i,
                    s,
                    n,
                    o,
                    a = t(this).resizable("instance"),
                    r = a.options,
                    l = a.containerOffset,
                    h = a.position,
                    c = a._aspectRatio || e.shiftKey,
                    u = { top: 0, left: 0 },
                    d = a.containerElement,
                    p = !0;
                d[0] !== document && /static/.test(d.css("position")) && (u = l),
                    h.left < (a._helper ? l.left : 0) &&
                        ((a.size.width = a.size.width + (a._helper ? a.position.left - l.left : a.position.left - u.left)), c && ((a.size.height = a.size.width / a.aspectRatio), (p = !1)), (a.position.left = r.helper ? l.left : 0)),
                    h.top < (a._helper ? l.top : 0) &&
                        ((a.size.height = a.size.height + (a._helper ? a.position.top - l.top : a.position.top)), c && ((a.size.width = a.size.height * a.aspectRatio), (p = !1)), (a.position.top = a._helper ? l.top : 0)),
                    (n = a.containerElement.get(0) === a.element.parent().get(0)),
                    (o = /relative|absolute/.test(a.containerElement.css("position"))),
                    n && o ? ((a.offset.left = a.parentData.left + a.position.left), (a.offset.top = a.parentData.top + a.position.top)) : ((a.offset.left = a.element.offset().left), (a.offset.top = a.element.offset().top)),
                    (i = Math.abs(a.sizeDiff.width + (a._helper ? a.offset.left - u.left : a.offset.left - l.left))),
                    (s = Math.abs(a.sizeDiff.height + (a._helper ? a.offset.top - u.top : a.offset.top - l.top))),
                    i + a.size.width >= a.parentData.width && ((a.size.width = a.parentData.width - i), c && ((a.size.height = a.size.width / a.aspectRatio), (p = !1))),
                    s + a.size.height >= a.parentData.height && ((a.size.height = a.parentData.height - s), c && ((a.size.width = a.size.height * a.aspectRatio), (p = !1))),
                    p || ((a.position.left = a.prevPosition.left), (a.position.top = a.prevPosition.top), (a.size.width = a.prevSize.width), (a.size.height = a.prevSize.height));
            },
            stop: function () {
                var e = t(this).resizable("instance"),
                    i = e.options,
                    s = e.containerOffset,
                    n = e.containerPosition,
                    o = e.containerElement,
                    a = t(e.helper),
                    r = a.offset(),
                    l = a.outerWidth() - e.sizeDiff.width,
                    h = a.outerHeight() - e.sizeDiff.height;
                e._helper && !i.animate && /relative/.test(o.css("position")) && t(this).css({ left: r.left - n.left - s.left, width: l, height: h }),
                    e._helper && !i.animate && /static/.test(o.css("position")) && t(this).css({ left: r.left - n.left - s.left, width: l, height: h });
            },
        }),
        t.ui.plugin.add("resizable", "alsoResize", {
            start: function () {
                var e = t(this).resizable("instance"),
                    i = e.options;
                t(i.alsoResize).each(function () {
                    var e = t(this);
                    e.data("ui-resizable-alsoresize", { width: parseFloat(e.width()), height: parseFloat(e.height()), left: parseFloat(e.css("left")), top: parseFloat(e.css("top")) });
                });
            },
            resize: function (e, i) {
                var s = t(this).resizable("instance"),
                    n = s.options,
                    o = s.originalSize,
                    a = s.originalPosition,
                    r = { height: s.size.height - o.height || 0, width: s.size.width - o.width || 0, top: s.position.top - a.top || 0, left: s.position.left - a.left || 0 };
                t(n.alsoResize).each(function () {
                    var e = t(this),
                        s = t(this).data("ui-resizable-alsoresize"),
                        n = {},
                        o = e.parents(i.originalElement[0]).length ? ["width", "height"] : ["width", "height", "top", "left"];
                    t.each(o, function (t, e) {
                        var i = (s[e] || 0) + (r[e] || 0);
                        i && i >= 0 && (n[e] = i || null);
                    }),
                        e.css(n);
                });
            },
            stop: function () {
                t(this).removeData("ui-resizable-alsoresize");
            },
        }),
        t.ui.plugin.add("resizable", "ghost", {
            start: function () {
                var e = t(this).resizable("instance"),
                    i = e.size;
                (e.ghost = e.originalElement.clone()),
                    e.ghost.css({ opacity: 0.25, display: "block", position: "relative", height: i.height, width: i.width, margin: 0, left: 0, top: 0 }),
                    e._addClass(e.ghost, "ui-resizable-ghost"),
                    t.uiBackCompat !== !1 && "string" == typeof e.options.ghost && e.ghost.addClass(this.options.ghost),
                    e.ghost.appendTo(e.helper);
            },
            resize: function () {
                var e = t(this).resizable("instance");
                e.ghost && e.ghost.css({ position: "relative", height: e.size.height, width: e.size.width });
            },
            stop: function () {
                var e = t(this).resizable("instance");
                e.ghost && e.helper && e.helper.get(0).removeChild(e.ghost.get(0));
            },
        }),
        t.ui.plugin.add("resizable", "grid", {
            resize: function () {
                var e,
                    i = t(this).resizable("instance"),
                    s = i.options,
                    n = i.size,
                    o = i.originalSize,
                    a = i.originalPosition,
                    r = i.axis,
                    l = "number" == typeof s.grid ? [s.grid, s.grid] : s.grid,
                    h = l[0] || 1,
                    c = l[1] || 1,
                    u = Math.round((n.width - o.width) / h) * h,
                    d = Math.round((n.height - o.height) / c) * c,
                    p = o.width + u,
                    f = o.height + d,
                    g = s.maxWidth && p > s.maxWidth,
                    m = s.maxHeight && f > s.maxHeight,
                    _ = s.minWidth && s.minWidth > p,
                    v = s.minHeight && s.minHeight > f;
                (s.grid = l),
                    _ && (p += h),
                    v && (f += c),
                    g && (p -= h),
                    m && (f -= c),
                    /^(se|s|e)$/.test(r)
                        ? ((i.size.width = p), (i.size.height = f))
                        : /^(ne)$/.test(r)
                        ? ((i.size.width = p), (i.size.height = f), (i.position.top = a.top - d))
                        : /^(sw)$/.test(r)
                        ? ((i.size.width = p), (i.size.height = f), (i.position.left = a.left - u))
                        : ((0 >= f - c || 0 >= p - h) && (e = i._getPaddingPlusBorderDimensions(this)),
                          f - c > 0 ? ((i.size.height = f), (i.position.top = a.top - d)) : ((f = c - e.height), (i.size.height = f), (i.position.top = a.top + o.height - f)),
                          p - h > 0 ? ((i.size.width = p), (i.position.left = a.left - u)) : ((p = h - e.width), (i.size.width = p), (i.position.left = a.left + o.width - p)));
            },
        }),
        t.ui.resizable,
        t.widget("ui.selectable", t.ui.mouse, {
            version: "1.12.1",
            options: { appendTo: "body", autoRefresh: !0, distance: 0, filter: "*", tolerance: "touch", selected: null, selecting: null, start: null, stop: null, unselected: null, unselecting: null },
            _create: function () {
                var e = this;
                this._addClass("ui-selectable"),
                    (this.dragged = !1),
                    (this.refresh = function () {
                        (e.elementPos = t(e.element[0]).offset()),
                            (e.selectees = t(e.options.filter, e.element[0])),
                            e._addClass(e.selectees, "ui-selectee"),
                            e.selectees.each(function () {
                                var i = t(this),
                                    s = i.offset(),
                                    n = { left: s.left - e.elementPos.left, top: s.top - e.elementPos.top };
                                t.data(this, "selectable-item", {
                                    element: this,
                                    $element: i,
                                    left: n.left,
                                    top: n.top,
                                    right: n.left + i.outerWidth(),
                                    bottom: n.top + i.outerHeight(),
                                    startselected: !1,
                                    selected: i.hasClass("ui-selected"),
                                    selecting: i.hasClass("ui-selecting"),
                                    unselecting: i.hasClass("ui-unselecting"),
                                });
                            });
                    }),
                    this.refresh(),
                    this._mouseInit(),
                    (this.helper = t("<div>")),
                    this._addClass(this.helper, "ui-selectable-helper");
            },
            _destroy: function () {
                this.selectees.removeData("selectable-item"), this._mouseDestroy();
            },
            _mouseStart: function (e) {
                var i = this,
                    s = this.options;
                (this.opos = [e.pageX, e.pageY]),
                    (this.elementPos = t(this.element[0]).offset()),
                    this.options.disabled ||
                        ((this.selectees = t(s.filter, this.element[0])),
                        this._trigger("start", e),
                        t(s.appendTo).append(this.helper),
                        this.helper.css({ left: e.pageX, top: e.pageY, width: 0, height: 0 }),
                        s.autoRefresh && this.refresh(),
                        this.selectees.filter(".ui-selected").each(function () {
                            var s = t.data(this, "selectable-item");
                            (s.startselected = !0),
                                e.metaKey ||
                                    e.ctrlKey ||
                                    (i._removeClass(s.$element, "ui-selected"), (s.selected = !1), i._addClass(s.$element, "ui-unselecting"), (s.unselecting = !0), i._trigger("unselecting", e, { unselecting: s.element }));
                        }),
                        t(e.target)
                            .parents()
                            .addBack()
                            .each(function () {
                                var s,
                                    n = t.data(this, "selectable-item");
                                return n
                                    ? ((s = (!e.metaKey && !e.ctrlKey) || !n.$element.hasClass("ui-selected")),
                                      i._removeClass(n.$element, s ? "ui-unselecting" : "ui-selected")._addClass(n.$element, s ? "ui-selecting" : "ui-unselecting"),
                                      (n.unselecting = !s),
                                      (n.selecting = s),
                                      (n.selected = s),
                                      s ? i._trigger("selecting", e, { selecting: n.element }) : i._trigger("unselecting", e, { unselecting: n.element }),
                                      !1)
                                    : void 0;
                            }));
            },
            _mouseDrag: function (e) {
                if (((this.dragged = !0), !this.options.disabled)) {
                    var i,
                        s = this,
                        n = this.options,
                        o = this.opos[0],
                        a = this.opos[1],
                        r = e.pageX,
                        l = e.pageY;
                    return (
                        o > r && ((i = r), (r = o), (o = i)),
                        a > l && ((i = l), (l = a), (a = i)),
                        this.helper.css({ left: o, top: a, width: r - o, height: l - a }),
                        this.selectees.each(function () {
                            var i = t.data(this, "selectable-item"),
                                h = !1,
                                c = {};
                            i &&
                                i.element !== s.element[0] &&
                                ((c.left = i.left + s.elementPos.left),
                                (c.right = i.right + s.elementPos.left),
                                (c.top = i.top + s.elementPos.top),
                                (c.bottom = i.bottom + s.elementPos.top),
                                "touch" === n.tolerance ? (h = !(c.left > r || o > c.right || c.top > l || a > c.bottom)) : "fit" === n.tolerance && (h = c.left > o && r > c.right && c.top > a && l > c.bottom),
                                h
                                    ? (i.selected && (s._removeClass(i.$element, "ui-selected"), (i.selected = !1)),
                                      i.unselecting && (s._removeClass(i.$element, "ui-unselecting"), (i.unselecting = !1)),
                                      i.selecting || (s._addClass(i.$element, "ui-selecting"), (i.selecting = !0), s._trigger("selecting", e, { selecting: i.element })))
                                    : (i.selecting &&
                                          ((e.metaKey || e.ctrlKey) && i.startselected
                                              ? (s._removeClass(i.$element, "ui-selecting"), (i.selecting = !1), s._addClass(i.$element, "ui-selected"), (i.selected = !0))
                                              : (s._removeClass(i.$element, "ui-selecting"),
                                                (i.selecting = !1),
                                                i.startselected && (s._addClass(i.$element, "ui-unselecting"), (i.unselecting = !0)),
                                                s._trigger("unselecting", e, { unselecting: i.element }))),
                                      i.selected &&
                                          (e.metaKey ||
                                              e.ctrlKey ||
                                              i.startselected ||
                                              (s._removeClass(i.$element, "ui-selected"), (i.selected = !1), s._addClass(i.$element, "ui-unselecting"), (i.unselecting = !0), s._trigger("unselecting", e, { unselecting: i.element })))));
                        }),
                        !1
                    );
                }
            },
            _mouseStop: function (e) {
                var i = this;
                return (
                    (this.dragged = !1),
                    t(".ui-unselecting", this.element[0]).each(function () {
                        var s = t.data(this, "selectable-item");
                        i._removeClass(s.$element, "ui-unselecting"), (s.unselecting = !1), (s.startselected = !1), i._trigger("unselected", e, { unselected: s.element });
                    }),
                    t(".ui-selecting", this.element[0]).each(function () {
                        var s = t.data(this, "selectable-item");
                        i._removeClass(s.$element, "ui-selecting")._addClass(s.$element, "ui-selected"), (s.selecting = !1), (s.selected = !0), (s.startselected = !0), i._trigger("selected", e, { selected: s.element });
                    }),
                    this._trigger("stop", e),
                    this.helper.remove(),
                    !1
                );
            },
        }),
        t.widget("ui.sortable", t.ui.mouse, {
            version: "1.12.1",
            widgetEventPrefix: "sort",
            ready: !1,
            options: {
                appendTo: "parent",
                axis: !1,
                connectWith: !1,
                containment: !1,
                cursor: "auto",
                cursorAt: !1,
                dropOnEmpty: !0,
                forcePlaceholderSize: !1,
                forceHelperSize: !1,
                grid: !1,
                handle: !1,
                helper: "original",
                items: "> *",
                opacity: !1,
                placeholder: !1,
                revert: !1,
                scroll: !0,
                scrollSensitivity: 20,
                scrollSpeed: 20,
                scope: "default",
                tolerance: "intersect",
                zIndex: 1e3,
                activate: null,
                beforeStop: null,
                change: null,
                deactivate: null,
                out: null,
                over: null,
                receive: null,
                remove: null,
                sort: null,
                start: null,
                stop: null,
                update: null,
            },
            _isOverAxis: function (t, e, i) {
                return t >= e && e + i > t;
            },
            _isFloating: function (t) {
                return /left|right/.test(t.css("float")) || /inline|table-cell/.test(t.css("display"));
            },
            _create: function () {
                (this.containerCache = {}), this._addClass("ui-sortable"), this.refresh(), (this.offset = this.element.offset()), this._mouseInit(), this._setHandleClassName(), (this.ready = !0);
            },
            _setOption: function (t, e) {
                this._super(t, e), "handle" === t && this._setHandleClassName();
            },
            _setHandleClassName: function () {
                var e = this;
                this._removeClass(this.element.find(".ui-sortable-handle"), "ui-sortable-handle"),
                    t.each(this.items, function () {
                        e._addClass(this.instance.options.handle ? this.item.find(this.instance.options.handle) : this.item, "ui-sortable-handle");
                    });
            },
            _destroy: function () {
                this._mouseDestroy();
                for (var t = this.items.length - 1; t >= 0; t--) this.items[t].item.removeData(this.widgetName + "-item");
                return this;
            },
            _mouseCapture: function (e, i) {
                var s = null,
                    n = !1,
                    o = this;
                return this.reverting
                    ? !1
                    : this.options.disabled || "static" === this.options.type
                    ? !1
                    : (this._refreshItems(e),
                      t(e.target)
                          .parents()
                          .each(function () {
                              return t.data(this, o.widgetName + "-item") === o ? ((s = t(this)), !1) : void 0;
                          }),
                      t.data(e.target, o.widgetName + "-item") === o && (s = t(e.target)),
                      s
                          ? !this.options.handle ||
                            i ||
                            (t(this.options.handle, s)
                                .find("*")
                                .addBack()
                                .each(function () {
                                    this === e.target && (n = !0);
                                }),
                            n)
                              ? ((this.currentItem = s), this._removeCurrentsFromItems(), !0)
                              : !1
                          : !1);
            },
            _mouseStart: function (e, i, s) {
                var n,
                    o,
                    a = this.options;
                if (
                    ((this.currentContainer = this),
                    this.refreshPositions(),
                    (this.helper = this._createHelper(e)),
                    this._cacheHelperProportions(),
                    this._cacheMargins(),
                    (this.scrollParent = this.helper.scrollParent()),
                    (this.offset = this.currentItem.offset()),
                    (this.offset = { top: this.offset.top - this.margins.top, left: this.offset.left - this.margins.left }),
                    t.extend(this.offset, { click: { left: e.pageX - this.offset.left, top: e.pageY - this.offset.top }, parent: this._getParentOffset(), relative: this._getRelativeOffset() }),
                    this.helper.css("position", "absolute"),
                    (this.cssPosition = this.helper.css("position")),
                    (this.originalPosition = this._generatePosition(e)),
                    (this.originalPageX = e.pageX),
                    (this.originalPageY = e.pageY),
                    a.cursorAt && this._adjustOffsetFromHelper(a.cursorAt),
                    (this.domPosition = { prev: this.currentItem.prev()[0], parent: this.currentItem.parent()[0] }),
                    this.helper[0] !== this.currentItem[0] && this.currentItem.hide(),
                    this._createPlaceholder(),
                    a.containment && this._setContainment(),
                    a.cursor &&
                        "auto" !== a.cursor &&
                        ((o = this.document.find("body")), (this.storedCursor = o.css("cursor")), o.css("cursor", a.cursor), (this.storedStylesheet = t("<style>*{ cursor: " + a.cursor + " !important; }</style>").appendTo(o))),
                    a.opacity && (this.helper.css("opacity") && (this._storedOpacity = this.helper.css("opacity")), this.helper.css("opacity", a.opacity)),
                    a.zIndex && (this.helper.css("zIndex") && (this._storedZIndex = this.helper.css("zIndex")), this.helper.css("zIndex", a.zIndex)),
                    this.scrollParent[0] !== this.document[0] && "HTML" !== this.scrollParent[0].tagName && (this.overflowOffset = this.scrollParent.offset()),
                    this._trigger("start", e, this._uiHash()),
                    this._preserveHelperProportions || this._cacheHelperProportions(),
                    !s)
                )
                    for (n = this.containers.length - 1; n >= 0; n--) this.containers[n]._trigger("activate", e, this._uiHash(this));
                return (
                    t.ui.ddmanager && (t.ui.ddmanager.current = this),
                    t.ui.ddmanager && !a.dropBehaviour && t.ui.ddmanager.prepareOffsets(this, e),
                    (this.dragging = !0),
                    this._addClass(this.helper, "ui-sortable-helper"),
                    this._mouseDrag(e),
                    !0
                );
            },
            _mouseDrag: function (e) {
                var i,
                    s,
                    n,
                    o,
                    a = this.options,
                    r = !1;
                for (
                    this.position = this._generatePosition(e),
                        this.positionAbs = this._convertPositionTo("absolute"),
                        this.lastPositionAbs || (this.lastPositionAbs = this.positionAbs),
                        this.options.scroll &&
                            (this.scrollParent[0] !== this.document[0] && "HTML" !== this.scrollParent[0].tagName
                                ? (this.overflowOffset.top + this.scrollParent[0].offsetHeight - e.pageY < a.scrollSensitivity
                                      ? (this.scrollParent[0].scrollTop = r = this.scrollParent[0].scrollTop + a.scrollSpeed)
                                      : e.pageY - this.overflowOffset.top < a.scrollSensitivity && (this.scrollParent[0].scrollTop = r = this.scrollParent[0].scrollTop - a.scrollSpeed),
                                  this.overflowOffset.left + this.scrollParent[0].offsetWidth - e.pageX < a.scrollSensitivity
                                      ? (this.scrollParent[0].scrollLeft = r = this.scrollParent[0].scrollLeft + a.scrollSpeed)
                                      : e.pageX - this.overflowOffset.left < a.scrollSensitivity && (this.scrollParent[0].scrollLeft = r = this.scrollParent[0].scrollLeft - a.scrollSpeed))
                                : (e.pageY - this.document.scrollTop() < a.scrollSensitivity
                                      ? (r = this.document.scrollTop(this.document.scrollTop() - a.scrollSpeed))
                                      : this.window.height() - (e.pageY - this.document.scrollTop()) < a.scrollSensitivity && (r = this.document.scrollTop(this.document.scrollTop() + a.scrollSpeed)),
                                  e.pageX - this.document.scrollLeft() < a.scrollSensitivity
                                      ? (r = this.document.scrollLeft(this.document.scrollLeft() - a.scrollSpeed))
                                      : this.window.width() - (e.pageX - this.document.scrollLeft()) < a.scrollSensitivity && (r = this.document.scrollLeft(this.document.scrollLeft() + a.scrollSpeed))),
                            r !== !1 && t.ui.ddmanager && !a.dropBehaviour && t.ui.ddmanager.prepareOffsets(this, e)),
                        this.positionAbs = this._convertPositionTo("absolute"),
                        (this.options.axis && "y" === this.options.axis) || (this.helper[0].style.left = this.position.left + "px"),
                        (this.options.axis && "x" === this.options.axis) || (this.helper[0].style.top = this.position.top + "px"),
                        i = this.items.length - 1;
                    i >= 0;
                    i--
                )
                    if (
                        ((s = this.items[i]),
                        (n = s.item[0]),
                        (o = this._intersectsWithPointer(s)),
                        o &&
                            s.instance === this.currentContainer &&
                            n !== this.currentItem[0] &&
                            this.placeholder[1 === o ? "next" : "prev"]()[0] !== n &&
                            !t.contains(this.placeholder[0], n) &&
                            ("semi-dynamic" === this.options.type ? !t.contains(this.element[0], n) : !0))
                    ) {
                        if (((this.direction = 1 === o ? "down" : "up"), "pointer" !== this.options.tolerance && !this._intersectsWithSides(s))) break;
                        this._rearrange(e, s), this._trigger("change", e, this._uiHash());
                        break;
                    }
                return this._contactContainers(e), t.ui.ddmanager && t.ui.ddmanager.drag(this, e), this._trigger("sort", e, this._uiHash()), (this.lastPositionAbs = this.positionAbs), !1;
            },
            _mouseStop: function (e, i) {
                if (e) {
                    if ((t.ui.ddmanager && !this.options.dropBehaviour && t.ui.ddmanager.drop(this, e), this.options.revert)) {
                        var s = this,
                            n = this.placeholder.offset(),
                            o = this.options.axis,
                            a = {};
                        (o && "x" !== o) || (a.left = n.left - this.offset.parent.left - this.margins.left + (this.offsetParent[0] === this.document[0].body ? 0 : this.offsetParent[0].scrollLeft)),
                            (o && "y" !== o) || (a.top = n.top - this.offset.parent.top - this.margins.top + (this.offsetParent[0] === this.document[0].body ? 0 : this.offsetParent[0].scrollTop)),
                            (this.reverting = !0),
                            t(this.helper).animate(a, parseInt(this.options.revert, 10) || 500, function () {
                                s._clear(e);
                            });
                    } else this._clear(e, i);
                    return !1;
                }
            },
            cancel: function () {
                if (this.dragging) {
                    this._mouseUp(new t.Event("mouseup", { target: null })), "original" === this.options.helper ? (this.currentItem.css(this._storedCSS), this._removeClass(this.currentItem, "ui-sortable-helper")) : this.currentItem.show();
                    for (var e = this.containers.length - 1; e >= 0; e--)
                        this.containers[e]._trigger("deactivate", null, this._uiHash(this)),
                            this.containers[e].containerCache.over && (this.containers[e]._trigger("out", null, this._uiHash(this)), (this.containers[e].containerCache.over = 0));
                }
                return (
                    this.placeholder &&
                        (this.placeholder[0].parentNode && this.placeholder[0].parentNode.removeChild(this.placeholder[0]),
                        "original" !== this.options.helper && this.helper && this.helper[0].parentNode && this.helper.remove(),
                        t.extend(this, { helper: null, dragging: !1, reverting: !1, _noFinalSort: null }),
                        this.domPosition.prev ? t(this.domPosition.prev).after(this.currentItem) : t(this.domPosition.parent).prepend(this.currentItem)),
                    this
                );
            },
            serialize: function (e) {
                var i = this._getItemsAsjQuery(e && e.connected),
                    s = [];
                return (
                    (e = e || {}),
                    t(i).each(function () {
                        var i = (t(e.item || this).attr(e.attribute || "id") || "").match(e.expression || /(.+)[\-=_](.+)/);
                        i && s.push((e.key || i[1] + "[]") + "=" + (e.key && e.expression ? i[1] : i[2]));
                    }),
                    !s.length && e.key && s.push(e.key + "="),
                    s.join("&")
                );
            },
            toArray: function (e) {
                var i = this._getItemsAsjQuery(e && e.connected),
                    s = [];
                return (
                    (e = e || {}),
                    i.each(function () {
                        s.push(t(e.item || this).attr(e.attribute || "id") || "");
                    }),
                    s
                );
            },
            _intersectsWith: function (t) {
                var e = this.positionAbs.left,
                    i = e + this.helperProportions.width,
                    s = this.positionAbs.top,
                    n = s + this.helperProportions.height,
                    o = t.left,
                    a = o + t.width,
                    r = t.top,
                    l = r + t.height,
                    h = this.offset.click.top,
                    c = this.offset.click.left,
                    u = "x" === this.options.axis || (s + h > r && l > s + h),
                    d = "y" === this.options.axis || (e + c > o && a > e + c),
                    p = u && d;
                return "pointer" === this.options.tolerance ||
                    this.options.forcePointerForContainers ||
                    ("pointer" !== this.options.tolerance && this.helperProportions[this.floating ? "width" : "height"] > t[this.floating ? "width" : "height"])
                    ? p
                    : e + this.helperProportions.width / 2 > o && a > i - this.helperProportions.width / 2 && s + this.helperProportions.height / 2 > r && l > n - this.helperProportions.height / 2;
            },
            _intersectsWithPointer: function (t) {
                var e,
                    i,
                    s = "x" === this.options.axis || this._isOverAxis(this.positionAbs.top + this.offset.click.top, t.top, t.height),
                    n = "y" === this.options.axis || this._isOverAxis(this.positionAbs.left + this.offset.click.left, t.left, t.width),
                    o = s && n;
                return o ? ((e = this._getDragVerticalDirection()), (i = this._getDragHorizontalDirection()), this.floating ? ("right" === i || "down" === e ? 2 : 1) : e && ("down" === e ? 2 : 1)) : !1;
            },
            _intersectsWithSides: function (t) {
                var e = this._isOverAxis(this.positionAbs.top + this.offset.click.top, t.top + t.height / 2, t.height),
                    i = this._isOverAxis(this.positionAbs.left + this.offset.click.left, t.left + t.width / 2, t.width),
                    s = this._getDragVerticalDirection(),
                    n = this._getDragHorizontalDirection();
                return this.floating && n ? ("right" === n && i) || ("left" === n && !i) : s && (("down" === s && e) || ("up" === s && !e));
            },
            _getDragVerticalDirection: function () {
                var t = this.positionAbs.top - this.lastPositionAbs.top;
                return 0 !== t && (t > 0 ? "down" : "up");
            },
            _getDragHorizontalDirection: function () {
                var t = this.positionAbs.left - this.lastPositionAbs.left;
                return 0 !== t && (t > 0 ? "right" : "left");
            },
            refresh: function (t) {
                return this._refreshItems(t), this._setHandleClassName(), this.refreshPositions(), this;
            },
            _connectWith: function () {
                var t = this.options;
                return t.connectWith.constructor === String ? [t.connectWith] : t.connectWith;
            },
            _getItemsAsjQuery: function (e) {
                function i() {
                    r.push(this);
                }
                var s,
                    n,
                    o,
                    a,
                    r = [],
                    l = [],
                    h = this._connectWith();
                if (h && e)
                    for (s = h.length - 1; s >= 0; s--)
                        for (o = t(h[s], this.document[0]), n = o.length - 1; n >= 0; n--)
                            (a = t.data(o[n], this.widgetFullName)),
                                a &&
                                    a !== this &&
                                    !a.options.disabled &&
                                    l.push([t.isFunction(a.options.items) ? a.options.items.call(a.element) : t(a.options.items, a.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), a]);
                for (
                    l.push([
                        t.isFunction(this.options.items)
                            ? this.options.items.call(this.element, null, { options: this.options, item: this.currentItem })
                            : t(this.options.items, this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),
                        this,
                    ]),
                        s = l.length - 1;
                    s >= 0;
                    s--
                )
                    l[s][0].each(i);
                return t(r);
            },
            _removeCurrentsFromItems: function () {
                var e = this.currentItem.find(":data(" + this.widgetName + "-item)");
                this.items = t.grep(this.items, function (t) {
                    for (var i = 0; e.length > i; i++) if (e[i] === t.item[0]) return !1;
                    return !0;
                });
            },
            _refreshItems: function (e) {
                (this.items = []), (this.containers = [this]);
                var i,
                    s,
                    n,
                    o,
                    a,
                    r,
                    l,
                    h,
                    c = this.items,
                    u = [[t.isFunction(this.options.items) ? this.options.items.call(this.element[0], e, { item: this.currentItem }) : t(this.options.items, this.element), this]],
                    d = this._connectWith();
                if (d && this.ready)
                    for (i = d.length - 1; i >= 0; i--)
                        for (n = t(d[i], this.document[0]), s = n.length - 1; s >= 0; s--)
                            (o = t.data(n[s], this.widgetFullName)),
                                o &&
                                    o !== this &&
                                    !o.options.disabled &&
                                    (u.push([t.isFunction(o.options.items) ? o.options.items.call(o.element[0], e, { item: this.currentItem }) : t(o.options.items, o.element), o]), this.containers.push(o));
                for (i = u.length - 1; i >= 0; i--) for (a = u[i][1], r = u[i][0], s = 0, h = r.length; h > s; s++) (l = t(r[s])), l.data(this.widgetName + "-item", a), c.push({ item: l, instance: a, width: 0, height: 0, left: 0, top: 0 });
            },
            refreshPositions: function (e) {
                (this.floating = this.items.length ? "x" === this.options.axis || this._isFloating(this.items[0].item) : !1), this.offsetParent && this.helper && (this.offset.parent = this._getParentOffset());
                var i, s, n, o;
                for (i = this.items.length - 1; i >= 0; i--)
                    (s = this.items[i]),
                        (s.instance !== this.currentContainer && this.currentContainer && s.item[0] !== this.currentItem[0]) ||
                            ((n = this.options.toleranceElement ? t(this.options.toleranceElement, s.item) : s.item), e || ((s.width = n.outerWidth()), (s.height = n.outerHeight())), (o = n.offset()), (s.left = o.left), (s.top = o.top));
                if (this.options.custom && this.options.custom.refreshContainers) this.options.custom.refreshContainers.call(this);
                else
                    for (i = this.containers.length - 1; i >= 0; i--)
                        (o = this.containers[i].element.offset()),
                            (this.containers[i].containerCache.left = o.left),
                            (this.containers[i].containerCache.top = o.top),
                            (this.containers[i].containerCache.width = this.containers[i].element.outerWidth()),
                            (this.containers[i].containerCache.height = this.containers[i].element.outerHeight());
                return this;
            },
            _createPlaceholder: function (e) {
                e = e || this;
                var i,
                    s = e.options;
                (s.placeholder && s.placeholder.constructor !== String) ||
                    ((i = s.placeholder),
                    (s.placeholder = {
                        element: function () {
                            var s = e.currentItem[0].nodeName.toLowerCase(),
                                n = t("<" + s + ">", e.document[0]);
                            return (
                                e._addClass(n, "ui-sortable-placeholder", i || e.currentItem[0].className)._removeClass(n, "ui-sortable-helper"),
                                "tbody" === s
                                    ? e._createTrPlaceholder(e.currentItem.find("tr").eq(0), t("<tr>", e.document[0]).appendTo(n))
                                    : "tr" === s
                                    ? e._createTrPlaceholder(e.currentItem, n)
                                    : "img" === s && n.attr("src", e.currentItem.attr("src")),
                                i || n.css("visibility", "hidden"),
                                n
                            );
                        },
                        update: function (t, n) {
                            (!i || s.forcePlaceholderSize) &&
                                (n.height() || n.height(e.currentItem.innerHeight() - parseInt(e.currentItem.css("paddingTop") || 0, 10) - parseInt(e.currentItem.css("paddingBottom") || 0, 10)),
                                n.width() || n.width(e.currentItem.innerWidth() - parseInt(e.currentItem.css("paddingLeft") || 0, 10) - parseInt(e.currentItem.css("paddingRight") || 0, 10)));
                        },
                    })),
                    (e.placeholder = t(s.placeholder.element.call(e.element, e.currentItem))),
                    e.currentItem.after(e.placeholder),
                    s.placeholder.update(e, e.placeholder);
            },
            _createTrPlaceholder: function (e, i) {
                var s = this;
                e.children().each(function () {
                    t("<td>&#160;</td>", s.document[0])
                        .attr("colspan", t(this).attr("colspan") || 1)
                        .appendTo(i);
                });
            },
            _contactContainers: function (e) {
                var i,
                    s,
                    n,
                    o,
                    a,
                    r,
                    l,
                    h,
                    c,
                    u,
                    d = null,
                    p = null;
                for (i = this.containers.length - 1; i >= 0; i--)
                    if (!t.contains(this.currentItem[0], this.containers[i].element[0]))
                        if (this._intersectsWith(this.containers[i].containerCache)) {
                            if (d && t.contains(this.containers[i].element[0], d.element[0])) continue;
                            (d = this.containers[i]), (p = i);
                        } else this.containers[i].containerCache.over && (this.containers[i]._trigger("out", e, this._uiHash(this)), (this.containers[i].containerCache.over = 0));
                if (d)
                    if (1 === this.containers.length) this.containers[p].containerCache.over || (this.containers[p]._trigger("over", e, this._uiHash(this)), (this.containers[p].containerCache.over = 1));
                    else {
                        for (n = 1e4, o = null, c = d.floating || this._isFloating(this.currentItem), a = c ? "left" : "top", r = c ? "width" : "height", u = c ? "pageX" : "pageY", s = this.items.length - 1; s >= 0; s--)
                            t.contains(this.containers[p].element[0], this.items[s].item[0]) &&
                                this.items[s].item[0] !== this.currentItem[0] &&
                                ((l = this.items[s].item.offset()[a]), (h = !1), e[u] - l > this.items[s][r] / 2 && (h = !0), n > Math.abs(e[u] - l) && ((n = Math.abs(e[u] - l)), (o = this.items[s]), (this.direction = h ? "up" : "down")));
                        if (!o && !this.options.dropOnEmpty) return;
                        if (this.currentContainer === this.containers[p]) return this.currentContainer.containerCache.over || (this.containers[p]._trigger("over", e, this._uiHash()), (this.currentContainer.containerCache.over = 1)), void 0;
                        o ? this._rearrange(e, o, null, !0) : this._rearrange(e, null, this.containers[p].element, !0),
                            this._trigger("change", e, this._uiHash()),
                            this.containers[p]._trigger("change", e, this._uiHash(this)),
                            (this.currentContainer = this.containers[p]),
                            this.options.placeholder.update(this.currentContainer, this.placeholder),
                            this.containers[p]._trigger("over", e, this._uiHash(this)),
                            (this.containers[p].containerCache.over = 1);
                    }
            },
            _createHelper: function (e) {
                var i = this.options,
                    s = t.isFunction(i.helper) ? t(i.helper.apply(this.element[0], [e, this.currentItem])) : "clone" === i.helper ? this.currentItem.clone() : this.currentItem;
                return (
                    s.parents("body").length || t("parent" !== i.appendTo ? i.appendTo : this.currentItem[0].parentNode)[0].appendChild(s[0]),
                    s[0] === this.currentItem[0] &&
                        (this._storedCSS = {
                            width: this.currentItem[0].style.width,
                            height: this.currentItem[0].style.height,
                            position: this.currentItem.css("position"),
                            top: this.currentItem.css("top"),
                            left: this.currentItem.css("left"),
                        }),
                    (!s[0].style.width || i.forceHelperSize) && s.width(this.currentItem.width()),
                    (!s[0].style.height || i.forceHelperSize) && s.height(this.currentItem.height()),
                    s
                );
            },
            _adjustOffsetFromHelper: function (e) {
                "string" == typeof e && (e = e.split(" ")),
                    t.isArray(e) && (e = { left: +e[0], top: +e[1] || 0 }),
                    "left" in e && (this.offset.click.left = e.left + this.margins.left),
                    "right" in e && (this.offset.click.left = this.helperProportions.width - e.right + this.margins.left),
                    "top" in e && (this.offset.click.top = e.top + this.margins.top),
                    "bottom" in e && (this.offset.click.top = this.helperProportions.height - e.bottom + this.margins.top);
            },
            _getParentOffset: function () {
                this.offsetParent = this.helper.offsetParent();
                var e = this.offsetParent.offset();
                return (
                    "absolute" === this.cssPosition &&
                        this.scrollParent[0] !== this.document[0] &&
                        t.contains(this.scrollParent[0], this.offsetParent[0]) &&
                        ((e.left += this.scrollParent.scrollLeft()), (e.top += this.scrollParent.scrollTop())),
                    (this.offsetParent[0] === this.document[0].body || (this.offsetParent[0].tagName && "html" === this.offsetParent[0].tagName.toLowerCase() && t.ui.ie)) && (e = { top: 0, left: 0 }),
                    { top: e.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0), left: e.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0) }
                );
            },
            _getRelativeOffset: function () {
                if ("relative" === this.cssPosition) {
                    var t = this.currentItem.position();
                    return { top: t.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(), left: t.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft() };
                }
                return { top: 0, left: 0 };
            },
            _cacheMargins: function () {
                this.margins = { left: parseInt(this.currentItem.css("marginLeft"), 10) || 0, top: parseInt(this.currentItem.css("marginTop"), 10) || 0 };
            },
            _cacheHelperProportions: function () {
                this.helperProportions = { width: this.helper.outerWidth(), height: this.helper.outerHeight() };
            },
            _setContainment: function () {
                var e,
                    i,
                    s,
                    n = this.options;
                "parent" === n.containment && (n.containment = this.helper[0].parentNode),
                    ("document" === n.containment || "window" === n.containment) &&
                        (this.containment = [
                            0 - this.offset.relative.left - this.offset.parent.left,
                            0 - this.offset.relative.top - this.offset.parent.top,
                            "document" === n.containment ? this.document.width() : this.window.width() - this.helperProportions.width - this.margins.left,
                            ("document" === n.containment ? this.document.height() || document.body.parentNode.scrollHeight : this.window.height() || this.document[0].body.parentNode.scrollHeight) -
                                this.helperProportions.height -
                                this.margins.top,
                        ]),
                    /^(document|window|parent)$/.test(n.containment) ||
                        ((e = t(n.containment)[0]),
                        (i = t(n.containment).offset()),
                        (s = "hidden" !== t(e).css("overflow")),
                        (this.containment = [
                            i.left + (parseInt(t(e).css("borderLeftWidth"), 10) || 0) + (parseInt(t(e).css("paddingLeft"), 10) || 0) - this.margins.left,
                            i.top + (parseInt(t(e).css("borderTopWidth"), 10) || 0) + (parseInt(t(e).css("paddingTop"), 10) || 0) - this.margins.top,
                            i.left +
                                (s ? Math.max(e.scrollWidth, e.offsetWidth) : e.offsetWidth) -
                                (parseInt(t(e).css("borderLeftWidth"), 10) || 0) -
                                (parseInt(t(e).css("paddingRight"), 10) || 0) -
                                this.helperProportions.width -
                                this.margins.left,
                            i.top +
                                (s ? Math.max(e.scrollHeight, e.offsetHeight) : e.offsetHeight) -
                                (parseInt(t(e).css("borderTopWidth"), 10) || 0) -
                                (parseInt(t(e).css("paddingBottom"), 10) || 0) -
                                this.helperProportions.height -
                                this.margins.top,
                        ]));
            },
            _convertPositionTo: function (e, i) {
                i || (i = this.position);
                var s = "absolute" === e ? 1 : -1,
                    n = "absolute" !== this.cssPosition || (this.scrollParent[0] !== this.document[0] && t.contains(this.scrollParent[0], this.offsetParent[0])) ? this.scrollParent : this.offsetParent,
                    o = /(html|body)/i.test(n[0].tagName);
                return {
                    top: i.top + this.offset.relative.top * s + this.offset.parent.top * s - ("fixed" === this.cssPosition ? -this.scrollParent.scrollTop() : o ? 0 : n.scrollTop()) * s,
                    left: i.left + this.offset.relative.left * s + this.offset.parent.left * s - ("fixed" === this.cssPosition ? -this.scrollParent.scrollLeft() : o ? 0 : n.scrollLeft()) * s,
                };
            },
            _generatePosition: function (e) {
                var i,
                    s,
                    n = this.options,
                    o = e.pageX,
                    a = e.pageY,
                    r = "absolute" !== this.cssPosition || (this.scrollParent[0] !== this.document[0] && t.contains(this.scrollParent[0], this.offsetParent[0])) ? this.scrollParent : this.offsetParent,
                    l = /(html|body)/i.test(r[0].tagName);
                return (
                    "relative" !== this.cssPosition || (this.scrollParent[0] !== this.document[0] && this.scrollParent[0] !== this.offsetParent[0]) || (this.offset.relative = this._getRelativeOffset()),
                    this.originalPosition &&
                        (this.containment &&
                            (e.pageX - this.offset.click.left < this.containment[0] && (o = this.containment[0] + this.offset.click.left),
                            e.pageY - this.offset.click.top < this.containment[1] && (a = this.containment[1] + this.offset.click.top),
                            e.pageX - this.offset.click.left > this.containment[2] && (o = this.containment[2] + this.offset.click.left),
                            e.pageY - this.offset.click.top > this.containment[3] && (a = this.containment[3] + this.offset.click.top)),
                        n.grid &&
                            ((i = this.originalPageY + Math.round((a - this.originalPageY) / n.grid[1]) * n.grid[1]),
                            (a = this.containment
                                ? i - this.offset.click.top >= this.containment[1] && i - this.offset.click.top <= this.containment[3]
                                    ? i
                                    : i - this.offset.click.top >= this.containment[1]
                                    ? i - n.grid[1]
                                    : i + n.grid[1]
                                : i),
                            (s = this.originalPageX + Math.round((o - this.originalPageX) / n.grid[0]) * n.grid[0]),
                            (o = this.containment
                                ? s - this.offset.click.left >= this.containment[0] && s - this.offset.click.left <= this.containment[2]
                                    ? s
                                    : s - this.offset.click.left >= this.containment[0]
                                    ? s - n.grid[0]
                                    : s + n.grid[0]
                                : s))),
                    {
                        top: a - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + ("fixed" === this.cssPosition ? -this.scrollParent.scrollTop() : l ? 0 : r.scrollTop()),
                        left: o - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + ("fixed" === this.cssPosition ? -this.scrollParent.scrollLeft() : l ? 0 : r.scrollLeft()),
                    }
                );
            },
            _rearrange: function (t, e, i, s) {
                i ? i[0].appendChild(this.placeholder[0]) : e.item[0].parentNode.insertBefore(this.placeholder[0], "down" === this.direction ? e.item[0] : e.item[0].nextSibling), (this.counter = this.counter ? ++this.counter : 1);
                var n = this.counter;
                this._delay(function () {
                    n === this.counter && this.refreshPositions(!s);
                });
            },
            _clear: function (t, e) {
                function i(t, e, i) {
                    return function (s) {
                        i._trigger(t, s, e._uiHash(e));
                    };
                }
                this.reverting = !1;
                var s,
                    n = [];
                if ((!this._noFinalSort && this.currentItem.parent().length && this.placeholder.before(this.currentItem), (this._noFinalSort = null), this.helper[0] === this.currentItem[0])) {
                    for (s in this._storedCSS) ("auto" === this._storedCSS[s] || "static" === this._storedCSS[s]) && (this._storedCSS[s] = "");
                    this.currentItem.css(this._storedCSS), this._removeClass(this.currentItem, "ui-sortable-helper");
                } else this.currentItem.show();
                for (
                    this.fromOutside &&
                        !e &&
                        n.push(function (t) {
                            this._trigger("receive", t, this._uiHash(this.fromOutside));
                        }),
                        (!this.fromOutside && this.domPosition.prev === this.currentItem.prev().not(".ui-sortable-helper")[0] && this.domPosition.parent === this.currentItem.parent()[0]) ||
                            e ||
                            n.push(function (t) {
                                this._trigger("update", t, this._uiHash());
                            }),
                        this !== this.currentContainer &&
                            (e ||
                                (n.push(function (t) {
                                    this._trigger("remove", t, this._uiHash());
                                }),
                                n.push(
                                    function (t) {
                                        return function (e) {
                                            t._trigger("receive", e, this._uiHash(this));
                                        };
                                    }.call(this, this.currentContainer)
                                ),
                                n.push(
                                    function (t) {
                                        return function (e) {
                                            t._trigger("update", e, this._uiHash(this));
                                        };
                                    }.call(this, this.currentContainer)
                                ))),
                        s = this.containers.length - 1;
                    s >= 0;
                    s--
                )
                    e || n.push(i("deactivate", this, this.containers[s])), this.containers[s].containerCache.over && (n.push(i("out", this, this.containers[s])), (this.containers[s].containerCache.over = 0));
                if (
                    (this.storedCursor && (this.document.find("body").css("cursor", this.storedCursor), this.storedStylesheet.remove()),
                    this._storedOpacity && this.helper.css("opacity", this._storedOpacity),
                    this._storedZIndex && this.helper.css("zIndex", "auto" === this._storedZIndex ? "" : this._storedZIndex),
                    (this.dragging = !1),
                    e || this._trigger("beforeStop", t, this._uiHash()),
                    this.placeholder[0].parentNode.removeChild(this.placeholder[0]),
                    this.cancelHelperRemoval || (this.helper[0] !== this.currentItem[0] && this.helper.remove(), (this.helper = null)),
                    !e)
                ) {
                    for (s = 0; n.length > s; s++) n[s].call(this, t);
                    this._trigger("stop", t, this._uiHash());
                }
                return (this.fromOutside = !1), !this.cancelHelperRemoval;
            },
            _trigger: function () {
                t.Widget.prototype._trigger.apply(this, arguments) === !1 && this.cancel();
            },
            _uiHash: function (e) {
                var i = e || this;
                return { helper: i.helper, placeholder: i.placeholder || t([]), position: i.position, originalPosition: i.originalPosition, offset: i.positionAbs, item: i.currentItem, sender: e ? e.element : null };
            },
        });
});
(function ($) {
    "use strict";
    var defaults = { topOffset: 150, hideDuration: 200, stickyClass: "is-fixed" };
    $.fn.stickyPanel = function (options) {
        if (this.length == 0) return this;
        var self = this,
            settings,
            isFixed = !1,
            stickyClass,
            animation = {
                normal: self.css("animationDuration"),
                reverse: "",
                getStyle: function (type) {
                    return { animationDirection: type, animationDuration: this[type] };
                },
            };
        function init() {
            settings = $.extend({}, defaults, options);
            animation.reverse = settings.hideDuration + "ms";
            stickyClass = settings.stickyClass;
            $(window).on("scroll", onScroll).trigger("scroll");
        }
        function onScroll() {
            if (window.pageYOffset > settings.topOffset) {
                if (!isFixed) {
                    isFixed = !0;
                    self.addClass(stickyClass).css(animation.getStyle("normal"));
                }
            } else {
                if (isFixed) {
                    isFixed = !1;
                    self.removeClass(stickyClass)
                        .each(function (index, e) {
                            void e.offsetWidth;
                        })
                        .addClass(stickyClass)
                        .css(animation.getStyle("reverse"));
                    setTimeout(function () {
                        self.removeClass(stickyClass);
                    }, settings.hideDuration);
                }
            }
        }
        init();
        return this;
    };
})(jQuery);
$(function () {
    $("#fixed").stickyPanel();
});
var resolutionIndex = 1;
var cameraDistance;
var curr = 0;
var animation;
var mobilemode = !1;
if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {
    var mobilemode = !0;
}
$(document).ready(function () {
    var innerWidth = window.innerWidth;
    if (innerWidth < 1400) {
        resolutionIndex = 1;
        cameraDistance = 690;
    } else if (innerWidth > 1366 && innerWidth <= 1920) {
        resolutionIndex = 2;
        cameraDistance = 690;
    } else {
        resolutionIndex = 3;
        cameraDistance = 1100;
    }
    if (!mobilemode && startanimation) {
        init();
    }
});
var pointsOnPicture = {};
var startPos;
function Animation() {
    this.totalDuration = duration + maxPointDelay;
    this.aEndPos = geometry.createAttribute("aEndPos", 3);
    this.aEndColor = geometry.createAttribute("aEndColor", 3);
    particlesize = 2.5;
    if (/firefox/.test(navigator.userAgent.toLowerCase()) == !0) {
        particlesize = 3.0;
    }
    var material = new THREE.BAS.PointsAnimationMaterial({
        transparent: !0,
        blending: THREE.AdditiveBlending,
        vertexColors: THREE.VertexColors,
        depthWrite: !1,
        uniforms: { uTime: { type: "f", value: 0 } },
        uniformValues: { size: particlesize * window.devicePixelRatio, sizeAttenuation: !0 },
        vertexFunctions: [THREE.BAS.ShaderChunk.ease_circ_in],
        vertexParameters: ["uniform float uTime;", "attribute vec2 aDelayDuration;", "attribute vec3 aStartPos;", "attribute vec3 aEndPos;", "attribute vec3 aEndColor;", "attribute float aStartOpacity;", "attribute float aEndOpacity;"],
        vertexInit: ["float tProgress = clamp(uTime - aDelayDuration.x, 0.0, aDelayDuration.y) / aDelayDuration.y;", "tProgress = easeCircIn(tProgress);"],
        vertexPosition: ["transformed += mix(aStartPos, aEndPos, tProgress);"],
        vertexColor: ["vColor = mix(aEndColor, aEndColor, tProgress);"],
        fragmentShape: [
            `
        float distanceToCenter = distance(gl_PointCoord, vec2(0.5));
        float pct = 1.5 - smoothstep(0.0, 0.5, distanceToCenter);
        gl_FragColor = vec4(gl_FragColor.rgb, pct * gl_FragColor.a);
        `,
        ],
    });
    THREE.Points.call(this, geometry, material);
    this.frustumCulled = !1;
}
if (startanimation) {
    Animation.prototype = Object.create(THREE.Points.prototype);
    Animation.prototype.constructor = Animation;
    Object.defineProperty(Animation.prototype, "time", {
        get: function () {
            return this.material.uniforms.uTime.value;
        },
        set: function (v) {
            this.material.uniforms.uTime.value = v;
        },
    });
    Animation.prototype.animate = function (duration, options) {
        options = options || {};
        options.time = this.totalDuration;
        return TweenMax.fromTo(this, duration, { time: 0.0 }, options);
    };
}
function init() {
    var root = new THREERoot({ createCameraControls: !0, antialias: !0, fov: 40, alpha: !0 });
    root.camera.position.set(0, 0, cameraDistance);
    animation = new Animation();
    root.add(animation);
    updateEndPoints(0);
}
function getRandomPointOnSphere(r) {
    var u = THREE.Math.randFloat(0, 1);
    var v = THREE.Math.randFloat(0, 1);
    var theta = 2 * Math.PI * u;
    var phi = Math.acos(2 * v - 1);
    var x = r * Math.sin(theta) * Math.sin(phi);
    var y = r * Math.cos(theta) * Math.sin(phi);
    var z = 1;
    return { x, y, z };
}
function getPointsOnPicture(selector) {
    var img = document.querySelector(selector);
    var width = img.width;
    var height = img.height;
    var canvas = document.createElement("canvas");
    $("#dummy-images").append(canvas);
    canvas.width = width;
    canvas.height = height;
    var ctx = canvas.getContext("2d");
    ctx.drawImage(img, 0, 0, width, height);
    width = Math.max(1, Math.floor(width));
    height = Math.max(1, Math.floor(height));
    var imgData = ctx.getImageData(0, 0, width, height);
    var points = [];
    var xStep = 2;
    var yStep = 2;
    if (/firefox/.test(navigator.userAgent.toLowerCase()) == !0) {
        var xStep = 3;
        var yStep = 3;
    }
    for (var x = 0; x < width; x += xStep) {
        for (var y = 0; y < height; y += yStep) {
            var i = (y * width + x) * 4;
            if (selector == ".img-enterpries") {
                positionpoints.push({ x: x - width / 2, y: -(y - height / 2) });
            }
            points.push({ r: imgData.data[i] / 255, g: imgData.data[i + 1] / 255, b: imgData.data[i + 2] / 255 });
        }
    }
    if (points.length) count = points.length;
    endPointsCollections[selector] = points;
    points = [];
    delete points;
}
function updateEndPoints(index) {
    var imgs = [".img-enterpries", ".img-startup", ".img-iot", ".img-blockchain", ".img-awards", ".img-globalevent"];
    endpointindex = imgs[index];
    if (typeof geometry == "undefined" || mobilemode == !0 || typeof endPointsCollections[endpointindex] == "undefined" || startanimation == !1) {
        var animateType = "fadeInRight";
        $(".top-banner-default").removeClass("active animated " + animateType);
        $(".top-banner-default.default-" + index).addClass("animated " + animateType);
        return;
    }
    var position_arr = geometry.attributes.aEndPos.array;
    var color_arr = geometry.attributes.aEndColor.array;
    var curPicPoints = endPointsCollections[endpointindex];
    for (var i = 0, i3 = 0; i < count; i++, i3 += 3) {
        if (typeof curPicPoints[i] != "undefined") {
            position_arr[i3 + 0] = positionpoints[i].x;
            position_arr[i3 + 1] = positionpoints[i].y;
            position_arr[i3 + 2] = 1;
            color_arr[i3 + 0] = curPicPoints[i].r;
            color_arr[i3 + 1] = curPicPoints[i].g;
            color_arr[i3 + 2] = curPicPoints[i].b;
        }
    }
    delete curPicPoints;
    geometry.attributes.aEndPos.needsUpdate = !0;
    geometry.attributes.aEndColor.needsUpdate = !0;
    $(".top-banner-default").removeClass("active");
    $("#three-container canvas").show();
    animation.animate(1.5, {
        repeat: 1,
        repeatDelay: 0.8,
        yoyo: !0,
        onComplete: function () {
            $(".top-banner-default.default-" + index).addClass("active");
        },
    });
}
var count = 34000;
var radius = 400;
var geometry;
var offset = radius;
var endPointsCollections = {};
var duration = 1;
var maxPointDelay = 0.3;
var positionpoints = [];
if (!mobilemode && startanimation) {
    var imgs = [".img-enterpries", ".img-startup", ".img-iot", ".img-blockchain", ".img-awards", ".img-globalevent"];
    for (var k = 0; k < 6; k++) {
        var img = document.querySelector(imgs[k]);
        if (IsImageOk(img)) {
            var points = getPointsOnPicture(imgs[k]);
        } else {
            var img2 = imgs[k];
            $(img2).on("load", function () {
                var classname = "." + $(this).attr("class").replace("img ", "").trim();
                var points = getPointsOnPicture(classname);
            });
        }
    }
    geometry = new THREE.BAS.PointBufferGeometry(count);
    geometry.createAttribute("aStartPos", 3, function (data, index, num) {
        var startVec3 = new THREE.Vector3();
        var randSphere = getRandomPointOnSphere(radius);
        startVec3.x = randSphere.x;
        startVec3.y = randSphere.y;
        startVec3.z = randSphere.z;
        startVec3.toArray(data);
    });
    geometry.createAttribute("aDelayDuration", 3, function (data, index, num) {
        data[0] = Math.random() * maxPointDelay;
        data[1] = duration;
    });
}
navigator.sayswho = (function () {
    var ua = navigator.userAgent,
        tem,
        M = ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i) || [];
    if (/trident/i.test(M[1])) {
        tem = /\brv[ :]+(\d+)/g.exec(ua) || [];
        return "IE " + (tem[1] || "");
    }
    if (M[1] === "Chrome") {
        tem = ua.match(/\b(OPR|Edge)\/(\d+)/);
        if (tem != null) return tem.slice(1).join(" ").replace("OPR", "Opera");
    }
    M = M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, "-?"];
    if ((tem = ua.match(/version\/(\d+)/i)) != null) M.splice(1, 1, tem[1]);
    return M.join(" ");
})();
function IsImageOk(img) {
    if (!img.complete) {
        return !1;
    }
    if (img.naturalWidth === 0) {
        return !1;
    }
    return !0;
}
var _gsScope = "undefined" != typeof module && module.exports && "undefined" != typeof global ? global : this || window;
(_gsScope._gsQueue || (_gsScope._gsQueue = [])).push(function () {
    "use strict";
    _gsScope._gsDefine(
        "TweenMax",
        ["core.Animation", "core.SimpleTimeline", "TweenLite"],
        function (a, b, c) {
            var d = function (a) {
                    var b,
                        c = [],
                        d = a.length;
                    for (b = 0; b !== d; c.push(a[b++]));
                    return c;
                },
                e = function (a, b, c) {
                    var d,
                        e,
                        f = a.cycle;
                    for (d in f) (e = f[d]), (a[d] = "function" == typeof e ? e(c, b[c]) : e[c % e.length]);
                    delete a.cycle;
                },
                f = function (a, b, d) {
                    c.call(this, a, b, d),
                        (this._cycle = 0),
                        (this._yoyo = this.vars.yoyo === !0 || !!this.vars.yoyoEase),
                        (this._repeat = this.vars.repeat || 0),
                        (this._repeatDelay = this.vars.repeatDelay || 0),
                        this._repeat && this._uncache(!0),
                        (this.render = f.prototype.render);
                },
                g = 1e-10,
                h = c._internals,
                i = h.isSelector,
                j = h.isArray,
                k = (f.prototype = c.to({}, 0.1, {})),
                l = [];
            (f.version = "1.20.4"),
                (k.constructor = f),
                (k.kill()._gc = !1),
                (f.killTweensOf = f.killDelayedCallsTo = c.killTweensOf),
                (f.getTweensOf = c.getTweensOf),
                (f.lagSmoothing = c.lagSmoothing),
                (f.ticker = c.ticker),
                (f.render = c.render),
                (k.invalidate = function () {
                    return (
                        (this._yoyo = this.vars.yoyo === !0 || !!this.vars.yoyoEase),
                        (this._repeat = this.vars.repeat || 0),
                        (this._repeatDelay = this.vars.repeatDelay || 0),
                        (this._yoyoEase = null),
                        this._uncache(!0),
                        c.prototype.invalidate.call(this)
                    );
                }),
                (k.updateTo = function (a, b) {
                    var d,
                        e = this.ratio,
                        f = this.vars.immediateRender || a.immediateRender;
                    b && this._startTime < this._timeline._time && ((this._startTime = this._timeline._time), this._uncache(!1), this._gc ? this._enabled(!0, !1) : this._timeline.insert(this, this._startTime - this._delay));
                    for (d in a) this.vars[d] = a[d];
                    if (this._initted || f)
                        if (b) (this._initted = !1), f && this.render(0, !0, !0);
                        else if ((this._gc && this._enabled(!0, !1), this._notifyPluginsOfEnabled && this._firstPT && c._onPluginEvent("_onDisable", this), this._time / this._duration > 0.998)) {
                            var g = this._totalTime;
                            this.render(0, !0, !1), (this._initted = !1), this.render(g, !0, !1);
                        } else if (((this._initted = !1), this._init(), this._time > 0 || f)) for (var h, i = 1 / (1 - e), j = this._firstPT; j; ) (h = j.s + j.c), (j.c *= i), (j.s = h - j.c), (j = j._next);
                    return this;
                }),
                (k.render = function (a, b, d) {
                    this._initted || (0 === this._duration && this.vars.repeat && this.invalidate());
                    var e,
                        f,
                        i,
                        j,
                        k,
                        l,
                        m,
                        n,
                        o,
                        p = this._dirty ? this.totalDuration() : this._totalDuration,
                        q = this._time,
                        r = this._totalTime,
                        s = this._cycle,
                        t = this._duration,
                        u = this._rawPrevTime;
                    if (
                        (a >= p - 1e-7 && a >= 0
                            ? ((this._totalTime = p),
                              (this._cycle = this._repeat),
                              this._yoyo && 0 !== (1 & this._cycle) ? ((this._time = 0), (this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0)) : ((this._time = t), (this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1)),
                              this._reversed || ((e = !0), (f = "onComplete"), (d = d || this._timeline.autoRemoveChildren)),
                              0 === t &&
                                  (this._initted || !this.vars.lazy || d) &&
                                  (this._startTime === this._timeline._duration && (a = 0),
                                  (0 > u || (0 >= a && a >= -1e-7) || (u === g && "isPause" !== this.data)) && u !== a && ((d = !0), u > g && (f = "onReverseComplete")),
                                  (this._rawPrevTime = n = !b || a || u === a ? a : g)))
                            : 1e-7 > a
                            ? ((this._totalTime = this._time = this._cycle = 0),
                              (this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0),
                              (0 !== r || (0 === t && u > 0)) && ((f = "onReverseComplete"), (e = this._reversed)),
                              0 > a && ((this._active = !1), 0 === t && (this._initted || !this.vars.lazy || d) && (u >= 0 && (d = !0), (this._rawPrevTime = n = !b || a || u === a ? a : g))),
                              this._initted || (d = !0))
                            : ((this._totalTime = this._time = a),
                              0 !== this._repeat &&
                                  ((j = t + this._repeatDelay),
                                  (this._cycle = (this._totalTime / j) >> 0),
                                  0 !== this._cycle && this._cycle === this._totalTime / j && a >= r && this._cycle--,
                                  (this._time = this._totalTime - this._cycle * j),
                                  this._yoyo &&
                                      0 !== (1 & this._cycle) &&
                                      ((this._time = t - this._time),
                                      (o = this._yoyoEase || this.vars.yoyoEase),
                                      o &&
                                          (this._yoyoEase ||
                                              (o !== !0 || this._initted
                                                  ? (this._yoyoEase = o = o === !0 ? this._ease : o instanceof Ease ? o : Ease.map[o])
                                                  : ((o = this.vars.ease), (this._yoyoEase = o = o ? (o instanceof Ease ? o : "function" == typeof o ? new Ease(o, this.vars.easeParams) : Ease.map[o] || c.defaultEase) : c.defaultEase))),
                                          (this.ratio = o ? 1 - o.getRatio((t - this._time) / t) : 0))),
                                  this._time > t ? (this._time = t) : this._time < 0 && (this._time = 0)),
                              this._easeType && !o
                                  ? ((k = this._time / t),
                                    (l = this._easeType),
                                    (m = this._easePower),
                                    (1 === l || (3 === l && k >= 0.5)) && (k = 1 - k),
                                    3 === l && (k *= 2),
                                    1 === m ? (k *= k) : 2 === m ? (k *= k * k) : 3 === m ? (k *= k * k * k) : 4 === m && (k *= k * k * k * k),
                                    1 === l ? (this.ratio = 1 - k) : 2 === l ? (this.ratio = k) : this._time / t < 0.5 ? (this.ratio = k / 2) : (this.ratio = 1 - k / 2))
                                  : o || (this.ratio = this._ease.getRatio(this._time / t))),
                        q === this._time && !d && s === this._cycle)
                    )
                        return void (r !== this._totalTime && this._onUpdate && (b || this._callback("onUpdate")));
                    if (!this._initted) {
                        if ((this._init(), !this._initted || this._gc)) return;
                        if (!d && this._firstPT && ((this.vars.lazy !== !1 && this._duration) || (this.vars.lazy && !this._duration)))
                            return (this._time = q), (this._totalTime = r), (this._rawPrevTime = u), (this._cycle = s), h.lazyTweens.push(this), void (this._lazy = [a, b]);
                        !this._time || e || o ? e && this._ease._calcEnd && !o && (this.ratio = this._ease.getRatio(0 === this._time ? 0 : 1)) : (this.ratio = this._ease.getRatio(this._time / t));
                    }
                    for (
                        this._lazy !== !1 && (this._lazy = !1),
                            this._active || (!this._paused && this._time !== q && a >= 0 && (this._active = !0)),
                            0 === r &&
                                (2 === this._initted && a > 0 && this._init(),
                                this._startAt && (a >= 0 ? this._startAt.render(a, !0, d) : f || (f = "_dummyGS")),
                                this.vars.onStart && (0 !== this._totalTime || 0 === t) && (b || this._callback("onStart"))),
                            i = this._firstPT;
                        i;

                    )
                        i.f ? i.t[i.p](i.c * this.ratio + i.s) : (i.t[i.p] = i.c * this.ratio + i.s), (i = i._next);
                    this._onUpdate && (0 > a && this._startAt && this._startTime && this._startAt.render(a, !0, d), b || ((this._totalTime !== r || f) && this._callback("onUpdate"))),
                        this._cycle !== s && (b || this._gc || (this.vars.onRepeat && this._callback("onRepeat"))),
                        f &&
                            (!this._gc || d) &&
                            (0 > a && this._startAt && !this._onUpdate && this._startTime && this._startAt.render(a, !0, d),
                            e && (this._timeline.autoRemoveChildren && this._enabled(!1, !1), (this._active = !1)),
                            !b && this.vars[f] && this._callback(f),
                            0 === t && this._rawPrevTime === g && n !== g && (this._rawPrevTime = 0));
                }),
                (f.to = function (a, b, c) {
                    return new f(a, b, c);
                }),
                (f.from = function (a, b, c) {
                    return (c.runBackwards = !0), (c.immediateRender = 0 != c.immediateRender), new f(a, b, c);
                }),
                (f.fromTo = function (a, b, c, d) {
                    return (d.startAt = c), (d.immediateRender = 0 != d.immediateRender && 0 != c.immediateRender), new f(a, b, d);
                }),
                (f.staggerTo = f.allTo = function (a, b, g, h, k, m, n) {
                    h = h || 0;
                    var o,
                        p,
                        q,
                        r,
                        s = 0,
                        t = [],
                        u = function () {
                            g.onComplete && g.onComplete.apply(g.onCompleteScope || this, arguments), k.apply(n || g.callbackScope || this, m || l);
                        },
                        v = g.cycle,
                        w = g.startAt && g.startAt.cycle;
                    for (j(a) || ("string" == typeof a && (a = c.selector(a) || a), i(a) && (a = d(a))), a = a || [], 0 > h && ((a = d(a)), a.reverse(), (h *= -1)), o = a.length - 1, q = 0; o >= q; q++) {
                        p = {};
                        for (r in g) p[r] = g[r];
                        if ((v && (e(p, a, q), null != p.duration && ((b = p.duration), delete p.duration)), w)) {
                            w = p.startAt = {};
                            for (r in g.startAt) w[r] = g.startAt[r];
                            e(p.startAt, a, q);
                        }
                        (p.delay = s + (p.delay || 0)), q === o && k && (p.onComplete = u), (t[q] = new f(a[q], b, p)), (s += h);
                    }
                    return t;
                }),
                (f.staggerFrom = f.allFrom = function (a, b, c, d, e, g, h) {
                    return (c.runBackwards = !0), (c.immediateRender = 0 != c.immediateRender), f.staggerTo(a, b, c, d, e, g, h);
                }),
                (f.staggerFromTo = f.allFromTo = function (a, b, c, d, e, g, h, i) {
                    return (d.startAt = c), (d.immediateRender = 0 != d.immediateRender && 0 != c.immediateRender), f.staggerTo(a, b, d, e, g, h, i);
                }),
                (f.delayedCall = function (a, b, c, d, e) {
                    return new f(b, 0, { delay: a, onComplete: b, onCompleteParams: c, callbackScope: d, onReverseComplete: b, onReverseCompleteParams: c, immediateRender: !1, useFrames: e, overwrite: 0 });
                }),
                (f.set = function (a, b) {
                    return new f(a, 0, b);
                }),
                (f.isTweening = function (a) {
                    return c.getTweensOf(a, !0).length > 0;
                });
            var m = function (a, b) {
                    for (var d = [], e = 0, f = a._first; f; ) f instanceof c ? (d[e++] = f) : (b && (d[e++] = f), (d = d.concat(m(f, b))), (e = d.length)), (f = f._next);
                    return d;
                },
                n = (f.getAllTweens = function (b) {
                    return m(a._rootTimeline, b).concat(m(a._rootFramesTimeline, b));
                });
            (f.killAll = function (a, c, d, e) {
                null == c && (c = !0), null == d && (d = !0);
                var f,
                    g,
                    h,
                    i = n(0 != e),
                    j = i.length,
                    k = c && d && e;
                for (h = 0; j > h; h++) (g = i[h]), (k || g instanceof b || ((f = g.target === g.vars.onComplete) && d) || (c && !f)) && (a ? g.totalTime(g._reversed ? 0 : g.totalDuration()) : g._enabled(!1, !1));
            }),
                (f.killChildTweensOf = function (a, b) {
                    if (null != a) {
                        var e,
                            g,
                            k,
                            l,
                            m,
                            n = h.tweenLookup;
                        if (("string" == typeof a && (a = c.selector(a) || a), i(a) && (a = d(a)), j(a))) for (l = a.length; --l > -1; ) f.killChildTweensOf(a[l], b);
                        else {
                            e = [];
                            for (k in n) for (g = n[k].target.parentNode; g; ) g === a && (e = e.concat(n[k].tweens)), (g = g.parentNode);
                            for (m = e.length, l = 0; m > l; l++) b && e[l].totalTime(e[l].totalDuration()), e[l]._enabled(!1, !1);
                        }
                    }
                });
            var o = function (a, c, d, e) {
                (c = c !== !1), (d = d !== !1), (e = e !== !1);
                for (var f, g, h = n(e), i = c && d && e, j = h.length; --j > -1; ) (g = h[j]), (i || g instanceof b || ((f = g.target === g.vars.onComplete) && d) || (c && !f)) && g.paused(a);
            };
            return (
                (f.pauseAll = function (a, b, c) {
                    o(!0, a, b, c);
                }),
                (f.resumeAll = function (a, b, c) {
                    o(!1, a, b, c);
                }),
                (f.globalTimeScale = function (b) {
                    var d = a._rootTimeline,
                        e = c.ticker.time;
                    return arguments.length
                        ? ((b = b || g),
                          (d._startTime = e - ((e - d._startTime) * d._timeScale) / b),
                          (d = a._rootFramesTimeline),
                          (e = c.ticker.frame),
                          (d._startTime = e - ((e - d._startTime) * d._timeScale) / b),
                          (d._timeScale = a._rootTimeline._timeScale = b),
                          b)
                        : d._timeScale;
                }),
                (k.progress = function (a, b) {
                    return arguments.length ? this.totalTime(this.duration() * (this._yoyo && 0 !== (1 & this._cycle) ? 1 - a : a) + this._cycle * (this._duration + this._repeatDelay), b) : this._time / this.duration();
                }),
                (k.totalProgress = function (a, b) {
                    return arguments.length ? this.totalTime(this.totalDuration() * a, b) : this._totalTime / this.totalDuration();
                }),
                (k.time = function (a, b) {
                    return arguments.length
                        ? (this._dirty && this.totalDuration(),
                          a > this._duration && (a = this._duration),
                          this._yoyo && 0 !== (1 & this._cycle) ? (a = this._duration - a + this._cycle * (this._duration + this._repeatDelay)) : 0 !== this._repeat && (a += this._cycle * (this._duration + this._repeatDelay)),
                          this.totalTime(a, b))
                        : this._time;
                }),
                (k.duration = function (b) {
                    return arguments.length ? a.prototype.duration.call(this, b) : this._duration;
                }),
                (k.totalDuration = function (a) {
                    return arguments.length
                        ? -1 === this._repeat
                            ? this
                            : this.duration((a - this._repeat * this._repeatDelay) / (this._repeat + 1))
                        : (this._dirty && ((this._totalDuration = -1 === this._repeat ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat), (this._dirty = !1)), this._totalDuration);
                }),
                (k.repeat = function (a) {
                    return arguments.length ? ((this._repeat = a), this._uncache(!0)) : this._repeat;
                }),
                (k.repeatDelay = function (a) {
                    return arguments.length ? ((this._repeatDelay = a), this._uncache(!0)) : this._repeatDelay;
                }),
                (k.yoyo = function (a) {
                    return arguments.length ? ((this._yoyo = a), this) : this._yoyo;
                }),
                f
            );
        },
        !0
    ),
        _gsScope._gsDefine(
            "TimelineLite",
            ["core.Animation", "core.SimpleTimeline", "TweenLite"],
            function (a, b, c) {
                var d = function (a) {
                        b.call(this, a),
                            (this._labels = {}),
                            (this.autoRemoveChildren = this.vars.autoRemoveChildren === !0),
                            (this.smoothChildTiming = this.vars.smoothChildTiming === !0),
                            (this._sortChildren = !0),
                            (this._onUpdate = this.vars.onUpdate);
                        var c,
                            d,
                            e = this.vars;
                        for (d in e) (c = e[d]), i(c) && -1 !== c.join("").indexOf("{self}") && (e[d] = this._swapSelfInParams(c));
                        i(e.tweens) && this.add(e.tweens, 0, e.align, e.stagger);
                    },
                    e = 1e-10,
                    f = c._internals,
                    g = (d._internals = {}),
                    h = f.isSelector,
                    i = f.isArray,
                    j = f.lazyTweens,
                    k = f.lazyRender,
                    l = _gsScope._gsDefine.globals,
                    m = function (a) {
                        var b,
                            c = {};
                        for (b in a) c[b] = a[b];
                        return c;
                    },
                    n = function (a, b, c) {
                        var d,
                            e,
                            f = a.cycle;
                        for (d in f) (e = f[d]), (a[d] = "function" == typeof e ? e(c, b[c]) : e[c % e.length]);
                        delete a.cycle;
                    },
                    o = (g.pauseCallback = function () {}),
                    p = function (a) {
                        var b,
                            c = [],
                            d = a.length;
                        for (b = 0; b !== d; c.push(a[b++]));
                        return c;
                    },
                    q = (d.prototype = new b());
                return (
                    (d.version = "1.20.4"),
                    (q.constructor = d),
                    (q.kill()._gc = q._forcingPlayhead = q._hasPause = !1),
                    (q.to = function (a, b, d, e) {
                        var f = (d.repeat && l.TweenMax) || c;
                        return b ? this.add(new f(a, b, d), e) : this.set(a, d, e);
                    }),
                    (q.from = function (a, b, d, e) {
                        return this.add(((d.repeat && l.TweenMax) || c).from(a, b, d), e);
                    }),
                    (q.fromTo = function (a, b, d, e, f) {
                        var g = (e.repeat && l.TweenMax) || c;
                        return b ? this.add(g.fromTo(a, b, d, e), f) : this.set(a, e, f);
                    }),
                    (q.staggerTo = function (a, b, e, f, g, i, j, k) {
                        var l,
                            o,
                            q = new d({ onComplete: i, onCompleteParams: j, callbackScope: k, smoothChildTiming: this.smoothChildTiming }),
                            r = e.cycle;
                        for ("string" == typeof a && (a = c.selector(a) || a), a = a || [], h(a) && (a = p(a)), f = f || 0, 0 > f && ((a = p(a)), a.reverse(), (f *= -1)), o = 0; o < a.length; o++)
                            (l = m(e)), l.startAt && ((l.startAt = m(l.startAt)), l.startAt.cycle && n(l.startAt, a, o)), r && (n(l, a, o), null != l.duration && ((b = l.duration), delete l.duration)), q.to(a[o], b, l, o * f);
                        return this.add(q, g);
                    }),
                    (q.staggerFrom = function (a, b, c, d, e, f, g, h) {
                        return (c.immediateRender = 0 != c.immediateRender), (c.runBackwards = !0), this.staggerTo(a, b, c, d, e, f, g, h);
                    }),
                    (q.staggerFromTo = function (a, b, c, d, e, f, g, h, i) {
                        return (d.startAt = c), (d.immediateRender = 0 != d.immediateRender && 0 != c.immediateRender), this.staggerTo(a, b, d, e, f, g, h, i);
                    }),
                    (q.call = function (a, b, d, e) {
                        return this.add(c.delayedCall(0, a, b, d), e);
                    }),
                    (q.set = function (a, b, d) {
                        return (d = this._parseTimeOrLabel(d, 0, !0)), null == b.immediateRender && (b.immediateRender = d === this._time && !this._paused), this.add(new c(a, 0, b), d);
                    }),
                    (d.exportRoot = function (a, b) {
                        (a = a || {}), null == a.smoothChildTiming && (a.smoothChildTiming = !0);
                        var e,
                            f,
                            g,
                            h,
                            i = new d(a),
                            j = i._timeline;
                        for (null == b && (b = !0), j._remove(i, !0), i._startTime = 0, i._rawPrevTime = i._time = i._totalTime = j._time, g = j._first; g; )
                            (h = g._next), (b && g instanceof c && g.target === g.vars.onComplete) || ((f = g._startTime - g._delay), 0 > f && (e = 1), i.add(g, f)), (g = h);
                        return j.add(i, 0), e && i.totalDuration(), i;
                    }),
                    (q.add = function (e, f, g, h) {
                        var j, k, l, m, n, o;
                        if (("number" != typeof f && (f = this._parseTimeOrLabel(f, 0, !0, e)), !(e instanceof a))) {
                            if (e instanceof Array || (e && e.push && i(e))) {
                                for (g = g || "normal", h = h || 0, j = f, k = e.length, l = 0; k > l; l++)
                                    i((m = e[l])) && (m = new d({ tweens: m })),
                                        this.add(m, j),
                                        "string" != typeof m && "function" != typeof m && ("sequence" === g ? (j = m._startTime + m.totalDuration() / m._timeScale) : "start" === g && (m._startTime -= m.delay())),
                                        (j += h);
                                return this._uncache(!0);
                            }
                            if ("string" == typeof e) return this.addLabel(e, f);
                            if ("function" != typeof e) throw "Cannot add " + e + " into the timeline; it is not a tween, timeline, function, or string.";
                            e = c.delayedCall(0, e);
                        }
                        if ((b.prototype.add.call(this, e, f), e._time && e.render((this.rawTime() - e._startTime) * e._timeScale, !1, !1), (this._gc || this._time === this._duration) && !this._paused && this._duration < this.duration()))
                            for (n = this, o = n.rawTime() > e._startTime; n._timeline; ) o && n._timeline.smoothChildTiming ? n.totalTime(n._totalTime, !0) : n._gc && n._enabled(!0, !1), (n = n._timeline);
                        return this;
                    }),
                    (q.remove = function (b) {
                        if (b instanceof a) {
                            this._remove(b, !1);
                            var c = (b._timeline = b.vars.useFrames ? a._rootFramesTimeline : a._rootTimeline);
                            return (b._startTime = (b._paused ? b._pauseTime : c._time) - (b._reversed ? b.totalDuration() - b._totalTime : b._totalTime) / b._timeScale), this;
                        }
                        if (b instanceof Array || (b && b.push && i(b))) {
                            for (var d = b.length; --d > -1; ) this.remove(b[d]);
                            return this;
                        }
                        return "string" == typeof b ? this.removeLabel(b) : this.kill(null, b);
                    }),
                    (q._remove = function (a, c) {
                        b.prototype._remove.call(this, a, c);
                        var d = this._last;
                        return d ? this._time > this.duration() && ((this._time = this._duration), (this._totalTime = this._totalDuration)) : (this._time = this._totalTime = this._duration = this._totalDuration = 0), this;
                    }),
                    (q.append = function (a, b) {
                        return this.add(a, this._parseTimeOrLabel(null, b, !0, a));
                    }),
                    (q.insert = q.insertMultiple = function (a, b, c, d) {
                        return this.add(a, b || 0, c, d);
                    }),
                    (q.appendMultiple = function (a, b, c, d) {
                        return this.add(a, this._parseTimeOrLabel(null, b, !0, a), c, d);
                    }),
                    (q.addLabel = function (a, b) {
                        return (this._labels[a] = this._parseTimeOrLabel(b)), this;
                    }),
                    (q.addPause = function (a, b, d, e) {
                        var f = c.delayedCall(0, o, d, e || this);
                        return (f.vars.onComplete = f.vars.onReverseComplete = b), (f.data = "isPause"), (this._hasPause = !0), this.add(f, a);
                    }),
                    (q.removeLabel = function (a) {
                        return delete this._labels[a], this;
                    }),
                    (q.getLabelTime = function (a) {
                        return null != this._labels[a] ? this._labels[a] : -1;
                    }),
                    (q._parseTimeOrLabel = function (b, c, d, e) {
                        var f, g;
                        if (e instanceof a && e.timeline === this) this.remove(e);
                        else if (e && (e instanceof Array || (e.push && i(e)))) for (g = e.length; --g > -1; ) e[g] instanceof a && e[g].timeline === this && this.remove(e[g]);
                        if (((f = "number" != typeof b || c ? (this.duration() > 99999999999 ? this.recent().endTime(!1) : this._duration) : 0), "string" == typeof c))
                            return this._parseTimeOrLabel(c, d && "number" == typeof b && null == this._labels[c] ? b - f : 0, d);
                        if (((c = c || 0), "string" != typeof b || (!isNaN(b) && null == this._labels[b]))) null == b && (b = f);
                        else {
                            if (((g = b.indexOf("=")), -1 === g)) return null == this._labels[b] ? (d ? (this._labels[b] = f + c) : c) : this._labels[b] + c;
                            (c = parseInt(b.charAt(g - 1) + "1", 10) * Number(b.substr(g + 1))), (b = g > 1 ? this._parseTimeOrLabel(b.substr(0, g - 1), 0, d) : f);
                        }
                        return Number(b) + c;
                    }),
                    (q.seek = function (a, b) {
                        return this.totalTime("number" == typeof a ? a : this._parseTimeOrLabel(a), b !== !1);
                    }),
                    (q.stop = function () {
                        return this.paused(!0);
                    }),
                    (q.gotoAndPlay = function (a, b) {
                        return this.play(a, b);
                    }),
                    (q.gotoAndStop = function (a, b) {
                        return this.pause(a, b);
                    }),
                    (q.render = function (a, b, c) {
                        this._gc && this._enabled(!0, !1);
                        var d,
                            f,
                            g,
                            h,
                            i,
                            l,
                            m,
                            n = this._time,
                            o = this._dirty ? this.totalDuration() : this._totalDuration,
                            p = this._startTime,
                            q = this._timeScale,
                            r = this._paused;
                        if ((n !== this._time && (a += this._time - n), a >= o - 1e-7 && a >= 0))
                            (this._totalTime = this._time = o),
                                this._reversed ||
                                    this._hasPausedChild() ||
                                    ((f = !0),
                                    (h = "onComplete"),
                                    (i = !!this._timeline.autoRemoveChildren),
                                    0 === this._duration &&
                                        ((0 >= a && a >= -1e-7) || this._rawPrevTime < 0 || this._rawPrevTime === e) &&
                                        this._rawPrevTime !== a &&
                                        this._first &&
                                        ((i = !0), this._rawPrevTime > e && (h = "onReverseComplete"))),
                                (this._rawPrevTime = this._duration || !b || a || this._rawPrevTime === a ? a : e),
                                (a = o + 1e-4);
                        else if (1e-7 > a)
                            if (
                                ((this._totalTime = this._time = 0),
                                (0 !== n || (0 === this._duration && this._rawPrevTime !== e && (this._rawPrevTime > 0 || (0 > a && this._rawPrevTime >= 0)))) && ((h = "onReverseComplete"), (f = this._reversed)),
                                0 > a)
                            )
                                (this._active = !1), this._timeline.autoRemoveChildren && this._reversed ? ((i = f = !0), (h = "onReverseComplete")) : this._rawPrevTime >= 0 && this._first && (i = !0), (this._rawPrevTime = a);
                            else {
                                if (((this._rawPrevTime = this._duration || !b || a || this._rawPrevTime === a ? a : e), 0 === a && f)) for (d = this._first; d && 0 === d._startTime; ) d._duration || (f = !1), (d = d._next);
                                (a = 0), this._initted || (i = !0);
                            }
                        else {
                            if (this._hasPause && !this._forcingPlayhead && !b) {
                                if (a >= n) for (d = this._first; d && d._startTime <= a && !l; ) d._duration || "isPause" !== d.data || d.ratio || (0 === d._startTime && 0 === this._rawPrevTime) || (l = d), (d = d._next);
                                else for (d = this._last; d && d._startTime >= a && !l; ) d._duration || ("isPause" === d.data && d._rawPrevTime > 0 && (l = d)), (d = d._prev);
                                l && ((this._time = a = l._startTime), (this._totalTime = a + this._cycle * (this._totalDuration + this._repeatDelay)));
                            }
                            this._totalTime = this._time = this._rawPrevTime = a;
                        }
                        if ((this._time !== n && this._first) || c || i || l) {
                            if (
                                (this._initted || (this._initted = !0),
                                this._active || (!this._paused && this._time !== n && a > 0 && (this._active = !0)),
                                0 === n && this.vars.onStart && ((0 === this._time && this._duration) || b || this._callback("onStart")),
                                (m = this._time),
                                m >= n)
                            )
                                for (d = this._first; d && ((g = d._next), m === this._time && (!this._paused || r)); )
                                    (d._active || (d._startTime <= m && !d._paused && !d._gc)) &&
                                        (l === d && this.pause(), d._reversed ? d.render((d._dirty ? d.totalDuration() : d._totalDuration) - (a - d._startTime) * d._timeScale, b, c) : d.render((a - d._startTime) * d._timeScale, b, c)),
                                        (d = g);
                            else
                                for (d = this._last; d && ((g = d._prev), m === this._time && (!this._paused || r)); ) {
                                    if (d._active || (d._startTime <= n && !d._paused && !d._gc)) {
                                        if (l === d) {
                                            for (l = d._prev; l && l.endTime() > this._time; ) l.render(l._reversed ? l.totalDuration() - (a - l._startTime) * l._timeScale : (a - l._startTime) * l._timeScale, b, c), (l = l._prev);
                                            (l = null), this.pause();
                                        }
                                        d._reversed ? d.render((d._dirty ? d.totalDuration() : d._totalDuration) - (a - d._startTime) * d._timeScale, b, c) : d.render((a - d._startTime) * d._timeScale, b, c);
                                    }
                                    d = g;
                                }
                            this._onUpdate && (b || (j.length && k(), this._callback("onUpdate"))),
                                h &&
                                    (this._gc ||
                                        ((p === this._startTime || q !== this._timeScale) &&
                                            (0 === this._time || o >= this.totalDuration()) &&
                                            (f && (j.length && k(), this._timeline.autoRemoveChildren && this._enabled(!1, !1), (this._active = !1)), !b && this.vars[h] && this._callback(h))));
                        }
                    }),
                    (q._hasPausedChild = function () {
                        for (var a = this._first; a; ) {
                            if (a._paused || (a instanceof d && a._hasPausedChild())) return !0;
                            a = a._next;
                        }
                        return !1;
                    }),
                    (q.getChildren = function (a, b, d, e) {
                        e = e || -9999999999;
                        for (var f = [], g = this._first, h = 0; g; )
                            g._startTime < e || (g instanceof c ? b !== !1 && (f[h++] = g) : (d !== !1 && (f[h++] = g), a !== !1 && ((f = f.concat(g.getChildren(!0, b, d))), (h = f.length)))), (g = g._next);
                        return f;
                    }),
                    (q.getTweensOf = function (a, b) {
                        var d,
                            e,
                            f = this._gc,
                            g = [],
                            h = 0;
                        for (f && this._enabled(!0, !0), d = c.getTweensOf(a), e = d.length; --e > -1; ) (d[e].timeline === this || (b && this._contains(d[e]))) && (g[h++] = d[e]);
                        return f && this._enabled(!1, !0), g;
                    }),
                    (q.recent = function () {
                        return this._recent;
                    }),
                    (q._contains = function (a) {
                        for (var b = a.timeline; b; ) {
                            if (b === this) return !0;
                            b = b.timeline;
                        }
                        return !1;
                    }),
                    (q.shiftChildren = function (a, b, c) {
                        c = c || 0;
                        for (var d, e = this._first, f = this._labels; e; ) e._startTime >= c && (e._startTime += a), (e = e._next);
                        if (b) for (d in f) f[d] >= c && (f[d] += a);
                        return this._uncache(!0);
                    }),
                    (q._kill = function (a, b) {
                        if (!a && !b) return this._enabled(!1, !1);
                        for (var c = b ? this.getTweensOf(b) : this.getChildren(!0, !0, !1), d = c.length, e = !1; --d > -1; ) c[d]._kill(a, b) && (e = !0);
                        return e;
                    }),
                    (q.clear = function (a) {
                        var b = this.getChildren(!1, !0, !0),
                            c = b.length;
                        for (this._time = this._totalTime = 0; --c > -1; ) b[c]._enabled(!1, !1);
                        return a !== !1 && (this._labels = {}), this._uncache(!0);
                    }),
                    (q.invalidate = function () {
                        for (var b = this._first; b; ) b.invalidate(), (b = b._next);
                        return a.prototype.invalidate.call(this);
                    }),
                    (q._enabled = function (a, c) {
                        if (a === this._gc) for (var d = this._first; d; ) d._enabled(a, !0), (d = d._next);
                        return b.prototype._enabled.call(this, a, c);
                    }),
                    (q.totalTime = function (b, c, d) {
                        this._forcingPlayhead = !0;
                        var e = a.prototype.totalTime.apply(this, arguments);
                        return (this._forcingPlayhead = !1), e;
                    }),
                    (q.duration = function (a) {
                        return arguments.length ? (0 !== this.duration() && 0 !== a && this.timeScale(this._duration / a), this) : (this._dirty && this.totalDuration(), this._duration);
                    }),
                    (q.totalDuration = function (a) {
                        if (!arguments.length) {
                            if (this._dirty) {
                                for (var b, c, d = 0, e = this._last, f = 999999999999; e; )
                                    (b = e._prev),
                                        e._dirty && e.totalDuration(),
                                        e._startTime > f && this._sortChildren && !e._paused && !this._calculatingDuration
                                            ? ((this._calculatingDuration = 1), this.add(e, e._startTime - e._delay), (this._calculatingDuration = 0))
                                            : (f = e._startTime),
                                        e._startTime < 0 &&
                                            !e._paused &&
                                            ((d -= e._startTime),
                                            this._timeline.smoothChildTiming && ((this._startTime += e._startTime / this._timeScale), (this._time -= e._startTime), (this._totalTime -= e._startTime), (this._rawPrevTime -= e._startTime)),
                                            this.shiftChildren(-e._startTime, !1, -9999999999),
                                            (f = 0)),
                                        (c = e._startTime + e._totalDuration / e._timeScale),
                                        c > d && (d = c),
                                        (e = b);
                                (this._duration = this._totalDuration = d), (this._dirty = !1);
                            }
                            return this._totalDuration;
                        }
                        return a && this.totalDuration() ? this.timeScale(this._totalDuration / a) : this;
                    }),
                    (q.paused = function (b) {
                        if (!b) for (var c = this._first, d = this._time; c; ) c._startTime === d && "isPause" === c.data && (c._rawPrevTime = 0), (c = c._next);
                        return a.prototype.paused.apply(this, arguments);
                    }),
                    (q.usesFrames = function () {
                        for (var b = this._timeline; b._timeline; ) b = b._timeline;
                        return b === a._rootFramesTimeline;
                    }),
                    (q.rawTime = function (a) {
                        return a && (this._paused || (this._repeat && this.time() > 0 && this.totalProgress() < 1))
                            ? this._totalTime % (this._duration + this._repeatDelay)
                            : this._paused
                            ? this._totalTime
                            : (this._timeline.rawTime(a) - this._startTime) * this._timeScale;
                    }),
                    d
                );
            },
            !0
        ),
        _gsScope._gsDefine(
            "TimelineMax",
            ["TimelineLite", "TweenLite", "easing.Ease"],
            function (a, b, c) {
                var d = function (b) {
                        a.call(this, b), (this._repeat = this.vars.repeat || 0), (this._repeatDelay = this.vars.repeatDelay || 0), (this._cycle = 0), (this._yoyo = this.vars.yoyo === !0), (this._dirty = !0);
                    },
                    e = 1e-10,
                    f = b._internals,
                    g = f.lazyTweens,
                    h = f.lazyRender,
                    i = _gsScope._gsDefine.globals,
                    j = new c(null, null, 1, 0),
                    k = (d.prototype = new a());
                return (
                    (k.constructor = d),
                    (k.kill()._gc = !1),
                    (d.version = "1.20.4"),
                    (k.invalidate = function () {
                        return (this._yoyo = this.vars.yoyo === !0), (this._repeat = this.vars.repeat || 0), (this._repeatDelay = this.vars.repeatDelay || 0), this._uncache(!0), a.prototype.invalidate.call(this);
                    }),
                    (k.addCallback = function (a, c, d, e) {
                        return this.add(b.delayedCall(0, a, d, e), c);
                    }),
                    (k.removeCallback = function (a, b) {
                        if (a)
                            if (null == b) this._kill(null, a);
                            else for (var c = this.getTweensOf(a, !1), d = c.length, e = this._parseTimeOrLabel(b); --d > -1; ) c[d]._startTime === e && c[d]._enabled(!1, !1);
                        return this;
                    }),
                    (k.removePause = function (b) {
                        return this.removeCallback(a._internals.pauseCallback, b);
                    }),
                    (k.tweenTo = function (a, c) {
                        c = c || {};
                        var d,
                            e,
                            f,
                            g = { ease: j, useFrames: this.usesFrames(), immediateRender: !1, lazy: !1 },
                            h = (c.repeat && i.TweenMax) || b;
                        for (e in c) g[e] = c[e];
                        return (
                            (g.time = this._parseTimeOrLabel(a)),
                            (d = Math.abs(Number(g.time) - this._time) / this._timeScale || 0.001),
                            (f = new h(this, d, g)),
                            (g.onStart = function () {
                                f.target.paused(!0),
                                    f.vars.time === f.target.time() || d !== f.duration() || f.isFromTo || f.duration(Math.abs(f.vars.time - f.target.time()) / f.target._timeScale).render(f.time(), !0, !0),
                                    c.onStart && c.onStart.apply(c.onStartScope || c.callbackScope || f, c.onStartParams || []);
                            }),
                            f
                        );
                    }),
                    (k.tweenFromTo = function (a, b, c) {
                        (c = c || {}), (a = this._parseTimeOrLabel(a)), (c.startAt = { onComplete: this.seek, onCompleteParams: [a], callbackScope: this }), (c.immediateRender = c.immediateRender !== !1);
                        var d = this.tweenTo(b, c);
                        return (d.isFromTo = 1), d.duration(Math.abs(d.vars.time - a) / this._timeScale || 0.001);
                    }),
                    (k.render = function (a, b, c) {
                        this._gc && this._enabled(!0, !1);
                        var d,
                            f,
                            i,
                            j,
                            k,
                            l,
                            m,
                            n,
                            o = this._time,
                            p = this._dirty ? this.totalDuration() : this._totalDuration,
                            q = this._duration,
                            r = this._totalTime,
                            s = this._startTime,
                            t = this._timeScale,
                            u = this._rawPrevTime,
                            v = this._paused,
                            w = this._cycle;
                        if ((o !== this._time && (a += this._time - o), a >= p - 1e-7 && a >= 0))
                            this._locked || ((this._totalTime = p), (this._cycle = this._repeat)),
                                this._reversed ||
                                    this._hasPausedChild() ||
                                    ((f = !0),
                                    (j = "onComplete"),
                                    (k = !!this._timeline.autoRemoveChildren),
                                    0 === this._duration && ((0 >= a && a >= -1e-7) || 0 > u || u === e) && u !== a && this._first && ((k = !0), u > e && (j = "onReverseComplete"))),
                                (this._rawPrevTime = this._duration || !b || a || this._rawPrevTime === a ? a : e),
                                this._yoyo && 0 !== (1 & this._cycle) ? (this._time = a = 0) : ((this._time = q), (a = q + 1e-4));
                        else if (1e-7 > a)
                            if (
                                (this._locked || (this._totalTime = this._cycle = 0),
                                (this._time = 0),
                                (0 !== o || (0 === q && u !== e && (u > 0 || (0 > a && u >= 0)) && !this._locked)) && ((j = "onReverseComplete"), (f = this._reversed)),
                                0 > a)
                            )
                                (this._active = !1), this._timeline.autoRemoveChildren && this._reversed ? ((k = f = !0), (j = "onReverseComplete")) : u >= 0 && this._first && (k = !0), (this._rawPrevTime = a);
                            else {
                                if (((this._rawPrevTime = q || !b || a || this._rawPrevTime === a ? a : e), 0 === a && f)) for (d = this._first; d && 0 === d._startTime; ) d._duration || (f = !1), (d = d._next);
                                (a = 0), this._initted || (k = !0);
                            }
                        else if (
                            (0 === q && 0 > u && (k = !0),
                            (this._time = this._rawPrevTime = a),
                            this._locked ||
                                ((this._totalTime = a),
                                0 !== this._repeat &&
                                    ((l = q + this._repeatDelay),
                                    (this._cycle = (this._totalTime / l) >> 0),
                                    0 !== this._cycle && this._cycle === this._totalTime / l && a >= r && this._cycle--,
                                    (this._time = this._totalTime - this._cycle * l),
                                    this._yoyo && 0 !== (1 & this._cycle) && (this._time = q - this._time),
                                    this._time > q ? ((this._time = q), (a = q + 1e-4)) : this._time < 0 ? (this._time = a = 0) : (a = this._time))),
                            this._hasPause && !this._forcingPlayhead && !b)
                        ) {
                            if (((a = this._time), a >= o || (this._repeat && w !== this._cycle)))
                                for (d = this._first; d && d._startTime <= a && !m; ) d._duration || "isPause" !== d.data || d.ratio || (0 === d._startTime && 0 === this._rawPrevTime) || (m = d), (d = d._next);
                            else for (d = this._last; d && d._startTime >= a && !m; ) d._duration || ("isPause" === d.data && d._rawPrevTime > 0 && (m = d)), (d = d._prev);
                            m && m._startTime < q && ((this._time = a = m._startTime), (this._totalTime = a + this._cycle * (this._totalDuration + this._repeatDelay)));
                        }
                        if (this._cycle !== w && !this._locked) {
                            var x = this._yoyo && 0 !== (1 & w),
                                y = x === (this._yoyo && 0 !== (1 & this._cycle)),
                                z = this._totalTime,
                                A = this._cycle,
                                B = this._rawPrevTime,
                                C = this._time;
                            if (
                                ((this._totalTime = w * q),
                                this._cycle < w ? (x = !x) : (this._totalTime += q),
                                (this._time = o),
                                (this._rawPrevTime = 0 === q ? u - 1e-4 : u),
                                (this._cycle = w),
                                (this._locked = !0),
                                (o = x ? 0 : q),
                                this.render(o, b, 0 === q),
                                b || this._gc || (this.vars.onRepeat && ((this._cycle = A), (this._locked = !1), this._callback("onRepeat"))),
                                o !== this._time)
                            )
                                return;
                            if ((y && ((this._cycle = w), (this._locked = !0), (o = x ? q + 1e-4 : -1e-4), this.render(o, !0, !1)), (this._locked = !1), this._paused && !v)) return;
                            (this._time = C), (this._totalTime = z), (this._cycle = A), (this._rawPrevTime = B);
                        }
                        if (!((this._time !== o && this._first) || c || k || m)) return void (r !== this._totalTime && this._onUpdate && (b || this._callback("onUpdate")));
                        if (
                            (this._initted || (this._initted = !0),
                            this._active || (!this._paused && this._totalTime !== r && a > 0 && (this._active = !0)),
                            0 === r && this.vars.onStart && ((0 === this._totalTime && this._totalDuration) || b || this._callback("onStart")),
                            (n = this._time),
                            n >= o)
                        )
                            for (d = this._first; d && ((i = d._next), n === this._time && (!this._paused || v)); )
                                (d._active || (d._startTime <= this._time && !d._paused && !d._gc)) &&
                                    (m === d && this.pause(), d._reversed ? d.render((d._dirty ? d.totalDuration() : d._totalDuration) - (a - d._startTime) * d._timeScale, b, c) : d.render((a - d._startTime) * d._timeScale, b, c)),
                                    (d = i);
                        else
                            for (d = this._last; d && ((i = d._prev), n === this._time && (!this._paused || v)); ) {
                                if (d._active || (d._startTime <= o && !d._paused && !d._gc)) {
                                    if (m === d) {
                                        for (m = d._prev; m && m.endTime() > this._time; ) m.render(m._reversed ? m.totalDuration() - (a - m._startTime) * m._timeScale : (a - m._startTime) * m._timeScale, b, c), (m = m._prev);
                                        (m = null), this.pause();
                                    }
                                    d._reversed ? d.render((d._dirty ? d.totalDuration() : d._totalDuration) - (a - d._startTime) * d._timeScale, b, c) : d.render((a - d._startTime) * d._timeScale, b, c);
                                }
                                d = i;
                            }
                        this._onUpdate && (b || (g.length && h(), this._callback("onUpdate"))),
                            j &&
                                (this._locked ||
                                    this._gc ||
                                    ((s === this._startTime || t !== this._timeScale) &&
                                        (0 === this._time || p >= this.totalDuration()) &&
                                        (f && (g.length && h(), this._timeline.autoRemoveChildren && this._enabled(!1, !1), (this._active = !1)), !b && this.vars[j] && this._callback(j))));
                    }),
                    (k.getActive = function (a, b, c) {
                        null == a && (a = !0), null == b && (b = !0), null == c && (c = !1);
                        var d,
                            e,
                            f = [],
                            g = this.getChildren(a, b, c),
                            h = 0,
                            i = g.length;
                        for (d = 0; i > d; d++) (e = g[d]), e.isActive() && (f[h++] = e);
                        return f;
                    }),
                    (k.getLabelAfter = function (a) {
                        a || (0 !== a && (a = this._time));
                        var b,
                            c = this.getLabelsArray(),
                            d = c.length;
                        for (b = 0; d > b; b++) if (c[b].time > a) return c[b].name;
                        return null;
                    }),
                    (k.getLabelBefore = function (a) {
                        null == a && (a = this._time);
                        for (var b = this.getLabelsArray(), c = b.length; --c > -1; ) if (b[c].time < a) return b[c].name;
                        return null;
                    }),
                    (k.getLabelsArray = function () {
                        var a,
                            b = [],
                            c = 0;
                        for (a in this._labels) b[c++] = { time: this._labels[a], name: a };
                        return (
                            b.sort(function (a, b) {
                                return a.time - b.time;
                            }),
                            b
                        );
                    }),
                    (k.invalidate = function () {
                        return (this._locked = !1), a.prototype.invalidate.call(this);
                    }),
                    (k.progress = function (a, b) {
                        return arguments.length ? this.totalTime(this.duration() * (this._yoyo && 0 !== (1 & this._cycle) ? 1 - a : a) + this._cycle * (this._duration + this._repeatDelay), b) : this._time / this.duration() || 0;
                    }),
                    (k.totalProgress = function (a, b) {
                        return arguments.length ? this.totalTime(this.totalDuration() * a, b) : this._totalTime / this.totalDuration() || 0;
                    }),
                    (k.totalDuration = function (b) {
                        return arguments.length
                            ? -1 !== this._repeat && b
                                ? this.timeScale(this.totalDuration() / b)
                                : this
                            : (this._dirty && (a.prototype.totalDuration.call(this), (this._totalDuration = -1 === this._repeat ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat)), this._totalDuration);
                    }),
                    (k.time = function (a, b) {
                        return arguments.length
                            ? (this._dirty && this.totalDuration(),
                              a > this._duration && (a = this._duration),
                              this._yoyo && 0 !== (1 & this._cycle) ? (a = this._duration - a + this._cycle * (this._duration + this._repeatDelay)) : 0 !== this._repeat && (a += this._cycle * (this._duration + this._repeatDelay)),
                              this.totalTime(a, b))
                            : this._time;
                    }),
                    (k.repeat = function (a) {
                        return arguments.length ? ((this._repeat = a), this._uncache(!0)) : this._repeat;
                    }),
                    (k.repeatDelay = function (a) {
                        return arguments.length ? ((this._repeatDelay = a), this._uncache(!0)) : this._repeatDelay;
                    }),
                    (k.yoyo = function (a) {
                        return arguments.length ? ((this._yoyo = a), this) : this._yoyo;
                    }),
                    (k.currentLabel = function (a) {
                        return arguments.length ? this.seek(a, !0) : this.getLabelBefore(this._time + 1e-8);
                    }),
                    d
                );
            },
            !0
        ),
        (function () {
            var a = 180 / Math.PI,
                b = [],
                c = [],
                d = [],
                e = {},
                f = _gsScope._gsDefine.globals,
                g = function (a, b, c, d) {
                    c === d && (c = d - (d - b) / 1e6), a === b && (b = a + (c - a) / 1e6), (this.a = a), (this.b = b), (this.c = c), (this.d = d), (this.da = d - a), (this.ca = c - a), (this.ba = b - a);
                },
                h = ",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,",
                i = function (a, b, c, d) {
                    var e = { a: a },
                        f = {},
                        g = {},
                        h = { c: d },
                        i = (a + b) / 2,
                        j = (b + c) / 2,
                        k = (c + d) / 2,
                        l = (i + j) / 2,
                        m = (j + k) / 2,
                        n = (m - l) / 8;
                    return (e.b = i + (a - i) / 4), (f.b = l + n), (e.c = f.a = (e.b + f.b) / 2), (f.c = g.a = (l + m) / 2), (g.b = m - n), (h.b = k + (d - k) / 4), (g.c = h.a = (g.b + h.b) / 2), [e, f, g, h];
                },
                j = function (a, e, f, g, h) {
                    var j,
                        k,
                        l,
                        m,
                        n,
                        o,
                        p,
                        q,
                        r,
                        s,
                        t,
                        u,
                        v,
                        w = a.length - 1,
                        x = 0,
                        y = a[0].a;
                    for (j = 0; w > j; j++)
                        (n = a[x]),
                            (k = n.a),
                            (l = n.d),
                            (m = a[x + 1].d),
                            h
                                ? ((t = b[j]),
                                  (u = c[j]),
                                  (v = ((u + t) * e * 0.25) / (g ? 0.5 : d[j] || 0.5)),
                                  (o = l - (l - k) * (g ? 0.5 * e : 0 !== t ? v / t : 0)),
                                  (p = l + (m - l) * (g ? 0.5 * e : 0 !== u ? v / u : 0)),
                                  (q = l - (o + (((p - o) * ((3 * t) / (t + u) + 0.5)) / 4 || 0))))
                                : ((o = l - (l - k) * e * 0.5), (p = l + (m - l) * e * 0.5), (q = l - (o + p) / 2)),
                            (o += q),
                            (p += q),
                            (n.c = r = o),
                            0 !== j ? (n.b = y) : (n.b = y = n.a + 0.6 * (n.c - n.a)),
                            (n.da = l - k),
                            (n.ca = r - k),
                            (n.ba = y - k),
                            f ? ((s = i(k, y, r, l)), a.splice(x, 1, s[0], s[1], s[2], s[3]), (x += 4)) : x++,
                            (y = p);
                    (n = a[x]), (n.b = y), (n.c = y + 0.4 * (n.d - y)), (n.da = n.d - n.a), (n.ca = n.c - n.a), (n.ba = y - n.a), f && ((s = i(n.a, y, n.c, n.d)), a.splice(x, 1, s[0], s[1], s[2], s[3]));
                },
                k = function (a, d, e, f) {
                    var h,
                        i,
                        j,
                        k,
                        l,
                        m,
                        n = [];
                    if (f) for (a = [f].concat(a), i = a.length; --i > -1; ) "string" == typeof (m = a[i][d]) && "=" === m.charAt(1) && (a[i][d] = f[d] + Number(m.charAt(0) + m.substr(2)));
                    if (((h = a.length - 2), 0 > h)) return (n[0] = new g(a[0][d], 0, 0, a[0][d])), n;
                    for (i = 0; h > i; i++) (j = a[i][d]), (k = a[i + 1][d]), (n[i] = new g(j, 0, 0, k)), e && ((l = a[i + 2][d]), (b[i] = (b[i] || 0) + (k - j) * (k - j)), (c[i] = (c[i] || 0) + (l - k) * (l - k)));
                    return (n[i] = new g(a[i][d], 0, 0, a[i + 1][d])), n;
                },
                l = function (a, f, g, i, l, m) {
                    var n,
                        o,
                        p,
                        q,
                        r,
                        s,
                        t,
                        u,
                        v = {},
                        w = [],
                        x = m || a[0];
                    (l = "string" == typeof l ? "," + l + "," : h), null == f && (f = 1);
                    for (o in a[0]) w.push(o);
                    if (a.length > 1) {
                        for (u = a[a.length - 1], t = !0, n = w.length; --n > -1; )
                            if (((o = w[n]), Math.abs(x[o] - u[o]) > 0.05)) {
                                t = !1;
                                break;
                            }
                        t && ((a = a.concat()), m && a.unshift(m), a.push(a[1]), (m = a[a.length - 3]));
                    }
                    for (b.length = c.length = d.length = 0, n = w.length; --n > -1; ) (o = w[n]), (e[o] = -1 !== l.indexOf("," + o + ",")), (v[o] = k(a, o, e[o], m));
                    for (n = b.length; --n > -1; ) (b[n] = Math.sqrt(b[n])), (c[n] = Math.sqrt(c[n]));
                    if (!i) {
                        for (n = w.length; --n > -1; ) if (e[o]) for (p = v[w[n]], s = p.length - 1, q = 0; s > q; q++) (r = p[q + 1].da / c[q] + p[q].da / b[q] || 0), (d[q] = (d[q] || 0) + r * r);
                        for (n = d.length; --n > -1; ) d[n] = Math.sqrt(d[n]);
                    }
                    for (n = w.length, q = g ? 4 : 1; --n > -1; ) (o = w[n]), (p = v[o]), j(p, f, g, i, e[o]), t && (p.splice(0, q), p.splice(p.length - q, q));
                    return v;
                },
                m = function (a, b, c) {
                    b = b || "soft";
                    var d,
                        e,
                        f,
                        h,
                        i,
                        j,
                        k,
                        l,
                        m,
                        n,
                        o,
                        p = {},
                        q = "cubic" === b ? 3 : 2,
                        r = "soft" === b,
                        s = [];
                    if ((r && c && (a = [c].concat(a)), null == a || a.length < q + 1)) throw "invalid Bezier data";
                    for (m in a[0]) s.push(m);
                    for (j = s.length; --j > -1; ) {
                        for (m = s[j], p[m] = i = [], n = 0, l = a.length, k = 0; l > k; k++)
                            (d = null == c ? a[k][m] : "string" == typeof (o = a[k][m]) && "=" === o.charAt(1) ? c[m] + Number(o.charAt(0) + o.substr(2)) : Number(o)), r && k > 1 && l - 1 > k && (i[n++] = (d + i[n - 2]) / 2), (i[n++] = d);
                        for (l = n - q + 1, n = 0, k = 0; l > k; k += q) (d = i[k]), (e = i[k + 1]), (f = i[k + 2]), (h = 2 === q ? 0 : i[k + 3]), (i[n++] = o = 3 === q ? new g(d, e, f, h) : new g(d, (2 * e + d) / 3, (2 * e + f) / 3, f));
                        i.length = n;
                    }
                    return p;
                },
                n = function (a, b, c) {
                    for (var d, e, f, g, h, i, j, k, l, m, n, o = 1 / c, p = a.length; --p > -1; )
                        for (m = a[p], f = m.a, g = m.d - f, h = m.c - f, i = m.b - f, d = e = 0, k = 1; c >= k; k++)
                            (j = o * k), (l = 1 - j), (d = e - (e = (j * j * g + 3 * l * (j * h + l * i)) * j)), (n = p * c + k - 1), (b[n] = (b[n] || 0) + d * d);
                },
                o = function (a, b) {
                    b = b >> 0 || 6;
                    var c,
                        d,
                        e,
                        f,
                        g = [],
                        h = [],
                        i = 0,
                        j = 0,
                        k = b - 1,
                        l = [],
                        m = [];
                    for (c in a) n(a[c], g, b);
                    for (e = g.length, d = 0; e > d; d++) (i += Math.sqrt(g[d])), (f = d % b), (m[f] = i), f === k && ((j += i), (f = (d / b) >> 0), (l[f] = m), (h[f] = j), (i = 0), (m = []));
                    return { length: j, lengths: h, segments: l };
                },
                p = _gsScope._gsDefine.plugin({
                    propName: "bezier",
                    priority: -1,
                    version: "1.3.8",
                    API: 2,
                    global: !0,
                    init: function (a, b, c) {
                        (this._target = a), b instanceof Array && (b = { values: b }), (this._func = {}), (this._mod = {}), (this._props = []), (this._timeRes = null == b.timeResolution ? 6 : parseInt(b.timeResolution, 10));
                        var d,
                            e,
                            f,
                            g,
                            h,
                            i = b.values || [],
                            j = {},
                            k = i[0],
                            n = b.autoRotate || c.vars.orientToBezier;
                        this._autoRotate = n ? (n instanceof Array ? n : [["x", "y", "rotation", n === !0 ? 0 : Number(n) || 0]]) : null;
                        for (d in k) this._props.push(d);
                        for (f = this._props.length; --f > -1; )
                            (d = this._props[f]),
                                this._overwriteProps.push(d),
                                (e = this._func[d] = "function" == typeof a[d]),
                                (j[d] = e ? a[d.indexOf("set") || "function" != typeof a["get" + d.substr(3)] ? d : "get" + d.substr(3)]() : parseFloat(a[d])),
                                h || (j[d] !== i[0][d] && (h = j));
                        if (
                            ((this._beziers = "cubic" !== b.type && "quadratic" !== b.type && "soft" !== b.type ? l(i, isNaN(b.curviness) ? 1 : b.curviness, !1, "thruBasic" === b.type, b.correlate, h) : m(i, b.type, j)),
                            (this._segCount = this._beziers[d].length),
                            this._timeRes)
                        ) {
                            var p = o(this._beziers, this._timeRes);
                            (this._length = p.length),
                                (this._lengths = p.lengths),
                                (this._segments = p.segments),
                                (this._l1 = this._li = this._s1 = this._si = 0),
                                (this._l2 = this._lengths[0]),
                                (this._curSeg = this._segments[0]),
                                (this._s2 = this._curSeg[0]),
                                (this._prec = 1 / this._curSeg.length);
                        }
                        if ((n = this._autoRotate))
                            for (this._initialRotations = [], n[0] instanceof Array || (this._autoRotate = n = [n]), f = n.length; --f > -1; ) {
                                for (g = 0; 3 > g; g++) (d = n[f][g]), (this._func[d] = "function" == typeof a[d] ? a[d.indexOf("set") || "function" != typeof a["get" + d.substr(3)] ? d : "get" + d.substr(3)] : !1);
                                (d = n[f][2]), (this._initialRotations[f] = (this._func[d] ? this._func[d].call(this._target) : this._target[d]) || 0), this._overwriteProps.push(d);
                            }
                        return (this._startRatio = c.vars.runBackwards ? 1 : 0), !0;
                    },
                    set: function (b) {
                        var c,
                            d,
                            e,
                            f,
                            g,
                            h,
                            i,
                            j,
                            k,
                            l,
                            m = this._segCount,
                            n = this._func,
                            o = this._target,
                            p = b !== this._startRatio;
                        if (this._timeRes) {
                            if (((k = this._lengths), (l = this._curSeg), (b *= this._length), (e = this._li), b > this._l2 && m - 1 > e)) {
                                for (j = m - 1; j > e && (this._l2 = k[++e]) <= b; );
                                (this._l1 = k[e - 1]), (this._li = e), (this._curSeg = l = this._segments[e]), (this._s2 = l[(this._s1 = this._si = 0)]);
                            } else if (b < this._l1 && e > 0) {
                                for (; e > 0 && (this._l1 = k[--e]) >= b; );
                                0 === e && b < this._l1 ? (this._l1 = 0) : e++, (this._l2 = k[e]), (this._li = e), (this._curSeg = l = this._segments[e]), (this._s1 = l[(this._si = l.length - 1) - 1] || 0), (this._s2 = l[this._si]);
                            }
                            if (((c = e), (b -= this._l1), (e = this._si), b > this._s2 && e < l.length - 1)) {
                                for (j = l.length - 1; j > e && (this._s2 = l[++e]) <= b; );
                                (this._s1 = l[e - 1]), (this._si = e);
                            } else if (b < this._s1 && e > 0) {
                                for (; e > 0 && (this._s1 = l[--e]) >= b; );
                                0 === e && b < this._s1 ? (this._s1 = 0) : e++, (this._s2 = l[e]), (this._si = e);
                            }
                            h = (e + (b - this._s1) / (this._s2 - this._s1)) * this._prec || 0;
                        } else (c = 0 > b ? 0 : b >= 1 ? m - 1 : (m * b) >> 0), (h = (b - c * (1 / m)) * m);
                        for (d = 1 - h, e = this._props.length; --e > -1; )
                            (f = this._props[e]), (g = this._beziers[f][c]), (i = (h * h * g.da + 3 * d * (h * g.ca + d * g.ba)) * h + g.a), this._mod[f] && (i = this._mod[f](i, o)), n[f] ? o[f](i) : (o[f] = i);
                        if (this._autoRotate) {
                            var q,
                                r,
                                s,
                                t,
                                u,
                                v,
                                w,
                                x = this._autoRotate;
                            for (e = x.length; --e > -1; )
                                (f = x[e][2]),
                                    (v = x[e][3] || 0),
                                    (w = x[e][4] === !0 ? 1 : a),
                                    (g = this._beziers[x[e][0]]),
                                    (q = this._beziers[x[e][1]]),
                                    g &&
                                        q &&
                                        ((g = g[c]),
                                        (q = q[c]),
                                        (r = g.a + (g.b - g.a) * h),
                                        (t = g.b + (g.c - g.b) * h),
                                        (r += (t - r) * h),
                                        (t += (g.c + (g.d - g.c) * h - t) * h),
                                        (s = q.a + (q.b - q.a) * h),
                                        (u = q.b + (q.c - q.b) * h),
                                        (s += (u - s) * h),
                                        (u += (q.c + (q.d - q.c) * h - u) * h),
                                        (i = p ? Math.atan2(u - s, t - r) * w + v : this._initialRotations[e]),
                                        this._mod[f] && (i = this._mod[f](i, o)),
                                        n[f] ? o[f](i) : (o[f] = i));
                        }
                    },
                }),
                q = p.prototype;
            (p.bezierThrough = l),
                (p.cubicToQuadratic = i),
                (p._autoCSS = !0),
                (p.quadraticToCubic = function (a, b, c) {
                    return new g(a, (2 * b + a) / 3, (2 * b + c) / 3, c);
                }),
                (p._cssRegister = function () {
                    var a = f.CSSPlugin;
                    if (a) {
                        var b = a._internals,
                            c = b._parseToProxy,
                            d = b._setPluginRatio,
                            e = b.CSSPropTween;
                        b._registerComplexSpecialProp("bezier", {
                            parser: function (a, b, f, g, h, i) {
                                b instanceof Array && (b = { values: b }), (i = new p());
                                var j,
                                    k,
                                    l,
                                    m = b.values,
                                    n = m.length - 1,
                                    o = [],
                                    q = {};
                                if (0 > n) return h;
                                for (j = 0; n >= j; j++) (l = c(a, m[j], g, h, i, n !== j)), (o[j] = l.end);
                                for (k in b) q[k] = b[k];
                                return (
                                    (q.values = o),
                                    (h = new e(a, "bezier", 0, 0, l.pt, 2)),
                                    (h.data = l),
                                    (h.plugin = i),
                                    (h.setRatio = d),
                                    0 === q.autoRotate && (q.autoRotate = !0),
                                    !q.autoRotate ||
                                        q.autoRotate instanceof Array ||
                                        ((j = q.autoRotate === !0 ? 0 : Number(q.autoRotate)), (q.autoRotate = null != l.end.left ? [["left", "top", "rotation", j, !1]] : null != l.end.x ? [["x", "y", "rotation", j, !1]] : !1)),
                                    q.autoRotate && (g._transform || g._enableTransforms(!1), (l.autoRotate = g._target._gsTransform), (l.proxy.rotation = l.autoRotate.rotation || 0), g._overwriteProps.push("rotation")),
                                    i._onInitTween(l.proxy, q, g._tween),
                                    h
                                );
                            },
                        });
                    }
                }),
                (q._mod = function (a) {
                    for (var b, c = this._overwriteProps, d = c.length; --d > -1; ) (b = a[c[d]]), b && "function" == typeof b && (this._mod[c[d]] = b);
                }),
                (q._kill = function (a) {
                    var b,
                        c,
                        d = this._props;
                    for (b in this._beziers) if (b in a) for (delete this._beziers[b], delete this._func[b], c = d.length; --c > -1; ) d[c] === b && d.splice(c, 1);
                    if ((d = this._autoRotate)) for (c = d.length; --c > -1; ) a[d[c][2]] && d.splice(c, 1);
                    return this._super._kill.call(this, a);
                });
        })(),
        _gsScope._gsDefine(
            "plugins.CSSPlugin",
            ["plugins.TweenPlugin", "TweenLite"],
            function (a, b) {
                var c,
                    d,
                    e,
                    f,
                    g = function () {
                        a.call(this, "css"), (this._overwriteProps.length = 0), (this.setRatio = g.prototype.setRatio);
                    },
                    h = _gsScope._gsDefine.globals,
                    i = {},
                    j = (g.prototype = new a("css"));
                (j.constructor = g),
                    (g.version = "1.20.4"),
                    (g.API = 2),
                    (g.defaultTransformPerspective = 0),
                    (g.defaultSkewType = "compensated"),
                    (g.defaultSmoothOrigin = !0),
                    (j = "px"),
                    (g.suffixMap = { top: j, right: j, bottom: j, left: j, width: j, height: j, fontSize: j, padding: j, margin: j, perspective: j, lineHeight: "" });
                var k,
                    l,
                    m,
                    n,
                    o,
                    p,
                    q,
                    r,
                    s = /(?:\-|\.|\b)(\d|\.|e\-)+/g,
                    t = /(?:\d|\-\d|\.\d|\-\.\d|\+=\d|\-=\d|\+=.\d|\-=\.\d)+/g,
                    u = /(?:\+=|\-=|\-|\b)[\d\-\.]+[a-zA-Z0-9]*(?:%|\b)/gi,
                    v = /(?![+-]?\d*\.?\d+|[+-]|e[+-]\d+)[^0-9]/g,
                    w = /(?:\d|\-|\+|=|#|\.)*/g,
                    x = /opacity *= *([^)]*)/i,
                    y = /opacity:([^;]*)/i,
                    z = /alpha\(opacity *=.+?\)/i,
                    A = /^(rgb|hsl)/,
                    B = /([A-Z])/g,
                    C = /-([a-z])/gi,
                    D = /(^(?:url\(\"|url\())|(?:(\"\))$|\)$)/gi,
                    E = function (a, b) {
                        return b.toUpperCase();
                    },
                    F = /(?:Left|Right|Width)/i,
                    G = /(M11|M12|M21|M22)=[\d\-\.e]+/gi,
                    H = /progid\:DXImageTransform\.Microsoft\.Matrix\(.+?\)/i,
                    I = /,(?=[^\)]*(?:\(|$))/gi,
                    J = /[\s,\(]/i,
                    K = Math.PI / 180,
                    L = 180 / Math.PI,
                    M = {},
                    N = { style: {} },
                    O = _gsScope.document || {
                        createElement: function () {
                            return N;
                        },
                    },
                    P = function (a, b) {
                        return O.createElementNS ? O.createElementNS(b || "http://www.w3.org/1999/xhtml", a) : O.createElement(a);
                    },
                    Q = P("div"),
                    R = P("img"),
                    S = (g._internals = { _specialProps: i }),
                    T = (_gsScope.navigator || {}).userAgent || "",
                    U = (function () {
                        var a = T.indexOf("Android"),
                            b = P("a");
                        return (
                            (m = -1 !== T.indexOf("Safari") && -1 === T.indexOf("Chrome") && (-1 === a || parseFloat(T.substr(a + 8, 2)) > 3)),
                            (o = m && parseFloat(T.substr(T.indexOf("Version/") + 8, 2)) < 6),
                            (n = -1 !== T.indexOf("Firefox")),
                            (/MSIE ([0-9]{1,}[\.0-9]{0,})/.exec(T) || /Trident\/.*rv:([0-9]{1,}[\.0-9]{0,})/.exec(T)) && (p = parseFloat(RegExp.$1)),
                            b ? ((b.style.cssText = "top:1px;opacity:.55;"), /^0.55/.test(b.style.opacity)) : !1
                        );
                    })(),
                    V = function (a) {
                        return x.test("string" == typeof a ? a : (a.currentStyle ? a.currentStyle.filter : a.style.filter) || "") ? parseFloat(RegExp.$1) / 100 : 1;
                    },
                    W = function (a) {
                        _gsScope.console && console.log(a);
                    },
                    X = "",
                    Y = "",
                    Z = function (a, b) {
                        b = b || Q;
                        var c,
                            d,
                            e = b.style;
                        if (void 0 !== e[a]) return a;
                        for (a = a.charAt(0).toUpperCase() + a.substr(1), c = ["O", "Moz", "ms", "Ms", "Webkit"], d = 5; --d > -1 && void 0 === e[c[d] + a]; );
                        return d >= 0 ? ((Y = 3 === d ? "ms" : c[d]), (X = "-" + Y.toLowerCase() + "-"), Y + a) : null;
                    },
                    $ = O.defaultView ? O.defaultView.getComputedStyle : function () {},
                    _ = (g.getStyle = function (a, b, c, d, e) {
                        var f;
                        return U || "opacity" !== b
                            ? (!d && a.style[b] ? (f = a.style[b]) : (c = c || $(a)) ? (f = c[b] || c.getPropertyValue(b) || c.getPropertyValue(b.replace(B, "-$1").toLowerCase())) : a.currentStyle && (f = a.currentStyle[b]),
                              null == e || (f && "none" !== f && "auto" !== f && "auto auto" !== f) ? f : e)
                            : V(a);
                    }),
                    aa = (S.convertToPixels = function (a, c, d, e, f) {
                        if ("px" === e || (!e && "lineHeight" !== c)) return d;
                        if ("auto" === e || !d) return 0;
                        var h,
                            i,
                            j,
                            k = F.test(c),
                            l = a,
                            m = Q.style,
                            n = 0 > d,
                            o = 1 === d;
                        if ((n && (d = -d), o && (d *= 100), "lineHeight" !== c || e))
                            if ("%" === e && -1 !== c.indexOf("border")) h = (d / 100) * (k ? a.clientWidth : a.clientHeight);
                            else {
                                if (((m.cssText = "border:0 solid red;position:" + _(a, "position") + ";line-height:0;"), "%" !== e && l.appendChild && "v" !== e.charAt(0) && "rem" !== e))
                                    m[k ? "borderLeftWidth" : "borderTopWidth"] = d + e;
                                else {
                                    if (((l = a.parentNode || O.body), -1 !== _(l, "display").indexOf("flex") && (m.position = "absolute"), (i = l._gsCache), (j = b.ticker.frame), i && k && i.time === j)) return (i.width * d) / 100;
                                    m[k ? "width" : "height"] = d + e;
                                }
                                l.appendChild(Q),
                                    (h = parseFloat(Q[k ? "offsetWidth" : "offsetHeight"])),
                                    l.removeChild(Q),
                                    k && "%" === e && g.cacheWidths !== !1 && ((i = l._gsCache = l._gsCache || {}), (i.time = j), (i.width = (h / d) * 100)),
                                    0 !== h || f || (h = aa(a, c, d, e, !0));
                            }
                        else (i = $(a).lineHeight), (a.style.lineHeight = d), (h = parseFloat($(a).lineHeight)), (a.style.lineHeight = i);
                        return o && (h /= 100), n ? -h : h;
                    }),
                    ba = (S.calculateOffset = function (a, b, c) {
                        if ("absolute" !== _(a, "position", c)) return 0;
                        var d = "left" === b ? "Left" : "Top",
                            e = _(a, "margin" + d, c);
                        return a["offset" + d] - (aa(a, b, parseFloat(e), e.replace(w, "")) || 0);
                    }),
                    ca = function (a, b) {
                        var c,
                            d,
                            e,
                            f = {};
                        if ((b = b || $(a, null)))
                            if ((c = b.length)) for (; --c > -1; ) (e = b[c]), (-1 === e.indexOf("-transform") || Da === e) && (f[e.replace(C, E)] = b.getPropertyValue(e));
                            else for (c in b) (-1 === c.indexOf("Transform") || Ca === c) && (f[c] = b[c]);
                        else if ((b = a.currentStyle || a.style)) for (c in b) "string" == typeof c && void 0 === f[c] && (f[c.replace(C, E)] = b[c]);
                        return (
                            U || (f.opacity = V(a)),
                            (d = Ra(a, b, !1)),
                            (f.rotation = d.rotation),
                            (f.skewX = d.skewX),
                            (f.scaleX = d.scaleX),
                            (f.scaleY = d.scaleY),
                            (f.x = d.x),
                            (f.y = d.y),
                            Fa && ((f.z = d.z), (f.rotationX = d.rotationX), (f.rotationY = d.rotationY), (f.scaleZ = d.scaleZ)),
                            f.filters && delete f.filters,
                            f
                        );
                    },
                    da = function (a, b, c, d, e) {
                        var f,
                            g,
                            h,
                            i = {},
                            j = a.style;
                        for (g in c)
                            "cssText" !== g &&
                                "length" !== g &&
                                isNaN(g) &&
                                (b[g] !== (f = c[g]) || (e && e[g])) &&
                                -1 === g.indexOf("Origin") &&
                                ("number" == typeof f || "string" == typeof f) &&
                                ((i[g] = "auto" !== f || ("left" !== g && "top" !== g) ? (("" !== f && "auto" !== f && "none" !== f) || "string" != typeof b[g] || "" === b[g].replace(v, "") ? f : 0) : ba(a, g)),
                                void 0 !== j[g] && (h = new sa(j, g, j[g], h)));
                        if (d) for (g in d) "className" !== g && (i[g] = d[g]);
                        return { difs: i, firstMPT: h };
                    },
                    ea = { width: ["Left", "Right"], height: ["Top", "Bottom"] },
                    fa = ["marginLeft", "marginRight", "marginTop", "marginBottom"],
                    ga = function (a, b, c) {
                        if ("svg" === (a.nodeName + "").toLowerCase()) return (c || $(a))[b] || 0;
                        if (a.getCTM && Oa(a)) return a.getBBox()[b] || 0;
                        var d = parseFloat("width" === b ? a.offsetWidth : a.offsetHeight),
                            e = ea[b],
                            f = e.length;
                        for (c = c || $(a, null); --f > -1; ) (d -= parseFloat(_(a, "padding" + e[f], c, !0)) || 0), (d -= parseFloat(_(a, "border" + e[f] + "Width", c, !0)) || 0);
                        return d;
                    },
                    ha = function (a, b) {
                        if ("contain" === a || "auto" === a || "auto auto" === a) return a + " ";
                        (null == a || "" === a) && (a = "0 0");
                        var c,
                            d = a.split(" "),
                            e = -1 !== a.indexOf("left") ? "0%" : -1 !== a.indexOf("right") ? "100%" : d[0],
                            f = -1 !== a.indexOf("top") ? "0%" : -1 !== a.indexOf("bottom") ? "100%" : d[1];
                        if (d.length > 3 && !b) {
                            for (d = a.split(", ").join(",").split(","), a = [], c = 0; c < d.length; c++) a.push(ha(d[c]));
                            return a.join(",");
                        }
                        return (
                            null == f ? (f = "center" === e ? "50%" : "0") : "center" === f && (f = "50%"),
                            ("center" === e || (isNaN(parseFloat(e)) && -1 === (e + "").indexOf("="))) && (e = "50%"),
                            (a = e + " " + f + (d.length > 2 ? " " + d[2] : "")),
                            b &&
                                ((b.oxp = -1 !== e.indexOf("%")),
                                (b.oyp = -1 !== f.indexOf("%")),
                                (b.oxr = "=" === e.charAt(1)),
                                (b.oyr = "=" === f.charAt(1)),
                                (b.ox = parseFloat(e.replace(v, ""))),
                                (b.oy = parseFloat(f.replace(v, ""))),
                                (b.v = a)),
                            b || a
                        );
                    },
                    ia = function (a, b) {
                        return "function" == typeof a && (a = a(r, q)), "string" == typeof a && "=" === a.charAt(1) ? parseInt(a.charAt(0) + "1", 10) * parseFloat(a.substr(2)) : parseFloat(a) - parseFloat(b) || 0;
                    },
                    ja = function (a, b) {
                        return "function" == typeof a && (a = a(r, q)), null == a ? b : "string" == typeof a && "=" === a.charAt(1) ? parseInt(a.charAt(0) + "1", 10) * parseFloat(a.substr(2)) + b : parseFloat(a) || 0;
                    },
                    ka = function (a, b, c, d) {
                        var e,
                            f,
                            g,
                            h,
                            i,
                            j = 1e-6;
                        return (
                            "function" == typeof a && (a = a(r, q)),
                            null == a
                                ? (h = b)
                                : "number" == typeof a
                                ? (h = a)
                                : ((e = 360),
                                  (f = a.split("_")),
                                  (i = "=" === a.charAt(1)),
                                  (g = (i ? parseInt(a.charAt(0) + "1", 10) * parseFloat(f[0].substr(2)) : parseFloat(f[0])) * (-1 === a.indexOf("rad") ? 1 : L) - (i ? 0 : b)),
                                  f.length &&
                                      (d && (d[c] = b + g),
                                      -1 !== a.indexOf("short") && ((g %= e), g !== g % (e / 2) && (g = 0 > g ? g + e : g - e)),
                                      -1 !== a.indexOf("_cw") && 0 > g ? (g = ((g + 9999999999 * e) % e) - ((g / e) | 0) * e) : -1 !== a.indexOf("ccw") && g > 0 && (g = ((g - 9999999999 * e) % e) - ((g / e) | 0) * e)),
                                  (h = b + g)),
                            j > h && h > -j && (h = 0),
                            h
                        );
                    },
                    la = {
                        aqua: [0, 255, 255],
                        lime: [0, 255, 0],
                        silver: [192, 192, 192],
                        black: [0, 0, 0],
                        maroon: [128, 0, 0],
                        teal: [0, 128, 128],
                        blue: [0, 0, 255],
                        navy: [0, 0, 128],
                        white: [255, 255, 255],
                        fuchsia: [255, 0, 255],
                        olive: [128, 128, 0],
                        yellow: [255, 255, 0],
                        orange: [255, 165, 0],
                        gray: [128, 128, 128],
                        purple: [128, 0, 128],
                        green: [0, 128, 0],
                        red: [255, 0, 0],
                        pink: [255, 192, 203],
                        cyan: [0, 255, 255],
                        transparent: [255, 255, 255, 0],
                    },
                    ma = function (a, b, c) {
                        return (a = 0 > a ? a + 1 : a > 1 ? a - 1 : a), (255 * (1 > 6 * a ? b + (c - b) * a * 6 : 0.5 > a ? c : 2 > 3 * a ? b + (c - b) * (2 / 3 - a) * 6 : b) + 0.5) | 0;
                    },
                    na = (g.parseColor = function (a, b) {
                        var c, d, e, f, g, h, i, j, k, l, m;
                        if (a)
                            if ("number" == typeof a) c = [a >> 16, (a >> 8) & 255, 255 & a];
                            else {
                                if (("," === a.charAt(a.length - 1) && (a = a.substr(0, a.length - 1)), la[a])) c = la[a];
                                else if ("#" === a.charAt(0))
                                    4 === a.length && ((d = a.charAt(1)), (e = a.charAt(2)), (f = a.charAt(3)), (a = "#" + d + d + e + e + f + f)), (a = parseInt(a.substr(1), 16)), (c = [a >> 16, (a >> 8) & 255, 255 & a]);
                                else if ("hsl" === a.substr(0, 3))
                                    if (((c = m = a.match(s)), b)) {
                                        if (-1 !== a.indexOf("=")) return a.match(t);
                                    } else
                                        (g = (Number(c[0]) % 360) / 360),
                                            (h = Number(c[1]) / 100),
                                            (i = Number(c[2]) / 100),
                                            (e = 0.5 >= i ? i * (h + 1) : i + h - i * h),
                                            (d = 2 * i - e),
                                            c.length > 3 && (c[3] = Number(c[3])),
                                            (c[0] = ma(g + 1 / 3, d, e)),
                                            (c[1] = ma(g, d, e)),
                                            (c[2] = ma(g - 1 / 3, d, e));
                                else c = a.match(s) || la.transparent;
                                (c[0] = Number(c[0])), (c[1] = Number(c[1])), (c[2] = Number(c[2])), c.length > 3 && (c[3] = Number(c[3]));
                            }
                        else c = la.black;
                        return (
                            b &&
                                !m &&
                                ((d = c[0] / 255),
                                (e = c[1] / 255),
                                (f = c[2] / 255),
                                (j = Math.max(d, e, f)),
                                (k = Math.min(d, e, f)),
                                (i = (j + k) / 2),
                                j === k ? (g = h = 0) : ((l = j - k), (h = i > 0.5 ? l / (2 - j - k) : l / (j + k)), (g = j === d ? (e - f) / l + (f > e ? 6 : 0) : j === e ? (f - d) / l + 2 : (d - e) / l + 4), (g *= 60)),
                                (c[0] = (g + 0.5) | 0),
                                (c[1] = (100 * h + 0.5) | 0),
                                (c[2] = (100 * i + 0.5) | 0)),
                            c
                        );
                    }),
                    oa = function (a, b) {
                        var c,
                            d,
                            e,
                            f = a.match(pa) || [],
                            g = 0,
                            h = "";
                        if (!f.length) return a;
                        for (c = 0; c < f.length; c++)
                            (d = f[c]),
                                (e = a.substr(g, a.indexOf(d, g) - g)),
                                (g += e.length + d.length),
                                (d = na(d, b)),
                                3 === d.length && d.push(1),
                                (h += e + (b ? "hsla(" + d[0] + "," + d[1] + "%," + d[2] + "%," + d[3] : "rgba(" + d.join(",")) + ")");
                        return h + a.substr(g);
                    },
                    pa = "(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3}){1,2}\\b";
                for (j in la) pa += "|" + j + "\\b";
                (pa = new RegExp(pa + ")", "gi")),
                    (g.colorStringFilter = function (a) {
                        var b,
                            c = a[0] + " " + a[1];
                        pa.test(c) && ((b = -1 !== c.indexOf("hsl(") || -1 !== c.indexOf("hsla(")), (a[0] = oa(a[0], b)), (a[1] = oa(a[1], b))), (pa.lastIndex = 0);
                    }),
                    b.defaultStringFilter || (b.defaultStringFilter = g.colorStringFilter);
                var qa = function (a, b, c, d) {
                        if (null == a)
                            return function (a) {
                                return a;
                            };
                        var e,
                            f = b ? (a.match(pa) || [""])[0] : "",
                            g = a.split(f).join("").match(u) || [],
                            h = a.substr(0, a.indexOf(g[0])),
                            i = ")" === a.charAt(a.length - 1) ? ")" : "",
                            j = -1 !== a.indexOf(" ") ? " " : ",",
                            k = g.length,
                            l = k > 0 ? g[0].replace(s, "") : "";
                        return k
                            ? (e = b
                                  ? function (a) {
                                        var b, m, n, o;
                                        if ("number" == typeof a) a += l;
                                        else if (d && I.test(a)) {
                                            for (o = a.replace(I, "|").split("|"), n = 0; n < o.length; n++) o[n] = e(o[n]);
                                            return o.join(",");
                                        }
                                        if (((b = (a.match(pa) || [f])[0]), (m = a.split(b).join("").match(u) || []), (n = m.length), k > n--)) for (; ++n < k; ) m[n] = c ? m[((n - 1) / 2) | 0] : g[n];
                                        return h + m.join(j) + j + b + i + (-1 !== a.indexOf("inset") ? " inset" : "");
                                    }
                                  : function (a) {
                                        var b, f, m;
                                        if ("number" == typeof a) a += l;
                                        else if (d && I.test(a)) {
                                            for (f = a.replace(I, "|").split("|"), m = 0; m < f.length; m++) f[m] = e(f[m]);
                                            return f.join(",");
                                        }
                                        if (((b = a.match(u) || []), (m = b.length), k > m--)) for (; ++m < k; ) b[m] = c ? b[((m - 1) / 2) | 0] : g[m];
                                        return h + b.join(j) + i;
                                    })
                            : function (a) {
                                  return a;
                              };
                    },
                    ra = function (a) {
                        return (
                            (a = a.split(",")),
                            function (b, c, d, e, f, g, h) {
                                var i,
                                    j = (c + "").split(" ");
                                for (h = {}, i = 0; 4 > i; i++) h[a[i]] = j[i] = j[i] || j[((i - 1) / 2) >> 0];
                                return e.parse(b, h, f, g);
                            }
                        );
                    },
                    sa =
                        ((S._setPluginRatio = function (a) {
                            this.plugin.setRatio(a);
                            for (var b, c, d, e, f, g = this.data, h = g.proxy, i = g.firstMPT, j = 1e-6; i; ) (b = h[i.v]), i.r ? (b = Math.round(b)) : j > b && b > -j && (b = 0), (i.t[i.p] = b), (i = i._next);
                            if ((g.autoRotate && (g.autoRotate.rotation = g.mod ? g.mod(h.rotation, this.t) : h.rotation), 1 === a || 0 === a))
                                for (i = g.firstMPT, f = 1 === a ? "e" : "b"; i; ) {
                                    if (((c = i.t), c.type)) {
                                        if (1 === c.type) {
                                            for (e = c.xs0 + c.s + c.xs1, d = 1; d < c.l; d++) e += c["xn" + d] + c["xs" + (d + 1)];
                                            c[f] = e;
                                        }
                                    } else c[f] = c.s + c.xs0;
                                    i = i._next;
                                }
                        }),
                        function (a, b, c, d, e) {
                            (this.t = a), (this.p = b), (this.v = c), (this.r = e), d && ((d._prev = this), (this._next = d));
                        }),
                    ta =
                        ((S._parseToProxy = function (a, b, c, d, e, f) {
                            var g,
                                h,
                                i,
                                j,
                                k,
                                l = d,
                                m = {},
                                n = {},
                                o = c._transform,
                                p = M;
                            for (c._transform = null, M = b, d = k = c.parse(a, b, d, e), M = p, f && ((c._transform = o), l && ((l._prev = null), l._prev && (l._prev._next = null))); d && d !== l; ) {
                                if (d.type <= 1 && ((h = d.p), (n[h] = d.s + d.c), (m[h] = d.s), f || ((j = new sa(d, "s", h, j, d.r)), (d.c = 0)), 1 === d.type))
                                    for (g = d.l; --g > 0; ) (i = "xn" + g), (h = d.p + "_" + i), (n[h] = d.data[i]), (m[h] = d[i]), f || (j = new sa(d, i, h, j, d.rxp[i]));
                                d = d._next;
                            }
                            return { proxy: m, end: n, firstMPT: j, pt: k };
                        }),
                        (S.CSSPropTween = function (a, b, d, e, g, h, i, j, k, l, m) {
                            (this.t = a),
                                (this.p = b),
                                (this.s = d),
                                (this.c = e),
                                (this.n = i || b),
                                a instanceof ta || f.push(this.n),
                                (this.r = j),
                                (this.type = h || 0),
                                k && ((this.pr = k), (c = !0)),
                                (this.b = void 0 === l ? d : l),
                                (this.e = void 0 === m ? d + e : m),
                                g && ((this._next = g), (g._prev = this));
                        })),
                    ua = function (a, b, c, d, e, f) {
                        var g = new ta(a, b, c, d - c, e, -1, f);
                        return (g.b = c), (g.e = g.xs0 = d), g;
                    },
                    va = (g.parseComplex = function (a, b, c, d, e, f, h, i, j, l) {
                        (c = c || f || ""),
                            "function" == typeof d && (d = d(r, q)),
                            (h = new ta(a, b, 0, 0, h, l ? 2 : 1, null, !1, i, c, d)),
                            (d += ""),
                            e && pa.test(d + c) && ((d = [c, d]), g.colorStringFilter(d), (c = d[0]), (d = d[1]));
                        var m,
                            n,
                            o,
                            p,
                            u,
                            v,
                            w,
                            x,
                            y,
                            z,
                            A,
                            B,
                            C,
                            D = c.split(", ").join(",").split(" "),
                            E = d.split(", ").join(",").split(" "),
                            F = D.length,
                            G = k !== !1;
                        for (
                            (-1 !== d.indexOf(",") || -1 !== c.indexOf(",")) &&
                                (-1 !== (d + c).indexOf("rgb") || -1 !== (d + c).indexOf("hsl")
                                    ? ((D = D.join(" ").replace(I, ", ").split(" ")), (E = E.join(" ").replace(I, ", ").split(" ")))
                                    : ((D = D.join(" ").split(",").join(", ").split(" ")), (E = E.join(" ").split(",").join(", ").split(" "))),
                                (F = D.length)),
                                F !== E.length && ((D = (f || "").split(" ")), (F = D.length)),
                                h.plugin = j,
                                h.setRatio = l,
                                pa.lastIndex = 0,
                                m = 0;
                            F > m;
                            m++
                        )
                            if (((p = D[m]), (u = E[m]), (x = parseFloat(p)), x || 0 === x)) h.appendXtra("", x, ia(u, x), u.replace(t, ""), G && -1 !== u.indexOf("px"), !0);
                            else if (e && pa.test(p))
                                (B = u.indexOf(")") + 1),
                                    (B = ")" + (B ? u.substr(B) : "")),
                                    (C = -1 !== u.indexOf("hsl") && U),
                                    (z = u),
                                    (p = na(p, C)),
                                    (u = na(u, C)),
                                    (y = p.length + u.length > 6),
                                    y && !U && 0 === u[3]
                                        ? ((h["xs" + h.l] += h.l ? " transparent" : "transparent"), (h.e = h.e.split(E[m]).join("transparent")))
                                        : (U || (y = !1),
                                          C
                                              ? h
                                                    .appendXtra(z.substr(0, z.indexOf("hsl")) + (y ? "hsla(" : "hsl("), p[0], ia(u[0], p[0]), ",", !1, !0)
                                                    .appendXtra("", p[1], ia(u[1], p[1]), "%,", !1)
                                                    .appendXtra("", p[2], ia(u[2], p[2]), y ? "%," : "%" + B, !1)
                                              : h
                                                    .appendXtra(z.substr(0, z.indexOf("rgb")) + (y ? "rgba(" : "rgb("), p[0], u[0] - p[0], ",", !0, !0)
                                                    .appendXtra("", p[1], u[1] - p[1], ",", !0)
                                                    .appendXtra("", p[2], u[2] - p[2], y ? "," : B, !0),
                                          y && ((p = p.length < 4 ? 1 : p[3]), h.appendXtra("", p, (u.length < 4 ? 1 : u[3]) - p, B, !1))),
                                    (pa.lastIndex = 0);
                            else if ((v = p.match(s))) {
                                if (((w = u.match(t)), !w || w.length !== v.length)) return h;
                                for (o = 0, n = 0; n < v.length; n++) (A = v[n]), (z = p.indexOf(A, o)), h.appendXtra(p.substr(o, z - o), Number(A), ia(w[n], A), "", G && "px" === p.substr(z + A.length, 2), 0 === n), (o = z + A.length);
                                h["xs" + h.l] += p.substr(o);
                            } else h["xs" + h.l] += h.l || h["xs" + h.l] ? " " + u : u;
                        if (-1 !== d.indexOf("=") && h.data) {
                            for (B = h.xs0 + h.data.s, m = 1; m < h.l; m++) B += h["xs" + m] + h.data["xn" + m];
                            h.e = B + h["xs" + m];
                        }
                        return h.l || ((h.type = -1), (h.xs0 = h.e)), h.xfirst || h;
                    }),
                    wa = 9;
                for (j = ta.prototype, j.l = j.pr = 0; --wa > 0; ) (j["xn" + wa] = 0), (j["xs" + wa] = "");
                (j.xs0 = ""),
                    (j._next = j._prev = j.xfirst = j.data = j.plugin = j.setRatio = j.rxp = null),
                    (j.appendXtra = function (a, b, c, d, e, f) {
                        var g = this,
                            h = g.l;
                        return (
                            (g["xs" + h] += f && (h || g["xs" + h]) ? " " + a : a || ""),
                            c || 0 === h || g.plugin
                                ? (g.l++,
                                  (g.type = g.setRatio ? 2 : 1),
                                  (g["xs" + g.l] = d || ""),
                                  h > 0
                                      ? ((g.data["xn" + h] = b + c), (g.rxp["xn" + h] = e), (g["xn" + h] = b), g.plugin || ((g.xfirst = new ta(g, "xn" + h, b, c, g.xfirst || g, 0, g.n, e, g.pr)), (g.xfirst.xs0 = 0)), g)
                                      : ((g.data = { s: b + c }), (g.rxp = {}), (g.s = b), (g.c = c), (g.r = e), g))
                                : ((g["xs" + h] += b + (d || "")), g)
                        );
                    });
                var xa = function (a, b) {
                        (b = b || {}),
                            (this.p = b.prefix ? Z(a) || a : a),
                            (i[a] = i[this.p] = this),
                            (this.format = b.formatter || qa(b.defaultValue, b.color, b.collapsible, b.multi)),
                            b.parser && (this.parse = b.parser),
                            (this.clrs = b.color),
                            (this.multi = b.multi),
                            (this.keyword = b.keyword),
                            (this.dflt = b.defaultValue),
                            (this.pr = b.priority || 0);
                    },
                    ya = (S._registerComplexSpecialProp = function (a, b, c) {
                        "object" != typeof b && (b = { parser: c });
                        var d,
                            e,
                            f = a.split(","),
                            g = b.defaultValue;
                        for (c = c || [g], d = 0; d < f.length; d++) (b.prefix = 0 === d && b.prefix), (b.defaultValue = c[d] || g), (e = new xa(f[d], b));
                    }),
                    za = (S._registerPluginProp = function (a) {
                        if (!i[a]) {
                            var b = a.charAt(0).toUpperCase() + a.substr(1) + "Plugin";
                            ya(a, {
                                parser: function (a, c, d, e, f, g, j) {
                                    var k = h.com.greensock.plugins[b];
                                    return k ? (k._cssRegister(), i[d].parse(a, c, d, e, f, g, j)) : (W("Error: " + b + " js file not loaded."), f);
                                },
                            });
                        }
                    });
                (j = xa.prototype),
                    (j.parseComplex = function (a, b, c, d, e, f) {
                        var g,
                            h,
                            i,
                            j,
                            k,
                            l,
                            m = this.keyword;
                        if ((this.multi && (I.test(c) || I.test(b) ? ((h = b.replace(I, "|").split("|")), (i = c.replace(I, "|").split("|"))) : m && ((h = [b]), (i = [c]))), i)) {
                            for (j = i.length > h.length ? i.length : h.length, g = 0; j > g; g++)
                                (b = h[g] = h[g] || this.dflt), (c = i[g] = i[g] || this.dflt), m && ((k = b.indexOf(m)), (l = c.indexOf(m)), k !== l && (-1 === l ? (h[g] = h[g].split(m).join("")) : -1 === k && (h[g] += " " + m)));
                            (b = h.join(", ")), (c = i.join(", "));
                        }
                        return va(a, this.p, b, c, this.clrs, this.dflt, d, this.pr, e, f);
                    }),
                    (j.parse = function (a, b, c, d, f, g, h) {
                        return this.parseComplex(a.style, this.format(_(a, this.p, e, !1, this.dflt)), this.format(b), f, g);
                    }),
                    (g.registerSpecialProp = function (a, b, c) {
                        ya(a, {
                            parser: function (a, d, e, f, g, h, i) {
                                var j = new ta(a, e, 0, 0, g, 2, e, !1, c);
                                return (j.plugin = h), (j.setRatio = b(a, d, f._tween, e)), j;
                            },
                            priority: c,
                        });
                    }),
                    (g.useSVGTransformAttr = !0);
                var Aa,
                    Ba = "scaleX,scaleY,scaleZ,x,y,z,skewX,skewY,rotation,rotationX,rotationY,perspective,xPercent,yPercent".split(","),
                    Ca = Z("transform"),
                    Da = X + "transform",
                    Ea = Z("transformOrigin"),
                    Fa = null !== Z("perspective"),
                    Ga = (S.Transform = function () {
                        (this.perspective = parseFloat(g.defaultTransformPerspective) || 0), (this.force3D = g.defaultForce3D !== !1 && Fa ? g.defaultForce3D || "auto" : !1);
                    }),
                    Ha = _gsScope.SVGElement,
                    Ia = function (a, b, c) {
                        var d,
                            e = O.createElementNS("http://www.w3.org/2000/svg", a),
                            f = /([a-z])([A-Z])/g;
                        for (d in c) e.setAttributeNS(null, d.replace(f, "$1-$2").toLowerCase(), c[d]);
                        return b.appendChild(e), e;
                    },
                    Ja = O.documentElement || {},
                    Ka = (function () {
                        var a,
                            b,
                            c,
                            d = p || (/Android/i.test(T) && !_gsScope.chrome);
                        return (
                            O.createElementNS &&
                                !d &&
                                ((a = Ia("svg", Ja)),
                                (b = Ia("rect", a, { width: 100, height: 50, x: 100 })),
                                (c = b.getBoundingClientRect().width),
                                (b.style[Ea] = "50% 50%"),
                                (b.style[Ca] = "scaleX(0.5)"),
                                (d = c === b.getBoundingClientRect().width && !(n && Fa)),
                                Ja.removeChild(a)),
                            d
                        );
                    })(),
                    La = function (a, b, c, d, e, f) {
                        var h,
                            i,
                            j,
                            k,
                            l,
                            m,
                            n,
                            o,
                            p,
                            q,
                            r,
                            s,
                            t,
                            u,
                            v = a._gsTransform,
                            w = Qa(a, !0);
                        v && ((t = v.xOrigin), (u = v.yOrigin)),
                            (!d || (h = d.split(" ")).length < 2) &&
                                ((n = a.getBBox()),
                                0 === n.x &&
                                    0 === n.y &&
                                    n.width + n.height === 0 &&
                                    (n = {
                                        x: parseFloat(a.hasAttribute("x") ? a.getAttribute("x") : a.hasAttribute("cx") ? a.getAttribute("cx") : 0) || 0,
                                        y: parseFloat(a.hasAttribute("y") ? a.getAttribute("y") : a.hasAttribute("cy") ? a.getAttribute("cy") : 0) || 0,
                                        width: 0,
                                        height: 0,
                                    }),
                                (b = ha(b).split(" ")),
                                (h = [(-1 !== b[0].indexOf("%") ? (parseFloat(b[0]) / 100) * n.width : parseFloat(b[0])) + n.x, (-1 !== b[1].indexOf("%") ? (parseFloat(b[1]) / 100) * n.height : parseFloat(b[1])) + n.y])),
                            (c.xOrigin = k = parseFloat(h[0])),
                            (c.yOrigin = l = parseFloat(h[1])),
                            d &&
                                w !== Pa &&
                                ((m = w[0]),
                                (n = w[1]),
                                (o = w[2]),
                                (p = w[3]),
                                (q = w[4]),
                                (r = w[5]),
                                (s = m * p - n * o),
                                s && ((i = k * (p / s) + l * (-o / s) + (o * r - p * q) / s), (j = k * (-n / s) + l * (m / s) - (m * r - n * q) / s), (k = c.xOrigin = h[0] = i), (l = c.yOrigin = h[1] = j))),
                            v &&
                                (f && ((c.xOffset = v.xOffset), (c.yOffset = v.yOffset), (v = c)),
                                e || (e !== !1 && g.defaultSmoothOrigin !== !1) ? ((i = k - t), (j = l - u), (v.xOffset += i * w[0] + j * w[2] - i), (v.yOffset += i * w[1] + j * w[3] - j)) : (v.xOffset = v.yOffset = 0)),
                            f || a.setAttribute("data-svg-origin", h.join(" "));
                    },
                    Ma = function (a) {
                        var b,
                            c = P("svg", (this.ownerSVGElement && this.ownerSVGElement.getAttribute("xmlns")) || "http://www.w3.org/2000/svg"),
                            d = this.parentNode,
                            e = this.nextSibling,
                            f = this.style.cssText;
                        if ((Ja.appendChild(c), c.appendChild(this), (this.style.display = "block"), a))
                            try {
                                (b = this.getBBox()), (this._originalGetBBox = this.getBBox), (this.getBBox = Ma);
                            } catch (g) {}
                        else this._originalGetBBox && (b = this._originalGetBBox());
                        return e ? d.insertBefore(this, e) : d.appendChild(this), Ja.removeChild(c), (this.style.cssText = f), b;
                    },
                    Na = function (a) {
                        try {
                            return a.getBBox();
                        } catch (b) {
                            return Ma.call(a, !0);
                        }
                    },
                    Oa = function (a) {
                        return !(!Ha || !a.getCTM || (a.parentNode && !a.ownerSVGElement) || !Na(a));
                    },
                    Pa = [1, 0, 0, 1, 0, 0],
                    Qa = function (a, b) {
                        var c,
                            d,
                            e,
                            f,
                            g,
                            h,
                            i = a._gsTransform || new Ga(),
                            j = 1e5,
                            k = a.style;
                        if (
                            (Ca
                                ? (d = _(a, Da, null, !0))
                                : a.currentStyle && ((d = a.currentStyle.filter.match(G)), (d = d && 4 === d.length ? [d[0].substr(4), Number(d[2].substr(4)), Number(d[1].substr(4)), d[3].substr(4), i.x || 0, i.y || 0].join(",") : "")),
                            (c = !d || "none" === d || "matrix(1, 0, 0, 1, 0, 0)" === d),
                            !Ca ||
                                (!(h = !$(a) || "none" === $(a).display) && a.parentNode) ||
                                (h && ((f = k.display), (k.display = "block")),
                                a.parentNode || ((g = 1), Ja.appendChild(a)),
                                (d = _(a, Da, null, !0)),
                                (c = !d || "none" === d || "matrix(1, 0, 0, 1, 0, 0)" === d),
                                f ? (k.display = f) : h && Va(k, "display"),
                                g && Ja.removeChild(a)),
                            (i.svg || (a.getCTM && Oa(a))) &&
                                (c && -1 !== (k[Ca] + "").indexOf("matrix") && ((d = k[Ca]), (c = 0)),
                                (e = a.getAttribute("transform")),
                                c && e && ((e = a.transform.baseVal.consolidate().matrix), (d = "matrix(" + e.a + "," + e.b + "," + e.c + "," + e.d + "," + e.e + "," + e.f + ")"), (c = 0))),
                            c)
                        )
                            return Pa;
                        for (e = (d || "").match(s) || [], wa = e.length; --wa > -1; ) (f = Number(e[wa])), (e[wa] = (g = f - (f |= 0)) ? ((g * j + (0 > g ? -0.5 : 0.5)) | 0) / j + f : f);
                        return b && e.length > 6 ? [e[0], e[1], e[4], e[5], e[12], e[13]] : e;
                    },
                    Ra = (S.getTransform = function (a, c, d, e) {
                        if (a._gsTransform && d && !e) return a._gsTransform;
                        var f,
                            h,
                            i,
                            j,
                            k,
                            l,
                            m = d ? a._gsTransform || new Ga() : new Ga(),
                            n = m.scaleX < 0,
                            o = 2e-5,
                            p = 1e5,
                            q = Fa ? parseFloat(_(a, Ea, c, !1, "0 0 0").split(" ")[2]) || m.zOrigin || 0 : 0,
                            r = parseFloat(g.defaultTransformPerspective) || 0;
                        if (((m.svg = !(!a.getCTM || !Oa(a))), m.svg && (La(a, _(a, Ea, c, !1, "50% 50%") + "", m, a.getAttribute("data-svg-origin")), (Aa = g.useSVGTransformAttr || Ka)), (f = Qa(a)), f !== Pa)) {
                            if (16 === f.length) {
                                var s,
                                    t,
                                    u,
                                    v,
                                    w,
                                    x = f[0],
                                    y = f[1],
                                    z = f[2],
                                    A = f[3],
                                    B = f[4],
                                    C = f[5],
                                    D = f[6],
                                    E = f[7],
                                    F = f[8],
                                    G = f[9],
                                    H = f[10],
                                    I = f[12],
                                    J = f[13],
                                    K = f[14],
                                    M = f[11],
                                    N = Math.atan2(D, H);
                                m.zOrigin && ((K = -m.zOrigin), (I = F * K - f[12]), (J = G * K - f[13]), (K = H * K + m.zOrigin - f[14])),
                                    (m.rotationX = N * L),
                                    N &&
                                        ((v = Math.cos(-N)),
                                        (w = Math.sin(-N)),
                                        (s = B * v + F * w),
                                        (t = C * v + G * w),
                                        (u = D * v + H * w),
                                        (F = B * -w + F * v),
                                        (G = C * -w + G * v),
                                        (H = D * -w + H * v),
                                        (M = E * -w + M * v),
                                        (B = s),
                                        (C = t),
                                        (D = u)),
                                    (N = Math.atan2(-z, H)),
                                    (m.rotationY = N * L),
                                    N && ((v = Math.cos(-N)), (w = Math.sin(-N)), (s = x * v - F * w), (t = y * v - G * w), (u = z * v - H * w), (G = y * w + G * v), (H = z * w + H * v), (M = A * w + M * v), (x = s), (y = t), (z = u)),
                                    (N = Math.atan2(y, x)),
                                    (m.rotation = N * L),
                                    N && ((v = Math.cos(N)), (w = Math.sin(N)), (s = x * v + y * w), (t = B * v + C * w), (u = F * v + G * w), (y = y * v - x * w), (C = C * v - B * w), (G = G * v - F * w), (x = s), (B = t), (F = u)),
                                    m.rotationX && Math.abs(m.rotationX) + Math.abs(m.rotation) > 359.9 && ((m.rotationX = m.rotation = 0), (m.rotationY = 180 - m.rotationY)),
                                    (N = Math.atan2(B, C)),
                                    (m.scaleX = ((Math.sqrt(x * x + y * y + z * z) * p + 0.5) | 0) / p),
                                    (m.scaleY = ((Math.sqrt(C * C + D * D) * p + 0.5) | 0) / p),
                                    (m.scaleZ = ((Math.sqrt(F * F + G * G + H * H) * p + 0.5) | 0) / p),
                                    (x /= m.scaleX),
                                    (B /= m.scaleY),
                                    (y /= m.scaleX),
                                    (C /= m.scaleY),
                                    Math.abs(N) > o ? ((m.skewX = N * L), (B = 0), "simple" !== m.skewType && (m.scaleY *= 1 / Math.cos(N))) : (m.skewX = 0),
                                    (m.perspective = M ? 1 / (0 > M ? -M : M) : 0),
                                    (m.x = I),
                                    (m.y = J),
                                    (m.z = K),
                                    m.svg && ((m.x -= m.xOrigin - (m.xOrigin * x - m.yOrigin * B)), (m.y -= m.yOrigin - (m.yOrigin * y - m.xOrigin * C)));
                            } else if (!Fa || e || !f.length || m.x !== f[4] || m.y !== f[5] || (!m.rotationX && !m.rotationY)) {
                                var O = f.length >= 6,
                                    P = O ? f[0] : 1,
                                    Q = f[1] || 0,
                                    R = f[2] || 0,
                                    S = O ? f[3] : 1;
                                (m.x = f[4] || 0),
                                    (m.y = f[5] || 0),
                                    (i = Math.sqrt(P * P + Q * Q)),
                                    (j = Math.sqrt(S * S + R * R)),
                                    (k = P || Q ? Math.atan2(Q, P) * L : m.rotation || 0),
                                    (l = R || S ? Math.atan2(R, S) * L + k : m.skewX || 0),
                                    (m.scaleX = i),
                                    (m.scaleY = j),
                                    (m.rotation = k),
                                    (m.skewX = l),
                                    Fa && ((m.rotationX = m.rotationY = m.z = 0), (m.perspective = r), (m.scaleZ = 1)),
                                    m.svg && ((m.x -= m.xOrigin - (m.xOrigin * P + m.yOrigin * R)), (m.y -= m.yOrigin - (m.xOrigin * Q + m.yOrigin * S)));
                            }
                            Math.abs(m.skewX) > 90 &&
                                Math.abs(m.skewX) < 270 &&
                                (n ? ((m.scaleX *= -1), (m.skewX += m.rotation <= 0 ? 180 : -180), (m.rotation += m.rotation <= 0 ? 180 : -180)) : ((m.scaleY *= -1), (m.skewX += m.skewX <= 0 ? 180 : -180))),
                                (m.zOrigin = q);
                            for (h in m) m[h] < o && m[h] > -o && (m[h] = 0);
                        }
                        return (
                            d &&
                                ((a._gsTransform = m),
                                m.svg &&
                                    (Aa && a.style[Ca]
                                        ? b.delayedCall(0.001, function () {
                                              Va(a.style, Ca);
                                          })
                                        : !Aa &&
                                          a.getAttribute("transform") &&
                                          b.delayedCall(0.001, function () {
                                              a.removeAttribute("transform");
                                          }))),
                            m
                        );
                    }),
                    Sa = function (a) {
                        var b,
                            c,
                            d = this.data,
                            e = -d.rotation * K,
                            f = e + d.skewX * K,
                            g = 1e5,
                            h = ((Math.cos(e) * d.scaleX * g) | 0) / g,
                            i = ((Math.sin(e) * d.scaleX * g) | 0) / g,
                            j = ((Math.sin(f) * -d.scaleY * g) | 0) / g,
                            k = ((Math.cos(f) * d.scaleY * g) | 0) / g,
                            l = this.t.style,
                            m = this.t.currentStyle;
                        if (m) {
                            (c = i), (i = -j), (j = -c), (b = m.filter), (l.filter = "");
                            var n,
                                o,
                                q = this.t.offsetWidth,
                                r = this.t.offsetHeight,
                                s = "absolute" !== m.position,
                                t = "progid:DXImageTransform.Microsoft.Matrix(M11=" + h + ", M12=" + i + ", M21=" + j + ", M22=" + k,
                                u = d.x + (q * d.xPercent) / 100,
                                v = d.y + (r * d.yPercent) / 100;
                            if (
                                (null != d.ox && ((n = (d.oxp ? q * d.ox * 0.01 : d.ox) - q / 2), (o = (d.oyp ? r * d.oy * 0.01 : d.oy) - r / 2), (u += n - (n * h + o * i)), (v += o - (n * j + o * k))),
                                s ? ((n = q / 2), (o = r / 2), (t += ", Dx=" + (n - (n * h + o * i) + u) + ", Dy=" + (o - (n * j + o * k) + v) + ")")) : (t += ", sizingMethod='auto expand')"),
                                -1 !== b.indexOf("DXImageTransform.Microsoft.Matrix(") ? (l.filter = b.replace(H, t)) : (l.filter = t + " " + b),
                                (0 === a || 1 === a) &&
                                    1 === h &&
                                    0 === i &&
                                    0 === j &&
                                    1 === k &&
                                    ((s && -1 === t.indexOf("Dx=0, Dy=0")) || (x.test(b) && 100 !== parseFloat(RegExp.$1)) || (-1 === b.indexOf(b.indexOf("Alpha")) && l.removeAttribute("filter"))),
                                !s)
                            ) {
                                var y,
                                    z,
                                    A,
                                    B = 8 > p ? 1 : -1;
                                for (
                                    n = d.ieOffsetX || 0,
                                        o = d.ieOffsetY || 0,
                                        d.ieOffsetX = Math.round((q - ((0 > h ? -h : h) * q + (0 > i ? -i : i) * r)) / 2 + u),
                                        d.ieOffsetY = Math.round((r - ((0 > k ? -k : k) * r + (0 > j ? -j : j) * q)) / 2 + v),
                                        wa = 0;
                                    4 > wa;
                                    wa++
                                )
                                    (z = fa[wa]),
                                        (y = m[z]),
                                        (c = -1 !== y.indexOf("px") ? parseFloat(y) : aa(this.t, z, parseFloat(y), y.replace(w, "")) || 0),
                                        (A = c !== d[z] ? (2 > wa ? -d.ieOffsetX : -d.ieOffsetY) : 2 > wa ? n - d.ieOffsetX : o - d.ieOffsetY),
                                        (l[z] = (d[z] = Math.round(c - A * (0 === wa || 2 === wa ? 1 : B))) + "px");
                            }
                        }
                    },
                    Ta = (S.set3DTransformRatio = S.setTransformRatio = function (a) {
                        var b,
                            c,
                            d,
                            e,
                            f,
                            g,
                            h,
                            i,
                            j,
                            k,
                            l,
                            m,
                            o,
                            p,
                            q,
                            r,
                            s,
                            t,
                            u,
                            v,
                            w,
                            x,
                            y,
                            z = this.data,
                            A = this.t.style,
                            B = z.rotation,
                            C = z.rotationX,
                            D = z.rotationY,
                            E = z.scaleX,
                            F = z.scaleY,
                            G = z.scaleZ,
                            H = z.x,
                            I = z.y,
                            J = z.z,
                            L = z.svg,
                            M = z.perspective,
                            N = z.force3D,
                            O = z.skewY,
                            P = z.skewX;
                        if (
                            (O && ((P += O), (B += O)),
                            ((((1 === a || 0 === a) && "auto" === N && (this.tween._totalTime === this.tween._totalDuration || !this.tween._totalTime)) || !N) && !J && !M && !D && !C && 1 === G) || (Aa && L) || !Fa)
                        )
                            return void (B || P || L
                                ? ((B *= K),
                                  (x = P * K),
                                  (y = 1e5),
                                  (c = Math.cos(B) * E),
                                  (f = Math.sin(B) * E),
                                  (d = Math.sin(B - x) * -F),
                                  (g = Math.cos(B - x) * F),
                                  x && "simple" === z.skewType && ((b = Math.tan(x - O * K)), (b = Math.sqrt(1 + b * b)), (d *= b), (g *= b), O && ((b = Math.tan(O * K)), (b = Math.sqrt(1 + b * b)), (c *= b), (f *= b))),
                                  L &&
                                      ((H += z.xOrigin - (z.xOrigin * c + z.yOrigin * d) + z.xOffset),
                                      (I += z.yOrigin - (z.xOrigin * f + z.yOrigin * g) + z.yOffset),
                                      Aa && (z.xPercent || z.yPercent) && ((q = this.t.getBBox()), (H += 0.01 * z.xPercent * q.width), (I += 0.01 * z.yPercent * q.height)),
                                      (q = 1e-6),
                                      q > H && H > -q && (H = 0),
                                      q > I && I > -q && (I = 0)),
                                  (u = ((c * y) | 0) / y + "," + ((f * y) | 0) / y + "," + ((d * y) | 0) / y + "," + ((g * y) | 0) / y + "," + H + "," + I + ")"),
                                  L && Aa ? this.t.setAttribute("transform", "matrix(" + u) : (A[Ca] = (z.xPercent || z.yPercent ? "translate(" + z.xPercent + "%," + z.yPercent + "%) matrix(" : "matrix(") + u))
                                : (A[Ca] = (z.xPercent || z.yPercent ? "translate(" + z.xPercent + "%," + z.yPercent + "%) matrix(" : "matrix(") + E + ",0,0," + F + "," + H + "," + I + ")"));
                        if ((n && ((q = 1e-4), q > E && E > -q && (E = G = 2e-5), q > F && F > -q && (F = G = 2e-5), !M || z.z || z.rotationX || z.rotationY || (M = 0)), B || P))
                            (B *= K),
                                (r = c = Math.cos(B)),
                                (s = f = Math.sin(B)),
                                P &&
                                    ((B -= P * K),
                                    (r = Math.cos(B)),
                                    (s = Math.sin(B)),
                                    "simple" === z.skewType && ((b = Math.tan((P - O) * K)), (b = Math.sqrt(1 + b * b)), (r *= b), (s *= b), z.skewY && ((b = Math.tan(O * K)), (b = Math.sqrt(1 + b * b)), (c *= b), (f *= b)))),
                                (d = -s),
                                (g = r);
                        else {
                            if (!(D || C || 1 !== G || M || L))
                                return void (A[Ca] =
                                    (z.xPercent || z.yPercent ? "translate(" + z.xPercent + "%," + z.yPercent + "%) translate3d(" : "translate3d(") +
                                    H +
                                    "px," +
                                    I +
                                    "px," +
                                    J +
                                    "px)" +
                                    (1 !== E || 1 !== F ? " scale(" + E + "," + F + ")" : ""));
                            (c = g = 1), (d = f = 0);
                        }
                        (k = 1),
                            (e = h = i = j = l = m = 0),
                            (o = M ? -1 / M : 0),
                            (p = z.zOrigin),
                            (q = 1e-6),
                            (v = ","),
                            (w = "0"),
                            (B = D * K),
                            B && ((r = Math.cos(B)), (s = Math.sin(B)), (i = -s), (l = o * -s), (e = c * s), (h = f * s), (k = r), (o *= r), (c *= r), (f *= r)),
                            (B = C * K),
                            B && ((r = Math.cos(B)), (s = Math.sin(B)), (b = d * r + e * s), (t = g * r + h * s), (j = k * s), (m = o * s), (e = d * -s + e * r), (h = g * -s + h * r), (k *= r), (o *= r), (d = b), (g = t)),
                            1 !== G && ((e *= G), (h *= G), (k *= G), (o *= G)),
                            1 !== F && ((d *= F), (g *= F), (j *= F), (m *= F)),
                            1 !== E && ((c *= E), (f *= E), (i *= E), (l *= E)),
                            (p || L) &&
                                (p && ((H += e * -p), (I += h * -p), (J += k * -p + p)),
                                L && ((H += z.xOrigin - (z.xOrigin * c + z.yOrigin * d) + z.xOffset), (I += z.yOrigin - (z.xOrigin * f + z.yOrigin * g) + z.yOffset)),
                                q > H && H > -q && (H = w),
                                q > I && I > -q && (I = w),
                                q > J && J > -q && (J = 0)),
                            (u = z.xPercent || z.yPercent ? "translate(" + z.xPercent + "%," + z.yPercent + "%) matrix3d(" : "matrix3d("),
                            (u += (q > c && c > -q ? w : c) + v + (q > f && f > -q ? w : f) + v + (q > i && i > -q ? w : i)),
                            (u += v + (q > l && l > -q ? w : l) + v + (q > d && d > -q ? w : d) + v + (q > g && g > -q ? w : g)),
                            C || D || 1 !== G
                                ? ((u += v + (q > j && j > -q ? w : j) + v + (q > m && m > -q ? w : m) + v + (q > e && e > -q ? w : e)),
                                  (u += v + (q > h && h > -q ? w : h) + v + (q > k && k > -q ? w : k) + v + (q > o && o > -q ? w : o) + v))
                                : (u += ",0,0,0,0,1,0,"),
                            (u += H + v + I + v + J + v + (M ? 1 + -J / M : 1) + ")"),
                            (A[Ca] = u);
                    });
                (j = Ga.prototype),
                    (j.x = j.y = j.z = j.skewX = j.skewY = j.rotation = j.rotationX = j.rotationY = j.zOrigin = j.xPercent = j.yPercent = j.xOffset = j.yOffset = 0),
                    (j.scaleX = j.scaleY = j.scaleZ = 1),
                    ya(
                        "transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,svgOrigin,transformPerspective,directionalRotation,parseTransform,force3D,skewType,xPercent,yPercent,smoothOrigin",
                        {
                            parser: function (a, b, c, d, f, h, i) {
                                if (d._lastParsedTransform === i) return f;
                                d._lastParsedTransform = i;
                                var j,
                                    k = i.scale && "function" == typeof i.scale ? i.scale : 0;
                                "function" == typeof i[c] && ((j = i[c]), (i[c] = b)), k && (i.scale = k(r, a));
                                var l,
                                    m,
                                    n,
                                    o,
                                    p,
                                    s,
                                    t,
                                    u,
                                    v,
                                    w = a._gsTransform,
                                    x = a.style,
                                    y = 1e-6,
                                    z = Ba.length,
                                    A = i,
                                    B = {},
                                    C = "transformOrigin",
                                    D = Ra(a, e, !0, A.parseTransform),
                                    E = A.transform && ("function" == typeof A.transform ? A.transform(r, q) : A.transform);
                                if (((D.skewType = A.skewType || D.skewType || g.defaultSkewType), (d._transform = D), E && "string" == typeof E && Ca))
                                    (m = Q.style),
                                        (m[Ca] = E),
                                        (m.display = "block"),
                                        (m.position = "absolute"),
                                        O.body.appendChild(Q),
                                        (l = Ra(Q, null, !1)),
                                        "simple" === D.skewType && (l.scaleY *= Math.cos(l.skewX * K)),
                                        D.svg &&
                                            ((s = D.xOrigin),
                                            (t = D.yOrigin),
                                            (l.x -= D.xOffset),
                                            (l.y -= D.yOffset),
                                            (A.transformOrigin || A.svgOrigin) &&
                                                ((E = {}), La(a, ha(A.transformOrigin), E, A.svgOrigin, A.smoothOrigin, !0), (s = E.xOrigin), (t = E.yOrigin), (l.x -= E.xOffset - D.xOffset), (l.y -= E.yOffset - D.yOffset)),
                                            (s || t) && ((u = Qa(Q, !0)), (l.x -= s - (s * u[0] + t * u[2])), (l.y -= t - (s * u[1] + t * u[3])))),
                                        O.body.removeChild(Q),
                                        l.perspective || (l.perspective = D.perspective),
                                        null != A.xPercent && (l.xPercent = ja(A.xPercent, D.xPercent)),
                                        null != A.yPercent && (l.yPercent = ja(A.yPercent, D.yPercent));
                                else if ("object" == typeof A) {
                                    if (
                                        ((l = {
                                            scaleX: ja(null != A.scaleX ? A.scaleX : A.scale, D.scaleX),
                                            scaleY: ja(null != A.scaleY ? A.scaleY : A.scale, D.scaleY),
                                            scaleZ: ja(A.scaleZ, D.scaleZ),
                                            x: ja(A.x, D.x),
                                            y: ja(A.y, D.y),
                                            z: ja(A.z, D.z),
                                            xPercent: ja(A.xPercent, D.xPercent),
                                            yPercent: ja(A.yPercent, D.yPercent),
                                            perspective: ja(A.transformPerspective, D.perspective),
                                        }),
                                        (p = A.directionalRotation),
                                        null != p)
                                    )
                                        if ("object" == typeof p) for (m in p) A[m] = p[m];
                                        else A.rotation = p;
                                    "string" == typeof A.x && -1 !== A.x.indexOf("%") && ((l.x = 0), (l.xPercent = ja(A.x, D.xPercent))),
                                        "string" == typeof A.y && -1 !== A.y.indexOf("%") && ((l.y = 0), (l.yPercent = ja(A.y, D.yPercent))),
                                        (l.rotation = ka("rotation" in A ? A.rotation : "shortRotation" in A ? A.shortRotation + "_short" : "rotationZ" in A ? A.rotationZ : D.rotation, D.rotation, "rotation", B)),
                                        Fa &&
                                            ((l.rotationX = ka("rotationX" in A ? A.rotationX : "shortRotationX" in A ? A.shortRotationX + "_short" : D.rotationX || 0, D.rotationX, "rotationX", B)),
                                            (l.rotationY = ka("rotationY" in A ? A.rotationY : "shortRotationY" in A ? A.shortRotationY + "_short" : D.rotationY || 0, D.rotationY, "rotationY", B))),
                                        (l.skewX = ka(A.skewX, D.skewX)),
                                        (l.skewY = ka(A.skewY, D.skewY));
                                }
                                for (
                                    Fa && null != A.force3D && ((D.force3D = A.force3D), (o = !0)),
                                        n = D.force3D || D.z || D.rotationX || D.rotationY || l.z || l.rotationX || l.rotationY || l.perspective,
                                        n || null == A.scale || (l.scaleZ = 1);
                                    --z > -1;

                                )
                                    (v = Ba[z]),
                                        (E = l[v] - D[v]),
                                        (E > y || -y > E || null != A[v] || null != M[v]) && ((o = !0), (f = new ta(D, v, D[v], E, f)), v in B && (f.e = B[v]), (f.xs0 = 0), (f.plugin = h), d._overwriteProps.push(f.n));
                                return (
                                    (E = A.transformOrigin),
                                    D.svg &&
                                        (E || A.svgOrigin) &&
                                        ((s = D.xOffset),
                                        (t = D.yOffset),
                                        La(a, ha(E), l, A.svgOrigin, A.smoothOrigin),
                                        (f = ua(D, "xOrigin", (w ? D : l).xOrigin, l.xOrigin, f, C)),
                                        (f = ua(D, "yOrigin", (w ? D : l).yOrigin, l.yOrigin, f, C)),
                                        (s !== D.xOffset || t !== D.yOffset) && ((f = ua(D, "xOffset", w ? s : D.xOffset, D.xOffset, f, C)), (f = ua(D, "yOffset", w ? t : D.yOffset, D.yOffset, f, C))),
                                        (E = "0px 0px")),
                                    (E || (Fa && n && D.zOrigin)) &&
                                        (Ca
                                            ? ((o = !0),
                                              (v = Ea),
                                              (E = (E || _(a, v, e, !1, "50% 50%")) + ""),
                                              (f = new ta(x, v, 0, 0, f, -1, C)),
                                              (f.b = x[v]),
                                              (f.plugin = h),
                                              Fa
                                                  ? ((m = D.zOrigin),
                                                    (E = E.split(" ")),
                                                    (D.zOrigin = (E.length > 2 && (0 === m || "0px" !== E[2]) ? parseFloat(E[2]) : m) || 0),
                                                    (f.xs0 = f.e = E[0] + " " + (E[1] || "50%") + " 0px"),
                                                    (f = new ta(D, "zOrigin", 0, 0, f, -1, f.n)),
                                                    (f.b = m),
                                                    (f.xs0 = f.e = D.zOrigin))
                                                  : (f.xs0 = f.e = E))
                                            : ha(E + "", D)),
                                    o && (d._transformType = (D.svg && Aa) || (!n && 3 !== this._transformType) ? 2 : 3),
                                    j && (i[c] = j),
                                    k && (i.scale = k),
                                    f
                                );
                            },
                            prefix: !0,
                        }
                    ),
                    ya("boxShadow", { defaultValue: "0px 0px 0px 0px #999", prefix: !0, color: !0, multi: !0, keyword: "inset" }),
                    ya("borderRadius", {
                        defaultValue: "0px",
                        parser: function (a, b, c, f, g, h) {
                            b = this.format(b);
                            var i,
                                j,
                                k,
                                l,
                                m,
                                n,
                                o,
                                p,
                                q,
                                r,
                                s,
                                t,
                                u,
                                v,
                                w,
                                x,
                                y = ["borderTopLeftRadius", "borderTopRightRadius", "borderBottomRightRadius", "borderBottomLeftRadius"],
                                z = a.style;
                            for (q = parseFloat(a.offsetWidth), r = parseFloat(a.offsetHeight), i = b.split(" "), j = 0; j < y.length; j++)
                                this.p.indexOf("border") && (y[j] = Z(y[j])),
                                    (m = l = _(a, y[j], e, !1, "0px")),
                                    -1 !== m.indexOf(" ") && ((l = m.split(" ")), (m = l[0]), (l = l[1])),
                                    (n = k = i[j]),
                                    (o = parseFloat(m)),
                                    (t = m.substr((o + "").length)),
                                    (u = "=" === n.charAt(1)),
                                    u ? ((p = parseInt(n.charAt(0) + "1", 10)), (n = n.substr(2)), (p *= parseFloat(n)), (s = n.substr((p + "").length - (0 > p ? 1 : 0)) || "")) : ((p = parseFloat(n)), (s = n.substr((p + "").length))),
                                    "" === s && (s = d[c] || t),
                                    s !== t &&
                                        ((v = aa(a, "borderLeft", o, t)),
                                        (w = aa(a, "borderTop", o, t)),
                                        "%" === s ? ((m = (v / q) * 100 + "%"), (l = (w / r) * 100 + "%")) : "em" === s ? ((x = aa(a, "borderLeft", 1, "em")), (m = v / x + "em"), (l = w / x + "em")) : ((m = v + "px"), (l = w + "px")),
                                        u && ((n = parseFloat(m) + p + s), (k = parseFloat(l) + p + s))),
                                    (g = va(z, y[j], m + " " + l, n + " " + k, !1, "0px", g));
                            return g;
                        },
                        prefix: !0,
                        formatter: qa("0px 0px 0px 0px", !1, !0),
                    }),
                    ya("borderBottomLeftRadius,borderBottomRightRadius,borderTopLeftRadius,borderTopRightRadius", {
                        defaultValue: "0px",
                        parser: function (a, b, c, d, f, g) {
                            return va(a.style, c, this.format(_(a, c, e, !1, "0px 0px")), this.format(b), !1, "0px", f);
                        },
                        prefix: !0,
                        formatter: qa("0px 0px", !1, !0),
                    }),
                    ya("backgroundPosition", {
                        defaultValue: "0 0",
                        parser: function (a, b, c, d, f, g) {
                            var h,
                                i,
                                j,
                                k,
                                l,
                                m,
                                n = "background-position",
                                o = e || $(a, null),
                                q = this.format((o ? (p ? o.getPropertyValue(n + "-x") + " " + o.getPropertyValue(n + "-y") : o.getPropertyValue(n)) : a.currentStyle.backgroundPositionX + " " + a.currentStyle.backgroundPositionY) || "0 0"),
                                r = this.format(b);
                            if ((-1 !== q.indexOf("%")) != (-1 !== r.indexOf("%")) && r.split(",").length < 2 && ((m = _(a, "backgroundImage").replace(D, "")), m && "none" !== m)) {
                                for (h = q.split(" "), i = r.split(" "), R.setAttribute("src", m), j = 2; --j > -1; )
                                    (q = h[j]),
                                        (k = -1 !== q.indexOf("%")),
                                        k !== (-1 !== i[j].indexOf("%")) && ((l = 0 === j ? a.offsetWidth - R.width : a.offsetHeight - R.height), (h[j] = k ? (parseFloat(q) / 100) * l + "px" : (parseFloat(q) / l) * 100 + "%"));
                                q = h.join(" ");
                            }
                            return this.parseComplex(a.style, q, r, f, g);
                        },
                        formatter: ha,
                    }),
                    ya("backgroundSize", {
                        defaultValue: "0 0",
                        formatter: function (a) {
                            return (a += ""), ha(-1 === a.indexOf(" ") ? a + " " + a : a);
                        },
                    }),
                    ya("perspective", { defaultValue: "0px", prefix: !0 }),
                    ya("perspectiveOrigin", { defaultValue: "50% 50%", prefix: !0 }),
                    ya("transformStyle", { prefix: !0 }),
                    ya("backfaceVisibility", { prefix: !0 }),
                    ya("userSelect", { prefix: !0 }),
                    ya("margin", { parser: ra("marginTop,marginRight,marginBottom,marginLeft") }),
                    ya("padding", { parser: ra("paddingTop,paddingRight,paddingBottom,paddingLeft") }),
                    ya("clip", {
                        defaultValue: "rect(0px,0px,0px,0px)",
                        parser: function (a, b, c, d, f, g) {
                            var h, i, j;
                            return (
                                9 > p
                                    ? ((i = a.currentStyle), (j = 8 > p ? " " : ","), (h = "rect(" + i.clipTop + j + i.clipRight + j + i.clipBottom + j + i.clipLeft + ")"), (b = this.format(b).split(",").join(j)))
                                    : ((h = this.format(_(a, this.p, e, !1, this.dflt))), (b = this.format(b))),
                                this.parseComplex(a.style, h, b, f, g)
                            );
                        },
                    }),
                    ya("textShadow", { defaultValue: "0px 0px 0px #999", color: !0, multi: !0 }),
                    ya("autoRound,strictUnits", {
                        parser: function (a, b, c, d, e) {
                            return e;
                        },
                    }),
                    ya("border", {
                        defaultValue: "0px solid #000",
                        parser: function (a, b, c, d, f, g) {
                            var h = _(a, "borderTopWidth", e, !1, "0px"),
                                i = this.format(b).split(" "),
                                j = i[0].replace(w, "");
                            return (
                                "px" !== j && (h = parseFloat(h) / aa(a, "borderTopWidth", 1, j) + j),
                                this.parseComplex(a.style, this.format(h + " " + _(a, "borderTopStyle", e, !1, "solid") + " " + _(a, "borderTopColor", e, !1, "#000")), i.join(" "), f, g)
                            );
                        },
                        color: !0,
                        formatter: function (a) {
                            var b = a.split(" ");
                            return b[0] + " " + (b[1] || "solid") + " " + (a.match(pa) || ["#000"])[0];
                        },
                    }),
                    ya("borderWidth", { parser: ra("borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth") }),
                    ya("float,cssFloat,styleFloat", {
                        parser: function (a, b, c, d, e, f) {
                            var g = a.style,
                                h = "cssFloat" in g ? "cssFloat" : "styleFloat";
                            return new ta(g, h, 0, 0, e, -1, c, !1, 0, g[h], b);
                        },
                    });
                var Ua = function (a) {
                    var b,
                        c = this.t,
                        d = c.filter || _(this.data, "filter") || "",
                        e = (this.s + this.c * a) | 0;
                    100 === e && (-1 === d.indexOf("atrix(") && -1 === d.indexOf("radient(") && -1 === d.indexOf("oader(") ? (c.removeAttribute("filter"), (b = !_(this.data, "filter"))) : ((c.filter = d.replace(z, "")), (b = !0))),
                        b || (this.xn1 && (c.filter = d = d || "alpha(opacity=" + e + ")"), -1 === d.indexOf("pacity") ? (0 === e && this.xn1) || (c.filter = d + " alpha(opacity=" + e + ")") : (c.filter = d.replace(x, "opacity=" + e)));
                };
                ya("opacity,alpha,autoAlpha", {
                    defaultValue: "1",
                    parser: function (a, b, c, d, f, g) {
                        var h = parseFloat(_(a, "opacity", e, !1, "1")),
                            i = a.style,
                            j = "autoAlpha" === c;
                        return (
                            "string" == typeof b && "=" === b.charAt(1) && (b = ("-" === b.charAt(0) ? -1 : 1) * parseFloat(b.substr(2)) + h),
                            j && 1 === h && "hidden" === _(a, "visibility", e) && 0 !== b && (h = 0),
                            U
                                ? (f = new ta(i, "opacity", h, b - h, f))
                                : ((f = new ta(i, "opacity", 100 * h, 100 * (b - h), f)),
                                  (f.xn1 = j ? 1 : 0),
                                  (i.zoom = 1),
                                  (f.type = 2),
                                  (f.b = "alpha(opacity=" + f.s + ")"),
                                  (f.e = "alpha(opacity=" + (f.s + f.c) + ")"),
                                  (f.data = a),
                                  (f.plugin = g),
                                  (f.setRatio = Ua)),
                            j && ((f = new ta(i, "visibility", 0, 0, f, -1, null, !1, 0, 0 !== h ? "inherit" : "hidden", 0 === b ? "hidden" : "inherit")), (f.xs0 = "inherit"), d._overwriteProps.push(f.n), d._overwriteProps.push(c)),
                            f
                        );
                    },
                });
                var Va = function (a, b) {
                        b && (a.removeProperty ? (("ms" === b.substr(0, 2) || "webkit" === b.substr(0, 6)) && (b = "-" + b), a.removeProperty(b.replace(B, "-$1").toLowerCase())) : a.removeAttribute(b));
                    },
                    Wa = function (a) {
                        if (((this.t._gsClassPT = this), 1 === a || 0 === a)) {
                            this.t.setAttribute("class", 0 === a ? this.b : this.e);
                            for (var b = this.data, c = this.t.style; b; ) b.v ? (c[b.p] = b.v) : Va(c, b.p), (b = b._next);
                            1 === a && this.t._gsClassPT === this && (this.t._gsClassPT = null);
                        } else this.t.getAttribute("class") !== this.e && this.t.setAttribute("class", this.e);
                    };
                ya("className", {
                    parser: function (a, b, d, f, g, h, i) {
                        var j,
                            k,
                            l,
                            m,
                            n,
                            o = a.getAttribute("class") || "",
                            p = a.style.cssText;
                        if (((g = f._classNamePT = new ta(a, d, 0, 0, g, 2)), (g.setRatio = Wa), (g.pr = -11), (c = !0), (g.b = o), (k = ca(a, e)), (l = a._gsClassPT))) {
                            for (m = {}, n = l.data; n; ) (m[n.p] = 1), (n = n._next);
                            l.setRatio(1);
                        }
                        return (
                            (a._gsClassPT = g),
                            (g.e = "=" !== b.charAt(1) ? b : o.replace(new RegExp("(?:\\s|^)" + b.substr(2) + "(?![\\w-])"), "") + ("+" === b.charAt(0) ? " " + b.substr(2) : "")),
                            a.setAttribute("class", g.e),
                            (j = da(a, k, ca(a), i, m)),
                            a.setAttribute("class", o),
                            (g.data = j.firstMPT),
                            (a.style.cssText = p),
                            (g = g.xfirst = f.parse(a, j.difs, g, h))
                        );
                    },
                });
                var Xa = function (a) {
                    if ((1 === a || 0 === a) && this.data._totalTime === this.data._totalDuration && "isFromStart" !== this.data.data) {
                        var b,
                            c,
                            d,
                            e,
                            f,
                            g = this.t.style,
                            h = i.transform.parse;
                        if ("all" === this.e) (g.cssText = ""), (e = !0);
                        else for (b = this.e.split(" ").join("").split(","), d = b.length; --d > -1; ) (c = b[d]), i[c] && (i[c].parse === h ? (e = !0) : (c = "transformOrigin" === c ? Ea : i[c].p)), Va(g, c);
                        e && (Va(g, Ca), (f = this.t._gsTransform), f && (f.svg && (this.t.removeAttribute("data-svg-origin"), this.t.removeAttribute("transform")), delete this.t._gsTransform));
                    }
                };
                for (
                    ya("clearProps", {
                        parser: function (a, b, d, e, f) {
                            return (f = new ta(a, d, 0, 0, f, 2)), (f.setRatio = Xa), (f.e = b), (f.pr = -10), (f.data = e._tween), (c = !0), f;
                        },
                    }),
                        j = "bezier,throwProps,physicsProps,physics2D".split(","),
                        wa = j.length;
                    wa--;

                )
                    za(j[wa]);
                (j = g.prototype),
                    (j._firstPT = j._lastParsedTransform = j._transform = null),
                    (j._onInitTween = function (a, b, h, j) {
                        if (!a.nodeType) return !1;
                        (this._target = q = a), (this._tween = h), (this._vars = b), (r = j), (k = b.autoRound), (c = !1), (d = b.suffixMap || g.suffixMap), (e = $(a, "")), (f = this._overwriteProps);
                        var n,
                            p,
                            s,
                            t,
                            u,
                            v,
                            w,
                            x,
                            z,
                            A = a.style;
                        if (
                            (l && "" === A.zIndex && ((n = _(a, "zIndex", e)), ("auto" === n || "" === n) && this._addLazySet(A, "zIndex", 0)),
                            "string" == typeof b && ((t = A.cssText), (n = ca(a, e)), (A.cssText = t + ";" + b), (n = da(a, n, ca(a)).difs), !U && y.test(b) && (n.opacity = parseFloat(RegExp.$1)), (b = n), (A.cssText = t)),
                            b.className ? (this._firstPT = p = i.className.parse(a, b.className, "className", this, null, null, b)) : (this._firstPT = p = this.parse(a, b, null)),
                            this._transformType)
                        ) {
                            for (
                                z = 3 === this._transformType,
                                    Ca
                                        ? m &&
                                          ((l = !0),
                                          "" === A.zIndex && ((w = _(a, "zIndex", e)), ("auto" === w || "" === w) && this._addLazySet(A, "zIndex", 0)),
                                          o && this._addLazySet(A, "WebkitBackfaceVisibility", this._vars.WebkitBackfaceVisibility || (z ? "visible" : "hidden")))
                                        : (A.zoom = 1),
                                    s = p;
                                s && s._next;

                            )
                                s = s._next;
                            (x = new ta(a, "transform", 0, 0, null, 2)), this._linkCSSP(x, null, s), (x.setRatio = Ca ? Ta : Sa), (x.data = this._transform || Ra(a, e, !0)), (x.tween = h), (x.pr = -1), f.pop();
                        }
                        if (c) {
                            for (; p; ) {
                                for (v = p._next, s = t; s && s.pr > p.pr; ) s = s._next;
                                (p._prev = s ? s._prev : u) ? (p._prev._next = p) : (t = p), (p._next = s) ? (s._prev = p) : (u = p), (p = v);
                            }
                            this._firstPT = t;
                        }
                        return !0;
                    }),
                    (j.parse = function (a, b, c, f) {
                        var g,
                            h,
                            j,
                            l,
                            m,
                            n,
                            o,
                            p,
                            s,
                            t,
                            u = a.style;
                        for (g in b) {
                            if (((n = b[g]), "function" == typeof n && (n = n(r, q)), (h = i[g]))) c = h.parse(a, n, g, this, c, f, b);
                            else {
                                if ("--" === g.substr(0, 2)) {
                                    this._tween._propLookup[g] = this._addTween.call(this._tween, a.style, "setProperty", $(a).getPropertyValue(g) + "", n + "", g, !1, g);
                                    continue;
                                }
                                (m = _(a, g, e) + ""),
                                    (s = "string" == typeof n),
                                    "color" === g || "fill" === g || "stroke" === g || -1 !== g.indexOf("Color") || (s && A.test(n))
                                        ? (s || ((n = na(n)), (n = (n.length > 3 ? "rgba(" : "rgb(") + n.join(",") + ")")), (c = va(u, g, m, n, !0, "transparent", c, 0, f)))
                                        : s && J.test(n)
                                        ? (c = va(u, g, m, n, !0, null, c, 0, f))
                                        : ((j = parseFloat(m)),
                                          (o = j || 0 === j ? m.substr((j + "").length) : ""),
                                          ("" === m || "auto" === m) &&
                                              ("width" === g || "height" === g ? ((j = ga(a, g, e)), (o = "px")) : "left" === g || "top" === g ? ((j = ba(a, g, e)), (o = "px")) : ((j = "opacity" !== g ? 0 : 1), (o = ""))),
                                          (t = s && "=" === n.charAt(1)),
                                          t ? ((l = parseInt(n.charAt(0) + "1", 10)), (n = n.substr(2)), (l *= parseFloat(n)), (p = n.replace(w, ""))) : ((l = parseFloat(n)), (p = s ? n.replace(w, "") : "")),
                                          "" === p && (p = g in d ? d[g] : o),
                                          (n = l || 0 === l ? (t ? l + j : l) + p : b[g]),
                                          o !== p &&
                                              ("" !== p || "lineHeight" === g) &&
                                              (l || 0 === l) &&
                                              j &&
                                              ((j = aa(a, g, j, o)),
                                              "%" === p
                                                  ? ((j /= aa(a, g, 100, "%") / 100), b.strictUnits !== !0 && (m = j + "%"))
                                                  : "em" === p || "rem" === p || "vw" === p || "vh" === p
                                                  ? (j /= aa(a, g, 1, p))
                                                  : "px" !== p && ((l = aa(a, g, l, p)), (p = "px")),
                                              t && (l || 0 === l) && (n = l + j + p)),
                                          t && (l += j),
                                          (!j && 0 !== j) || (!l && 0 !== l)
                                              ? void 0 !== u[g] && (n || (n + "" != "NaN" && null != n))
                                                  ? ((c = new ta(u, g, l || j || 0, 0, c, -1, g, !1, 0, m, n)), (c.xs0 = "none" !== n || ("display" !== g && -1 === g.indexOf("Style")) ? n : m))
                                                  : W("invalid " + g + " tween value: " + b[g])
                                              : ((c = new ta(u, g, j, l - j, c, 0, g, k !== !1 && ("px" === p || "zIndex" === g), 0, m, n)), (c.xs0 = p)));
                            }
                            f && c && !c.plugin && (c.plugin = f);
                        }
                        return c;
                    }),
                    (j.setRatio = function (a) {
                        var b,
                            c,
                            d,
                            e = this._firstPT,
                            f = 1e-6;
                        if (1 !== a || (this._tween._time !== this._tween._duration && 0 !== this._tween._time))
                            if (a || (this._tween._time !== this._tween._duration && 0 !== this._tween._time) || this._tween._rawPrevTime === -1e-6)
                                for (; e; ) {
                                    if (((b = e.c * a + e.s), e.r ? (b = Math.round(b)) : f > b && b > -f && (b = 0), e.type))
                                        if (1 === e.type)
                                            if (((d = e.l), 2 === d)) e.t[e.p] = e.xs0 + b + e.xs1 + e.xn1 + e.xs2;
                                            else if (3 === d) e.t[e.p] = e.xs0 + b + e.xs1 + e.xn1 + e.xs2 + e.xn2 + e.xs3;
                                            else if (4 === d) e.t[e.p] = e.xs0 + b + e.xs1 + e.xn1 + e.xs2 + e.xn2 + e.xs3 + e.xn3 + e.xs4;
                                            else if (5 === d) e.t[e.p] = e.xs0 + b + e.xs1 + e.xn1 + e.xs2 + e.xn2 + e.xs3 + e.xn3 + e.xs4 + e.xn4 + e.xs5;
                                            else {
                                                for (c = e.xs0 + b + e.xs1, d = 1; d < e.l; d++) c += e["xn" + d] + e["xs" + (d + 1)];
                                                e.t[e.p] = c;
                                            }
                                        else -1 === e.type ? (e.t[e.p] = e.xs0) : e.setRatio && e.setRatio(a);
                                    else e.t[e.p] = b + e.xs0;
                                    e = e._next;
                                }
                            else for (; e; ) 2 !== e.type ? (e.t[e.p] = e.b) : e.setRatio(a), (e = e._next);
                        else
                            for (; e; ) {
                                if (2 !== e.type)
                                    if (e.r && -1 !== e.type)
                                        if (((b = Math.round(e.s + e.c)), e.type)) {
                                            if (1 === e.type) {
                                                for (d = e.l, c = e.xs0 + b + e.xs1, d = 1; d < e.l; d++) c += e["xn" + d] + e["xs" + (d + 1)];
                                                e.t[e.p] = c;
                                            }
                                        } else e.t[e.p] = b + e.xs0;
                                    else e.t[e.p] = e.e;
                                else e.setRatio(a);
                                e = e._next;
                            }
                    }),
                    (j._enableTransforms = function (a) {
                        (this._transform = this._transform || Ra(this._target, e, !0)), (this._transformType = (this._transform.svg && Aa) || (!a && 3 !== this._transformType) ? 2 : 3);
                    });
                var Ya = function (a) {
                    (this.t[this.p] = this.e), this.data._linkCSSP(this, this._next, null, !0);
                };
                (j._addLazySet = function (a, b, c) {
                    var d = (this._firstPT = new ta(a, b, 0, 0, this._firstPT, 2));
                    (d.e = c), (d.setRatio = Ya), (d.data = this);
                }),
                    (j._linkCSSP = function (a, b, c, d) {
                        return (
                            a &&
                                (b && (b._prev = a),
                                a._next && (a._next._prev = a._prev),
                                a._prev ? (a._prev._next = a._next) : this._firstPT === a && ((this._firstPT = a._next), (d = !0)),
                                c ? (c._next = a) : d || null !== this._firstPT || (this._firstPT = a),
                                (a._next = b),
                                (a._prev = c)),
                            a
                        );
                    }),
                    (j._mod = function (a) {
                        for (var b = this._firstPT; b; ) "function" == typeof a[b.p] && a[b.p] === Math.round && (b.r = 1), (b = b._next);
                    }),
                    (j._kill = function (b) {
                        var c,
                            d,
                            e,
                            f = b;
                        if (b.autoAlpha || b.alpha) {
                            f = {};
                            for (d in b) f[d] = b[d];
                            (f.opacity = 1), f.autoAlpha && (f.visibility = 1);
                        }
                        for (
                            b.className &&
                                (c = this._classNamePT) &&
                                ((e = c.xfirst),
                                e && e._prev ? this._linkCSSP(e._prev, c._next, e._prev._prev) : e === this._firstPT && (this._firstPT = c._next),
                                c._next && this._linkCSSP(c._next, c._next._next, e._prev),
                                (this._classNamePT = null)),
                                c = this._firstPT;
                            c;

                        )
                            c.plugin && c.plugin !== d && c.plugin._kill && (c.plugin._kill(b), (d = c.plugin)), (c = c._next);
                        return a.prototype._kill.call(this, f);
                    });
                var Za = function (a, b, c) {
                    var d, e, f, g;
                    if (a.slice) for (e = a.length; --e > -1; ) Za(a[e], b, c);
                    else for (d = a.childNodes, e = d.length; --e > -1; ) (f = d[e]), (g = f.type), f.style && (b.push(ca(f)), c && c.push(f)), (1 !== g && 9 !== g && 11 !== g) || !f.childNodes.length || Za(f, b, c);
                };
                return (
                    (g.cascadeTo = function (a, c, d) {
                        var e,
                            f,
                            g,
                            h,
                            i = b.to(a, c, d),
                            j = [i],
                            k = [],
                            l = [],
                            m = [],
                            n = b._internals.reservedProps;
                        for (a = i._targets || i.target, Za(a, k, m), i.render(c, !0, !0), Za(a, l), i.render(0, !0, !0), i._enabled(!0), e = m.length; --e > -1; )
                            if (((f = da(m[e], k[e], l[e])), f.firstMPT)) {
                                f = f.difs;
                                for (g in d) n[g] && (f[g] = d[g]);
                                h = {};
                                for (g in f) h[g] = k[e][g];
                                j.push(b.fromTo(m[e], c, h, f));
                            }
                        return j;
                    }),
                    a.activate([g]),
                    g
                );
            },
            !0
        ),
        (function () {
            var a = _gsScope._gsDefine.plugin({
                    propName: "roundProps",
                    version: "1.6.0",
                    priority: -1,
                    API: 2,
                    init: function (a, b, c) {
                        return (this._tween = c), !0;
                    },
                }),
                b = function (a) {
                    for (; a; ) a.f || a.blob || (a.m = Math.round), (a = a._next);
                },
                c = a.prototype;
            (c._onInitAllProps = function () {
                for (var a, c, d, e = this._tween, f = e.vars.roundProps.join ? e.vars.roundProps : e.vars.roundProps.split(","), g = f.length, h = {}, i = e._propLookup.roundProps; --g > -1; ) h[f[g]] = Math.round;
                for (g = f.length; --g > -1; )
                    for (a = f[g], c = e._firstPT; c; )
                        (d = c._next),
                            c.pg
                                ? c.t._mod(h)
                                : c.n === a &&
                                  (2 === c.f && c.t
                                      ? b(c.t._firstPT)
                                      : (this._add(c.t, a, c.s, c.c), d && (d._prev = c._prev), c._prev ? (c._prev._next = d) : e._firstPT === c && (e._firstPT = d), (c._next = c._prev = null), (e._propLookup[a] = i))),
                            (c = d);
                return !1;
            }),
                (c._add = function (a, b, c, d) {
                    this._addTween(a, b, c, c + d, b, Math.round), this._overwriteProps.push(b);
                });
        })(),
        (function () {
            _gsScope._gsDefine.plugin({
                propName: "attr",
                API: 2,
                version: "0.6.1",
                init: function (a, b, c, d) {
                    var e, f;
                    if ("function" != typeof a.setAttribute) return !1;
                    for (e in b) (f = b[e]), "function" == typeof f && (f = f(d, a)), this._addTween(a, "setAttribute", a.getAttribute(e) + "", f + "", e, !1, e), this._overwriteProps.push(e);
                    return !0;
                },
            });
        })(),
        (_gsScope._gsDefine.plugin({
            propName: "directionalRotation",
            version: "0.3.1",
            API: 2,
            init: function (a, b, c, d) {
                "object" != typeof b && (b = { rotation: b }), (this.finals = {});
                var e,
                    f,
                    g,
                    h,
                    i,
                    j,
                    k = b.useRadians === !0 ? 2 * Math.PI : 360,
                    l = 1e-6;
                for (e in b)
                    "useRadians" !== e &&
                        ((h = b[e]),
                        "function" == typeof h && (h = h(d, a)),
                        (j = (h + "").split("_")),
                        (f = j[0]),
                        (g = parseFloat("function" != typeof a[e] ? a[e] : a[e.indexOf("set") || "function" != typeof a["get" + e.substr(3)] ? e : "get" + e.substr(3)]())),
                        (h = this.finals[e] = "string" == typeof f && "=" === f.charAt(1) ? g + parseInt(f.charAt(0) + "1", 10) * Number(f.substr(2)) : Number(f) || 0),
                        (i = h - g),
                        j.length &&
                            ((f = j.join("_")),
                            -1 !== f.indexOf("short") && ((i %= k), i !== i % (k / 2) && (i = 0 > i ? i + k : i - k)),
                            -1 !== f.indexOf("_cw") && 0 > i ? (i = ((i + 9999999999 * k) % k) - ((i / k) | 0) * k) : -1 !== f.indexOf("ccw") && i > 0 && (i = ((i - 9999999999 * k) % k) - ((i / k) | 0) * k)),
                        (i > l || -l > i) && (this._addTween(a, e, g, g + i, e), this._overwriteProps.push(e)));
                return !0;
            },
            set: function (a) {
                var b;
                if (1 !== a) this._super.setRatio.call(this, a);
                else for (b = this._firstPT; b; ) b.f ? b.t[b.p](this.finals[b.p]) : (b.t[b.p] = this.finals[b.p]), (b = b._next);
            },
        })._autoCSS = !0),
        _gsScope._gsDefine(
            "easing.Back",
            ["easing.Ease"],
            function (a) {
                var b,
                    c,
                    d,
                    e,
                    f = _gsScope.GreenSockGlobals || _gsScope,
                    g = f.com.greensock,
                    h = 2 * Math.PI,
                    i = Math.PI / 2,
                    j = g._class,
                    k = function (b, c) {
                        var d = j("easing." + b, function () {}, !0),
                            e = (d.prototype = new a());
                        return (e.constructor = d), (e.getRatio = c), d;
                    },
                    l = a.register || function () {},
                    m = function (a, b, c, d, e) {
                        var f = j("easing." + a, { easeOut: new b(), easeIn: new c(), easeInOut: new d() }, !0);
                        return l(f, a), f;
                    },
                    n = function (a, b, c) {
                        (this.t = a), (this.v = b), c && ((this.next = c), (c.prev = this), (this.c = c.v - b), (this.gap = c.t - a));
                    },
                    o = function (b, c) {
                        var d = j(
                                "easing." + b,
                                function (a) {
                                    (this._p1 = a || 0 === a ? a : 1.70158), (this._p2 = 1.525 * this._p1);
                                },
                                !0
                            ),
                            e = (d.prototype = new a());
                        return (
                            (e.constructor = d),
                            (e.getRatio = c),
                            (e.config = function (a) {
                                return new d(a);
                            }),
                            d
                        );
                    },
                    p = m(
                        "Back",
                        o("BackOut", function (a) {
                            return (a -= 1) * a * ((this._p1 + 1) * a + this._p1) + 1;
                        }),
                        o("BackIn", function (a) {
                            return a * a * ((this._p1 + 1) * a - this._p1);
                        }),
                        o("BackInOut", function (a) {
                            return (a *= 2) < 1 ? 0.5 * a * a * ((this._p2 + 1) * a - this._p2) : 0.5 * ((a -= 2) * a * ((this._p2 + 1) * a + this._p2) + 2);
                        })
                    ),
                    q = j(
                        "easing.SlowMo",
                        function (a, b, c) {
                            (b = b || 0 === b ? b : 0.7), null == a ? (a = 0.7) : a > 1 && (a = 1), (this._p = 1 !== a ? b : 0), (this._p1 = (1 - a) / 2), (this._p2 = a), (this._p3 = this._p1 + this._p2), (this._calcEnd = c === !0);
                        },
                        !0
                    ),
                    r = (q.prototype = new a());
                return (
                    (r.constructor = q),
                    (r.getRatio = function (a) {
                        var b = a + (0.5 - a) * this._p;
                        return a < this._p1
                            ? this._calcEnd
                                ? 1 - (a = 1 - a / this._p1) * a
                                : b - (a = 1 - a / this._p1) * a * a * a * b
                            : a > this._p3
                            ? this._calcEnd
                                ? 1 === a
                                    ? 0
                                    : 1 - (a = (a - this._p3) / this._p1) * a
                                : b + (a - b) * (a = (a - this._p3) / this._p1) * a * a * a
                            : this._calcEnd
                            ? 1
                            : b;
                    }),
                    (q.ease = new q(0.7, 0.7)),
                    (r.config = q.config = function (a, b, c) {
                        return new q(a, b, c);
                    }),
                    (b = j(
                        "easing.SteppedEase",
                        function (a, b) {
                            (a = a || 1), (this._p1 = 1 / a), (this._p2 = a + (b ? 0 : 1)), (this._p3 = b ? 1 : 0);
                        },
                        !0
                    )),
                    (r = b.prototype = new a()),
                    (r.constructor = b),
                    (r.getRatio = function (a) {
                        return 0 > a ? (a = 0) : a >= 1 && (a = 0.999999999), (((this._p2 * a) | 0) + this._p3) * this._p1;
                    }),
                    (r.config = b.config = function (a, c) {
                        return new b(a, c);
                    }),
                    (c = j(
                        "easing.ExpoScaleEase",
                        function (a, b, c) {
                            (this._p1 = Math.log(b / a)), (this._p2 = b - a), (this._p3 = a), (this._ease = c);
                        },
                        !0
                    )),
                    (r = c.prototype = new a()),
                    (r.constructor = c),
                    (r.getRatio = function (a) {
                        return this._ease && (a = this._ease.getRatio(a)), (this._p3 * Math.exp(this._p1 * a) - this._p3) / this._p2;
                    }),
                    (r.config = c.config = function (a, b, d) {
                        return new c(a, b, d);
                    }),
                    (d = j(
                        "easing.RoughEase",
                        function (b) {
                            b = b || {};
                            for (
                                var c,
                                    d,
                                    e,
                                    f,
                                    g,
                                    h,
                                    i = b.taper || "none",
                                    j = [],
                                    k = 0,
                                    l = 0 | (b.points || 20),
                                    m = l,
                                    o = b.randomize !== !1,
                                    p = b.clamp === !0,
                                    q = b.template instanceof a ? b.template : null,
                                    r = "number" == typeof b.strength ? 0.4 * b.strength : 0.4;
                                --m > -1;

                            )
                                (c = o ? Math.random() : (1 / l) * m),
                                    (d = q ? q.getRatio(c) : c),
                                    "none" === i ? (e = r) : "out" === i ? ((f = 1 - c), (e = f * f * r)) : "in" === i ? (e = c * c * r) : 0.5 > c ? ((f = 2 * c), (e = f * f * 0.5 * r)) : ((f = 2 * (1 - c)), (e = f * f * 0.5 * r)),
                                    o ? (d += Math.random() * e - 0.5 * e) : m % 2 ? (d += 0.5 * e) : (d -= 0.5 * e),
                                    p && (d > 1 ? (d = 1) : 0 > d && (d = 0)),
                                    (j[k++] = { x: c, y: d });
                            for (
                                j.sort(function (a, b) {
                                    return a.x - b.x;
                                }),
                                    h = new n(1, 1, null),
                                    m = l;
                                --m > -1;

                            )
                                (g = j[m]), (h = new n(g.x, g.y, h));
                            this._prev = new n(0, 0, 0 !== h.t ? h : h.next);
                        },
                        !0
                    )),
                    (r = d.prototype = new a()),
                    (r.constructor = d),
                    (r.getRatio = function (a) {
                        var b = this._prev;
                        if (a > b.t) {
                            for (; b.next && a >= b.t; ) b = b.next;
                            b = b.prev;
                        } else for (; b.prev && a <= b.t; ) b = b.prev;
                        return (this._prev = b), b.v + ((a - b.t) / b.gap) * b.c;
                    }),
                    (r.config = function (a) {
                        return new d(a);
                    }),
                    (d.ease = new d()),
                    m(
                        "Bounce",
                        k("BounceOut", function (a) {
                            return 1 / 2.75 > a ? 7.5625 * a * a : 2 / 2.75 > a ? 7.5625 * (a -= 1.5 / 2.75) * a + 0.75 : 2.5 / 2.75 > a ? 7.5625 * (a -= 2.25 / 2.75) * a + 0.9375 : 7.5625 * (a -= 2.625 / 2.75) * a + 0.984375;
                        }),
                        k("BounceIn", function (a) {
                            return (a = 1 - a) < 1 / 2.75
                                ? 1 - 7.5625 * a * a
                                : 2 / 2.75 > a
                                ? 1 - (7.5625 * (a -= 1.5 / 2.75) * a + 0.75)
                                : 2.5 / 2.75 > a
                                ? 1 - (7.5625 * (a -= 2.25 / 2.75) * a + 0.9375)
                                : 1 - (7.5625 * (a -= 2.625 / 2.75) * a + 0.984375);
                        }),
                        k("BounceInOut", function (a) {
                            var b = 0.5 > a;
                            return (
                                (a = b ? 1 - 2 * a : 2 * a - 1),
                                (a = 1 / 2.75 > a ? 7.5625 * a * a : 2 / 2.75 > a ? 7.5625 * (a -= 1.5 / 2.75) * a + 0.75 : 2.5 / 2.75 > a ? 7.5625 * (a -= 2.25 / 2.75) * a + 0.9375 : 7.5625 * (a -= 2.625 / 2.75) * a + 0.984375),
                                b ? 0.5 * (1 - a) : 0.5 * a + 0.5
                            );
                        })
                    ),
                    m(
                        "Circ",
                        k("CircOut", function (a) {
                            return Math.sqrt(1 - (a -= 1) * a);
                        }),
                        k("CircIn", function (a) {
                            return -(Math.sqrt(1 - a * a) - 1);
                        }),
                        k("CircInOut", function (a) {
                            return (a *= 2) < 1 ? -0.5 * (Math.sqrt(1 - a * a) - 1) : 0.5 * (Math.sqrt(1 - (a -= 2) * a) + 1);
                        })
                    ),
                    (e = function (b, c, d) {
                        var e = j(
                                "easing." + b,
                                function (a, b) {
                                    (this._p1 = a >= 1 ? a : 1), (this._p2 = (b || d) / (1 > a ? a : 1)), (this._p3 = (this._p2 / h) * (Math.asin(1 / this._p1) || 0)), (this._p2 = h / this._p2);
                                },
                                !0
                            ),
                            f = (e.prototype = new a());
                        return (
                            (f.constructor = e),
                            (f.getRatio = c),
                            (f.config = function (a, b) {
                                return new e(a, b);
                            }),
                            e
                        );
                    }),
                    m(
                        "Elastic",
                        e(
                            "ElasticOut",
                            function (a) {
                                return this._p1 * Math.pow(2, -10 * a) * Math.sin((a - this._p3) * this._p2) + 1;
                            },
                            0.3
                        ),
                        e(
                            "ElasticIn",
                            function (a) {
                                return -(this._p1 * Math.pow(2, 10 * (a -= 1)) * Math.sin((a - this._p3) * this._p2));
                            },
                            0.3
                        ),
                        e(
                            "ElasticInOut",
                            function (a) {
                                return (a *= 2) < 1 ? -0.5 * (this._p1 * Math.pow(2, 10 * (a -= 1)) * Math.sin((a - this._p3) * this._p2)) : this._p1 * Math.pow(2, -10 * (a -= 1)) * Math.sin((a - this._p3) * this._p2) * 0.5 + 1;
                            },
                            0.45
                        )
                    ),
                    m(
                        "Expo",
                        k("ExpoOut", function (a) {
                            return 1 - Math.pow(2, -10 * a);
                        }),
                        k("ExpoIn", function (a) {
                            return Math.pow(2, 10 * (a - 1)) - 0.001;
                        }),
                        k("ExpoInOut", function (a) {
                            return (a *= 2) < 1 ? 0.5 * Math.pow(2, 10 * (a - 1)) : 0.5 * (2 - Math.pow(2, -10 * (a - 1)));
                        })
                    ),
                    m(
                        "Sine",
                        k("SineOut", function (a) {
                            return Math.sin(a * i);
                        }),
                        k("SineIn", function (a) {
                            return -Math.cos(a * i) + 1;
                        }),
                        k("SineInOut", function (a) {
                            return -0.5 * (Math.cos(Math.PI * a) - 1);
                        })
                    ),
                    j(
                        "easing.EaseLookup",
                        {
                            find: function (b) {
                                return a.map[b];
                            },
                        },
                        !0
                    ),
                    l(f.SlowMo, "SlowMo", "ease,"),
                    l(d, "RoughEase", "ease,"),
                    l(b, "SteppedEase", "ease,"),
                    p
                );
            },
            !0
        );
}),
    _gsScope._gsDefine && _gsScope._gsQueue.pop()(),
    (function (a, b) {
        "use strict";
        var c = {},
            d = a.document,
            e = (a.GreenSockGlobals = a.GreenSockGlobals || a);
        if (!e.TweenLite) {
            var f,
                g,
                h,
                i,
                j,
                k = function (a) {
                    var b,
                        c = a.split("."),
                        d = e;
                    for (b = 0; b < c.length; b++) d[c[b]] = d = d[c[b]] || {};
                    return d;
                },
                l = k("com.greensock"),
                m = 1e-10,
                n = function (a) {
                    var b,
                        c = [],
                        d = a.length;
                    for (b = 0; b !== d; c.push(a[b++]));
                    return c;
                },
                o = function () {},
                p = (function () {
                    var a = Object.prototype.toString,
                        b = a.call([]);
                    return function (c) {
                        return null != c && (c instanceof Array || ("object" == typeof c && !!c.push && a.call(c) === b));
                    };
                })(),
                q = {},
                r = function (d, f, g, h) {
                    (this.sc = q[d] ? q[d].sc : []), (q[d] = this), (this.gsClass = null), (this.func = g);
                    var i = [];
                    (this.check = function (j) {
                        for (var l, m, n, o, p = f.length, s = p; --p > -1; ) (l = q[f[p]] || new r(f[p], [])).gsClass ? ((i[p] = l.gsClass), s--) : j && l.sc.push(this);
                        if (0 === s && g) {
                            if (((m = ("com.greensock." + d).split(".")), (n = m.pop()), (o = k(m.join("."))[n] = this.gsClass = g.apply(g, i)), h))
                                if (((e[n] = c[n] = o), "undefined" != typeof module && module.exports))
                                    if (d === b) {
                                        module.exports = c[b] = o;
                                        for (p in c) o[p] = c[p];
                                    } else c[b] && (c[b][n] = o);
                                else
                                    "function" == typeof define &&
                                        define.amd &&
                                        define((a.GreenSockAMDPath ? a.GreenSockAMDPath + "/" : "") + d.split(".").pop(), [], function () {
                                            return o;
                                        });
                            for (p = 0; p < this.sc.length; p++) this.sc[p].check();
                        }
                    }),
                        this.check(!0);
                },
                s = (a._gsDefine = function (a, b, c, d) {
                    return new r(a, b, c, d);
                }),
                t = (l._class = function (a, b, c) {
                    return (
                        (b = b || function () {}),
                        s(
                            a,
                            [],
                            function () {
                                return b;
                            },
                            c
                        ),
                        b
                    );
                });
            s.globals = e;
            var u = [0, 0, 1, 1],
                v = t(
                    "easing.Ease",
                    function (a, b, c, d) {
                        (this._func = a), (this._type = c || 0), (this._power = d || 0), (this._params = b ? u.concat(b) : u);
                    },
                    !0
                ),
                w = (v.map = {}),
                x = (v.register = function (a, b, c, d) {
                    for (var e, f, g, h, i = b.split(","), j = i.length, k = (c || "easeIn,easeOut,easeInOut").split(","); --j > -1; )
                        for (f = i[j], e = d ? t("easing." + f, null, !0) : l.easing[f] || {}, g = k.length; --g > -1; ) (h = k[g]), (w[f + "." + h] = w[h + f] = e[h] = a.getRatio ? a : a[h] || new a());
                });
            for (
                h = v.prototype,
                    h._calcEnd = !1,
                    h.getRatio = function (a) {
                        if (this._func) return (this._params[0] = a), this._func.apply(null, this._params);
                        var b = this._type,
                            c = this._power,
                            d = 1 === b ? 1 - a : 2 === b ? a : 0.5 > a ? 2 * a : 2 * (1 - a);
                        return 1 === c ? (d *= d) : 2 === c ? (d *= d * d) : 3 === c ? (d *= d * d * d) : 4 === c && (d *= d * d * d * d), 1 === b ? 1 - d : 2 === b ? d : 0.5 > a ? d / 2 : 1 - d / 2;
                    },
                    f = ["Linear", "Quad", "Cubic", "Quart", "Quint,Strong"],
                    g = f.length;
                --g > -1;

            )
                (h = f[g] + ",Power" + g), x(new v(null, null, 1, g), h, "easeOut", !0), x(new v(null, null, 2, g), h, "easeIn" + (0 === g ? ",easeNone" : "")), x(new v(null, null, 3, g), h, "easeInOut");
            (w.linear = l.easing.Linear.easeIn), (w.swing = l.easing.Quad.easeInOut);
            var y = t("events.EventDispatcher", function (a) {
                (this._listeners = {}), (this._eventTarget = a || this);
            });
            (h = y.prototype),
                (h.addEventListener = function (a, b, c, d, e) {
                    e = e || 0;
                    var f,
                        g,
                        h = this._listeners[a],
                        k = 0;
                    for (this !== i || j || i.wake(), null == h && (this._listeners[a] = h = []), g = h.length; --g > -1; ) (f = h[g]), f.c === b && f.s === c ? h.splice(g, 1) : 0 === k && f.pr < e && (k = g + 1);
                    h.splice(k, 0, { c: b, s: c, up: d, pr: e });
                }),
                (h.removeEventListener = function (a, b) {
                    var c,
                        d = this._listeners[a];
                    if (d) for (c = d.length; --c > -1; ) if (d[c].c === b) return void d.splice(c, 1);
                }),
                (h.dispatchEvent = function (a) {
                    var b,
                        c,
                        d,
                        e = this._listeners[a];
                    if (e) for (b = e.length, b > 1 && (e = e.slice(0)), c = this._eventTarget; --b > -1; ) (d = e[b]), d && (d.up ? d.c.call(d.s || c, { type: a, target: c }) : d.c.call(d.s || c));
                });
            var z = a.requestAnimationFrame,
                A = a.cancelAnimationFrame,
                B =
                    Date.now ||
                    function () {
                        return new Date().getTime();
                    },
                C = B();
            for (f = ["ms", "moz", "webkit", "o"], g = f.length; --g > -1 && !z; ) (z = a[f[g] + "RequestAnimationFrame"]), (A = a[f[g] + "CancelAnimationFrame"] || a[f[g] + "CancelRequestAnimationFrame"]);
            t("Ticker", function (a, b) {
                var c,
                    e,
                    f,
                    g,
                    h,
                    k = this,
                    l = B(),
                    n = b !== !1 && z ? "auto" : !1,
                    p = 500,
                    q = 33,
                    r = "tick",
                    s = function (a) {
                        var b,
                            d,
                            i = B() - C;
                        i > p && (l += i - q), (C += i), (k.time = (C - l) / 1e3), (b = k.time - h), (!c || b > 0 || a === !0) && (k.frame++, (h += b + (b >= g ? 0.004 : g - b)), (d = !0)), a !== !0 && (f = e(s)), d && k.dispatchEvent(r);
                    };
                y.call(k),
                    (k.time = k.frame = 0),
                    (k.tick = function () {
                        s(!0);
                    }),
                    (k.lagSmoothing = function (a, b) {
                        return arguments.length ? ((p = a || 1 / m), void (q = Math.min(b, p, 0))) : 1 / m > p;
                    }),
                    (k.sleep = function () {
                        null != f && (n && A ? A(f) : clearTimeout(f), (e = o), (f = null), k === i && (j = !1));
                    }),
                    (k.wake = function (a) {
                        null !== f ? k.sleep() : a ? (l += -C + (C = B())) : k.frame > 10 && (C = B() - p + 5),
                            (e =
                                0 === c
                                    ? o
                                    : n && z
                                    ? z
                                    : function (a) {
                                          return setTimeout(a, (1e3 * (h - k.time) + 1) | 0);
                                      }),
                            k === i && (j = !0),
                            s(2);
                    }),
                    (k.fps = function (a) {
                        return arguments.length ? ((c = a), (g = 1 / (c || 60)), (h = this.time + g), void k.wake()) : c;
                    }),
                    (k.useRAF = function (a) {
                        return arguments.length ? (k.sleep(), (n = a), void k.fps(c)) : n;
                    }),
                    k.fps(a),
                    setTimeout(function () {
                        "auto" === n && k.frame < 5 && "hidden" !== (d || {}).visibilityState && k.useRAF(!1);
                    }, 1500);
            }),
                (h = l.Ticker.prototype = new l.events.EventDispatcher()),
                (h.constructor = l.Ticker);
            var D = t("core.Animation", function (a, b) {
                if (
                    ((this.vars = b = b || {}),
                    (this._duration = this._totalDuration = a || 0),
                    (this._delay = Number(b.delay) || 0),
                    (this._timeScale = 1),
                    (this._active = b.immediateRender === !0),
                    (this.data = b.data),
                    (this._reversed = b.reversed === !0),
                    X)
                ) {
                    j || i.wake();
                    var c = this.vars.useFrames ? W : X;
                    c.add(this, c._time), this.vars.paused && this.paused(!0);
                }
            });
            (i = D.ticker = new l.Ticker()),
                (h = D.prototype),
                (h._dirty = h._gc = h._initted = h._paused = !1),
                (h._totalTime = h._time = 0),
                (h._rawPrevTime = -1),
                (h._next = h._last = h._onUpdate = h._timeline = h.timeline = null),
                (h._paused = !1);
            var E = function () {
                j && B() - C > 2e3 && ("hidden" !== (d || {}).visibilityState || !i.lagSmoothing()) && i.wake();
                var a = setTimeout(E, 2e3);
                a.unref && a.unref();
            };
            E(),
                (h.play = function (a, b) {
                    return null != a && this.seek(a, b), this.reversed(!1).paused(!1);
                }),
                (h.pause = function (a, b) {
                    return null != a && this.seek(a, b), this.paused(!0);
                }),
                (h.resume = function (a, b) {
                    return null != a && this.seek(a, b), this.paused(!1);
                }),
                (h.seek = function (a, b) {
                    return this.totalTime(Number(a), b !== !1);
                }),
                (h.restart = function (a, b) {
                    return this.reversed(!1)
                        .paused(!1)
                        .totalTime(a ? -this._delay : 0, b !== !1, !0);
                }),
                (h.reverse = function (a, b) {
                    return null != a && this.seek(a || this.totalDuration(), b), this.reversed(!0).paused(!1);
                }),
                (h.render = function (a, b, c) {}),
                (h.invalidate = function () {
                    return (this._time = this._totalTime = 0), (this._initted = this._gc = !1), (this._rawPrevTime = -1), (this._gc || !this.timeline) && this._enabled(!0), this;
                }),
                (h.isActive = function () {
                    var a,
                        b = this._timeline,
                        c = this._startTime;
                    return !b || (!this._gc && !this._paused && b.isActive() && (a = b.rawTime(!0)) >= c && a < c + this.totalDuration() / this._timeScale - 1e-7);
                }),
                (h._enabled = function (a, b) {
                    return (
                        j || i.wake(),
                        (this._gc = !a),
                        (this._active = this.isActive()),
                        b !== !0 && (a && !this.timeline ? this._timeline.add(this, this._startTime - this._delay) : !a && this.timeline && this._timeline._remove(this, !0)),
                        !1
                    );
                }),
                (h._kill = function (a, b) {
                    return this._enabled(!1, !1);
                }),
                (h.kill = function (a, b) {
                    return this._kill(a, b), this;
                }),
                (h._uncache = function (a) {
                    for (var b = a ? this : this.timeline; b; ) (b._dirty = !0), (b = b.timeline);
                    return this;
                }),
                (h._swapSelfInParams = function (a) {
                    for (var b = a.length, c = a.concat(); --b > -1; ) "{self}" === a[b] && (c[b] = this);
                    return c;
                }),
                (h._callback = function (a) {
                    var b = this.vars,
                        c = b[a],
                        d = b[a + "Params"],
                        e = b[a + "Scope"] || b.callbackScope || this,
                        f = d ? d.length : 0;
                    switch (f) {
                        case 0:
                            c.call(e);
                            break;
                        case 1:
                            c.call(e, d[0]);
                            break;
                        case 2:
                            c.call(e, d[0], d[1]);
                            break;
                        default:
                            c.apply(e, d);
                    }
                }),
                (h.eventCallback = function (a, b, c, d) {
                    if ("on" === (a || "").substr(0, 2)) {
                        var e = this.vars;
                        if (1 === arguments.length) return e[a];
                        null == b ? delete e[a] : ((e[a] = b), (e[a + "Params"] = p(c) && -1 !== c.join("").indexOf("{self}") ? this._swapSelfInParams(c) : c), (e[a + "Scope"] = d)), "onUpdate" === a && (this._onUpdate = b);
                    }
                    return this;
                }),
                (h.delay = function (a) {
                    return arguments.length ? (this._timeline.smoothChildTiming && this.startTime(this._startTime + a - this._delay), (this._delay = a), this) : this._delay;
                }),
                (h.duration = function (a) {
                    return arguments.length
                        ? ((this._duration = this._totalDuration = a),
                          this._uncache(!0),
                          this._timeline.smoothChildTiming && this._time > 0 && this._time < this._duration && 0 !== a && this.totalTime(this._totalTime * (a / this._duration), !0),
                          this)
                        : ((this._dirty = !1), this._duration);
                }),
                (h.totalDuration = function (a) {
                    return (this._dirty = !1), arguments.length ? this.duration(a) : this._totalDuration;
                }),
                (h.time = function (a, b) {
                    return arguments.length ? (this._dirty && this.totalDuration(), this.totalTime(a > this._duration ? this._duration : a, b)) : this._time;
                }),
                (h.totalTime = function (a, b, c) {
                    if ((j || i.wake(), !arguments.length)) return this._totalTime;
                    if (this._timeline) {
                        if ((0 > a && !c && (a += this.totalDuration()), this._timeline.smoothChildTiming)) {
                            this._dirty && this.totalDuration();
                            var d = this._totalDuration,
                                e = this._timeline;
                            if ((a > d && !c && (a = d), (this._startTime = (this._paused ? this._pauseTime : e._time) - (this._reversed ? d - a : a) / this._timeScale), e._dirty || this._uncache(!1), e._timeline))
                                for (; e._timeline; ) e._timeline._time !== (e._startTime + e._totalTime) / e._timeScale && e.totalTime(e._totalTime, !0), (e = e._timeline);
                        }
                        this._gc && this._enabled(!0, !1), (this._totalTime !== a || 0 === this._duration) && (J.length && Z(), this.render(a, b, !1), J.length && Z());
                    }
                    return this;
                }),
                (h.progress = h.totalProgress = function (a, b) {
                    var c = this.duration();
                    return arguments.length ? this.totalTime(c * a, b) : c ? this._time / c : this.ratio;
                }),
                (h.startTime = function (a) {
                    return arguments.length ? (a !== this._startTime && ((this._startTime = a), this.timeline && this.timeline._sortChildren && this.timeline.add(this, a - this._delay)), this) : this._startTime;
                }),
                (h.endTime = function (a) {
                    return this._startTime + (0 != a ? this.totalDuration() : this.duration()) / this._timeScale;
                }),
                (h.timeScale = function (a) {
                    if (!arguments.length) return this._timeScale;
                    var b, c;
                    for (
                        a = a || m,
                            this._timeline && this._timeline.smoothChildTiming && ((b = this._pauseTime), (c = b || 0 === b ? b : this._timeline.totalTime()), (this._startTime = c - ((c - this._startTime) * this._timeScale) / a)),
                            this._timeScale = a,
                            c = this.timeline;
                        c && c.timeline;

                    )
                        (c._dirty = !0), c.totalDuration(), (c = c.timeline);
                    return this;
                }),
                (h.reversed = function (a) {
                    return arguments.length
                        ? (a != this._reversed && ((this._reversed = a), this.totalTime(this._timeline && !this._timeline.smoothChildTiming ? this.totalDuration() - this._totalTime : this._totalTime, !0)), this)
                        : this._reversed;
                }),
                (h.paused = function (a) {
                    if (!arguments.length) return this._paused;
                    var b,
                        c,
                        d = this._timeline;
                    return (
                        a != this._paused &&
                            d &&
                            (j || a || i.wake(),
                            (b = d.rawTime()),
                            (c = b - this._pauseTime),
                            !a && d.smoothChildTiming && ((this._startTime += c), this._uncache(!1)),
                            (this._pauseTime = a ? b : null),
                            (this._paused = a),
                            (this._active = this.isActive()),
                            !a && 0 !== c && this._initted && this.duration() && ((b = d.smoothChildTiming ? this._totalTime : (b - this._startTime) / this._timeScale), this.render(b, b === this._totalTime, !0))),
                        this._gc && !a && this._enabled(!0, !1),
                        this
                    );
                });
            var F = t("core.SimpleTimeline", function (a) {
                D.call(this, 0, a), (this.autoRemoveChildren = this.smoothChildTiming = !0);
            });
            (h = F.prototype = new D()),
                (h.constructor = F),
                (h.kill()._gc = !1),
                (h._first = h._last = h._recent = null),
                (h._sortChildren = !1),
                (h.add = h.insert = function (a, b, c, d) {
                    var e, f;
                    if (
                        ((a._startTime = Number(b || 0) + a._delay),
                        a._paused && this !== a._timeline && (a._pauseTime = a._startTime + (this.rawTime() - a._startTime) / a._timeScale),
                        a.timeline && a.timeline._remove(a, !0),
                        (a.timeline = a._timeline = this),
                        a._gc && a._enabled(!0, !0),
                        (e = this._last),
                        this._sortChildren)
                    )
                        for (f = a._startTime; e && e._startTime > f; ) e = e._prev;
                    return (
                        e ? ((a._next = e._next), (e._next = a)) : ((a._next = this._first), (this._first = a)), a._next ? (a._next._prev = a) : (this._last = a), (a._prev = e), (this._recent = a), this._timeline && this._uncache(!0), this
                    );
                }),
                (h._remove = function (a, b) {
                    return (
                        a.timeline === this &&
                            (b || a._enabled(!1, !0),
                            a._prev ? (a._prev._next = a._next) : this._first === a && (this._first = a._next),
                            a._next ? (a._next._prev = a._prev) : this._last === a && (this._last = a._prev),
                            (a._next = a._prev = a.timeline = null),
                            a === this._recent && (this._recent = this._last),
                            this._timeline && this._uncache(!0)),
                        this
                    );
                }),
                (h.render = function (a, b, c) {
                    var d,
                        e = this._first;
                    for (this._totalTime = this._time = this._rawPrevTime = a; e; )
                        (d = e._next),
                            (e._active || (a >= e._startTime && !e._paused && !e._gc)) &&
                                (e._reversed ? e.render((e._dirty ? e.totalDuration() : e._totalDuration) - (a - e._startTime) * e._timeScale, b, c) : e.render((a - e._startTime) * e._timeScale, b, c)),
                            (e = d);
                }),
                (h.rawTime = function () {
                    return j || i.wake(), this._totalTime;
                });
            var G = t(
                    "TweenLite",
                    function (b, c, d) {
                        if ((D.call(this, c, d), (this.render = G.prototype.render), null == b)) throw "Cannot tween a null target.";
                        this.target = b = "string" != typeof b ? b : G.selector(b) || b;
                        var e,
                            f,
                            g,
                            h = b.jquery || (b.length && b !== a && b[0] && (b[0] === a || (b[0].nodeType && b[0].style && !b.nodeType))),
                            i = this.vars.overwrite;
                        if (((this._overwrite = i = null == i ? V[G.defaultOverwrite] : "number" == typeof i ? i >> 0 : V[i]), (h || b instanceof Array || (b.push && p(b))) && "number" != typeof b[0]))
                            for (this._targets = g = n(b), this._propLookup = [], this._siblings = [], e = 0; e < g.length; e++)
                                (f = g[e]),
                                    f
                                        ? "string" != typeof f
                                            ? f.length && f !== a && f[0] && (f[0] === a || (f[0].nodeType && f[0].style && !f.nodeType))
                                                ? (g.splice(e--, 1), (this._targets = g = g.concat(n(f))))
                                                : ((this._siblings[e] = $(f, this, !1)), 1 === i && this._siblings[e].length > 1 && aa(f, this, null, 1, this._siblings[e]))
                                            : ((f = g[e--] = G.selector(f)), "string" == typeof f && g.splice(e + 1, 1))
                                        : g.splice(e--, 1);
                        else (this._propLookup = {}), (this._siblings = $(b, this, !1)), 1 === i && this._siblings.length > 1 && aa(b, this, null, 1, this._siblings);
                        (this.vars.immediateRender || (0 === c && 0 === this._delay && this.vars.immediateRender !== !1)) && ((this._time = -m), this.render(Math.min(0, -this._delay)));
                    },
                    !0
                ),
                H = function (b) {
                    return b && b.length && b !== a && b[0] && (b[0] === a || (b[0].nodeType && b[0].style && !b.nodeType));
                },
                I = function (a, b) {
                    var c,
                        d = {};
                    for (c in a)
                        U[c] || (c in b && "transform" !== c && "x" !== c && "y" !== c && "width" !== c && "height" !== c && "className" !== c && "border" !== c) || !(!R[c] || (R[c] && R[c]._autoCSS)) || ((d[c] = a[c]), delete a[c]);
                    a.css = d;
                };
            (h = G.prototype = new D()),
                (h.constructor = G),
                (h.kill()._gc = !1),
                (h.ratio = 0),
                (h._firstPT = h._targets = h._overwrittenProps = h._startAt = null),
                (h._notifyPluginsOfEnabled = h._lazy = !1),
                (G.version = "1.20.4"),
                (G.defaultEase = h._ease = new v(null, null, 1, 1)),
                (G.defaultOverwrite = "auto"),
                (G.ticker = i),
                (G.autoSleep = 120),
                (G.lagSmoothing = function (a, b) {
                    i.lagSmoothing(a, b);
                }),
                (G.selector =
                    a.$ ||
                    a.jQuery ||
                    function (b) {
                        var c = a.$ || a.jQuery;
                        return c ? ((G.selector = c), c(b)) : "undefined" == typeof d ? b : d.querySelectorAll ? d.querySelectorAll(b) : d.getElementById("#" === b.charAt(0) ? b.substr(1) : b);
                    });
            var J = [],
                K = {},
                L = /(?:(-|-=|\+=)?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/gi,
                M = /[\+-]=-?[\.\d]/,
                N = function (a) {
                    for (var b, c = this._firstPT, d = 1e-6; c; )
                        (b = c.blob ? (1 === a && null != this.end ? this.end : a ? this.join("") : this.start) : c.c * a + c.s),
                            c.m ? (b = c.m(b, this._target || c.t)) : d > b && b > -d && !c.blob && (b = 0),
                            c.f ? (c.fp ? c.t[c.p](c.fp, b) : c.t[c.p](b)) : (c.t[c.p] = b),
                            (c = c._next);
                },
                O = function (a, b, c, d) {
                    var e,
                        f,
                        g,
                        h,
                        i,
                        j,
                        k,
                        l = [],
                        m = 0,
                        n = "",
                        o = 0;
                    for (
                        l.start = a,
                            l.end = b,
                            a = l[0] = a + "",
                            b = l[1] = b + "",
                            c && (c(l), (a = l[0]), (b = l[1])),
                            l.length = 0,
                            e = a.match(L) || [],
                            f = b.match(L) || [],
                            d && ((d._next = null), (d.blob = 1), (l._firstPT = l._applyPT = d)),
                            i = f.length,
                            h = 0;
                        i > h;
                        h++
                    )
                        (k = f[h]),
                            (j = b.substr(m, b.indexOf(k, m) - m)),
                            (n += j || !h ? j : ","),
                            (m += j.length),
                            o ? (o = (o + 1) % 5) : "rgba(" === j.substr(-5) && (o = 1),
                            k === e[h] || e.length <= h
                                ? (n += k)
                                : (n && (l.push(n), (n = "")),
                                  (g = parseFloat(e[h])),
                                  l.push(g),
                                  (l._firstPT = {
                                      _next: l._firstPT,
                                      t: l,
                                      p: l.length - 1,
                                      s: g,
                                      c: ("=" === k.charAt(1) ? parseInt(k.charAt(0) + "1", 10) * parseFloat(k.substr(2)) : parseFloat(k) - g) || 0,
                                      f: 0,
                                      m: o && 4 > o ? Math.round : 0,
                                  })),
                            (m += k.length);
                    return (n += b.substr(m)), n && l.push(n), (l.setRatio = N), M.test(b) && (l.end = null), l;
                },
                P = function (a, b, c, d, e, f, g, h, i) {
                    "function" == typeof d && (d = d(i || 0, a));
                    var j,
                        k = typeof a[b],
                        l = "function" !== k ? "" : b.indexOf("set") || "function" != typeof a["get" + b.substr(3)] ? b : "get" + b.substr(3),
                        m = "get" !== c ? c : l ? (g ? a[l](g) : a[l]()) : a[b],
                        n = "string" == typeof d && "=" === d.charAt(1),
                        o = { t: a, p: b, s: m, f: "function" === k, pg: 0, n: e || b, m: f ? ("function" == typeof f ? f : Math.round) : 0, pr: 0, c: n ? parseInt(d.charAt(0) + "1", 10) * parseFloat(d.substr(2)) : parseFloat(d) - m || 0 };
                    return (
                        ("number" != typeof m || ("number" != typeof d && !n)) &&
                            (g || isNaN(m) || (!n && isNaN(d)) || "boolean" == typeof m || "boolean" == typeof d
                                ? ((o.fp = g), (j = O(m, n ? parseFloat(o.s) + o.c + (o.s + "").replace(/[0-9\-\.]/g, "") : d, h || G.defaultStringFilter, o)), (o = { t: j, p: "setRatio", s: 0, c: 1, f: 2, pg: 0, n: e || b, pr: 0, m: 0 }))
                                : ((o.s = parseFloat(m)), n || (o.c = parseFloat(d) - o.s || 0))),
                        o.c ? ((o._next = this._firstPT) && (o._next._prev = o), (this._firstPT = o), o) : void 0
                    );
                },
                Q = (G._internals = { isArray: p, isSelector: H, lazyTweens: J, blobDif: O }),
                R = (G._plugins = {}),
                S = (Q.tweenLookup = {}),
                T = 0,
                U = (Q.reservedProps = {
                    ease: 1,
                    delay: 1,
                    overwrite: 1,
                    onComplete: 1,
                    onCompleteParams: 1,
                    onCompleteScope: 1,
                    useFrames: 1,
                    runBackwards: 1,
                    startAt: 1,
                    onUpdate: 1,
                    onUpdateParams: 1,
                    onUpdateScope: 1,
                    onStart: 1,
                    onStartParams: 1,
                    onStartScope: 1,
                    onReverseComplete: 1,
                    onReverseCompleteParams: 1,
                    onReverseCompleteScope: 1,
                    onRepeat: 1,
                    onRepeatParams: 1,
                    onRepeatScope: 1,
                    easeParams: 1,
                    yoyo: 1,
                    immediateRender: 1,
                    repeat: 1,
                    repeatDelay: 1,
                    data: 1,
                    paused: 1,
                    reversed: 1,
                    autoCSS: 1,
                    lazy: 1,
                    onOverwrite: 1,
                    callbackScope: 1,
                    stringFilter: 1,
                    id: 1,
                    yoyoEase: 1,
                }),
                V = { none: 0, all: 1, auto: 2, concurrent: 3, allOnStart: 4, preexisting: 5, true: 1, false: 0 },
                W = (D._rootFramesTimeline = new F()),
                X = (D._rootTimeline = new F()),
                Y = 30,
                Z = (Q.lazyRender = function () {
                    var a,
                        b = J.length;
                    for (K = {}; --b > -1; ) (a = J[b]), a && a._lazy !== !1 && (a.render(a._lazy[0], a._lazy[1], !0), (a._lazy = !1));
                    J.length = 0;
                });
            (X._startTime = i.time),
                (W._startTime = i.frame),
                (X._active = W._active = !0),
                setTimeout(Z, 1),
                (D._updateRoot = G.render = function () {
                    var a, b, c;
                    if ((J.length && Z(), X.render((i.time - X._startTime) * X._timeScale, !1, !1), W.render((i.frame - W._startTime) * W._timeScale, !1, !1), J.length && Z(), i.frame >= Y)) {
                        Y = i.frame + (parseInt(G.autoSleep, 10) || 120);
                        for (c in S) {
                            for (b = S[c].tweens, a = b.length; --a > -1; ) b[a]._gc && b.splice(a, 1);
                            0 === b.length && delete S[c];
                        }
                        if (((c = X._first), (!c || c._paused) && G.autoSleep && !W._first && 1 === i._listeners.tick.length)) {
                            for (; c && c._paused; ) c = c._next;
                            c || i.sleep();
                        }
                    }
                }),
                i.addEventListener("tick", D._updateRoot);
            var $ = function (a, b, c) {
                    var d,
                        e,
                        f = a._gsTweenID;
                    if ((S[f || (a._gsTweenID = f = "t" + T++)] || (S[f] = { target: a, tweens: [] }), b && ((d = S[f].tweens), (d[(e = d.length)] = b), c))) for (; --e > -1; ) d[e] === b && d.splice(e, 1);
                    return S[f].tweens;
                },
                _ = function (a, b, c, d) {
                    var e,
                        f,
                        g = a.vars.onOverwrite;
                    return g && (e = g(a, b, c, d)), (g = G.onOverwrite), g && (f = g(a, b, c, d)), e !== !1 && f !== !1;
                },
                aa = function (a, b, c, d, e) {
                    var f, g, h, i;
                    if (1 === d || d >= 4) {
                        for (i = e.length, f = 0; i > f; f++)
                            if ((h = e[f]) !== b) h._gc || (h._kill(null, a, b) && (g = !0));
                            else if (5 === d) break;
                        return g;
                    }
                    var j,
                        k = b._startTime + m,
                        l = [],
                        n = 0,
                        o = 0 === b._duration;
                    for (f = e.length; --f > -1; )
                        (h = e[f]) === b ||
                            h._gc ||
                            h._paused ||
                            (h._timeline !== b._timeline
                                ? ((j = j || ba(b, 0, o)), 0 === ba(h, j, o) && (l[n++] = h))
                                : h._startTime <= k && h._startTime + h.totalDuration() / h._timeScale > k && (((o || !h._initted) && k - h._startTime <= 2e-10) || (l[n++] = h)));
                    for (f = n; --f > -1; )
                        if (((h = l[f]), 2 === d && h._kill(c, a, b) && (g = !0), 2 !== d || (!h._firstPT && h._initted))) {
                            if (2 !== d && !_(h, b)) continue;
                            h._enabled(!1, !1) && (g = !0);
                        }
                    return g;
                },
                ba = function (a, b, c) {
                    for (var d = a._timeline, e = d._timeScale, f = a._startTime; d._timeline; ) {
                        if (((f += d._startTime), (e *= d._timeScale), d._paused)) return -100;
                        d = d._timeline;
                    }
                    return (f /= e), f > b ? f - b : (c && f === b) || (!a._initted && 2 * m > f - b) ? m : (f += a.totalDuration() / a._timeScale / e) > b + m ? 0 : f - b - m;
                };
            (h._init = function () {
                var a,
                    b,
                    c,
                    d,
                    e,
                    f,
                    g = this.vars,
                    h = this._overwrittenProps,
                    i = this._duration,
                    j = !!g.immediateRender,
                    k = g.ease;
                if (g.startAt) {
                    this._startAt && (this._startAt.render(-1, !0), this._startAt.kill()), (e = {});
                    for (d in g.startAt) e[d] = g.startAt[d];
                    if (
                        ((e.data = "isStart"),
                        (e.overwrite = !1),
                        (e.immediateRender = !0),
                        (e.lazy = j && g.lazy !== !1),
                        (e.startAt = e.delay = null),
                        (e.onUpdate = g.onUpdate),
                        (e.onUpdateParams = g.onUpdateParams),
                        (e.onUpdateScope = g.onUpdateScope || g.callbackScope || this),
                        (this._startAt = G.to(this.target, 0, e)),
                        j)
                    )
                        if (this._time > 0) this._startAt = null;
                        else if (0 !== i) return;
                } else if (g.runBackwards && 0 !== i)
                    if (this._startAt) this._startAt.render(-1, !0), this._startAt.kill(), (this._startAt = null);
                    else {
                        0 !== this._time && (j = !1), (c = {});
                        for (d in g) (U[d] && "autoCSS" !== d) || (c[d] = g[d]);
                        if (((c.overwrite = 0), (c.data = "isFromStart"), (c.lazy = j && g.lazy !== !1), (c.immediateRender = j), (this._startAt = G.to(this.target, 0, c)), j)) {
                            if (0 === this._time) return;
                        } else this._startAt._init(), this._startAt._enabled(!1), this.vars.immediateRender && (this._startAt = null);
                    }
                if (
                    ((this._ease = k = k ? (k instanceof v ? k : "function" == typeof k ? new v(k, g.easeParams) : w[k] || G.defaultEase) : G.defaultEase),
                    g.easeParams instanceof Array && k.config && (this._ease = k.config.apply(k, g.easeParams)),
                    (this._easeType = this._ease._type),
                    (this._easePower = this._ease._power),
                    (this._firstPT = null),
                    this._targets)
                )
                    for (f = this._targets.length, a = 0; f > a; a++) this._initProps(this._targets[a], (this._propLookup[a] = {}), this._siblings[a], h ? h[a] : null, a) && (b = !0);
                else b = this._initProps(this.target, this._propLookup, this._siblings, h, 0);
                if ((b && G._onPluginEvent("_onInitAllProps", this), h && (this._firstPT || ("function" != typeof this.target && this._enabled(!1, !1))), g.runBackwards))
                    for (c = this._firstPT; c; ) (c.s += c.c), (c.c = -c.c), (c = c._next);
                (this._onUpdate = g.onUpdate), (this._initted = !0);
            }),
                (h._initProps = function (b, c, d, e, f) {
                    var g, h, i, j, k, l;
                    if (null == b) return !1;
                    K[b._gsTweenID] && Z(), this.vars.css || (b.style && b !== a && b.nodeType && R.css && this.vars.autoCSS !== !1 && I(this.vars, b));
                    for (g in this.vars)
                        if (((l = this.vars[g]), U[g])) l && (l instanceof Array || (l.push && p(l))) && -1 !== l.join("").indexOf("{self}") && (this.vars[g] = l = this._swapSelfInParams(l, this));
                        else if (R[g] && (j = new R[g]())._onInitTween(b, this.vars[g], this, f)) {
                            for (this._firstPT = k = { _next: this._firstPT, t: j, p: "setRatio", s: 0, c: 1, f: 1, n: g, pg: 1, pr: j._priority, m: 0 }, h = j._overwriteProps.length; --h > -1; ) c[j._overwriteProps[h]] = this._firstPT;
                            (j._priority || j._onInitAllProps) && (i = !0), (j._onDisable || j._onEnable) && (this._notifyPluginsOfEnabled = !0), k._next && (k._next._prev = k);
                        } else c[g] = P.call(this, b, g, "get", l, g, 0, null, this.vars.stringFilter, f);
                    return e && this._kill(e, b)
                        ? this._initProps(b, c, d, e, f)
                        : this._overwrite > 1 && this._firstPT && d.length > 1 && aa(b, this, c, this._overwrite, d)
                        ? (this._kill(c, b), this._initProps(b, c, d, e, f))
                        : (this._firstPT && ((this.vars.lazy !== !1 && this._duration) || (this.vars.lazy && !this._duration)) && (K[b._gsTweenID] = !0), i);
                }),
                (h.render = function (a, b, c) {
                    var d,
                        e,
                        f,
                        g,
                        h = this._time,
                        i = this._duration,
                        j = this._rawPrevTime;
                    if (a >= i - 1e-7 && a >= 0)
                        (this._totalTime = this._time = i),
                            (this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1),
                            this._reversed || ((d = !0), (e = "onComplete"), (c = c || this._timeline.autoRemoveChildren)),
                            0 === i &&
                                (this._initted || !this.vars.lazy || c) &&
                                (this._startTime === this._timeline._duration && (a = 0),
                                (0 > j || (0 >= a && a >= -1e-7) || (j === m && "isPause" !== this.data)) && j !== a && ((c = !0), j > m && (e = "onReverseComplete")),
                                (this._rawPrevTime = g = !b || a || j === a ? a : m));
                    else if (1e-7 > a)
                        (this._totalTime = this._time = 0),
                            (this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0),
                            (0 !== h || (0 === i && j > 0)) && ((e = "onReverseComplete"), (d = this._reversed)),
                            0 > a && ((this._active = !1), 0 === i && (this._initted || !this.vars.lazy || c) && (j >= 0 && (j !== m || "isPause" !== this.data) && (c = !0), (this._rawPrevTime = g = !b || a || j === a ? a : m))),
                            (!this._initted || (this._startAt && this._startAt.progress())) && (c = !0);
                    else if (((this._totalTime = this._time = a), this._easeType)) {
                        var k = a / i,
                            l = this._easeType,
                            n = this._easePower;
                        (1 === l || (3 === l && k >= 0.5)) && (k = 1 - k),
                            3 === l && (k *= 2),
                            1 === n ? (k *= k) : 2 === n ? (k *= k * k) : 3 === n ? (k *= k * k * k) : 4 === n && (k *= k * k * k * k),
                            1 === l ? (this.ratio = 1 - k) : 2 === l ? (this.ratio = k) : 0.5 > a / i ? (this.ratio = k / 2) : (this.ratio = 1 - k / 2);
                    } else this.ratio = this._ease.getRatio(a / i);
                    if (this._time !== h || c) {
                        if (!this._initted) {
                            if ((this._init(), !this._initted || this._gc)) return;
                            if (!c && this._firstPT && ((this.vars.lazy !== !1 && this._duration) || (this.vars.lazy && !this._duration)))
                                return (this._time = this._totalTime = h), (this._rawPrevTime = j), J.push(this), void (this._lazy = [a, b]);
                            this._time && !d ? (this.ratio = this._ease.getRatio(this._time / i)) : d && this._ease._calcEnd && (this.ratio = this._ease.getRatio(0 === this._time ? 0 : 1));
                        }
                        for (
                            this._lazy !== !1 && (this._lazy = !1),
                                this._active || (!this._paused && this._time !== h && a >= 0 && (this._active = !0)),
                                0 === h && (this._startAt && (a >= 0 ? this._startAt.render(a, !0, c) : e || (e = "_dummyGS")), this.vars.onStart && (0 !== this._time || 0 === i) && (b || this._callback("onStart"))),
                                f = this._firstPT;
                            f;

                        )
                            f.f ? f.t[f.p](f.c * this.ratio + f.s) : (f.t[f.p] = f.c * this.ratio + f.s), (f = f._next);
                        this._onUpdate && (0 > a && this._startAt && a !== -1e-4 && this._startAt.render(a, !0, c), b || ((this._time !== h || d || c) && this._callback("onUpdate"))),
                            e &&
                                (!this._gc || c) &&
                                (0 > a && this._startAt && !this._onUpdate && a !== -1e-4 && this._startAt.render(a, !0, c),
                                d && (this._timeline.autoRemoveChildren && this._enabled(!1, !1), (this._active = !1)),
                                !b && this.vars[e] && this._callback(e),
                                0 === i && this._rawPrevTime === m && g !== m && (this._rawPrevTime = 0));
                    }
                }),
                (h._kill = function (a, b, c) {
                    if (("all" === a && (a = null), null == a && (null == b || b === this.target))) return (this._lazy = !1), this._enabled(!1, !1);
                    b = "string" != typeof b ? b || this._targets || this.target : G.selector(b) || b;
                    var d,
                        e,
                        f,
                        g,
                        h,
                        i,
                        j,
                        k,
                        l,
                        m = c && this._time && c._startTime === this._startTime && this._timeline === c._timeline;
                    if ((p(b) || H(b)) && "number" != typeof b[0]) for (d = b.length; --d > -1; ) this._kill(a, b[d], c) && (i = !0);
                    else {
                        if (this._targets) {
                            for (d = this._targets.length; --d > -1; )
                                if (b === this._targets[d]) {
                                    (h = this._propLookup[d] || {}), (this._overwrittenProps = this._overwrittenProps || []), (e = this._overwrittenProps[d] = a ? this._overwrittenProps[d] || {} : "all");
                                    break;
                                }
                        } else {
                            if (b !== this.target) return !1;
                            (h = this._propLookup), (e = this._overwrittenProps = a ? this._overwrittenProps || {} : "all");
                        }
                        if (h) {
                            if (((j = a || h), (k = a !== e && "all" !== e && a !== h && ("object" != typeof a || !a._tempKill)), c && (G.onOverwrite || this.vars.onOverwrite))) {
                                for (f in j) h[f] && (l || (l = []), l.push(f));
                                if ((l || !a) && !_(this, c, b, l)) return !1;
                            }
                            for (f in j)
                                (g = h[f]) &&
                                    (m && (g.f ? g.t[g.p](g.s) : (g.t[g.p] = g.s), (i = !0)),
                                    g.pg && g.t._kill(j) && (i = !0),
                                    (g.pg && 0 !== g.t._overwriteProps.length) || (g._prev ? (g._prev._next = g._next) : g === this._firstPT && (this._firstPT = g._next), g._next && (g._next._prev = g._prev), (g._next = g._prev = null)),
                                    delete h[f]),
                                    k && (e[f] = 1);
                            !this._firstPT && this._initted && this._enabled(!1, !1);
                        }
                    }
                    return i;
                }),
                (h.invalidate = function () {
                    return (
                        this._notifyPluginsOfEnabled && G._onPluginEvent("_onDisable", this),
                        (this._firstPT = this._overwrittenProps = this._startAt = this._onUpdate = null),
                        (this._notifyPluginsOfEnabled = this._active = this._lazy = !1),
                        (this._propLookup = this._targets ? {} : []),
                        D.prototype.invalidate.call(this),
                        this.vars.immediateRender && ((this._time = -m), this.render(Math.min(0, -this._delay))),
                        this
                    );
                }),
                (h._enabled = function (a, b) {
                    if ((j || i.wake(), a && this._gc)) {
                        var c,
                            d = this._targets;
                        if (d) for (c = d.length; --c > -1; ) this._siblings[c] = $(d[c], this, !0);
                        else this._siblings = $(this.target, this, !0);
                    }
                    return D.prototype._enabled.call(this, a, b), this._notifyPluginsOfEnabled && this._firstPT ? G._onPluginEvent(a ? "_onEnable" : "_onDisable", this) : !1;
                }),
                (G.to = function (a, b, c) {
                    return new G(a, b, c);
                }),
                (G.from = function (a, b, c) {
                    return (c.runBackwards = !0), (c.immediateRender = 0 != c.immediateRender), new G(a, b, c);
                }),
                (G.fromTo = function (a, b, c, d) {
                    return (d.startAt = c), (d.immediateRender = 0 != d.immediateRender && 0 != c.immediateRender), new G(a, b, d);
                }),
                (G.delayedCall = function (a, b, c, d, e) {
                    return new G(b, 0, { delay: a, onComplete: b, onCompleteParams: c, callbackScope: d, onReverseComplete: b, onReverseCompleteParams: c, immediateRender: !1, lazy: !1, useFrames: e, overwrite: 0 });
                }),
                (G.set = function (a, b) {
                    return new G(a, 0, b);
                }),
                (G.getTweensOf = function (a, b) {
                    if (null == a) return [];
                    a = "string" != typeof a ? a : G.selector(a) || a;
                    var c, d, e, f;
                    if ((p(a) || H(a)) && "number" != typeof a[0]) {
                        for (c = a.length, d = []; --c > -1; ) d = d.concat(G.getTweensOf(a[c], b));
                        for (c = d.length; --c > -1; ) for (f = d[c], e = c; --e > -1; ) f === d[e] && d.splice(c, 1);
                    } else if (a._gsTweenID) for (d = $(a).concat(), c = d.length; --c > -1; ) (d[c]._gc || (b && !d[c].isActive())) && d.splice(c, 1);
                    return d || [];
                }),
                (G.killTweensOf = G.killDelayedCallsTo = function (a, b, c) {
                    "object" == typeof b && ((c = b), (b = !1));
                    for (var d = G.getTweensOf(a, b), e = d.length; --e > -1; ) d[e]._kill(c, a);
                });
            var ca = t(
                "plugins.TweenPlugin",
                function (a, b) {
                    (this._overwriteProps = (a || "").split(",")), (this._propName = this._overwriteProps[0]), (this._priority = b || 0), (this._super = ca.prototype);
                },
                !0
            );
            if (
                ((h = ca.prototype),
                (ca.version = "1.19.0"),
                (ca.API = 2),
                (h._firstPT = null),
                (h._addTween = P),
                (h.setRatio = N),
                (h._kill = function (a) {
                    var b,
                        c = this._overwriteProps,
                        d = this._firstPT;
                    if (null != a[this._propName]) this._overwriteProps = [];
                    else for (b = c.length; --b > -1; ) null != a[c[b]] && c.splice(b, 1);
                    for (; d; ) null != a[d.n] && (d._next && (d._next._prev = d._prev), d._prev ? ((d._prev._next = d._next), (d._prev = null)) : this._firstPT === d && (this._firstPT = d._next)), (d = d._next);
                    return !1;
                }),
                (h._mod = h._roundProps = function (a) {
                    for (var b, c = this._firstPT; c; ) (b = a[this._propName] || (null != c.n && a[c.n.split(this._propName + "_").join("")])), b && "function" == typeof b && (2 === c.f ? (c.t._applyPT.m = b) : (c.m = b)), (c = c._next);
                }),
                (G._onPluginEvent = function (a, b) {
                    var c,
                        d,
                        e,
                        f,
                        g,
                        h = b._firstPT;
                    if ("_onInitAllProps" === a) {
                        for (; h; ) {
                            for (g = h._next, d = e; d && d.pr > h.pr; ) d = d._next;
                            (h._prev = d ? d._prev : f) ? (h._prev._next = h) : (e = h), (h._next = d) ? (d._prev = h) : (f = h), (h = g);
                        }
                        h = b._firstPT = e;
                    }
                    for (; h; ) h.pg && "function" == typeof h.t[a] && h.t[a]() && (c = !0), (h = h._next);
                    return c;
                }),
                (ca.activate = function (a) {
                    for (var b = a.length; --b > -1; ) a[b].API === ca.API && (R[new a[b]()._propName] = a[b]);
                    return !0;
                }),
                (s.plugin = function (a) {
                    if (!(a && a.propName && a.init && a.API)) throw "illegal plugin definition.";
                    var b,
                        c = a.propName,
                        d = a.priority || 0,
                        e = a.overwriteProps,
                        f = { init: "_onInitTween", set: "setRatio", kill: "_kill", round: "_mod", mod: "_mod", initAll: "_onInitAllProps" },
                        g = t(
                            "plugins." + c.charAt(0).toUpperCase() + c.substr(1) + "Plugin",
                            function () {
                                ca.call(this, c, d), (this._overwriteProps = e || []);
                            },
                            a.global === !0
                        ),
                        h = (g.prototype = new ca(c));
                    (h.constructor = g), (g.API = a.API);
                    for (b in f) "function" == typeof a[b] && (h[f[b]] = a[b]);
                    return (g.version = a.version), ca.activate([g]), g;
                }),
                (f = a._gsQueue))
            ) {
                for (g = 0; g < f.length; g++) f[g]();
                for (h in q) q[h].func || a.console.log("GSAP encountered missing dependency: " + h);
            }
            j = !1;
        }
    })("undefined" != typeof module && module.exports && "undefined" != typeof global ? global : this || window, "TweenMax");



(function (global, factory) {
    typeof exports === "object" && typeof module !== "undefined" ? (module.exports = factory()) : typeof define === "function" && define.amd ? define(factory) : (global.Swiper = factory());
})(this, function () {
    "use strict";
    var Dom7 = function Dom7(arr) {
        var self = this;
        for (var i = 0; i < arr.length; i += 1) {
            self[i] = arr[i];
        }
        self.length = arr.length;
        return this;
    };
    function $$1(selector, context) {
        var arr = [];
        var i = 0;
        if (selector && !context) {
            if (selector instanceof Dom7) {
                return selector;
            }
        }
        if (selector) {
            if (typeof selector === "string") {
                var els;
                var tempParent;
                var html = selector.trim();
                if (html.indexOf("<") >= 0 && html.indexOf(">") >= 0) {
                    var toCreate = "div";
                    if (html.indexOf("<li") === 0) {
                        toCreate = "ul";
                    }
                    if (html.indexOf("<tr") === 0) {
                        toCreate = "tbody";
                    }
                    if (html.indexOf("<td") === 0 || html.indexOf("<th") === 0) {
                        toCreate = "tr";
                    }
                    if (html.indexOf("<tbody") === 0) {
                        toCreate = "table";
                    }
                    if (html.indexOf("<option") === 0) {
                        toCreate = "select";
                    }
                    tempParent = document.createElement(toCreate);
                    tempParent.innerHTML = html;
                    for (i = 0; i < tempParent.childNodes.length; i += 1) {
                        arr.push(tempParent.childNodes[i]);
                    }
                } else {
                    if (!context && selector[0] === "#" && !selector.match(/[ .<>:~]/)) {
                        els = [document.getElementById(selector.trim().split("#")[1])];
                    } else {
                        els = (context || document).querySelectorAll(selector.trim());
                    }
                    for (i = 0; i < els.length; i += 1) {
                        if (els[i]) {
                            arr.push(els[i]);
                        }
                    }
                }
            } else if (selector.nodeType || selector === window || selector === document) {
                arr.push(selector);
            } else if (selector.length > 0 && selector[0].nodeType) {
                for (i = 0; i < selector.length; i += 1) {
                    arr.push(selector[i]);
                }
            }
        }
        return new Dom7(arr);
    }
    $$1.fn = Dom7.prototype;
    $$1.Class = Dom7;
    $$1.Dom7 = Dom7;
    function unique(arr) {
        var uniqueArray = [];
        for (var i = 0; i < arr.length; i += 1) {
            if (uniqueArray.indexOf(arr[i]) === -1) {
                uniqueArray.push(arr[i]);
            }
        }
        return uniqueArray;
    }
    function addClass(className) {
        var this$1 = this;
        if (typeof className === "undefined") {
            return this;
        }
        var classes = className.split(" ");
        for (var i = 0; i < classes.length; i += 1) {
            for (var j = 0; j < this.length; j += 1) {
                if (typeof this$1[j].classList !== "undefined") {
                    this$1[j].classList.add(classes[i]);
                }
            }
        }
        return this;
    }
    function removeClass(className) {
        var this$1 = this;
        var classes = className.split(" ");
        for (var i = 0; i < classes.length; i += 1) {
            for (var j = 0; j < this.length; j += 1) {
                if (typeof this$1[j].classList !== "undefined") {
                    this$1[j].classList.remove(classes[i]);
                }
            }
        }
        return this;
    }
    function hasClass(className) {
        if (!this[0]) {
            return !1;
        }
        return this[0].classList.contains(className);
    }
    function toggleClass(className) {
        var this$1 = this;
        var classes = className.split(" ");
        for (var i = 0; i < classes.length; i += 1) {
            for (var j = 0; j < this.length; j += 1) {
                if (typeof this$1[j].classList !== "undefined") {
                    this$1[j].classList.toggle(classes[i]);
                }
            }
        }
        return this;
    }
    function attr(attrs, value) {
        var arguments$1 = arguments;
        var this$1 = this;
        if (arguments.length === 1 && typeof attrs === "string") {
            if (this[0]) {
                return this[0].getAttribute(attrs);
            }
            return undefined;
        }
        for (var i = 0; i < this.length; i += 1) {
            if (arguments$1.length === 2) {
                this$1[i].setAttribute(attrs, value);
            } else {
                for (var attrName in attrs) {
                    this$1[i][attrName] = attrs[attrName];
                    this$1[i].setAttribute(attrName, attrs[attrName]);
                }
            }
        }
        return this;
    }
    function removeAttr(attr) {
        var this$1 = this;
        for (var i = 0; i < this.length; i += 1) {
            this$1[i].removeAttribute(attr);
        }
        return this;
    }
    function data(key, value) {
        var this$1 = this;
        var el;
        if (typeof value === "undefined") {
            el = this[0];
            if (el) {
                if (el.dom7ElementDataStorage && key in el.dom7ElementDataStorage) {
                    return el.dom7ElementDataStorage[key];
                }
                var dataKey = el.getAttribute("data-" + key);
                if (dataKey) {
                    return dataKey;
                }
                return undefined;
            }
            return undefined;
        }
        for (var i = 0; i < this.length; i += 1) {
            el = this$1[i];
            if (!el.dom7ElementDataStorage) {
                el.dom7ElementDataStorage = {};
            }
            el.dom7ElementDataStorage[key] = value;
        }
        return this;
    }
    function transform(transform) {
        var this$1 = this;
        for (var i = 0; i < this.length; i += 1) {
            var elStyle = this$1[i].style;
            elStyle.webkitTransform = transform;
            elStyle.transform = transform;
        }
        return this;
    }
    function transition(duration) {
        var this$1 = this;
        if (typeof duration !== "string") {
            duration = duration + "ms";
        }
        for (var i = 0; i < this.length; i += 1) {
            var elStyle = this$1[i].style;
            elStyle.webkitTransitionDuration = duration;
            elStyle.transitionDuration = duration;
        }
        return this;
    }
    function on() {
        var this$1 = this;
        var args = [],
            len = arguments.length;
        while (len--) args[len] = arguments[len];
        var eventType = args[0];
        var targetSelector = args[1];
        var listener = args[2];
        var capture = args[3];
        if (typeof args[1] === "function") {
            var assign;
            (assign = args), (eventType = assign[0]), (listener = assign[1]), (capture = assign[2]);
            targetSelector = undefined;
        }
        if (!capture) {
            capture = !1;
        }
        function handleLiveEvent(e) {
            var target = e.target;
            if (!target) {
                return;
            }
            var eventData = e.target.dom7EventData || [];
            eventData.unshift(e);
            if ($$1(target).is(targetSelector)) {
                listener.apply(target, eventData);
            } else {
                var parents = $$1(target).parents();
                for (var k = 0; k < parents.length; k += 1) {
                    if ($$1(parents[k]).is(targetSelector)) {
                        listener.apply(parents[k], eventData);
                    }
                }
            }
        }
        function handleEvent(e) {
            var eventData = e && e.target ? e.target.dom7EventData || [] : [];
            eventData.unshift(e);
            listener.apply(this, eventData);
        }
        var events = eventType.split(" ");
        var j;
        for (var i = 0; i < this.length; i += 1) {
            var el = this$1[i];
            if (!targetSelector) {
                for (j = 0; j < events.length; j += 1) {
                    if (!el.dom7Listeners) {
                        el.dom7Listeners = [];
                    }
                    el.dom7Listeners.push({ type: eventType, listener: listener, proxyListener: handleEvent });
                    el.addEventListener(events[j], handleEvent, capture);
                }
            } else {
                for (j = 0; j < events.length; j += 1) {
                    if (!el.dom7LiveListeners) {
                        el.dom7LiveListeners = [];
                    }
                    el.dom7LiveListeners.push({ type: eventType, listener: listener, proxyListener: handleLiveEvent });
                    el.addEventListener(events[j], handleLiveEvent, capture);
                }
            }
        }
        return this;
    }
    function off() {
        var this$1 = this;
        var args = [],
            len = arguments.length;
        while (len--) args[len] = arguments[len];
        var eventType = args[0];
        var targetSelector = args[1];
        var listener = args[2];
        var capture = args[3];
        if (typeof args[1] === "function") {
            var assign;
            (assign = args), (eventType = assign[0]), (listener = assign[1]), (capture = assign[2]);
            targetSelector = undefined;
        }
        if (!capture) {
            capture = !1;
        }
        var events = eventType.split(" ");
        for (var i = 0; i < events.length; i += 1) {
            for (var j = 0; j < this.length; j += 1) {
                var el = this$1[j];
                if (!targetSelector) {
                    if (el.dom7Listeners) {
                        for (var k = 0; k < el.dom7Listeners.length; k += 1) {
                            if (listener) {
                                if (el.dom7Listeners[k].listener === listener) {
                                    el.removeEventListener(events[i], el.dom7Listeners[k].proxyListener, capture);
                                }
                            } else if (el.dom7Listeners[k].type === events[i]) {
                                el.removeEventListener(events[i], el.dom7Listeners[k].proxyListener, capture);
                            }
                        }
                    }
                } else if (el.dom7LiveListeners) {
                    for (var k$1 = 0; k$1 < el.dom7LiveListeners.length; k$1 += 1) {
                        if (listener) {
                            if (el.dom7LiveListeners[k$1].listener === listener) {
                                el.removeEventListener(events[i], el.dom7LiveListeners[k$1].proxyListener, capture);
                            }
                        } else if (el.dom7LiveListeners[k$1].type === events[i]) {
                            el.removeEventListener(events[i], el.dom7LiveListeners[k$1].proxyListener, capture);
                        }
                    }
                }
            }
        }
        return this;
    }
    function trigger() {
        var this$1 = this;
        var args = [],
            len = arguments.length;
        while (len--) args[len] = arguments[len];
        var events = args[0].split(" ");
        var eventData = args[1];
        for (var i = 0; i < events.length; i += 1) {
            for (var j = 0; j < this.length; j += 1) {
                var evt = void 0;
                try {
                    evt = new window.CustomEvent(events[i], { detail: eventData, bubbles: !0, cancelable: !0 });
                } catch (e) {
                    evt = document.createEvent("Event");
                    evt.initEvent(events[i], !0, !0);
                    evt.detail = eventData;
                }
                this$1[j].dom7EventData = args.filter(function (data, dataIndex) {
                    return dataIndex > 0;
                });
                this$1[j].dispatchEvent(evt);
                this$1[j].dom7EventData = [];
                delete this$1[j].dom7EventData;
            }
        }
        return this;
    }
    function transitionEnd(callback) {
        var events = ["webkitTransitionEnd", "transitionend"];
        var dom = this;
        var i;
        function fireCallBack(e) {
            if (e.target !== this) {
                return;
            }
            callback.call(this, e);
            for (i = 0; i < events.length; i += 1) {
                dom.off(events[i], fireCallBack);
            }
        }
        if (callback) {
            for (i = 0; i < events.length; i += 1) {
                dom.on(events[i], fireCallBack);
            }
        }
        return this;
    }
    function outerWidth(includeMargins) {
        if (this.length > 0) {
            if (includeMargins) {
                var styles = this.styles();
                return this[0].offsetWidth + parseFloat(styles.getPropertyValue("margin-right")) + parseFloat(styles.getPropertyValue("margin-left"));
            }
            return this[0].offsetWidth;
        }
        return null;
    }
    function outerHeight(includeMargins) {
        if (this.length > 0) {
            if (includeMargins) {
                var styles = this.styles();
                return this[0].offsetHeight + parseFloat(styles.getPropertyValue("margin-top")) + parseFloat(styles.getPropertyValue("margin-bottom"));
            }
            return this[0].offsetHeight;
        }
        return null;
    }
    function offset() {
        if (this.length > 0) {
            var el = this[0];
            var box = el.getBoundingClientRect();
            var body = document.body;
            var clientTop = el.clientTop || body.clientTop || 0;
            var clientLeft = el.clientLeft || body.clientLeft || 0;
            var scrollTop = el === window ? window.scrollY : el.scrollTop;
            var scrollLeft = el === window ? window.scrollX : el.scrollLeft;
            return { top: box.top + scrollTop - clientTop, left: box.left + scrollLeft - clientLeft };
        }
        return null;
    }
    function styles() {
        if (this[0]) {
            return window.getComputedStyle(this[0], null);
        }
        return {};
    }
    function css(props, value) {
        var this$1 = this;
        var i;
        if (arguments.length === 1) {
            if (typeof props === "string") {
                if (this[0]) {
                    return window.getComputedStyle(this[0], null).getPropertyValue(props);
                }
            } else {
                for (i = 0; i < this.length; i += 1) {
                    for (var prop in props) {
                        this$1[i].style[prop] = props[prop];
                    }
                }
                return this;
            }
        }
        if (arguments.length === 2 && typeof props === "string") {
            for (i = 0; i < this.length; i += 1) {
                this$1[i].style[props] = value;
            }
            return this;
        }
        return this;
    }
    function each(callback) {
        var this$1 = this;
        if (!callback) {
            return this;
        }
        for (var i = 0; i < this.length; i += 1) {
            if (callback.call(this$1[i], i, this$1[i]) === !1) {
                return this$1;
            }
        }
        return this;
    }
    function html(html) {
        var this$1 = this;
        if (typeof html === "undefined") {
            return this[0] ? this[0].innerHTML : undefined;
        }
        for (var i = 0; i < this.length; i += 1) {
            this$1[i].innerHTML = html;
        }
        return this;
    }
    function text(text) {
        var this$1 = this;
        if (typeof text === "undefined") {
            if (this[0]) {
                return this[0].textContent.trim();
            }
            return null;
        }
        for (var i = 0; i < this.length; i += 1) {
            this$1[i].textContent = text;
        }
        return this;
    }
    function is(selector) {
        var el = this[0];
        var compareWith;
        var i;
        if (!el || typeof selector === "undefined") {
            return !1;
        }
        if (typeof selector === "string") {
            if (el.matches) {
                return el.matches(selector);
            } else if (el.webkitMatchesSelector) {
                return el.webkitMatchesSelector(selector);
            } else if (el.msMatchesSelector) {
                return el.msMatchesSelector(selector);
            }
            compareWith = $$1(selector);
            for (i = 0; i < compareWith.length; i += 1) {
                if (compareWith[i] === el) {
                    return !0;
                }
            }
            return !1;
        } else if (selector === document) {
            return el === document;
        } else if (selector === window) {
            return el === window;
        }
        if (selector.nodeType || selector instanceof Dom7) {
            compareWith = selector.nodeType ? [selector] : selector;
            for (i = 0; i < compareWith.length; i += 1) {
                if (compareWith[i] === el) {
                    return !0;
                }
            }
            return !1;
        }
        return !1;
    }
    function index() {
        var child = this[0];
        var i;
        if (child) {
            i = 0;
            while ((child = child.previousSibling) !== null) {
                if (child.nodeType === 1) {
                    i += 1;
                }
            }
            return i;
        }
        return undefined;
    }
    function eq(index) {
        if (typeof index === "undefined") {
            return this;
        }
        var length = this.length;
        var returnIndex;
        if (index > length - 1) {
            return new Dom7([]);
        }
        if (index < 0) {
            returnIndex = length + index;
            if (returnIndex < 0) {
                return new Dom7([]);
            }
            return new Dom7([this[returnIndex]]);
        }
        return new Dom7([this[index]]);
    }
    function append() {
        var this$1 = this;
        var args = [],
            len = arguments.length;
        while (len--) args[len] = arguments[len];
        var newChild;
        for (var k = 0; k < args.length; k += 1) {
            newChild = args[k];
            for (var i = 0; i < this.length; i += 1) {
                if (typeof newChild === "string") {
                    var tempDiv = document.createElement("div");
                    tempDiv.innerHTML = newChild;
                    while (tempDiv.firstChild) {
                        this$1[i].appendChild(tempDiv.firstChild);
                    }
                } else if (newChild instanceof Dom7) {
                    for (var j = 0; j < newChild.length; j += 1) {
                        this$1[i].appendChild(newChild[j]);
                    }
                } else {
                    this$1[i].appendChild(newChild);
                }
            }
        }
        return this;
    }
    function prepend(newChild) {
        var this$1 = this;
        var i;
        var j;
        for (i = 0; i < this.length; i += 1) {
            if (typeof newChild === "string") {
                var tempDiv = document.createElement("div");
                tempDiv.innerHTML = newChild;
                for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {
                    this$1[i].insertBefore(tempDiv.childNodes[j], this$1[i].childNodes[0]);
                }
            } else if (newChild instanceof Dom7) {
                for (j = 0; j < newChild.length; j += 1) {
                    this$1[i].insertBefore(newChild[j], this$1[i].childNodes[0]);
                }
            } else {
                this$1[i].insertBefore(newChild, this$1[i].childNodes[0]);
            }
        }
        return this;
    }
    function next(selector) {
        if (this.length > 0) {
            if (selector) {
                if (this[0].nextElementSibling && $$1(this[0].nextElementSibling).is(selector)) {
                    return new Dom7([this[0].nextElementSibling]);
                }
                return new Dom7([]);
            }
            if (this[0].nextElementSibling) {
                return new Dom7([this[0].nextElementSibling]);
            }
            return new Dom7([]);
        }
        return new Dom7([]);
    }
    function nextAll(selector) {
        var nextEls = [];
        var el = this[0];
        if (!el) {
            return new Dom7([]);
        }
        while (el.nextElementSibling) {
            var next = el.nextElementSibling;
            if (selector) {
                if ($$1(next).is(selector)) {
                    nextEls.push(next);
                }
            } else {
                nextEls.push(next);
            }
            el = next;
        }
        return new Dom7(nextEls);
    }
    function prev(selector) {
        if (this.length > 0) {
            var el = this[0];
            if (selector) {
                if (el.previousElementSibling && $$1(el.previousElementSibling).is(selector)) {
                    return new Dom7([el.previousElementSibling]);
                }
                return new Dom7([]);
            }
            if (el.previousElementSibling) {
                return new Dom7([el.previousElementSibling]);
            }
            return new Dom7([]);
        }
        return new Dom7([]);
    }
    function prevAll(selector) {
        var prevEls = [];
        var el = this[0];
        if (!el) {
            return new Dom7([]);
        }
        while (el.previousElementSibling) {
            var prev = el.previousElementSibling;
            if (selector) {
                if ($$1(prev).is(selector)) {
                    prevEls.push(prev);
                }
            } else {
                prevEls.push(prev);
            }
            el = prev;
        }
        return new Dom7(prevEls);
    }
    function parent(selector) {
        var this$1 = this;
        var parents = [];
        for (var i = 0; i < this.length; i += 1) {
            if (this$1[i].parentNode !== null) {
                if (selector) {
                    if ($$1(this$1[i].parentNode).is(selector)) {
                        parents.push(this$1[i].parentNode);
                    }
                } else {
                    parents.push(this$1[i].parentNode);
                }
            }
        }
        return $$1(unique(parents));
    }
    function parents(selector) {
        var this$1 = this;
        var parents = [];
        for (var i = 0; i < this.length; i += 1) {
            var parent = this$1[i].parentNode;
            while (parent) {
                if (selector) {
                    if ($$1(parent).is(selector)) {
                        parents.push(parent);
                    }
                } else {
                    parents.push(parent);
                }
                parent = parent.parentNode;
            }
        }
        return $$1(unique(parents));
    }
    function closest(selector) {
        var closest = this;
        if (typeof selector === "undefined") {
            return new Dom7([]);
        }
        if (!closest.is(selector)) {
            closest = closest.parents(selector).eq(0);
        }
        return closest;
    }
    function find(selector) {
        var this$1 = this;
        var foundElements = [];
        for (var i = 0; i < this.length; i += 1) {
            var found = this$1[i].querySelectorAll(selector);
            for (var j = 0; j < found.length; j += 1) {
                foundElements.push(found[j]);
            }
        }
        return new Dom7(foundElements);
    }
    function children(selector) {
        var this$1 = this;
        var children = [];
        for (var i = 0; i < this.length; i += 1) {
            var childNodes = this$1[i].childNodes;
            for (var j = 0; j < childNodes.length; j += 1) {
                if (!selector) {
                    if (childNodes[j].nodeType === 1) {
                        children.push(childNodes[j]);
                    }
                } else if (childNodes[j].nodeType === 1 && $$1(childNodes[j]).is(selector)) {
                    children.push(childNodes[j]);
                }
            }
        }
        return new Dom7(unique(children));
    }
    function remove() {
        var this$1 = this;
        for (var i = 0; i < this.length; i += 1) {
            if (this$1[i].parentNode) {
                this$1[i].parentNode.removeChild(this$1[i]);
            }
        }
        return this;
    }
    function add() {
        var args = [],
            len = arguments.length;
        while (len--) args[len] = arguments[len];
        var dom = this;
        var i;
        var j;
        for (i = 0; i < args.length; i += 1) {
            var toAdd = $$1(args[i]);
            for (j = 0; j < toAdd.length; j += 1) {
                dom[dom.length] = toAdd[j];
                dom.length += 1;
            }
        }
        return dom;
    }
    var noTrigger = "resize scroll".split(" ");
    var Methods = {
        addClass: addClass,
        removeClass: removeClass,
        hasClass: hasClass,
        toggleClass: toggleClass,
        attr: attr,
        removeAttr: removeAttr,
        data: data,
        transform: transform,
        transition: transition,
        on: on,
        off: off,
        trigger: trigger,
        transitionEnd: transitionEnd,
        outerWidth: outerWidth,
        outerHeight: outerHeight,
        offset: offset,
        css: css,
        each: each,
        html: html,
        text: text,
        is: is,
        index: index,
        eq: eq,
        append: append,
        prepend: prepend,
        next: next,
        nextAll: nextAll,
        prev: prev,
        prevAll: prevAll,
        parent: parent,
        parents: parents,
        closest: closest,
        find: find,
        children: children,
        remove: remove,
        add: add,
        styles: styles,
    };
    Object.keys(Methods).forEach(function (methodName) {
        $$1.fn[methodName] = Methods[methodName];
    });
    var w;
    if (typeof window === "undefined") {
        w = {
            navigator: { userAgent: "" },
            location: {},
            history: {},
            addEventListener: function addEventListener() {},
            removeEventListener: function removeEventListener() {},
            getComputedStyle: function getComputedStyle() {
                return {};
            },
            Image: function Image() {},
            Date: function Date() {},
            screen: {},
        };
    } else {
        w = window;
    }
    var win = w;
    var Utils = {
        deleteProps: function deleteProps(obj) {
            var object = obj;
            Object.keys(object).forEach(function (key) {
                try {
                    object[key] = null;
                } catch (e) {}
                try {
                    delete object[key];
                } catch (e) {}
            });
        },
        nextTick: function nextTick(callback, delay) {
            if (delay === void 0) delay = 0;
            return setTimeout(callback, delay);
        },
        now: function now() {
            return Date.now();
        },
        getTranslate: function getTranslate(el, axis) {
            if (axis === void 0) axis = "x";
            var matrix;
            var curTransform;
            var transformMatrix;
            var curStyle = win.getComputedStyle(el, null);
            if (win.WebKitCSSMatrix) {
                curTransform = curStyle.transform || curStyle.webkitTransform;
                if (curTransform.split(",").length > 6) {
                    curTransform = curTransform
                        .split(", ")
                        .map(function (a) {
                            return a.replace(",", ".");
                        })
                        .join(", ");
                }
                transformMatrix = new win.WebKitCSSMatrix(curTransform === "none" ? "" : curTransform);
            } else {
                transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue("transform").replace("translate(", "matrix(1, 0, 0, 1,");
                matrix = transformMatrix.toString().split(",");
            }
            if (axis === "x") {
                if (win.WebKitCSSMatrix) {
                    curTransform = transformMatrix.m41;
                } else if (matrix.length === 16) {
                    curTransform = parseFloat(matrix[12]);
                } else {
                    curTransform = parseFloat(matrix[4]);
                }
            }
            if (axis === "y") {
                if (win.WebKitCSSMatrix) {
                    curTransform = transformMatrix.m42;
                } else if (matrix.length === 16) {
                    curTransform = parseFloat(matrix[13]);
                } else {
                    curTransform = parseFloat(matrix[5]);
                }
            }
            return curTransform || 0;
        },
        parseUrlQuery: function parseUrlQuery(url) {
            var query = {};
            var urlToParse = url || win.location.href;
            var i;
            var params;
            var param;
            var length;
            if (typeof urlToParse === "string" && urlToParse.length) {
                urlToParse = urlToParse.indexOf("?") > -1 ? urlToParse.replace(/\S*\?/, "") : "";
                params = urlToParse.split("&").filter(function (paramsPart) {
                    return paramsPart !== "";
                });
                length = params.length;
                for (i = 0; i < length; i += 1) {
                    param = params[i].replace(/#\S+/g, "").split("=");
                    query[decodeURIComponent(param[0])] = typeof param[1] === "undefined" ? undefined : decodeURIComponent(param[1]) || "";
                }
            }
            return query;
        },
        isObject: function isObject(o) {
            return typeof o === "object" && o !== null && o.constructor && o.constructor === Object;
        },
        extend: function extend() {
            var args = [],
                len$1 = arguments.length;
            while (len$1--) args[len$1] = arguments[len$1];
            var to = Object(args[0]);
            for (var i = 1; i < args.length; i += 1) {
                var nextSource = args[i];
                if (nextSource !== undefined && nextSource !== null) {
                    var keysArray = Object.keys(Object(nextSource));
                    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {
                        var nextKey = keysArray[nextIndex];
                        var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);
                        if (desc !== undefined && desc.enumerable) {
                            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {
                                Utils.extend(to[nextKey], nextSource[nextKey]);
                            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {
                                to[nextKey] = {};
                                Utils.extend(to[nextKey], nextSource[nextKey]);
                            } else {
                                to[nextKey] = nextSource[nextKey];
                            }
                        }
                    }
                }
            }
            return to;
        },
    };
    var d;
    if (typeof document === "undefined") {
        d = {
            addEventListener: function addEventListener() {},
            removeEventListener: function removeEventListener() {},
            activeElement: { blur: function blur() {}, nodeName: "" },
            querySelector: function querySelector() {
                return {};
            },
            querySelectorAll: function querySelectorAll() {
                return [];
            },
            createElement: function createElement() {
                return {
                    style: {},
                    setAttribute: function setAttribute() {},
                    getElementsByTagName: function getElementsByTagName() {
                        return [];
                    },
                };
            },
            location: { hash: "" },
        };
    } else {
        d = document;
    }
    var doc = d;
    var Support = (function Support() {
        var testDiv = doc.createElement("div");
        return {
            touch:
                (win.Modernizr && win.Modernizr.touch === !0) ||
                (function checkTouch() {
                    return !!("ontouchstart" in win || (win.DocumentTouch && doc instanceof win.DocumentTouch));
                })(),
            pointerEvents: !!(win.navigator.pointerEnabled || win.PointerEvent),
            prefixedPointerEvents: !!win.navigator.msPointerEnabled,
            transition: (function checkTransition() {
                var style = testDiv.style;
                return "transition" in style || "webkitTransition" in style || "MozTransition" in style;
            })(),
            transforms3d:
                (win.Modernizr && win.Modernizr.csstransforms3d === !0) ||
                (function checkTransforms3d() {
                    var style = testDiv.style;
                    return "webkitPerspective" in style || "MozPerspective" in style || "OPerspective" in style || "MsPerspective" in style || "perspective" in style;
                })(),
            flexbox: (function checkFlexbox() {
                var style = testDiv.style;
                var styles = "alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient".split(" ");
                for (var i = 0; i < styles.length; i += 1) {
                    if (styles[i] in style) {
                        return !0;
                    }
                }
                return !1;
            })(),
            observer: (function checkObserver() {
                return "MutationObserver" in win || "WebkitMutationObserver" in win;
            })(),
            passiveListener: (function checkPassiveListener() {
                var supportsPassive = !1;
                try {
                    var opts = Object.defineProperty({}, "passive", {
                        get: function get() {
                            supportsPassive = !0;
                        },
                    });
                    win.addEventListener("testPassiveListener", null, opts);
                } catch (e) {}
                return supportsPassive;
            })(),
            gestures: (function checkGestures() {
                return "ongesturestart" in win;
            })(),
        };
    })();
    var SwiperClass = function SwiperClass(params) {
        if (params === void 0) params = {};
        var self = this;
        self.params = params;
        self.eventsListeners = {};
        if (self.params && self.params.on) {
            Object.keys(self.params.on).forEach(function (eventName) {
                self.on(eventName, self.params.on[eventName]);
            });
        }
    };
    var staticAccessors = { components: { configurable: !0 } };
    SwiperClass.prototype.on = function on(events, handler) {
        var self = this;
        if (typeof handler !== "function") {
            return self;
        }
        events.split(" ").forEach(function (event) {
            if (!self.eventsListeners[event]) {
                self.eventsListeners[event] = [];
            }
            self.eventsListeners[event].push(handler);
        });
        return self;
    };
    SwiperClass.prototype.once = function once(events, handler) {
        var self = this;
        if (typeof handler !== "function") {
            return self;
        }
        function onceHandler() {
            var args = [],
                len = arguments.length;
            while (len--) args[len] = arguments[len];
            handler.apply(self, args);
            self.off(events, onceHandler);
        }
        return self.on(events, onceHandler);
    };
    SwiperClass.prototype.off = function off(events, handler) {
        var self = this;
        events.split(" ").forEach(function (event) {
            if (typeof handler === "undefined") {
                self.eventsListeners[event] = [];
            } else {
                self.eventsListeners[event].forEach(function (eventHandler, index) {
                    if (eventHandler === handler) {
                        self.eventsListeners[event].splice(index, 1);
                    }
                });
            }
        });
        return self;
    };
    SwiperClass.prototype.emit = function emit() {
        var args = [],
            len = arguments.length;
        while (len--) args[len] = arguments[len];
        var self = this;
        if (!self.eventsListeners) {
            return self;
        }
        var events;
        var data;
        var context;
        if (typeof args[0] === "string" || Array.isArray(args[0])) {
            events = args[0];
            data = args.slice(1, args.length);
            context = self;
        } else {
            events = args[0].events;
            data = args[0].data;
            context = args[0].context || self;
        }
        var eventsArray = Array.isArray(events) ? events : events.split(" ");
        eventsArray.forEach(function (event) {
            if (self.eventsListeners[event]) {
                var handlers = [];
                self.eventsListeners[event].forEach(function (eventHandler) {
                    handlers.push(eventHandler);
                });
                handlers.forEach(function (eventHandler) {
                    eventHandler.apply(context, data);
                });
            }
        });
        return self;
    };
    SwiperClass.prototype.useModulesParams = function useModulesParams(instanceParams) {
        var instance = this;
        if (!instance.modules) {
            return;
        }
        Object.keys(instance.modules).forEach(function (moduleName) {
            var module = instance.modules[moduleName];
            if (module.params) {
                Utils.extend(instanceParams, module.params);
            }
        });
    };
    SwiperClass.prototype.useModules = function useModules(modulesParams) {
        if (modulesParams === void 0) modulesParams = {};
        var instance = this;
        if (!instance.modules) {
            return;
        }
        Object.keys(instance.modules).forEach(function (moduleName) {
            var module = instance.modules[moduleName];
            var moduleParams = modulesParams[moduleName] || {};
            if (module.instance) {
                Object.keys(module.instance).forEach(function (modulePropName) {
                    var moduleProp = module.instance[modulePropName];
                    if (typeof moduleProp === "function") {
                        instance[modulePropName] = moduleProp.bind(instance);
                    } else {
                        instance[modulePropName] = moduleProp;
                    }
                });
            }
            if (module.on && instance.on) {
                Object.keys(module.on).forEach(function (moduleEventName) {
                    instance.on(moduleEventName, module.on[moduleEventName]);
                });
            }
            if (module.create) {
                module.create.bind(instance)(moduleParams);
            }
        });
    };
    staticAccessors.components.set = function (components) {
        var Class = this;
        if (!Class.use) {
            return;
        }
        Class.use(components);
    };
    SwiperClass.installModule = function installModule(module) {
        var params = [],
            len = arguments.length - 1;
        while (len-- > 0) params[len] = arguments[len + 1];
        var Class = this;
        if (!Class.prototype.modules) {
            Class.prototype.modules = {};
        }
        var name = module.name || Object.keys(Class.prototype.modules).length + "_" + Utils.now();
        Class.prototype.modules[name] = module;
        if (module.proto) {
            Object.keys(module.proto).forEach(function (key) {
                Class.prototype[key] = module.proto[key];
            });
        }
        if (module.static) {
            Object.keys(module.static).forEach(function (key) {
                Class[key] = module.static[key];
            });
        }
        if (module.install) {
            module.install.apply(Class, params);
        }
        return Class;
    };
    SwiperClass.use = function use(module) {
        var params = [],
            len = arguments.length - 1;
        while (len-- > 0) params[len] = arguments[len + 1];
        var Class = this;
        if (Array.isArray(module)) {
            module.forEach(function (m) {
                return Class.installModule(m);
            });
            return Class;
        }
        return Class.installModule.apply(Class, [module].concat(params));
    };
    Object.defineProperties(SwiperClass, staticAccessors);
    var updateSize = function () {
        var swiper = this;
        var width;
        var height;
        var $el = swiper.$el;
        if (typeof swiper.params.width !== "undefined") {
            width = swiper.params.width;
        } else {
            width = $el[0].clientWidth;
        }
        if (typeof swiper.params.height !== "undefined") {
            height = swiper.params.height;
        } else {
            height = $el[0].clientHeight;
        }
        if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {
            return;
        }
        width = width - parseInt($el.css("padding-left"), 10) - parseInt($el.css("padding-right"), 10);
        height = height - parseInt($el.css("padding-top"), 10) - parseInt($el.css("padding-bottom"), 10);
        Utils.extend(swiper, { width: width, height: height, size: swiper.isHorizontal() ? width : height });
    };
    var updateSlides = function () {
        var swiper = this;
        var params = swiper.params;
        var $wrapperEl = swiper.$wrapperEl;
        var swiperSize = swiper.size;
        var rtl = swiper.rtl;
        var wrongRTL = swiper.wrongRTL;
        var slides = $wrapperEl.children("." + swiper.params.slideClass);
        var isVirtual = swiper.virtual && params.virtual.enabled;
        var slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;
        var snapGrid = [];
        var slidesGrid = [];
        var slidesSizesGrid = [];
        var offsetBefore = params.slidesOffsetBefore;
        if (typeof offsetBefore === "function") {
            offsetBefore = params.slidesOffsetBefore.call(swiper);
        }
        var offsetAfter = params.slidesOffsetAfter;
        if (typeof offsetAfter === "function") {
            offsetAfter = params.slidesOffsetAfter.call(swiper);
        }
        var previousSlidesLength = slidesLength;
        var previousSnapGridLength = swiper.snapGrid.length;
        var previousSlidesGridLength = swiper.snapGrid.length;
        var spaceBetween = params.spaceBetween;
        var slidePosition = -offsetBefore;
        var prevSlideSize = 0;
        var index = 0;
        if (typeof swiperSize === "undefined") {
            return;
        }
        if (typeof spaceBetween === "string" && spaceBetween.indexOf("%") >= 0) {
            spaceBetween = (parseFloat(spaceBetween.replace("%", "")) / 100) * swiperSize;
        }
        swiper.virtualSize = -spaceBetween;
        if (rtl) {
            slides.css({ marginLeft: "", marginTop: "" });
        } else {
            slides.css({ marginRight: "", marginBottom: "" });
        }
        var slidesNumberEvenToRows;
        if (params.slidesPerColumn > 1) {
            if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {
                slidesNumberEvenToRows = slidesLength;
            } else {
                slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;
            }
            if (params.slidesPerView !== "auto" && params.slidesPerColumnFill === "row") {
                slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);
            }
        }
        var slideSize;
        var slidesPerColumn = params.slidesPerColumn;
        var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;
        var numFullColumns = slidesPerRow - (params.slidesPerColumn * slidesPerRow - slidesLength);
        for (var i = 0; i < slidesLength; i += 1) {
            slideSize = 0;
            var slide = slides.eq(i);
            if (params.slidesPerColumn > 1) {
                var newSlideOrderIndex = void 0;
                var column = void 0;
                var row = void 0;
                if (params.slidesPerColumnFill === "column") {
                    column = Math.floor(i / slidesPerColumn);
                    row = i - column * slidesPerColumn;
                    if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {
                        row += 1;
                        if (row >= slidesPerColumn) {
                            row = 0;
                            column += 1;
                        }
                    }
                    newSlideOrderIndex = column + (row * slidesNumberEvenToRows) / slidesPerColumn;
                    slide.css({ "-webkit-box-ordinal-group": newSlideOrderIndex, "-moz-box-ordinal-group": newSlideOrderIndex, "-ms-flex-order": newSlideOrderIndex, "-webkit-order": newSlideOrderIndex, order: newSlideOrderIndex });
                } else {
                    row = Math.floor(i / slidesPerRow);
                    column = i - row * slidesPerRow;
                }
                slide
                    .css("margin-" + (swiper.isHorizontal() ? "top" : "left"), row !== 0 && params.spaceBetween && params.spaceBetween + "px")
                    .attr("data-swiper-column", column)
                    .attr("data-swiper-row", row);
            }
            if (slide.css("display") === "none") {
                continue;
            }
            if (params.slidesPerView === "auto") {
                slideSize = swiper.isHorizontal() ? slide.outerWidth(!0) : slide.outerHeight(!0);
                if (params.roundLengths) {
                    slideSize = Math.floor(slideSize);
                }
            } else {
                slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;
                if (params.roundLengths) {
                    slideSize = Math.floor(slideSize);
                }
                if (slides[i]) {
                    if (swiper.isHorizontal()) {
                        slides[i].style.width = slideSize + "px";
                    } else {
                        slides[i].style.height = slideSize + "px";
                    }
                }
            }
            if (slides[i]) {
                slides[i].swiperSlideSize = slideSize;
            }
            slidesSizesGrid.push(slideSize);
            if (params.centeredSlides) {
                slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;
                if (prevSlideSize === 0 && i !== 0) {
                    slidePosition = slidePosition - swiperSize / 2 - spaceBetween;
                }
                if (i === 0) {
                    slidePosition = slidePosition - swiperSize / 2 - spaceBetween;
                }
                if (Math.abs(slidePosition) < 1 / 1000) {
                    slidePosition = 0;
                }
                if (index % params.slidesPerGroup === 0) {
                    snapGrid.push(slidePosition);
                }
                slidesGrid.push(slidePosition);
            } else {
                if (index % params.slidesPerGroup === 0) {
                    snapGrid.push(slidePosition);
                }
                slidesGrid.push(slidePosition);
                slidePosition = slidePosition + slideSize + spaceBetween;
            }
            swiper.virtualSize += slideSize + spaceBetween;
            prevSlideSize = slideSize;
            index += 1;
        }
        swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;
        var newSlidesGrid;
        if (rtl && wrongRTL && (params.effect === "slide" || params.effect === "coverflow")) {
            $wrapperEl.css({ width: swiper.virtualSize + params.spaceBetween + "px" });
        }
        if (!Support.flexbox || params.setWrapperSize) {
            if (swiper.isHorizontal()) {
                $wrapperEl.css({ width: swiper.virtualSize + params.spaceBetween + "px" });
            } else {
                $wrapperEl.css({ height: swiper.virtualSize + params.spaceBetween + "px" });
            }
        }
        if (params.slidesPerColumn > 1) {
            swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;
            swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;
            if (swiper.isHorizontal()) {
                $wrapperEl.css({ width: swiper.virtualSize + params.spaceBetween + "px" });
            } else {
                $wrapperEl.css({ height: swiper.virtualSize + params.spaceBetween + "px" });
            }
            if (params.centeredSlides) {
                newSlidesGrid = [];
                for (var i$1 = 0; i$1 < snapGrid.length; i$1 += 1) {
                    if (snapGrid[i$1] < swiper.virtualSize + snapGrid[0]) {
                        newSlidesGrid.push(snapGrid[i$1]);
                    }
                }
                snapGrid = newSlidesGrid;
            }
        }
        if (!params.centeredSlides) {
            newSlidesGrid = [];
            for (var i$2 = 0; i$2 < snapGrid.length; i$2 += 1) {
                if (snapGrid[i$2] <= swiper.virtualSize - swiperSize) {
                    newSlidesGrid.push(snapGrid[i$2]);
                }
            }
            snapGrid = newSlidesGrid;
            if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {
                snapGrid.push(swiper.virtualSize - swiperSize);
            }
        }
        if (snapGrid.length === 0) {
            snapGrid = [0];
        }
        if (params.spaceBetween !== 0) {
            if (swiper.isHorizontal()) {
                if (rtl) {
                    slides.css({ marginLeft: spaceBetween + "px" });
                } else {
                    slides.css({ marginRight: spaceBetween + "px" });
                }
            } else {
                slides.css({ marginBottom: spaceBetween + "px" });
            }
        }
        Utils.extend(swiper, { slides: slides, snapGrid: snapGrid, slidesGrid: slidesGrid, slidesSizesGrid: slidesSizesGrid });
        if (slidesLength !== previousSlidesLength) {
            swiper.emit("slidesLengthChange");
        }
        if (snapGrid.length !== previousSnapGridLength) {
            if (swiper.params.watchOverflow) {
                swiper.checkOverflow();
            }
            swiper.emit("snapGridLengthChange");
        }
        if (slidesGrid.length !== previousSlidesGridLength) {
            swiper.emit("slidesGridLengthChange");
        }
        if (params.watchSlidesProgress || params.watchSlidesVisibility) {
            swiper.updateSlidesOffset();
        }
    };
    var updateAutoHeight = function () {
        var swiper = this;
        var activeSlides = [];
        var newHeight = 0;
        var i;
        if (swiper.params.slidesPerView !== "auto" && swiper.params.slidesPerView > 1) {
            for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {
                var index = swiper.activeIndex + i;
                if (index > swiper.slides.length) {
                    break;
                }
                activeSlides.push(swiper.slides.eq(index)[0]);
            }
        } else {
            activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);
        }
        for (i = 0; i < activeSlides.length; i += 1) {
            if (typeof activeSlides[i] !== "undefined") {
                var height = activeSlides[i].offsetHeight;
                newHeight = height > newHeight ? height : newHeight;
            }
        }
        if (newHeight) {
            swiper.$wrapperEl.css("height", newHeight + "px");
        }
    };
    var updateSlidesOffset = function () {
        var swiper = this;
        var slides = swiper.slides;
        for (var i = 0; i < slides.length; i += 1) {
            slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;
        }
    };
    var updateSlidesProgress = function (translate) {
        if (translate === void 0) translate = this.translate || 0;
        var swiper = this;
        var params = swiper.params;
        var slides = swiper.slides;
        var rtl = swiper.rtl;
        if (slides.length === 0) {
            return;
        }
        if (typeof slides[0].swiperSlideOffset === "undefined") {
            swiper.updateSlidesOffset();
        }
        var offsetCenter = -translate;
        if (rtl) {
            offsetCenter = translate;
        }
        slides.removeClass(params.slideVisibleClass);
        for (var i = 0; i < slides.length; i += 1) {
            var slide = slides[i];
            var slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slide.swiperSlideOffset) / (slide.swiperSlideSize + params.spaceBetween);
            if (params.watchSlidesVisibility) {
                var slideBefore = -(offsetCenter - slide.swiperSlideOffset);
                var slideAfter = slideBefore + swiper.slidesSizesGrid[i];
                var isVisible = (slideBefore >= 0 && slideBefore < swiper.size) || (slideAfter > 0 && slideAfter <= swiper.size) || (slideBefore <= 0 && slideAfter >= swiper.size);
                if (isVisible) {
                    slides.eq(i).addClass(params.slideVisibleClass);
                }
            }
            slide.progress = rtl ? -slideProgress : slideProgress;
        }
    };
    var updateProgress = function (translate) {
        if (translate === void 0) translate = this.translate || 0;
        var swiper = this;
        var params = swiper.params;
        var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();
        var progress = swiper.progress;
        var isBeginning = swiper.isBeginning;
        var isEnd = swiper.isEnd;
        var wasBeginning = isBeginning;
        var wasEnd = isEnd;
        if (translatesDiff === 0) {
            progress = 0;
            isBeginning = !0;
            isEnd = !0;
        } else {
            progress = (translate - swiper.minTranslate()) / translatesDiff;
            isBeginning = progress <= 0;
            isEnd = progress >= 1;
        }
        Utils.extend(swiper, { progress: progress, isBeginning: isBeginning, isEnd: isEnd });
        if (params.watchSlidesProgress || params.watchSlidesVisibility) {
            swiper.updateSlidesProgress(translate);
        }
        if (isBeginning && !wasBeginning) {
            swiper.emit("reachBeginning toEdge");
        }
        if (isEnd && !wasEnd) {
            swiper.emit("reachEnd toEdge");
        }
        if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {
            swiper.emit("fromEdge");
        }
        swiper.emit("progress", progress);
    };
    var updateSlidesClasses = function () {
        var swiper = this;
        var slides = swiper.slides;
        var params = swiper.params;
        var $wrapperEl = swiper.$wrapperEl;
        var activeIndex = swiper.activeIndex;
        var realIndex = swiper.realIndex;
        var isVirtual = swiper.virtual && params.virtual.enabled;
        slides.removeClass(params.slideActiveClass + " " + params.slideNextClass + " " + params.slidePrevClass + " " + params.slideDuplicateActiveClass + " " + params.slideDuplicateNextClass + " " + params.slideDuplicatePrevClass);
        var activeSlide;
        if (isVirtual) {
            activeSlide = swiper.$wrapperEl.find("." + params.slideClass + '[data-swiper-slide-index="' + activeIndex + '"]');
        } else {
            activeSlide = slides.eq(activeIndex);
        }
        activeSlide.addClass(params.slideActiveClass);
        if (params.loop) {
            if (activeSlide.hasClass(params.slideDuplicateClass)) {
                $wrapperEl.children("." + params.slideClass + ":not(." + params.slideDuplicateClass + ')[data-swiper-slide-index="' + realIndex + '"]').addClass(params.slideDuplicateActiveClass);
            } else {
                $wrapperEl.children("." + params.slideClass + "." + params.slideDuplicateClass + '[data-swiper-slide-index="' + realIndex + '"]').addClass(params.slideDuplicateActiveClass);
            }
        }
        var nextSlide = activeSlide
            .nextAll("." + params.slideClass)
            .eq(0)
            .addClass(params.slideNextClass);
        if (params.loop && nextSlide.length === 0) {
            nextSlide = slides.eq(0);
            nextSlide.addClass(params.slideNextClass);
        }
        var prevSlide = activeSlide
            .prevAll("." + params.slideClass)
            .eq(0)
            .addClass(params.slidePrevClass);
        if (params.loop && prevSlide.length === 0) {
            prevSlide = slides.eq(-1);
            prevSlide.addClass(params.slidePrevClass);
        }
        if (params.loop) {
            if (nextSlide.hasClass(params.slideDuplicateClass)) {
                $wrapperEl.children("." + params.slideClass + ":not(." + params.slideDuplicateClass + ')[data-swiper-slide-index="' + nextSlide.attr("data-swiper-slide-index") + '"]').addClass(params.slideDuplicateNextClass);
            } else {
                $wrapperEl.children("." + params.slideClass + "." + params.slideDuplicateClass + '[data-swiper-slide-index="' + nextSlide.attr("data-swiper-slide-index") + '"]').addClass(params.slideDuplicateNextClass);
            }
            if (prevSlide.hasClass(params.slideDuplicateClass)) {
                $wrapperEl.children("." + params.slideClass + ":not(." + params.slideDuplicateClass + ')[data-swiper-slide-index="' + prevSlide.attr("data-swiper-slide-index") + '"]').addClass(params.slideDuplicatePrevClass);
            } else {
                $wrapperEl.children("." + params.slideClass + "." + params.slideDuplicateClass + '[data-swiper-slide-index="' + prevSlide.attr("data-swiper-slide-index") + '"]').addClass(params.slideDuplicatePrevClass);
            }
        }
    };
    var updateActiveIndex = function (newActiveIndex) {
        var swiper = this;
        var translate = swiper.rtl ? swiper.translate : -swiper.translate;
        var slidesGrid = swiper.slidesGrid;
        var snapGrid = swiper.snapGrid;
        var params = swiper.params;
        var previousIndex = swiper.activeIndex;
        var previousRealIndex = swiper.realIndex;
        var previousSnapIndex = swiper.snapIndex;
        var activeIndex = newActiveIndex;
        var snapIndex;
        if (typeof activeIndex === "undefined") {
            for (var i = 0; i < slidesGrid.length; i += 1) {
                if (typeof slidesGrid[i + 1] !== "undefined") {
                    if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {
                        activeIndex = i;
                    } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {
                        activeIndex = i + 1;
                    }
                } else if (translate >= slidesGrid[i]) {
                    activeIndex = i;
                }
            }
            if (params.normalizeSlideIndex) {
                if (activeIndex < 0 || typeof activeIndex === "undefined") {
                    activeIndex = 0;
                }
            }
        }
        if (snapGrid.indexOf(translate) >= 0) {
            snapIndex = snapGrid.indexOf(translate);
        } else {
            snapIndex = Math.floor(activeIndex / params.slidesPerGroup);
        }
        if (snapIndex >= snapGrid.length) {
            snapIndex = snapGrid.length - 1;
        }
        if (activeIndex === previousIndex) {
            if (snapIndex !== previousSnapIndex) {
                swiper.snapIndex = snapIndex;
                swiper.emit("snapIndexChange");
            }
            return;
        }
        var realIndex = parseInt(swiper.slides.eq(activeIndex).attr("data-swiper-slide-index") || activeIndex, 10);
        Utils.extend(swiper, { snapIndex: snapIndex, realIndex: realIndex, previousIndex: previousIndex, activeIndex: activeIndex });
        swiper.emit("activeIndexChange");
        swiper.emit("snapIndexChange");
        if (previousRealIndex !== realIndex) {
            swiper.emit("realIndexChange");
        }
        swiper.emit("slideChange");
    };
    var updateClickedSlide = function (e) {
        var swiper = this;
        var params = swiper.params;
        var slide = $$1(e.target).closest("." + params.slideClass)[0];
        var slideFound = !1;
        if (slide) {
            for (var i = 0; i < swiper.slides.length; i += 1) {
                if (swiper.slides[i] === slide) {
                    slideFound = !0;
                }
            }
        }
        if (slide && slideFound) {
            swiper.clickedSlide = slide;
            if (swiper.virtual && swiper.params.virtual.enabled) {
                swiper.clickedIndex = parseInt($$1(slide).attr("data-swiper-slide-index"), 10);
            } else {
                swiper.clickedIndex = $$1(slide).index();
            }
        } else {
            swiper.clickedSlide = undefined;
            swiper.clickedIndex = undefined;
            return;
        }
        if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {
            swiper.slideToClickedSlide();
        }
    };
    var update = {
        updateSize: updateSize,
        updateSlides: updateSlides,
        updateAutoHeight: updateAutoHeight,
        updateSlidesOffset: updateSlidesOffset,
        updateSlidesProgress: updateSlidesProgress,
        updateProgress: updateProgress,
        updateSlidesClasses: updateSlidesClasses,
        updateActiveIndex: updateActiveIndex,
        updateClickedSlide: updateClickedSlide,
    };
    var getTranslate = function (axis) {
        if (axis === void 0) axis = this.isHorizontal() ? "x" : "y";
        var swiper = this;
        var params = swiper.params;
        var rtl = swiper.rtl;
        var translate = swiper.translate;
        var $wrapperEl = swiper.$wrapperEl;
        if (params.virtualTranslate) {
            return rtl ? -translate : translate;
        }
        var currentTranslate = Utils.getTranslate($wrapperEl[0], axis);
        if (rtl) {
            currentTranslate = -currentTranslate;
        }
        return currentTranslate || 0;
    };
    var setTranslate = function (translate, byController) {
        var swiper = this;
        var rtl = swiper.rtl;
        var params = swiper.params;
        var $wrapperEl = swiper.$wrapperEl;
        var progress = swiper.progress;
        var x = 0;
        var y = 0;
        var z = 0;
        if (swiper.isHorizontal()) {
            x = rtl ? -translate : translate;
        } else {
            y = translate;
        }
        if (params.roundLengths) {
            x = Math.floor(x);
            y = Math.floor(y);
        }
        if (!params.virtualTranslate) {
            if (Support.transforms3d) {
                $wrapperEl.transform("translate3d(" + x + "px, " + y + "px, " + z + "px)");
            } else {
                $wrapperEl.transform("translate(" + x + "px, " + y + "px)");
            }
        }
        swiper.translate = swiper.isHorizontal() ? x : y;
        var newProgress;
        var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();
        if (translatesDiff === 0) {
            newProgress = 0;
        } else {
            newProgress = (translate - swiper.minTranslate()) / translatesDiff;
        }
        if (newProgress !== progress) {
            swiper.updateProgress(translate);
        }
        swiper.emit("setTranslate", swiper.translate, byController);
    };
    var minTranslate = function () {
        return -this.snapGrid[0];
    };
    var maxTranslate = function () {
        return -this.snapGrid[this.snapGrid.length - 1];
    };
    var translate = { getTranslate: getTranslate, setTranslate: setTranslate, minTranslate: minTranslate, maxTranslate: maxTranslate };
    var setTransition = function (duration, byController) {
        var swiper = this;
        swiper.$wrapperEl.transition(duration);
        swiper.emit("setTransition", duration, byController);
    };
    var transitionStart = function (runCallbacks) {
        if (runCallbacks === void 0) runCallbacks = !0;
        var swiper = this;
        var activeIndex = swiper.activeIndex;
        var params = swiper.params;
        var previousIndex = swiper.previousIndex;
        if (params.autoHeight) {
            swiper.updateAutoHeight();
        }
        swiper.emit("transitionStart");
        if (!runCallbacks) {
            return;
        }
        if (activeIndex !== previousIndex) {
            swiper.emit("slideChangeTransitionStart");
            if (activeIndex > previousIndex) {
                swiper.emit("slideNextTransitionStart");
            } else {
                swiper.emit("slidePrevTransitionStart");
            }
        }
    };
    var transitionEnd$1 = function (runCallbacks) {
        if (runCallbacks === void 0) runCallbacks = !0;
        var swiper = this;
        var activeIndex = swiper.activeIndex;
        var previousIndex = swiper.previousIndex;
        swiper.animating = !1;
        swiper.setTransition(0);
        swiper.emit("transitionEnd");
        if (runCallbacks) {
            if (activeIndex !== previousIndex) {
                swiper.emit("slideChangeTransitionEnd");
                if (activeIndex > previousIndex) {
                    swiper.emit("slideNextTransitionEnd");
                } else {
                    swiper.emit("slidePrevTransitionEnd");
                }
            }
        }
    };
    var transition$1 = { setTransition: setTransition, transitionStart: transitionStart, transitionEnd: transitionEnd$1 };
    var slideTo = function (index, speed, runCallbacks, internal) {
        if (index === void 0) index = 0;
        if (speed === void 0) speed = this.params.speed;
        if (runCallbacks === void 0) runCallbacks = !0;
        var swiper = this;
        var slideIndex = index;
        if (slideIndex < 0) {
            slideIndex = 0;
        }
        var params = swiper.params;
        var snapGrid = swiper.snapGrid;
        var slidesGrid = swiper.slidesGrid;
        var previousIndex = swiper.previousIndex;
        var activeIndex = swiper.activeIndex;
        var rtl = swiper.rtl;
        var $wrapperEl = swiper.$wrapperEl;
        var snapIndex = Math.floor(slideIndex / params.slidesPerGroup);
        if (snapIndex >= snapGrid.length) {
            snapIndex = snapGrid.length - 1;
        }
        if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {
            swiper.emit("beforeSlideChangeStart");
        }
        var translate = -snapGrid[snapIndex];
        swiper.updateProgress(translate);
        if (params.normalizeSlideIndex) {
            for (var i = 0; i < slidesGrid.length; i += 1) {
                if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {
                    slideIndex = i;
                }
            }
        }
        if (swiper.initialized) {
            if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {
                return !1;
            }
            if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {
                if ((activeIndex || 0) !== slideIndex) {
                    return !1;
                }
            }
        }
        if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {
            swiper.updateActiveIndex(slideIndex);
            if (params.autoHeight) {
                swiper.updateAutoHeight();
            }
            swiper.updateSlidesClasses();
            if (params.effect !== "slide") {
                swiper.setTranslate(translate);
            }
            return !1;
        }
        if (speed === 0 || !Support.transition) {
            swiper.setTransition(0);
            swiper.setTranslate(translate);
            swiper.updateActiveIndex(slideIndex);
            swiper.updateSlidesClasses();
            swiper.emit("beforeTransitionStart", speed, internal);
            swiper.transitionStart(runCallbacks);
            swiper.transitionEnd(runCallbacks);
        } else {
            swiper.setTransition(speed);
            swiper.setTranslate(translate);
            swiper.updateActiveIndex(slideIndex);
            swiper.updateSlidesClasses();
            swiper.emit("beforeTransitionStart", speed, internal);
            swiper.transitionStart(runCallbacks);
            if (!swiper.animating) {
                swiper.animating = !0;
                $wrapperEl.transitionEnd(function () {
                    if (!swiper || swiper.destroyed) {
                        return;
                    }
                    swiper.transitionEnd(runCallbacks);
                });
            }
        }
        return !0;
    };
    var slideNext = function (speed, runCallbacks, internal) {
        if (speed === void 0) speed = this.params.speed;
        if (runCallbacks === void 0) runCallbacks = !0;
        var swiper = this;
        var params = swiper.params;
        var animating = swiper.animating;
        if (params.loop) {
            if (animating) {
                return !1;
            }
            swiper.loopFix();
            swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;
            return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);
        }
        return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);
    };
    var slidePrev = function (speed, runCallbacks, internal) {
        if (speed === void 0) speed = this.params.speed;
        if (runCallbacks === void 0) runCallbacks = !0;
        var swiper = this;
        var params = swiper.params;
        var animating = swiper.animating;
        if (params.loop) {
            if (animating) {
                return !1;
            }
            swiper.loopFix();
            swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;
            return swiper.slideTo(swiper.activeIndex - 1, speed, runCallbacks, internal);
        }
        return swiper.slideTo(swiper.activeIndex - 1, speed, runCallbacks, internal);
    };
    var slideReset = function (speed, runCallbacks, internal) {
        if (speed === void 0) speed = this.params.speed;
        if (runCallbacks === void 0) runCallbacks = !0;
        var swiper = this;
        return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);
    };
    var slideToClickedSlide = function () {
        var swiper = this;
        var params = swiper.params;
        var $wrapperEl = swiper.$wrapperEl;
        var slidesPerView = params.slidesPerView === "auto" ? swiper.slidesPerViewDynamic() : params.slidesPerView;
        var slideToIndex = swiper.clickedIndex;
        var realIndex;
        if (params.loop) {
            if (swiper.animating) {
                return;
            }
            realIndex = parseInt($$1(swiper.clickedSlide).attr("data-swiper-slide-index"), 10);
            if (params.centeredSlides) {
                if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {
                    swiper.loopFix();
                    slideToIndex = $wrapperEl
                        .children("." + params.slideClass + '[data-swiper-slide-index="' + realIndex + '"]:not(.' + params.slideDuplicateClass + ")")
                        .eq(0)
                        .index();
                    Utils.nextTick(function () {
                        swiper.slideTo(slideToIndex);
                    });
                } else {
                    swiper.slideTo(slideToIndex);
                }
            } else if (slideToIndex > swiper.slides.length - slidesPerView) {
                swiper.loopFix();
                slideToIndex = $wrapperEl
                    .children("." + params.slideClass + '[data-swiper-slide-index="' + realIndex + '"]:not(.' + params.slideDuplicateClass + ")")
                    .eq(0)
                    .index();
                Utils.nextTick(function () {
                    swiper.slideTo(slideToIndex);
                });
            } else {
                swiper.slideTo(slideToIndex);
            }
        } else {
            swiper.slideTo(slideToIndex);
        }
    };
    var slide = { slideTo: slideTo, slideNext: slideNext, slidePrev: slidePrev, slideReset: slideReset, slideToClickedSlide: slideToClickedSlide };
    var loopCreate = function () {
        var swiper = this;
        var params = swiper.params;
        var $wrapperEl = swiper.$wrapperEl;
        $wrapperEl.children("." + params.slideClass + "." + params.slideDuplicateClass).remove();
        var slides = $wrapperEl.children("." + params.slideClass);
        if (params.loopFillGroupWithBlank) {
            var blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);
            if (blankSlidesNum !== params.slidesPerGroup) {
                for (var i = 0; i < blankSlidesNum; i += 1) {
                    var blankNode = $$1(doc.createElement("div")).addClass(params.slideClass + " " + params.slideBlankClass);
                    $wrapperEl.append(blankNode);
                }
                slides = $wrapperEl.children("." + params.slideClass);
            }
        }
        if (params.slidesPerView === "auto" && !params.loopedSlides) {
            params.loopedSlides = slides.length;
        }
        swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);
        swiper.loopedSlides += params.loopAdditionalSlides;
        if (swiper.loopedSlides > slides.length) {
            swiper.loopedSlides = slides.length;
        }
        var prependSlides = [];
        var appendSlides = [];
        slides.each(function (index, el) {
            var slide = $$1(el);
            if (index < swiper.loopedSlides) {
                appendSlides.push(el);
            }
            if (index < slides.length && index >= slides.length - swiper.loopedSlides) {
                prependSlides.push(el);
            }
            slide.attr("data-swiper-slide-index", index);
        });
        for (var i$1 = 0; i$1 < appendSlides.length; i$1 += 1) {
            $wrapperEl.append($$1(appendSlides[i$1].cloneNode(!0)).addClass(params.slideDuplicateClass));
        }
        for (var i$2 = prependSlides.length - 1; i$2 >= 0; i$2 -= 1) {
            $wrapperEl.prepend($$1(prependSlides[i$2].cloneNode(!0)).addClass(params.slideDuplicateClass));
        }
    };
    var loopFix = function () {
        var swiper = this;
        var params = swiper.params;
        var activeIndex = swiper.activeIndex;
        var slides = swiper.slides;
        var loopedSlides = swiper.loopedSlides;
        var allowSlidePrev = swiper.allowSlidePrev;
        var allowSlideNext = swiper.allowSlideNext;
        var newIndex;
        swiper.allowSlidePrev = !0;
        swiper.allowSlideNext = !0;
        if (activeIndex < loopedSlides) {
            newIndex = slides.length - loopedSlides * 3 + activeIndex;
            newIndex += loopedSlides;
            swiper.slideTo(newIndex, 0, !1, !0);
        } else if ((params.slidesPerView === "auto" && activeIndex >= loopedSlides * 2) || activeIndex > slides.length - params.slidesPerView * 2) {
            newIndex = -slides.length + activeIndex + loopedSlides;
            newIndex += loopedSlides;
            swiper.slideTo(newIndex, 0, !1, !0);
        }
        swiper.allowSlidePrev = allowSlidePrev;
        swiper.allowSlideNext = allowSlideNext;
    };
    var loopDestroy = function () {
        var swiper = this;
        var $wrapperEl = swiper.$wrapperEl;
        var params = swiper.params;
        var slides = swiper.slides;
        $wrapperEl.children("." + params.slideClass + "." + params.slideDuplicateClass).remove();
        slides.removeAttr("data-swiper-slide-index");
    };
    var loop = { loopCreate: loopCreate, loopFix: loopFix, loopDestroy: loopDestroy };
    var setGrabCursor = function (moving) {
        var swiper = this;
        if (Support.touch || !swiper.params.simulateTouch) {
            return;
        }
        var el = swiper.el;
        el.style.cursor = "move";
        el.style.cursor = moving ? "-webkit-grabbing" : "-webkit-grab";
        el.style.cursor = moving ? "-moz-grabbin" : "-moz-grab";
        el.style.cursor = moving ? "grabbing" : "grab";
    };
    var unsetGrabCursor = function () {
        var swiper = this;
        if (Support.touch) {
            return;
        }
        swiper.el.style.cursor = "";
    };
    var grabCursor = { setGrabCursor: setGrabCursor, unsetGrabCursor: unsetGrabCursor };
    var appendSlide = function (slides) {
        var swiper = this;
        var $wrapperEl = swiper.$wrapperEl;
        var params = swiper.params;
        if (params.loop) {
            swiper.loopDestroy();
        }
        if (typeof slides === "object" && "length" in slides) {
            for (var i = 0; i < slides.length; i += 1) {
                if (slides[i]) {
                    $wrapperEl.append(slides[i]);
                }
            }
        } else {
            $wrapperEl.append(slides);
        }
        if (params.loop) {
            swiper.loopCreate();
        }
        if (!(params.observer && Support.observer)) {
            swiper.update();
        }
    };
    var prependSlide = function (slides) {
        var swiper = this;
        var params = swiper.params;
        var $wrapperEl = swiper.$wrapperEl;
        var activeIndex = swiper.activeIndex;
        if (params.loop) {
            swiper.loopDestroy();
        }
        var newActiveIndex = activeIndex + 1;
        if (typeof slides === "object" && "length" in slides) {
            for (var i = 0; i < slides.length; i += 1) {
                if (slides[i]) {
                    $wrapperEl.prepend(slides[i]);
                }
            }
            newActiveIndex = activeIndex + slides.length;
        } else {
            $wrapperEl.prepend(slides);
        }
        if (params.loop) {
            swiper.loopCreate();
        }
        if (!(params.observer && Support.observer)) {
            swiper.update();
        }
        swiper.slideTo(newActiveIndex, 0, !1);
    };
    var removeSlide = function (slidesIndexes) {
        var swiper = this;
        var params = swiper.params;
        var $wrapperEl = swiper.$wrapperEl;
        var activeIndex = swiper.activeIndex;
        if (params.loop) {
            swiper.loopDestroy();
            swiper.slides = $wrapperEl.children("." + params.slideClass);
        }
        var newActiveIndex = activeIndex;
        var indexToRemove;
        if (typeof slidesIndexes === "object" && "length" in slidesIndexes) {
            for (var i = 0; i < slidesIndexes.length; i += 1) {
                indexToRemove = slidesIndexes[i];
                if (swiper.slides[indexToRemove]) {
                    swiper.slides.eq(indexToRemove).remove();
                }
                if (indexToRemove < newActiveIndex) {
                    newActiveIndex -= 1;
                }
            }
            newActiveIndex = Math.max(newActiveIndex, 0);
        } else {
            indexToRemove = slidesIndexes;
            if (swiper.slides[indexToRemove]) {
                swiper.slides.eq(indexToRemove).remove();
            }
            if (indexToRemove < newActiveIndex) {
                newActiveIndex -= 1;
            }
            newActiveIndex = Math.max(newActiveIndex, 0);
        }
        if (params.loop) {
            swiper.loopCreate();
        }
        if (!(params.observer && Support.observer)) {
            swiper.update();
        }
        if (params.loop) {
            swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, !1);
        } else {
            swiper.slideTo(newActiveIndex, 0, !1);
        }
    };
    var removeAllSlides = function () {
        var swiper = this;
        var slidesIndexes = [];
        for (var i = 0; i < swiper.slides.length; i += 1) {
            slidesIndexes.push(i);
        }
        swiper.removeSlide(slidesIndexes);
    };
    var manipulation = { appendSlide: appendSlide, prependSlide: prependSlide, removeSlide: removeSlide, removeAllSlides: removeAllSlides };
    var Device = (function Device() {
        var ua = win.navigator.userAgent;
        var device = { ios: !1, android: !1, androidChrome: !1, desktop: !1, windows: !1, iphone: !1, ipod: !1, ipad: !1, cordova: win.cordova || win.phonegap, phonegap: win.cordova || win.phonegap };
        var windows = ua.match(/(Windows Phone);?[\s\/]+([\d.]+)?/);
        var android = ua.match(/(Android);?[\s\/]+([\d.]+)?/);
        var ipad = ua.match(/(iPad).*OS\s([\d_]+)/);
        var ipod = ua.match(/(iPod)(.*OS\s([\d_]+))?/);
        var iphone = !ipad && ua.match(/(iPhone\sOS|iOS)\s([\d_]+)/);
        if (windows) {
            device.os = "windows";
            device.osVersion = windows[2];
            device.windows = !0;
        }
        if (android && !windows) {
            device.os = "android";
            device.osVersion = android[2];
            device.android = !0;
            device.androidChrome = ua.toLowerCase().indexOf("chrome") >= 0;
        }
        if (ipad || iphone || ipod) {
            device.os = "ios";
            device.ios = !0;
        }
        if (iphone && !ipod) {
            device.osVersion = iphone[2].replace(/_/g, ".");
            device.iphone = !0;
        }
        if (ipad) {
            device.osVersion = ipad[2].replace(/_/g, ".");
            device.ipad = !0;
        }
        if (ipod) {
            device.osVersion = ipod[3] ? ipod[3].replace(/_/g, ".") : null;
            device.iphone = !0;
        }
        if (device.ios && device.osVersion && ua.indexOf("Version/") >= 0) {
            if (device.osVersion.split(".")[0] === "10") {
                device.osVersion = ua.toLowerCase().split("version/")[1].split(" ")[0];
            }
        }
        device.desktop = !(device.os || device.android || device.webView);
        device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);
        if (device.os && device.os === "ios") {
            var osVersionArr = device.osVersion.split(".");
            var metaViewport = doc.querySelector('meta[name="viewport"]');
            device.minimalUi = !device.webView && (ipod || iphone) && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7) && metaViewport && metaViewport.getAttribute("content").indexOf("minimal-ui") >= 0;
        }
        device.pixelRatio = win.devicePixelRatio || 1;
        return device;
    })();
    var onTouchStart = function (event) {
        var swiper = this;
        var data = swiper.touchEventsData;
        var params = swiper.params;
        var touches = swiper.touches;
        var e = event;
        if (e.originalEvent) {
            e = e.originalEvent;
        }
        data.isTouchEvent = e.type === "touchstart";
        if (!data.isTouchEvent && "which" in e && e.which === 3) {
            return;
        }
        if (data.isTouched && data.isMoved) {
            return;
        }
        if (params.noSwiping && $$1(e.target).closest("." + params.noSwipingClass)[0]) {
            swiper.allowClick = !0;
            return;
        }
        if (params.swipeHandler) {
            if (!$$1(e).closest(params.swipeHandler)[0]) {
                return;
            }
        }
        touches.currentX = e.type === "touchstart" ? e.targetTouches[0].pageX : e.pageX;
        touches.currentY = e.type === "touchstart" ? e.targetTouches[0].pageY : e.pageY;
        var startX = touches.currentX;
        var startY = touches.currentY;
        if (Device.ios && !Device.cordova && params.iOSEdgeSwipeDetection && startX <= params.iOSEdgeSwipeThreshold && startX >= window.screen.width - params.iOSEdgeSwipeThreshold) {
            return;
        }
        Utils.extend(data, { isTouched: !0, isMoved: !1, allowTouchCallbacks: !0, isScrolling: undefined, startMoving: undefined });
        touches.startX = startX;
        touches.startY = startY;
        data.touchStartTime = Utils.now();
        swiper.allowClick = !0;
        swiper.updateSize();
        swiper.swipeDirection = undefined;
        if (params.threshold > 0) {
            data.allowThresholdMove = !1;
        }
        if (e.type !== "touchstart") {
            var preventDefault = !0;
            if ($$1(e.target).is(data.formElements)) {
                preventDefault = !1;
            }
            if (doc.activeElement && $$1(doc.activeElement).is(data.formElements)) {
                doc.activeElement.blur();
            }
            if (preventDefault && swiper.allowTouchMove) {
                e.preventDefault();
            }
        }
        swiper.emit("touchStart", e);
    };
    var onTouchMove = function (event) {
        var swiper = this;
        var data = swiper.touchEventsData;
        var params = swiper.params;
        var touches = swiper.touches;
        var rtl = swiper.rtl;
        var e = event;
        if (e.originalEvent) {
            e = e.originalEvent;
        }
        if (data.isTouchEvent && e.type === "mousemove") {
            return;
        }
        var pageX = e.type === "touchmove" ? e.targetTouches[0].pageX : e.pageX;
        var pageY = e.type === "touchmove" ? e.targetTouches[0].pageY : e.pageY;
        if (e.preventedByNestedSwiper) {
            touches.startX = pageX;
            touches.startY = pageY;
            return;
        }
        if (!swiper.allowTouchMove) {
            swiper.allowClick = !1;
            if (data.isTouched) {
                Utils.extend(touches, { startX: pageX, startY: pageY, currentX: pageX, currentY: pageY });
                data.touchStartTime = Utils.now();
            }
            return;
        }
        if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {
            if (swiper.isVertical()) {
                if ((pageY < touches.startY && swiper.translate <= swiper.maxTranslate()) || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())) {
                    data.isTouched = !1;
                    data.isMoved = !1;
                    return;
                }
            } else if ((pageX < touches.startX && swiper.translate <= swiper.maxTranslate()) || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())) {
                return;
            }
        }
        if (data.isTouchEvent && doc.activeElement) {
            if (e.target === doc.activeElement && $$1(e.target).is(data.formElements)) {
                data.isMoved = !0;
                swiper.allowClick = !1;
                return;
            }
        }
        if (data.allowTouchCallbacks) {
            swiper.emit("touchMove", e);
        }
        if (e.targetTouches && e.targetTouches.length > 1) {
            return;
        }
        touches.currentX = pageX;
        touches.currentY = pageY;
        var diffX = touches.currentX - touches.startX;
        var diffY = touches.currentY - touches.startY;
        if (typeof data.isScrolling === "undefined") {
            var touchAngle;
            if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {
                data.isScrolling = !1;
            } else {
                if (diffX * diffX + diffY * diffY >= 25) {
                    touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;
                    data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;
                }
            }
        }
        if (data.isScrolling) {
            swiper.emit("touchMoveOpposite", e);
        }
        if (typeof startMoving === "undefined") {
            if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {
                data.startMoving = !0;
            }
        }
        if (!data.isTouched) {
            return;
        }
        if (data.isScrolling) {
            data.isTouched = !1;
            return;
        }
        if (!data.startMoving) {
            return;
        }
        swiper.allowClick = !1;
        e.preventDefault();
        if (params.touchMoveStopPropagation && !params.nested) {
            e.stopPropagation();
        }
        if (!data.isMoved) {
            if (params.loop) {
                swiper.loopFix();
            }
            data.startTranslate = swiper.getTranslate();
            swiper.setTransition(0);
            if (swiper.animating) {
                swiper.$wrapperEl.trigger("webkitTransitionEnd transitionend");
            }
            data.allowMomentumBounce = !1;
            if (params.grabCursor && (swiper.allowSlideNext === !0 || swiper.allowSlidePrev === !0)) {
                swiper.setGrabCursor(!0);
            }
            swiper.emit("sliderFirstMove", e);
        }
        swiper.emit("sliderMove", e);
        data.isMoved = !0;
        var diff = swiper.isHorizontal() ? diffX : diffY;
        touches.diff = diff;
        diff *= params.touchRatio;
        if (rtl) {
            diff = -diff;
        }
        swiper.swipeDirection = diff > 0 ? "prev" : "next";
        data.currentTranslate = diff + data.startTranslate;
        var disableParentSwiper = !0;
        var resistanceRatio = params.resistanceRatio;
        if (params.touchReleaseOnEdges) {
            resistanceRatio = 0;
        }
        if (diff > 0 && data.currentTranslate > swiper.minTranslate()) {
            disableParentSwiper = !1;
            if (params.resistance) {
                data.currentTranslate = swiper.minTranslate() - 1 + Math.pow(-swiper.minTranslate() + data.startTranslate + diff, resistanceRatio);
            }
        } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {
            disableParentSwiper = !1;
            if (params.resistance) {
                data.currentTranslate = swiper.maxTranslate() + 1 - Math.pow(swiper.maxTranslate() - data.startTranslate - diff, resistanceRatio);
            }
        }
        if (disableParentSwiper) {
            e.preventedByNestedSwiper = !0;
        }
        if (!swiper.allowSlideNext && swiper.swipeDirection === "next" && data.currentTranslate < data.startTranslate) {
            data.currentTranslate = data.startTranslate;
        }
        if (!swiper.allowSlidePrev && swiper.swipeDirection === "prev" && data.currentTranslate > data.startTranslate) {
            data.currentTranslate = data.startTranslate;
        }
        if (params.threshold > 0) {
            if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {
                if (!data.allowThresholdMove) {
                    data.allowThresholdMove = !0;
                    touches.startX = touches.currentX;
                    touches.startY = touches.currentY;
                    data.currentTranslate = data.startTranslate;
                    touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;
                    return;
                }
            } else {
                data.currentTranslate = data.startTranslate;
                return;
            }
        }
        if (!params.followFinger) {
            return;
        }
        if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {
            swiper.updateActiveIndex();
            swiper.updateSlidesClasses();
        }
        if (params.freeMode) {
            if (data.velocities.length === 0) {
                data.velocities.push({ position: touches[swiper.isHorizontal() ? "startX" : "startY"], time: data.touchStartTime });
            }
            data.velocities.push({ position: touches[swiper.isHorizontal() ? "currentX" : "currentY"], time: Utils.now() });
        }
        swiper.updateProgress(data.currentTranslate);
        swiper.setTranslate(data.currentTranslate);
    };
    var onTouchEnd = function (event) {
        var swiper = this;
        var data = swiper.touchEventsData;
        var params = swiper.params;
        var touches = swiper.touches;
        var rtl = swiper.rtl;
        var $wrapperEl = swiper.$wrapperEl;
        var slidesGrid = swiper.slidesGrid;
        var snapGrid = swiper.snapGrid;
        var e = event;
        if (e.originalEvent) {
            e = e.originalEvent;
        }
        if (data.allowTouchCallbacks) {
            swiper.emit("touchEnd", e);
        }
        data.allowTouchCallbacks = !1;
        if (!data.isTouched) {
            return;
        }
        if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === !0 || swiper.allowSlidePrev === !0)) {
            swiper.setGrabCursor(!1);
        }
        var touchEndTime = Utils.now();
        var timeDiff = touchEndTime - data.touchStartTime;
        if (swiper.allowClick) {
            swiper.updateClickedSlide(e);
            swiper.emit("tap", e);
            if (timeDiff < 300 && touchEndTime - data.lastClickTime > 300) {
                if (data.clickTimeout) {
                    clearTimeout(data.clickTimeout);
                }
                data.clickTimeout = Utils.nextTick(function () {
                    if (!swiper || swiper.destroyed) {
                        return;
                    }
                    swiper.emit("click", e);
                }, 300);
            }
            if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {
                if (data.clickTimeout) {
                    clearTimeout(data.clickTimeout);
                }
                swiper.emit("doubleTap", e);
            }
        }
        data.lastClickTime = Utils.now();
        Utils.nextTick(function () {
            if (!swiper.destroyed) {
                swiper.allowClick = !0;
            }
        });
        if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {
            data.isTouched = !1;
            data.isMoved = !1;
            return;
        }
        data.isTouched = !1;
        data.isMoved = !1;
        var currentPos;
        if (params.followFinger) {
            currentPos = rtl ? swiper.translate : -swiper.translate;
        } else {
            currentPos = -data.currentTranslate;
        }
        if (params.freeMode) {
            if (currentPos < -swiper.minTranslate()) {
                swiper.slideTo(swiper.activeIndex);
                return;
            } else if (currentPos > -swiper.maxTranslate()) {
                if (swiper.slides.length < snapGrid.length) {
                    swiper.slideTo(snapGrid.length - 1);
                } else {
                    swiper.slideTo(swiper.slides.length - 1);
                }
                return;
            }
            if (params.freeModeMomentum) {
                if (data.velocities.length > 1) {
                    var lastMoveEvent = data.velocities.pop();
                    var velocityEvent = data.velocities.pop();
                    var distance = lastMoveEvent.position - velocityEvent.position;
                    var time = lastMoveEvent.time - velocityEvent.time;
                    swiper.velocity = distance / time;
                    swiper.velocity /= 2;
                    if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {
                        swiper.velocity = 0;
                    }
                    if (time > 150 || Utils.now() - lastMoveEvent.time > 300) {
                        swiper.velocity = 0;
                    }
                } else {
                    swiper.velocity = 0;
                }
                swiper.velocity *= params.freeModeMomentumVelocityRatio;
                data.velocities.length = 0;
                var momentumDuration = 1000 * params.freeModeMomentumRatio;
                var momentumDistance = swiper.velocity * momentumDuration;
                var newPosition = swiper.translate + momentumDistance;
                if (rtl) {
                    newPosition = -newPosition;
                }
                var doBounce = !1;
                var afterBouncePosition;
                var bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;
                if (newPosition < swiper.maxTranslate()) {
                    if (params.freeModeMomentumBounce) {
                        if (newPosition + swiper.maxTranslate() < -bounceAmount) {
                            newPosition = swiper.maxTranslate() - bounceAmount;
                        }
                        afterBouncePosition = swiper.maxTranslate();
                        doBounce = !0;
                        data.allowMomentumBounce = !0;
                    } else {
                        newPosition = swiper.maxTranslate();
                    }
                } else if (newPosition > swiper.minTranslate()) {
                    if (params.freeModeMomentumBounce) {
                        if (newPosition - swiper.minTranslate() > bounceAmount) {
                            newPosition = swiper.minTranslate() + bounceAmount;
                        }
                        afterBouncePosition = swiper.minTranslate();
                        doBounce = !0;
                        data.allowMomentumBounce = !0;
                    } else {
                        newPosition = swiper.minTranslate();
                    }
                } else if (params.freeModeSticky) {
                    var nextSlide;
                    for (var j = 0; j < snapGrid.length; j += 1) {
                        if (snapGrid[j] > -newPosition) {
                            nextSlide = j;
                            break;
                        }
                    }
                    if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === "next") {
                        newPosition = snapGrid[nextSlide];
                    } else {
                        newPosition = snapGrid[nextSlide - 1];
                    }
                    newPosition = -newPosition;
                }
                if (swiper.velocity !== 0) {
                    if (rtl) {
                        momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);
                    } else {
                        momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);
                    }
                } else if (params.freeModeSticky) {
                    swiper.slideReset();
                    return;
                }
                if (params.freeModeMomentumBounce && doBounce) {
                    swiper.updateProgress(afterBouncePosition);
                    swiper.setTransition(momentumDuration);
                    swiper.setTranslate(newPosition);
                    swiper.transitionStart();
                    swiper.animating = !0;
                    $wrapperEl.transitionEnd(function () {
                        if (!swiper || swiper.destroyed || !data.allowMomentumBounce) {
                            return;
                        }
                        swiper.emit("momentumBounce");
                        swiper.setTransition(params.speed);
                        swiper.setTranslate(afterBouncePosition);
                        $wrapperEl.transitionEnd(function () {
                            if (!swiper || swiper.destroyed) {
                                return;
                            }
                            swiper.transitionEnd();
                        });
                    });
                } else if (swiper.velocity) {
                    swiper.updateProgress(newPosition);
                    swiper.setTransition(momentumDuration);
                    swiper.setTranslate(newPosition);
                    swiper.transitionStart();
                    if (!swiper.animating) {
                        swiper.animating = !0;
                        $wrapperEl.transitionEnd(function () {
                            if (!swiper || swiper.destroyed) {
                                return;
                            }
                            swiper.transitionEnd();
                        });
                    }
                } else {
                    swiper.updateProgress(newPosition);
                }
                swiper.updateActiveIndex();
                swiper.updateSlidesClasses();
            }
            if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {
                swiper.updateProgress();
                swiper.updateActiveIndex();
                swiper.updateSlidesClasses();
            }
            return;
        }
        var stopIndex = 0;
        var groupSize = swiper.slidesSizesGrid[0];
        for (var i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {
            if (typeof slidesGrid[i + params.slidesPerGroup] !== "undefined") {
                if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {
                    stopIndex = i;
                    groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];
                }
            } else if (currentPos >= slidesGrid[i]) {
                stopIndex = i;
                groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];
            }
        }
        var ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;
        if (timeDiff > params.longSwipesMs) {
            if (!params.longSwipes) {
                swiper.slideTo(swiper.activeIndex);
                return;
            }
            if (swiper.swipeDirection === "next") {
                if (ratio >= params.longSwipesRatio) {
                    swiper.slideTo(stopIndex + params.slidesPerGroup);
                } else {
                    swiper.slideTo(stopIndex);
                }
            }
            if (swiper.swipeDirection === "prev") {
                if (ratio > 1 - params.longSwipesRatio) {
                    swiper.slideTo(stopIndex + params.slidesPerGroup);
                } else {
                    swiper.slideTo(stopIndex);
                }
            }
        } else {
            if (!params.shortSwipes) {
                swiper.slideTo(swiper.activeIndex);
                return;
            }
            if (swiper.swipeDirection === "next") {
                swiper.slideTo(stopIndex + params.slidesPerGroup);
            }
            if (swiper.swipeDirection === "prev") {
                swiper.slideTo(stopIndex);
            }
        }
    };
    var onResize = function () {
        var swiper = this;
        var params = swiper.params;
        var el = swiper.el;
        if (el && el.offsetWidth === 0) {
            return;
        }
        if (params.breakpoints) {
            swiper.setBreakpoint();
        }
        var allowSlideNext = swiper.allowSlideNext;
        var allowSlidePrev = swiper.allowSlidePrev;
        swiper.allowSlideNext = !0;
        swiper.allowSlidePrev = !0;
        swiper.updateSize();
        swiper.updateSlides();
        if (params.freeMode) {
            var newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());
            swiper.setTranslate(newTranslate);
            swiper.updateActiveIndex();
            swiper.updateSlidesClasses();
            if (params.autoHeight) {
                swiper.updateAutoHeight();
            }
        } else {
            swiper.updateSlidesClasses();
            if ((params.slidesPerView === "auto" || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {
                swiper.slideTo(swiper.slides.length - 1, 0, !1, !0);
            } else {
                swiper.slideTo(swiper.activeIndex, 0, !1, !0);
            }
        }
        swiper.allowSlidePrev = allowSlidePrev;
        swiper.allowSlideNext = allowSlideNext;
    };
    var onClick = function (e) {
        var swiper = this;
        if (!swiper.allowClick) {
            if (swiper.params.preventClicks) {
                e.preventDefault();
            }
            if (swiper.params.preventClicksPropagation && swiper.animating) {
                e.stopPropagation();
                e.stopImmediatePropagation();
            }
        }
    };
    function attachEvents() {
        var swiper = this;
        var params = swiper.params;
        var touchEvents = swiper.touchEvents;
        var el = swiper.el;
        var wrapperEl = swiper.wrapperEl;
        {
            swiper.onTouchStart = onTouchStart.bind(swiper);
            swiper.onTouchMove = onTouchMove.bind(swiper);
            swiper.onTouchEnd = onTouchEnd.bind(swiper);
        }
        swiper.onClick = onClick.bind(swiper);
        var target = params.touchEventsTarget === "container" ? el : wrapperEl;
        var capture = !!params.nested;
        {
            if (Support.pointerEvents || Support.prefixedPointerEvents) {
                target.addEventListener(touchEvents.start, swiper.onTouchStart, !1);
                (Support.touch ? target : doc).addEventListener(touchEvents.move, swiper.onTouchMove, capture);
                (Support.touch ? target : doc).addEventListener(touchEvents.end, swiper.onTouchEnd, !1);
            } else {
                if (Support.touch) {
                    var passiveListener = touchEvents.start === "touchstart" && Support.passiveListener && params.passiveListeners ? { passive: !0, capture: !1 } : !1;
                    target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);
                    target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: !1, capture: capture } : capture);
                    target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);
                }
                if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {
                    target.addEventListener("mousedown", swiper.onTouchStart, !1);
                    doc.addEventListener("mousemove", swiper.onTouchMove, capture);
                    doc.addEventListener("mouseup", swiper.onTouchEnd, !1);
                }
            }
            if (params.preventClicks || params.preventClicksPropagation) {
                target.addEventListener("click", swiper.onClick, !0);
            }
        }
        swiper.on("resize observerUpdate", onResize);
    }
    function detachEvents() {
        var swiper = this;
        var params = swiper.params;
        var touchEvents = swiper.touchEvents;
        var el = swiper.el;
        var wrapperEl = swiper.wrapperEl;
        var target = params.touchEventsTarget === "container" ? el : wrapperEl;
        var capture = !!params.nested;
        {
            if (Support.pointerEvents || Support.prefixedPointerEvents) {
                target.removeEventListener(touchEvents.start, swiper.onTouchStart, !1);
                (Support.touch ? target : doc).removeEventListener(touchEvents.move, swiper.onTouchMove, capture);
                (Support.touch ? target : doc).removeEventListener(touchEvents.end, swiper.onTouchEnd, !1);
            } else {
                if (Support.touch) {
                    var passiveListener = touchEvents.start === "onTouchStart" && Support.passiveListener && params.passiveListeners ? { passive: !0, capture: !1 } : !1;
                    target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);
                    target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);
                    target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);
                }
                if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {
                    target.removeEventListener("mousedown", swiper.onTouchStart, !1);
                    doc.removeEventListener("mousemove", swiper.onTouchMove, capture);
                    doc.removeEventListener("mouseup", swiper.onTouchEnd, !1);
                }
            }
            if (params.preventClicks || params.preventClicksPropagation) {
                target.removeEventListener("click", swiper.onClick, !0);
            }
        }
        swiper.off("resize observerUpdate", onResize);
    }
    var events = { attachEvents: attachEvents, detachEvents: detachEvents };
    var setBreakpoint = function () {
        var swiper = this;
        var activeIndex = swiper.activeIndex;
        var loopedSlides = swiper.loopedSlides;
        if (loopedSlides === void 0) loopedSlides = 0;
        var params = swiper.params;
        var breakpoints = params.breakpoints;
        if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) {
            return;
        }
        var breakpoint = swiper.getBreakpoint(breakpoints);
        if (breakpoint && swiper.currentBreakpoint !== breakpoint) {
            var breakPointsParams = breakpoint in breakpoints ? breakpoints[breakpoint] : swiper.originalParams;
            var needsReLoop = params.loop && breakPointsParams.slidesPerView !== params.slidesPerView;
            Utils.extend(swiper.params, breakPointsParams);
            Utils.extend(swiper, { allowTouchMove: swiper.params.allowTouchMove, allowSlideNext: swiper.params.allowSlideNext, allowSlidePrev: swiper.params.allowSlidePrev });
            swiper.currentBreakpoint = breakpoint;
            if (needsReLoop) {
                swiper.loopDestroy();
                swiper.loopCreate();
                swiper.updateSlides();
                swiper.slideTo(activeIndex - loopedSlides + swiper.loopedSlides, 0, !1);
            }
            swiper.emit("breakpoint", breakPointsParams);
        }
    };
    var getBreakpoint = function (breakpoints) {
        if (!breakpoints) {
            return undefined;
        }
        var breakpoint = !1;
        var points = [];
        Object.keys(breakpoints).forEach(function (point) {
            points.push(point);
        });
        points.sort(function (a, b) {
            return parseInt(a, 10) - parseInt(b, 10);
        });
        for (var i = 0; i < points.length; i += 1) {
            var point = points[i];
            if (point >= win.innerWidth && !breakpoint) {
                breakpoint = point;
            }
        }
        return breakpoint || "max";
    };
    var breakpoints = { setBreakpoint: setBreakpoint, getBreakpoint: getBreakpoint };
    var addClasses = function () {
        var swiper = this;
        var classNames = swiper.classNames;
        var params = swiper.params;
        var rtl = swiper.rtl;
        var $el = swiper.$el;
        var suffixes = [];
        suffixes.push(params.direction);
        if (params.freeMode) {
            suffixes.push("free-mode");
        }
        if (!Support.flexbox) {
            suffixes.push("no-flexbox");
        }
        if (params.autoHeight) {
            suffixes.push("autoheight");
        }
        if (rtl) {
            suffixes.push("rtl");
        }
        if (params.slidesPerColumn > 1) {
            suffixes.push("multirow");
        }
        if (Device.android) {
            suffixes.push("android");
        }
        if (Device.ios) {
            suffixes.push("ios");
        }
        if (Support.pointerEvents || Support.prefixedPointerEvents) {
            suffixes.push("wp8-" + params.direction);
        }
        suffixes.forEach(function (suffix) {
            classNames.push(params.containerModifierClass + suffix);
        });
        $el.addClass(classNames.join(" "));
    };
    var removeClasses = function () {
        var swiper = this;
        var $el = swiper.$el;
        var classNames = swiper.classNames;
        $el.removeClass(classNames.join(" "));
    };
    var classes = { addClasses: addClasses, removeClasses: removeClasses };
    var loadImage = function (imageEl, src, srcset, sizes, checkForComplete, callback) {
        var image;
        function onReady() {
            if (callback) {
                callback();
            }
        }
        if (!imageEl.complete || !checkForComplete) {
            if (src) {
                image = new win.Image();
                image.onload = onReady;
                image.onerror = onReady;
                if (sizes) {
                    image.sizes = sizes;
                }
                if (srcset) {
                    image.srcset = srcset;
                }
                if (src) {
                    image.src = src;
                }
            } else {
                onReady();
            }
        } else {
            onReady();
        }
    };
    var preloadImages = function () {
        var swiper = this;
        swiper.imagesToLoad = swiper.$el.find("img");
        function onReady() {
            if (typeof swiper === "undefined" || swiper === null || !swiper || swiper.destroyed) {
                return;
            }
            if (swiper.imagesLoaded !== undefined) {
                swiper.imagesLoaded += 1;
            }
            if (swiper.imagesLoaded === swiper.imagesToLoad.length) {
                if (swiper.params.updateOnImagesReady) {
                    swiper.update();
                }
                swiper.emit("imagesReady");
            }
        }
        for (var i = 0; i < swiper.imagesToLoad.length; i += 1) {
            var imageEl = swiper.imagesToLoad[i];
            swiper.loadImage(imageEl, imageEl.currentSrc || imageEl.getAttribute("src"), imageEl.srcset || imageEl.getAttribute("srcset"), imageEl.sizes || imageEl.getAttribute("sizes"), !0, onReady);
        }
    };
    var images = { loadImage: loadImage, preloadImages: preloadImages };
    function checkOverflow() {
        var swiper = this;
        var wasLocked = swiper.isLocked;
        swiper.isLocked = swiper.snapGrid.length === 1;
        swiper.allowTouchMove = !swiper.isLocked;
        if (wasLocked && wasLocked !== swiper.isLocked) {
            swiper.isEnd = !1;
            swiper.navigation.update();
        }
    }
    var checkOverflow$1 = { checkOverflow: checkOverflow };
    var defaults = {
        init: !0,
        direction: "horizontal",
        touchEventsTarget: "container",
        initialSlide: 0,
        speed: 300,
        iOSEdgeSwipeDetection: !1,
        iOSEdgeSwipeThreshold: 20,
        freeMode: !1,
        freeModeMomentum: !0,
        freeModeMomentumRatio: 1,
        freeModeMomentumBounce: !0,
        freeModeMomentumBounceRatio: 1,
        freeModeMomentumVelocityRatio: 1,
        freeModeSticky: !1,
        freeModeMinimumVelocity: 0.02,
        autoHeight: !1,
        setWrapperSize: !1,
        virtualTranslate: !1,
        effect: "slide",
        breakpoints: undefined,
        spaceBetween: 0,
        slidesPerView: 1,
        slidesPerColumn: 1,
        slidesPerColumnFill: "column",
        slidesPerGroup: 1,
        centeredSlides: !1,
        slidesOffsetBefore: 0,
        slidesOffsetAfter: 0,
        normalizeSlideIndex: !0,
        watchOverflow: !1,
        roundLengths: !1,
        touchRatio: 1,
        touchAngle: 45,
        simulateTouch: !0,
        shortSwipes: !0,
        longSwipes: !0,
        longSwipesRatio: 0.5,
        longSwipesMs: 300,
        followFinger: !0,
        allowTouchMove: !0,
        threshold: 0,
        touchMoveStopPropagation: !0,
        touchReleaseOnEdges: !1,
        uniqueNavElements: !0,
        resistance: !0,
        resistanceRatio: 0.85,
        watchSlidesProgress: !1,
        watchSlidesVisibility: !1,
        grabCursor: !1,
        preventClicks: !0,
        preventClicksPropagation: !0,
        slideToClickedSlide: !1,
        preloadImages: !0,
        updateOnImagesReady: !0,
        loop: !1,
        loopAdditionalSlides: 0,
        loopedSlides: null,
        loopFillGroupWithBlank: !1,
        allowSlidePrev: !0,
        allowSlideNext: !0,
        swipeHandler: null,
        noSwiping: !0,
        noSwipingClass: "swiper-no-swiping",
        passiveListeners: !0,
        containerModifierClass: "swiper-container-",
        slideClass: "swiper-slide",
        slideBlankClass: "swiper-slide-invisible-blank",
        slideActiveClass: "swiper-slide-active",
        slideDuplicateActiveClass: "swiper-slide-duplicate-active",
        slideVisibleClass: "swiper-slide-visible",
        slideDuplicateClass: "swiper-slide-duplicate",
        slideNextClass: "swiper-slide-next",
        slideDuplicateNextClass: "swiper-slide-duplicate-next",
        slidePrevClass: "swiper-slide-prev",
        slideDuplicatePrevClass: "swiper-slide-duplicate-prev",
        wrapperClass: "swiper-wrapper",
        runCallbacksOnInit: !0,
    };
    var prototypes = {
        update: update,
        translate: translate,
        transition: transition$1,
        slide: slide,
        loop: loop,
        grabCursor: grabCursor,
        manipulation: manipulation,
        events: events,
        breakpoints: breakpoints,
        checkOverflow: checkOverflow$1,
        classes: classes,
        images: images,
    };
    var extendedDefaults = {};
    var Swiper$1 = (function (SwiperClass$$1) {
        function Swiper() {
            var args = [],
                len = arguments.length;
            while (len--) args[len] = arguments[len];
            var el;
            var params;
            if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {
                params = args[0];
            } else {
                var assign;
                (assign = args), (el = assign[0]), (params = assign[1]);
            }
            if (!params) {
                params = {};
            }
            params = Utils.extend({}, params);
            if (el && !params.el) {
                params.el = el;
            }
            SwiperClass$$1.call(this, params);
            Object.keys(prototypes).forEach(function (prototypeGroup) {
                Object.keys(prototypes[prototypeGroup]).forEach(function (protoMethod) {
                    if (!Swiper.prototype[protoMethod]) {
                        Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];
                    }
                });
            });
            var swiper = this;
            if (typeof swiper.modules === "undefined") {
                swiper.modules = {};
            }
            Object.keys(swiper.modules).forEach(function (moduleName) {
                var module = swiper.modules[moduleName];
                if (module.params) {
                    var moduleParamName = Object.keys(module.params)[0];
                    var moduleParams = module.params[moduleParamName];
                    if (typeof moduleParams !== "object") {
                        return;
                    }
                    if (!(moduleParamName in params && "enabled" in moduleParams)) {
                        return;
                    }
                    if (params[moduleParamName] === !0) {
                        params[moduleParamName] = { enabled: !0 };
                    }
                    if (typeof params[moduleParamName] === "object" && !("enabled" in params[moduleParamName])) {
                        params[moduleParamName].enabled = !0;
                    }
                    if (!params[moduleParamName]) {
                        params[moduleParamName] = { enabled: !1 };
                    }
                }
            });
            var swiperParams = Utils.extend({}, defaults);
            swiper.useModulesParams(swiperParams);
            swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);
            swiper.originalParams = Utils.extend({}, swiper.params);
            swiper.passedParams = Utils.extend({}, params);
            var $el = $$1(swiper.params.el);
            el = $el[0];
            if (!el) {
                return undefined;
            }
            if ($el.length > 1) {
                var swipers = [];
                $el.each(function (index, containerEl) {
                    var newParams = Utils.extend({}, params, { el: containerEl });
                    swipers.push(new Swiper(newParams));
                });
                return swipers;
            }
            el.swiper = swiper;
            $el.data("swiper", swiper);
            var $wrapperEl = $el.children("." + swiper.params.wrapperClass);
            Utils.extend(swiper, {
                $el: $el,
                el: el,
                $wrapperEl: $wrapperEl,
                wrapperEl: $wrapperEl[0],
                classNames: [],
                slides: $$1(),
                slidesGrid: [],
                snapGrid: [],
                slidesSizesGrid: [],
                isHorizontal: function isHorizontal() {
                    return swiper.params.direction === "horizontal";
                },
                isVertical: function isVertical() {
                    return swiper.params.direction === "vertical";
                },
                rtl: swiper.params.direction === "horizontal" && (el.dir.toLowerCase() === "rtl" || $el.css("direction") === "rtl"),
                wrongRTL: $wrapperEl.css("display") === "-webkit-box",
                activeIndex: 0,
                realIndex: 0,
                isBeginning: !0,
                isEnd: !1,
                translate: 0,
                progress: 0,
                velocity: 0,
                animating: !1,
                allowSlideNext: swiper.params.allowSlideNext,
                allowSlidePrev: swiper.params.allowSlidePrev,
                touchEvents: (function touchEvents() {
                    var touch = ["touchstart", "touchmove", "touchend"];
                    var desktop = ["mousedown", "mousemove", "mouseup"];
                    if (Support.pointerEvents) {
                        desktop = ["pointerdown", "pointermove", "pointerup"];
                    } else if (Support.prefixedPointerEvents) {
                        desktop = ["MSPointerDown", "MSPointerMove", "MSPointerUp"];
                    }
                    return {
                        start: Support.touch || !swiper.params.simulateTouch ? touch[0] : desktop[0],
                        move: Support.touch || !swiper.params.simulateTouch ? touch[1] : desktop[1],
                        end: Support.touch || !swiper.params.simulateTouch ? touch[2] : desktop[2],
                    };
                })(),
                touchEventsData: {
                    isTouched: undefined,
                    isMoved: undefined,
                    allowTouchCallbacks: undefined,
                    touchStartTime: undefined,
                    isScrolling: undefined,
                    currentTranslate: undefined,
                    startTranslate: undefined,
                    allowThresholdMove: undefined,
                    formElements: "input, select, option, textarea, button, video",
                    lastClickTime: Utils.now(),
                    clickTimeout: undefined,
                    velocities: [],
                    allowMomentumBounce: undefined,
                    isTouchEvent: undefined,
                    startMoving: undefined,
                },
                allowClick: !0,
                allowTouchMove: swiper.params.allowTouchMove,
                touches: { startX: 0, startY: 0, currentX: 0, currentY: 0, diff: 0 },
                imagesToLoad: [],
                imagesLoaded: 0,
            });
            swiper.useModules();
            if (swiper.params.init) {
                swiper.init();
            }
            return swiper;
        }
        if (SwiperClass$$1) Swiper.__proto__ = SwiperClass$$1;
        Swiper.prototype = Object.create(SwiperClass$$1 && SwiperClass$$1.prototype);
        Swiper.prototype.constructor = Swiper;
        var staticAccessors = { extendedDefaults: { configurable: !0 }, defaults: { configurable: !0 }, Class: { configurable: !0 }, $: { configurable: !0 } };
        Swiper.prototype.slidesPerViewDynamic = function slidesPerViewDynamic() {
            var swiper = this;
            var params = swiper.params;
            var slides = swiper.slides;
            var slidesGrid = swiper.slidesGrid;
            var swiperSize = swiper.size;
            var activeIndex = swiper.activeIndex;
            var spv = 1;
            if (params.centeredSlides) {
                var slideSize = slides[activeIndex].swiperSlideSize;
                var breakLoop;
                for (var i = activeIndex + 1; i < slides.length; i += 1) {
                    if (slides[i] && !breakLoop) {
                        slideSize += slides[i].swiperSlideSize;
                        spv += 1;
                        if (slideSize > swiperSize) {
                            breakLoop = !0;
                        }
                    }
                }
                for (var i$1 = activeIndex - 1; i$1 >= 0; i$1 -= 1) {
                    if (slides[i$1] && !breakLoop) {
                        slideSize += slides[i$1].swiperSlideSize;
                        spv += 1;
                        if (slideSize > swiperSize) {
                            breakLoop = !0;
                        }
                    }
                }
            } else {
                for (var i$2 = activeIndex + 1; i$2 < slides.length; i$2 += 1) {
                    if (slidesGrid[i$2] - slidesGrid[activeIndex] < swiperSize) {
                        spv += 1;
                    }
                }
            }
            return spv;
        };
        Swiper.prototype.update = function update$$1() {
            var swiper = this;
            if (!swiper || swiper.destroyed) {
                return;
            }
            swiper.updateSize();
            swiper.updateSlides();
            swiper.updateProgress();
            swiper.updateSlidesClasses();
            function setTranslate() {
                var translateValue = swiper.rtl ? swiper.translate * -1 : swiper.translate;
                var newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());
                swiper.setTranslate(newTranslate);
                swiper.updateActiveIndex();
                swiper.updateSlidesClasses();
            }
            var translated;
            if (swiper.params.freeMode) {
                setTranslate();
                if (swiper.params.autoHeight) {
                    swiper.updateAutoHeight();
                }
            } else {
                if ((swiper.params.slidesPerView === "auto" || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {
                    translated = swiper.slideTo(swiper.slides.length - 1, 0, !1, !0);
                } else {
                    translated = swiper.slideTo(swiper.activeIndex, 0, !1, !0);
                }
                if (!translated) {
                    setTranslate();
                }
            }
            swiper.emit("update");
        };
        Swiper.prototype.init = function init() {
            var swiper = this;
            if (swiper.initialized) {
                return;
            }
            swiper.emit("beforeInit");
            if (swiper.params.breakpoints) {
                swiper.setBreakpoint();
            }
            swiper.addClasses();
            if (swiper.params.loop) {
                swiper.loopCreate();
            }
            swiper.updateSize();
            swiper.updateSlides();
            if (swiper.params.watchOverflow) {
                swiper.checkOverflow();
            }
            if (swiper.params.grabCursor) {
                swiper.setGrabCursor();
            }
            if (swiper.params.preloadImages) {
                swiper.preloadImages();
            }
            if (swiper.params.loop) {
                swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);
            } else {
                swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);
            }
            swiper.attachEvents();
            swiper.initialized = !0;
            swiper.emit("init");
        };
        Swiper.prototype.destroy = function destroy(deleteInstance, cleanStyles) {
            if (deleteInstance === void 0) deleteInstance = !0;
            if (cleanStyles === void 0) cleanStyles = !0;
            var swiper = this;
            var params = swiper.params;
            var $el = swiper.$el;
            var $wrapperEl = swiper.$wrapperEl;
            var slides = swiper.slides;
            swiper.emit("beforeDestroy");
            swiper.initialized = !1;
            swiper.detachEvents();
            if (params.loop) {
                swiper.loopDestroy();
            }
            if (cleanStyles) {
                swiper.removeClasses();
                $el.removeAttr("style");
                $wrapperEl.removeAttr("style");
                if (slides && slides.length) {
                    slides
                        .removeClass([params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass].join(" "))
                        .removeAttr("style")
                        .removeAttr("data-swiper-slide-index")
                        .removeAttr("data-swiper-column")
                        .removeAttr("data-swiper-row");
                }
            }
            swiper.emit("destroy");
            Object.keys(swiper.eventsListeners).forEach(function (eventName) {
                swiper.off(eventName);
            });
            if (deleteInstance !== !1) {
                swiper.$el[0].swiper = null;
                swiper.$el.data("swiper", null);
                Utils.deleteProps(swiper);
            }
            swiper.destroyed = !0;
        };
        Swiper.extendDefaults = function extendDefaults(newDefaults) {
            Utils.extend(extendedDefaults, newDefaults);
        };
        staticAccessors.extendedDefaults.get = function () {
            return extendedDefaults;
        };
        staticAccessors.defaults.get = function () {
            return defaults;
        };
        staticAccessors.Class.get = function () {
            return SwiperClass$$1;
        };
        staticAccessors.$.get = function () {
            return $$1;
        };
        Object.defineProperties(Swiper, staticAccessors);
        return Swiper;
    })(SwiperClass);
    var Device$2 = { name: "device", proto: { device: Device }, static: { device: Device } };
    var Support$2 = { name: "support", proto: { support: Support }, static: { support: Support } };
    var Browser$1 = (function Browser() {
        function isSafari() {
            var ua = win.navigator.userAgent.toLowerCase();
            return ua.indexOf("safari") >= 0 && ua.indexOf("chrome") < 0 && ua.indexOf("android") < 0;
        }
        return { isSafari: isSafari(), isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(win.navigator.userAgent) };
    })();
    var Browser = { name: "browser", proto: { browser: Browser$1 }, static: { browser: Browser$1 } };
    var Resize = {
        name: "resize",
        create: function create() {
            var swiper = this;
            Utils.extend(swiper, {
                resize: {
                    resizeHandler: function resizeHandler() {
                        if (!swiper || swiper.destroyed || !swiper.initialized) {
                            return;
                        }
                        swiper.emit("beforeResize");
                        swiper.emit("resize");
                    },
                    orientationChangeHandler: function orientationChangeHandler() {
                        if (!swiper || swiper.destroyed || !swiper.initialized) {
                            return;
                        }
                        swiper.emit("orientationchange");
                    },
                },
            });
        },
        on: {
            init: function init() {
                var swiper = this;
                win.addEventListener("resize", swiper.resize.resizeHandler);
                win.addEventListener("orientationchange", swiper.resize.orientationChangeHandler);
            },
            destroy: function destroy() {
                var swiper = this;
                win.removeEventListener("resize", swiper.resize.resizeHandler);
                win.removeEventListener("orientationchange", swiper.resize.orientationChangeHandler);
            },
        },
    };
    var Observer = {
        func: win.MutationObserver || win.WebkitMutationObserver,
        attach: function attach(target, options) {
            if (options === void 0) options = {};
            var swiper = this;
            var ObserverFunc = Observer.func;
            var observer = new ObserverFunc(function (mutations) {
                mutations.forEach(function (mutation) {
                    swiper.emit("observerUpdate", mutation);
                });
            });
            observer.observe(target, {
                attributes: typeof options.attributes === "undefined" ? !0 : options.attributes,
                childList: typeof options.childList === "undefined" ? !0 : options.childList,
                characterData: typeof options.characterData === "undefined" ? !0 : options.characterData,
            });
            swiper.observer.observers.push(observer);
        },
        init: function init() {
            var swiper = this;
            if (!Support.observer || !swiper.params.observer) {
                return;
            }
            if (swiper.params.observeParents) {
                var containerParents = swiper.$el.parents();
                for (var i = 0; i < containerParents.length; i += 1) {
                    swiper.observer.attach(containerParents[i]);
                }
            }
            swiper.observer.attach(swiper.$el[0], { childList: !1 });
            swiper.observer.attach(swiper.$wrapperEl[0], { attributes: !1 });
        },
        destroy: function destroy() {
            var swiper = this;
            swiper.observer.observers.forEach(function (observer) {
                observer.disconnect();
            });
            swiper.observer.observers = [];
        },
    };
    var Observer$1 = {
        name: "observer",
        params: { observer: !1, observeParents: !1 },
        create: function create() {
            var swiper = this;
            Utils.extend(swiper, { observer: { init: Observer.init.bind(swiper), attach: Observer.attach.bind(swiper), destroy: Observer.destroy.bind(swiper), observers: [] } });
        },
        on: {
            init: function init() {
                var swiper = this;
                swiper.observer.init();
            },
            destroy: function destroy() {
                var swiper = this;
                swiper.observer.destroy();
            },
        },
    };
    var Virtual = {
        update: function update(force) {
            var swiper = this;
            var ref = swiper.params;
            var slidesPerView = ref.slidesPerView;
            var slidesPerGroup = ref.slidesPerGroup;
            var centeredSlides = ref.centeredSlides;
            var ref$1 = swiper.virtual;
            var previousFrom = ref$1.from;
            var previousTo = ref$1.to;
            var slides = ref$1.slides;
            var previousSlidesGrid = ref$1.slidesGrid;
            var renderSlide = ref$1.renderSlide;
            var previousOffset = ref$1.offset;
            swiper.updateActiveIndex();
            var activeIndex = swiper.activeIndex || 0;
            var offsetProp;
            if (swiper.rtl && swiper.isHorizontal()) {
                offsetProp = "right";
            } else {
                offsetProp = swiper.isHorizontal() ? "left" : "top";
            }
            var slidesAfter;
            var slidesBefore;
            if (centeredSlides) {
                slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup;
                slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup;
            } else {
                slidesAfter = slidesPerView + (slidesPerGroup - 1);
                slidesBefore = slidesPerGroup;
            }
            var from = Math.max((activeIndex || 0) - slidesBefore, 0);
            var to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);
            var offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);
            Utils.extend(swiper.virtual, { from: from, to: to, offset: offset, slidesGrid: swiper.slidesGrid });
            function onRendered() {
                swiper.updateSlides();
                swiper.updateProgress();
                swiper.updateSlidesClasses();
                if (swiper.lazy && swiper.params.lazy.enabled) {
                    swiper.lazy.load();
                }
            }
            if (previousFrom === from && previousTo === to && !force) {
                if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {
                    swiper.slides.css(offsetProp, offset + "px");
                }
                swiper.updateProgress();
                return;
            }
            if (swiper.params.virtual.renderExternal) {
                swiper.params.virtual.renderExternal.call(swiper, {
                    offset: offset,
                    from: from,
                    to: to,
                    slides: (function getSlides() {
                        var slidesToRender = [];
                        for (var i = from; i <= to; i += 1) {
                            slidesToRender.push(slides[i]);
                        }
                        return slidesToRender;
                    })(),
                });
                onRendered();
                return;
            }
            var prependIndexes = [];
            var appendIndexes = [];
            if (force) {
                swiper.$wrapperEl.find("." + swiper.params.slideClass).remove();
            } else {
                for (var i = previousFrom; i <= previousTo; i += 1) {
                    if (i < from || i > to) {
                        swiper.$wrapperEl.find("." + swiper.params.slideClass + '[data-swiper-slide-index="' + i + '"]').remove();
                    }
                }
            }
            for (var i$1 = 0; i$1 < slides.length; i$1 += 1) {
                if (i$1 >= from && i$1 <= to) {
                    if (typeof previousTo === "undefined" || force) {
                        appendIndexes.push(i$1);
                    } else {
                        if (i$1 > previousTo) {
                            appendIndexes.push(i$1);
                        }
                        if (i$1 < previousFrom) {
                            prependIndexes.push(i$1);
                        }
                    }
                }
            }
            appendIndexes.forEach(function (index) {
                swiper.$wrapperEl.append(renderSlide(slides[index], index));
            });
            prependIndexes
                .sort(function (a, b) {
                    return a < b;
                })
                .forEach(function (index) {
                    swiper.$wrapperEl.prepend(renderSlide(slides[index], index));
                });
            swiper.$wrapperEl.children(".swiper-slide").css(offsetProp, offset + "px");
            onRendered();
        },
        renderSlide: function renderSlide(slide, index) {
            var swiper = this;
            var params = swiper.params.virtual;
            if (params.cache && swiper.virtual.cache[index]) {
                return swiper.virtual.cache[index];
            }
            var $slideEl = params.renderSlide ? $$1(params.renderSlide.call(swiper, slide, index)) : $$1('<div class="' + swiper.params.slideClass + '" data-swiper-slide-index="' + index + '">' + slide + "</div>");
            if (!$slideEl.attr("data-swiper-slide-index")) {
                $slideEl.attr("data-swiper-slide-index", index);
            }
            if (params.cache) {
                swiper.virtual.cache[index] = $slideEl;
            }
            return $slideEl;
        },
        appendSlide: function appendSlide(slide) {
            var swiper = this;
            swiper.virtual.slides.push(slide);
            swiper.virtual.update(!0);
        },
        prependSlide: function prependSlide(slide) {
            var swiper = this;
            swiper.virtual.slides.unshift(slide);
            if (swiper.params.virtual.cache) {
                var cache = swiper.virtual.cache;
                var newCache = {};
                Object.keys(cache).forEach(function (cachedIndex) {
                    newCache[cachedIndex + 1] = cache[cachedIndex];
                });
                swiper.virtual.cache = newCache;
            }
            swiper.virtual.update(!0);
            swiper.slideNext(0);
        },
    };
    var Virtual$1 = {
        name: "virtual",
        params: { virtual: { enabled: !1, slides: [], cache: !0, renderSlide: null, renderExternal: null } },
        create: function create() {
            var swiper = this;
            Utils.extend(swiper, {
                virtual: {
                    update: Virtual.update.bind(swiper),
                    appendSlide: Virtual.appendSlide.bind(swiper),
                    prependSlide: Virtual.prependSlide.bind(swiper),
                    renderSlide: Virtual.renderSlide.bind(swiper),
                    slides: swiper.params.virtual.slides,
                    cache: {},
                },
            });
        },
        on: {
            beforeInit: function beforeInit() {
                var swiper = this;
                if (!swiper.params.virtual.enabled) {
                    return;
                }
                swiper.classNames.push(swiper.params.containerModifierClass + "virtual");
                var overwriteParams = { watchSlidesProgress: !0 };
                Utils.extend(swiper.params, overwriteParams);
                Utils.extend(swiper.originalParams, overwriteParams);
                swiper.virtual.update();
            },
            setTranslate: function setTranslate() {
                var swiper = this;
                if (!swiper.params.virtual.enabled) {
                    return;
                }
                swiper.virtual.update();
            },
        },
    };
    var Keyboard = {
        handle: function handle(event) {
            var swiper = this;
            var e = event;
            if (e.originalEvent) {
                e = e.originalEvent;
            }
            var kc = e.keyCode || e.charCode;
            if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {
                return !1;
            }
            if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {
                return !1;
            }
            if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {
                return undefined;
            }
            if (doc.activeElement && doc.activeElement.nodeName && (doc.activeElement.nodeName.toLowerCase() === "input" || doc.activeElement.nodeName.toLowerCase() === "textarea")) {
                return undefined;
            }
            if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {
                var inView = !1;
                if (swiper.$el.parents("." + swiper.params.slideClass).length > 0 && swiper.$el.parents("." + swiper.params.slideActiveClass).length === 0) {
                    return undefined;
                }
                var windowScroll = { left: win.pageXOffset, top: win.pageYOffset };
                var windowWidth = win.innerWidth;
                var windowHeight = win.innerHeight;
                var swiperOffset = swiper.$el.offset();
                if (swiper.rtl) {
                    swiperOffset.left -= swiper.$el[0].scrollLeft;
                }
                var swiperCoord = [
                    [swiperOffset.left, swiperOffset.top],
                    [swiperOffset.left + swiper.width, swiperOffset.top],
                    [swiperOffset.left, swiperOffset.top + swiper.height],
                    [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],
                ];
                for (var i = 0; i < swiperCoord.length; i += 1) {
                    var point = swiperCoord[i];
                    if (point[0] >= windowScroll.left && point[0] <= windowScroll.left + windowWidth && point[1] >= windowScroll.top && point[1] <= windowScroll.top + windowHeight) {
                        inView = !0;
                    }
                }
                if (!inView) {
                    return undefined;
                }
            }
            if (swiper.isHorizontal()) {
                if (kc === 37 || kc === 39) {
                    if (e.preventDefault) {
                        e.preventDefault();
                    } else {
                        e.returnValue = !1;
                    }
                }
                if ((kc === 39 && !swiper.rtl) || (kc === 37 && swiper.rtl)) {
                    swiper.slideNext();
                }
                if ((kc === 37 && !swiper.rtl) || (kc === 39 && swiper.rtl)) {
                    swiper.slidePrev();
                }
            } else {
                if (kc === 38 || kc === 40) {
                    if (e.preventDefault) {
                        e.preventDefault();
                    } else {
                        e.returnValue = !1;
                    }
                }
                if (kc === 40) {
                    swiper.slideNext();
                }
                if (kc === 38) {
                    swiper.slidePrev();
                }
            }
            swiper.emit("keyPress", kc);
            return undefined;
        },
        enable: function enable() {
            var swiper = this;
            if (swiper.keyboard.enabled) {
                return;
            }
            $$1(doc).on("keydown", swiper.keyboard.handle);
            swiper.keyboard.enabled = !0;
        },
        disable: function disable() {
            var swiper = this;
            if (!swiper.keyboard.enabled) {
                return;
            }
            $$1(doc).off("keydown", swiper.keyboard.handle);
            swiper.keyboard.enabled = !1;
        },
    };
    var Keyboard$1 = {
        name: "keyboard",
        params: { keyboard: { enabled: !1, onlyInViewport: !0 } },
        create: function create() {
            var swiper = this;
            Utils.extend(swiper, { keyboard: { enabled: !1, enable: Keyboard.enable.bind(swiper), disable: Keyboard.disable.bind(swiper), handle: Keyboard.handle.bind(swiper) } });
        },
        on: {
            init: function init() {
                var swiper = this;
                if (swiper.params.keyboard.enabled) {
                    swiper.keyboard.enable();
                }
            },
            destroy: function destroy() {
                var swiper = this;
                if (swiper.keyboard.enabled) {
                    swiper.keyboard.disable();
                }
            },
        },
    };
    function isEventSupported() {
        var eventName = "onwheel";
        var isSupported = eventName in doc;
        if (!isSupported) {
            var element = doc.createElement("div");
            element.setAttribute(eventName, "return;");
            isSupported = typeof element[eventName] === "function";
        }
        if (!isSupported && doc.implementation && doc.implementation.hasFeature && doc.implementation.hasFeature("", "") !== !0) {
            isSupported = doc.implementation.hasFeature("Events.wheel", "3.0");
        }
        return isSupported;
    }
    var Mousewheel = {
        lastScrollTime: Utils.now(),
        event: (function getEvent() {
            if (win.navigator.userAgent.indexOf("firefox") > -1) {
                return "DOMMouseScroll";
            }
            return isEventSupported() ? "wheel" : "mousewheel";
        })(),
        normalize: function normalize(e) {
            var PIXEL_STEP = 10;
            var LINE_HEIGHT = 40;
            var PAGE_HEIGHT = 800;
            var sX = 0;
            var sY = 0;
            var pX = 0;
            var pY = 0;
            if ("detail" in e) {
                sY = e.detail;
            }
            if ("wheelDelta" in e) {
                sY = -e.wheelDelta / 120;
            }
            if ("wheelDeltaY" in e) {
                sY = -e.wheelDeltaY / 120;
            }
            if ("wheelDeltaX" in e) {
                sX = -e.wheelDeltaX / 120;
            }
            if ("axis" in e && e.axis === e.HORIZONTAL_AXIS) {
                sX = sY;
                sY = 0;
            }
            pX = sX * PIXEL_STEP;
            pY = sY * PIXEL_STEP;
            if ("deltaY" in e) {
                pY = e.deltaY;
            }
            if ("deltaX" in e) {
                pX = e.deltaX;
            }
            if ((pX || pY) && e.deltaMode) {
                if (e.deltaMode === 1) {
                    pX *= LINE_HEIGHT;
                    pY *= LINE_HEIGHT;
                } else {
                    pX *= PAGE_HEIGHT;
                    pY *= PAGE_HEIGHT;
                }
            }
            if (pX && !sX) {
                sX = pX < 1 ? -1 : 1;
            }
            if (pY && !sY) {
                sY = pY < 1 ? -1 : 1;
            }
            return { spinX: sX, spinY: sY, pixelX: pX, pixelY: pY };
        },
        handle: function handle(event) {
            var e = event;
            var swiper = this;
            var params = swiper.params.mousewheel;
            if (e.originalEvent) {
                e = e.originalEvent;
            }
            var delta = 0;
            var rtlFactor = swiper.rtl ? -1 : 1;
            var data = Mousewheel.normalize(e);
            if (params.forceToAxis) {
                if (swiper.isHorizontal()) {
                    if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) {
                        delta = data.pixelX * rtlFactor;
                    } else {
                        return !0;
                    }
                } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) {
                    delta = data.pixelY;
                } else {
                    return !0;
                }
            } else {
                delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;
            }
            if (delta === 0) {
                return !0;
            }
            if (params.invert) {
                delta = -delta;
            }
            if (!swiper.params.freeMode) {
                if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {
                    if (delta < 0) {
                        if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {
                            swiper.slideNext();
                            swiper.emit("scroll", e);
                        } else if (params.releaseOnEdges) {
                            return !0;
                        }
                    } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {
                        swiper.slidePrev();
                        swiper.emit("scroll", e);
                    } else if (params.releaseOnEdges) {
                        return !0;
                    }
                }
                swiper.mousewheel.lastScrollTime = new win.Date().getTime();
            } else {
                var position = swiper.getTranslate() + delta * params.sensitivity;
                var wasBeginning = swiper.isBeginning;
                var wasEnd = swiper.isEnd;
                if (position >= swiper.minTranslate()) {
                    position = swiper.minTranslate();
                }
                if (position <= swiper.maxTranslate()) {
                    position = swiper.maxTranslate();
                }
                swiper.setTransition(0);
                swiper.setTranslate(position);
                swiper.updateProgress();
                swiper.updateActiveIndex();
                swiper.updateSlidesClasses();
                if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {
                    swiper.updateSlidesClasses();
                }
                if (swiper.params.freeModeSticky) {
                    clearTimeout(swiper.mousewheel.timeout);
                    swiper.mousewheel.timeout = Utils.nextTick(function () {
                        swiper.slideReset();
                    }, 300);
                }
                swiper.emit("scroll", e);
                if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) {
                    swiper.stopAutoplay();
                }
                if (position === 0 || position === swiper.maxTranslate()) {
                    return !0;
                }
            }
            if (e.preventDefault) {
                e.preventDefault();
            } else {
                e.returnValue = !1;
            }
            return !1;
        },
        enable: function enable() {
            var swiper = this;
            if (!Mousewheel.event) {
                return !1;
            }
            if (swiper.mousewheel.enabled) {
                return !1;
            }
            var target = swiper.$el;
            if (swiper.params.mousewheel.eventsTarged !== "container") {
                target = $$1(swiper.params.mousewheel.eventsTarged);
            }
            target.on(Mousewheel.event, swiper.mousewheel.handle);
            swiper.mousewheel.enabled = !0;
            return !0;
        },
        disable: function disable() {
            var swiper = this;
            if (!Mousewheel.event) {
                return !1;
            }
            if (!swiper.mousewheel.enabled) {
                return !1;
            }
            var target = swiper.$el;
            if (swiper.params.mousewheel.eventsTarged !== "container") {
                target = $$1(swiper.params.mousewheel.eventsTarged);
            }
            target.off(Mousewheel.event, swiper.mousewheel.handle);
            swiper.mousewheel.enabled = !1;
            return !0;
        },
    };
    var Mousewheel$1 = {
        name: "mousewheel",
        params: { mousewheel: { enabled: !1, releaseOnEdges: !1, invert: !1, forceToAxis: !1, sensitivity: 1, eventsTarged: "container" } },
        create: function create() {
            var swiper = this;
            Utils.extend(swiper, { mousewheel: { enabled: !1, enable: Mousewheel.enable.bind(swiper), disable: Mousewheel.disable.bind(swiper), handle: Mousewheel.handle.bind(swiper), lastScrollTime: Utils.now() } });
        },
        on: {
            init: function init() {
                var swiper = this;
                if (swiper.params.mousewheel.enabled) {
                    swiper.mousewheel.enable();
                }
            },
            destroy: function destroy() {
                var swiper = this;
                if (swiper.mousewheel.enabled) {
                    swiper.mousewheel.disable();
                }
            },
        },
    };
    var Navigation = {
        update: function update() {
            var swiper = this;
            var params = swiper.params.navigation;
            if (swiper.params.loop) {
                return;
            }
            var ref = swiper.navigation;
            var $nextEl = ref.$nextEl;
            var $prevEl = ref.$prevEl;
            if ($prevEl && $prevEl.length > 0) {
                if (swiper.isBeginning) {
                    $prevEl.addClass(params.disabledClass);
                } else {
                    $prevEl.removeClass(params.disabledClass);
                }
                $prevEl[swiper.params.watchOverflow && swiper.isLocked ? "addClass" : "removeClass"](params.lockClass);
            }
            if ($nextEl && $nextEl.length > 0) {
                if (swiper.isEnd) {
                    $nextEl.addClass(params.disabledClass);
                } else {
                    $nextEl.removeClass(params.disabledClass);
                }
                $nextEl[swiper.params.watchOverflow && swiper.isLocked ? "addClass" : "removeClass"](params.lockClass);
            }
        },
        init: function init() {
            var swiper = this;
            var params = swiper.params.navigation;
            if (!(params.nextEl || params.prevEl)) {
                return;
            }
            var $nextEl;
            var $prevEl;
            if (params.nextEl) {
                $nextEl = $$1(params.nextEl);
                if (swiper.params.uniqueNavElements && typeof params.nextEl === "string" && $nextEl.length > 1 && swiper.$el.find(params.nextEl).length === 1) {
                    $nextEl = swiper.$el.find(params.nextEl);
                }
            }
            if (params.prevEl) {
                $prevEl = $$1(params.prevEl);
                if (swiper.params.uniqueNavElements && typeof params.prevEl === "string" && $prevEl.length > 1 && swiper.$el.find(params.prevEl).length === 1) {
                    $prevEl = swiper.$el.find(params.prevEl);
                }
            }
            if ($nextEl && $nextEl.length > 0) {
                $nextEl.on("click", function (e) {
                    e.preventDefault();
                    if (swiper.isEnd && !swiper.params.loop) {
                        return;
                    }
                    swiper.slideNext();
                });
            }
            if ($prevEl && $prevEl.length > 0) {
                $prevEl.on("click", function (e) {
                    e.preventDefault();
                    if (swiper.isBeginning && !swiper.params.loop) {
                        return;
                    }
                    swiper.slidePrev();
                });
            }
            Utils.extend(swiper.navigation, { $nextEl: $nextEl, nextEl: $nextEl && $nextEl[0], $prevEl: $prevEl, prevEl: $prevEl && $prevEl[0] });
        },
        destroy: function destroy() {
            var swiper = this;
            var ref = swiper.navigation;
            var $nextEl = ref.$nextEl;
            var $prevEl = ref.$prevEl;
            if ($nextEl && $nextEl.length) {
                $nextEl.off("click");
                $nextEl.removeClass(swiper.params.navigation.disabledClass);
            }
            if ($prevEl && $prevEl.length) {
                $prevEl.off("click");
                $prevEl.removeClass(swiper.params.navigation.disabledClass);
            }
        },
    };
    var Navigation$1 = {
        name: "navigation",
        params: { navigation: { nextEl: null, prevEl: null, hideOnClick: !1, disabledClass: "swiper-button-disabled", hiddenClass: "swiper-button-hidden", lockClass: "swiper-button-lock" } },
        create: function create() {
            var swiper = this;
            Utils.extend(swiper, { navigation: { init: Navigation.init.bind(swiper), update: Navigation.update.bind(swiper), destroy: Navigation.destroy.bind(swiper) } });
        },
        on: {
            init: function init() {
                var swiper = this;
                swiper.navigation.init();
                swiper.navigation.update();
            },
            toEdge: function toEdge() {
                var swiper = this;
                swiper.navigation.update();
            },
            fromEdge: function fromEdge() {
                var swiper = this;
                swiper.navigation.update();
            },
            destroy: function destroy() {
                var swiper = this;
                swiper.navigation.destroy();
            },
            click: function click(e) {
                var swiper = this;
                var ref = swiper.navigation;
                var $nextEl = ref.$nextEl;
                var $prevEl = ref.$prevEl;
                if (swiper.params.navigation.hideOnClick && !$$1(e.target).is($prevEl) && !$$1(e.target).is($nextEl)) {
                    if ($nextEl) {
                        $nextEl.toggleClass(swiper.params.navigation.hiddenClass);
                    }
                    if ($prevEl) {
                        $prevEl.toggleClass(swiper.params.navigation.hiddenClass);
                    }
                }
            },
        },
    };
    var Pagination = {
        update: function update() {
            var swiper = this;
            var rtl = swiper.rtl;
            var params = swiper.params.pagination;
            if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) {
                return;
            }
            var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;
            var $el = swiper.pagination.$el;
            var current;
            var total = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;
            if (swiper.params.loop) {
                current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);
                if (current > slidesLength - 1 - swiper.loopedSlides * 2) {
                    current -= slidesLength - swiper.loopedSlides * 2;
                }
                if (current > total - 1) {
                    current -= total;
                }
                if (current < 0 && swiper.params.paginationType !== "bullets") {
                    current = total + current;
                }
            } else if (typeof swiper.snapIndex !== "undefined") {
                current = swiper.snapIndex;
            } else {
                current = swiper.activeIndex || 0;
            }
            if (params.type === "bullets" && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {
                var bullets = swiper.pagination.bullets;
                if (params.dynamicBullets) {
                    swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? "outerWidth" : "outerHeight"](!0);
                    $el.css(swiper.isHorizontal() ? "width" : "height", swiper.pagination.bulletSize * 5 + "px");
                }
                bullets.removeClass(params.bulletActiveClass + " " + params.bulletActiveClass + "-next " + params.bulletActiveClass + "-next-next " + params.bulletActiveClass + "-prev " + params.bulletActiveClass + "-prev-prev");
                if ($el.length > 1) {
                    bullets.each(function (index, bullet) {
                        var $bullet = $$1(bullet);
                        if ($bullet.index() === current) {
                            $bullet.addClass(params.bulletActiveClass);
                            if (params.dynamicBullets) {
                                $bullet
                                    .prev()
                                    .addClass(params.bulletActiveClass + "-prev")
                                    .prev()
                                    .addClass(params.bulletActiveClass + "-prev-prev");
                                $bullet
                                    .next()
                                    .addClass(params.bulletActiveClass + "-next")
                                    .next()
                                    .addClass(params.bulletActiveClass + "-next-next");
                            }
                        }
                    });
                } else {
                    var $bullet = bullets.eq(current);
                    $bullet.addClass(params.bulletActiveClass);
                    if (params.dynamicBullets) {
                        $bullet
                            .prev()
                            .addClass(params.bulletActiveClass + "-prev")
                            .prev()
                            .addClass(params.bulletActiveClass + "-prev-prev");
                        $bullet
                            .next()
                            .addClass(params.bulletActiveClass + "-next")
                            .next()
                            .addClass(params.bulletActiveClass + "-next-next");
                    }
                }
                if (params.dynamicBullets) {
                    var dynamicBulletsLength = Math.min(bullets.length, 5);
                    var bulletsOffset = (swiper.pagination.bulletSize * dynamicBulletsLength - swiper.pagination.bulletSize) / 2 - current * swiper.pagination.bulletSize;
                    var offsetProp = rtl ? "right" : "left";
                    bullets.css(swiper.isHorizontal() ? offsetProp : "top", bulletsOffset + "px");
                }
            }
            if (params.type === "fraction") {
                $el.find("." + params.currentClass).text(current + 1);
                $el.find("." + params.totalClass).text(total);
            }
            if (params.type === "progressbar") {
                var scale = (current + 1) / total;
                var scaleX = scale;
                var scaleY = 1;
                if (!swiper.isHorizontal()) {
                    scaleY = scale;
                    scaleX = 1;
                }
                $el.find("." + params.progressbarFillClass)
                    .transform("translate3d(0,0,0) scaleX(" + scaleX + ") scaleY(" + scaleY + ")")
                    .transition(swiper.params.speed);
            }
            if (params.type === "custom" && params.renderCustom) {
                $el.html(params.renderCustom(swiper, current + 1, total));
                swiper.emit("paginationRender", swiper, $el[0]);
            } else {
                swiper.emit("paginationUpdate", swiper, $el[0]);
            }
            $el[swiper.params.watchOverflow && swiper.isLocked ? "addClass" : "removeClass"](params.lockClass);
        },
        render: function render() {
            var swiper = this;
            var params = swiper.params.pagination;
            if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) {
                return;
            }
            var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;
            var $el = swiper.pagination.$el;
            var paginationHTML = "";
            if (params.type === "bullets") {
                var numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;
                for (var i = 0; i < numberOfBullets; i += 1) {
                    if (params.renderBullet) {
                        paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);
                    } else {
                        paginationHTML += "<" + params.bulletElement + ' class="' + params.bulletClass + '"></' + params.bulletElement + ">";
                    }
                }
                $el.html(paginationHTML);
                swiper.pagination.bullets = $el.find("." + params.bulletClass);
            }
            if (params.type === "fraction") {
                if (params.renderFraction) {
                    paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);
                } else {
                    paginationHTML = '<span class="' + params.currentClass + '"></span>' + " / " + '<span class="' + params.totalClass + '"></span>';
                }
                $el.html(paginationHTML);
            }
            if (params.type === "progressbar") {
                if (params.renderProgressbar) {
                    paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);
                } else {
                    paginationHTML = '<span class="' + params.progressbarFillClass + '"></span>';
                }
                $el.html(paginationHTML);
            }
            if (params.type !== "custom") {
                swiper.emit("paginationRender", swiper.pagination.$el[0]);
            }
        },
        init: function init() {
            var swiper = this;
            var params = swiper.params.pagination;
            if (!params.el) {
                return;
            }
            var $el = $$1(params.el);
            if ($el.length === 0) {
                return;
            }
            if (swiper.params.uniqueNavElements && typeof params.el === "string" && $el.length > 1 && swiper.$el.find(params.el).length === 1) {
                $el = swiper.$el.find(params.el);
            }
            if (params.type === "bullets" && params.clickable) {
                $el.addClass(params.clickableClass);
            }
            $el.addClass(params.modifierClass + params.type);
            if (params.type === "bullets" && params.dynamicBullets) {
                $el.addClass("" + params.modifierClass + params.type + "-dynamic");
            }
            if (params.clickable) {
                $el.on("click", "." + params.bulletClass, function onClick(e) {
                    e.preventDefault();
                    var index = $$1(this).index() * swiper.params.slidesPerGroup;
                    if (swiper.params.loop) {
                        index += swiper.loopedSlides;
                    }
                    swiper.slideTo(index);
                });
            }
            Utils.extend(swiper.pagination, { $el: $el, el: $el[0] });
        },
        destroy: function destroy() {
            var swiper = this;
            var params = swiper.params.pagination;
            if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) {
                return;
            }
            var $el = swiper.pagination.$el;
            $el.removeClass(params.hiddenClass);
            $el.removeClass(params.modifierClass + params.type);
            if (swiper.pagination.bullets) {
                swiper.pagination.bullets.removeClass(params.bulletActiveClass);
            }
            if (params.clickable) {
                $el.off("click", "." + params.bulletClass);
            }
        },
    };
    var Pagination$1 = {
        name: "pagination",
        params: {
            pagination: {
                el: null,
                bulletElement: "span",
                clickable: !1,
                hideOnClick: !1,
                renderBullet: null,
                renderProgressbar: null,
                renderFraction: null,
                renderCustom: null,
                type: "bullets",
                dynamicBullets: !1,
                bulletClass: "swiper-pagination-bullet",
                bulletActiveClass: "swiper-pagination-bullet-active",
                modifierClass: "swiper-pagination-",
                currentClass: "swiper-pagination-current",
                totalClass: "swiper-pagination-total",
                hiddenClass: "swiper-pagination-hidden",
                progressbarFillClass: "swiper-pagination-progressbar-fill",
                clickableClass: "swiper-pagination-clickable",
                lockClass: "swiper-pagination-lock",
            },
        },
        create: function create() {
            var swiper = this;
            Utils.extend(swiper, { pagination: { init: Pagination.init.bind(swiper), render: Pagination.render.bind(swiper), update: Pagination.update.bind(swiper), destroy: Pagination.destroy.bind(swiper) } });
        },
        on: {
            init: function init() {
                var swiper = this;
                swiper.pagination.init();
                swiper.pagination.render();
                swiper.pagination.update();
            },
            activeIndexChange: function activeIndexChange() {
                var swiper = this;
                if (swiper.params.loop) {
                    swiper.pagination.update();
                } else if (typeof swiper.snapIndex === "undefined") {
                    swiper.pagination.update();
                }
            },
            snapIndexChange: function snapIndexChange() {
                var swiper = this;
                if (!swiper.params.loop) {
                    swiper.pagination.update();
                }
            },
            slidesLengthChange: function slidesLengthChange() {
                var swiper = this;
                if (swiper.params.loop) {
                    swiper.pagination.render();
                    swiper.pagination.update();
                }
            },
            snapGridLengthChange: function snapGridLengthChange() {
                var swiper = this;
                if (!swiper.params.loop) {
                    swiper.pagination.render();
                    swiper.pagination.update();
                }
            },
            destroy: function destroy() {
                var swiper = this;
                swiper.pagination.destroy();
            },
            click: function click(e) {
                var swiper = this;
                if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && swiper.pagination.$el.length > 0 && !$$1(e.target).hasClass(swiper.params.pagination.bulletClass)) {
                    swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);
                }
            },
        },
    };
    var Scrollbar = {
        setTranslate: function setTranslate() {
            var swiper = this;
            if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) {
                return;
            }
            var scrollbar = swiper.scrollbar;
            var rtl = swiper.rtl;
            var progress = swiper.progress;
            var dragSize = scrollbar.dragSize;
            var trackSize = scrollbar.trackSize;
            var $dragEl = scrollbar.$dragEl;
            var $el = scrollbar.$el;
            var params = swiper.params.scrollbar;
            var newSize = dragSize;
            var newPos = (trackSize - dragSize) * progress;
            if (rtl && swiper.isHorizontal()) {
                newPos = -newPos;
                if (newPos > 0) {
                    newSize = dragSize - newPos;
                    newPos = 0;
                } else if (-newPos + dragSize > trackSize) {
                    newSize = trackSize + newPos;
                }
            } else if (newPos < 0) {
                newSize = dragSize + newPos;
                newPos = 0;
            } else if (newPos + dragSize > trackSize) {
                newSize = trackSize - newPos;
            }
            if (swiper.isHorizontal()) {
                if (Support.transforms3d) {
                    $dragEl.transform("translate3d(" + newPos + "px, 0, 0)");
                } else {
                    $dragEl.transform("translateX(" + newPos + "px)");
                }
                $dragEl[0].style.width = newSize + "px";
            } else {
                if (Support.transforms3d) {
                    $dragEl.transform("translate3d(0px, " + newPos + "px, 0)");
                } else {
                    $dragEl.transform("translateY(" + newPos + "px)");
                }
                $dragEl[0].style.height = newSize + "px";
            }
            if (params.hide) {
                clearTimeout(swiper.scrollbar.timeout);
                $el[0].style.opacity = 1;
                swiper.scrollbar.timeout = setTimeout(function () {
                    $el[0].style.opacity = 0;
                    $el.transition(400);
                }, 1000);
            }
        },
        setTransition: function setTransition(duration) {
            var swiper = this;
            if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) {
                return;
            }
            swiper.scrollbar.$dragEl.transition(duration);
        },
        updateSize: function updateSize() {
            var swiper = this;
            if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) {
                return;
            }
            var scrollbar = swiper.scrollbar;
            var $dragEl = scrollbar.$dragEl;
            var $el = scrollbar.$el;
            $dragEl[0].style.width = "";
            $dragEl[0].style.height = "";
            var trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;
            var divider = swiper.size / swiper.virtualSize;
            var moveDivider = divider * (trackSize / swiper.size);
            var dragSize;
            if (swiper.params.scrollbar.dragSize === "auto") {
                dragSize = trackSize * divider;
            } else {
                dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);
            }
            if (swiper.isHorizontal()) {
                $dragEl[0].style.width = dragSize + "px";
            } else {
                $dragEl[0].style.height = dragSize + "px";
            }
            if (divider >= 1) {
                $el[0].style.display = "none";
            } else {
                $el[0].style.display = "";
            }
            if (swiper.params.scrollbarHide) {
                $el[0].style.opacity = 0;
            }
            Utils.extend(scrollbar, { trackSize: trackSize, divider: divider, moveDivider: moveDivider, dragSize: dragSize });
            scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? "addClass" : "removeClass"](swiper.params.scrollbar.lockClass);
        },
        setDragPosition: function setDragPosition(e) {
            var swiper = this;
            var scrollbar = swiper.scrollbar;
            var $el = scrollbar.$el;
            var dragSize = scrollbar.dragSize;
            var trackSize = scrollbar.trackSize;
            var pointerPosition;
            if (swiper.isHorizontal()) {
                pointerPosition = e.type === "touchstart" || e.type === "touchmove" ? e.targetTouches[0].pageX : e.pageX || e.clientX;
            } else {
                pointerPosition = e.type === "touchstart" || e.type === "touchmove" ? e.targetTouches[0].pageY : e.pageY || e.clientY;
            }
            var positionRatio;
            positionRatio = (pointerPosition - $el.offset()[swiper.isHorizontal() ? "left" : "top"] - dragSize / 2) / (trackSize - dragSize);
            positionRatio = Math.max(Math.min(positionRatio, 1), 0);
            if (swiper.rtl) {
                positionRatio = 1 - positionRatio;
            }
            var position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;
            swiper.updateProgress(position);
            swiper.setTranslate(position);
            swiper.updateActiveIndex();
            swiper.updateSlidesClasses();
        },
        onDragStart: function onDragStart(e) {
            var swiper = this;
            var params = swiper.params.scrollbar;
            var scrollbar = swiper.scrollbar;
            var $wrapperEl = swiper.$wrapperEl;
            var $el = scrollbar.$el;
            var $dragEl = scrollbar.$dragEl;
            swiper.scrollbar.isTouched = !0;
            e.preventDefault();
            e.stopPropagation();
            $wrapperEl.transition(100);
            $dragEl.transition(100);
            scrollbar.setDragPosition(e);
            clearTimeout(swiper.scrollbar.dragTimeout);
            $el.transition(0);
            if (params.hide) {
                $el.css("opacity", 1);
            }
            swiper.emit("scrollbarDragStart", e);
        },
        onDragMove: function onDragMove(e) {
            var swiper = this;
            var scrollbar = swiper.scrollbar;
            var $wrapperEl = swiper.$wrapperEl;
            var $el = scrollbar.$el;
            var $dragEl = scrollbar.$dragEl;
            if (!swiper.scrollbar.isTouched) {
                return;
            }
            if (e.preventDefault) {
                e.preventDefault();
            } else {
                e.returnValue = !1;
            }
            scrollbar.setDragPosition(e);
            $wrapperEl.transition(0);
            $el.transition(0);
            $dragEl.transition(0);
            swiper.emit("scrollbarDragMove", e);
        },
        onDragEnd: function onDragEnd(e) {
            var swiper = this;
            var params = swiper.params.scrollbar;
            var scrollbar = swiper.scrollbar;
            var $el = scrollbar.$el;
            if (!swiper.scrollbar.isTouched) {
                return;
            }
            swiper.scrollbar.isTouched = !1;
            if (params.hide) {
                clearTimeout(swiper.scrollbar.dragTimeout);
                swiper.scrollbar.dragTimeout = Utils.nextTick(function () {
                    $el.css("opacity", 0);
                    $el.transition(400);
                }, 1000);
            }
            swiper.emit("scrollbarDragEnd", e);
            if (params.snapOnRelease) {
                swiper.slideReset();
            }
        },
        enableDraggable: function enableDraggable() {
            var swiper = this;
            if (!swiper.params.scrollbar.el) {
                return;
            }
            var scrollbar = swiper.scrollbar;
            var $el = scrollbar.$el;
            var target = Support.touch ? $el[0] : document;
            $el.on(swiper.scrollbar.dragEvents.start, swiper.scrollbar.onDragStart);
            $$1(target).on(swiper.scrollbar.dragEvents.move, swiper.scrollbar.onDragMove);
            $$1(target).on(swiper.scrollbar.dragEvents.end, swiper.scrollbar.onDragEnd);
        },
        disableDraggable: function disableDraggable() {
            var swiper = this;
            if (!swiper.params.scrollbar.el) {
                return;
            }
            var scrollbar = swiper.scrollbar;
            var $el = scrollbar.$el;
            var target = Support.touch ? $el[0] : document;
            $el.off(swiper.scrollbar.dragEvents.start);
            $$1(target).off(swiper.scrollbar.dragEvents.move);
            $$1(target).off(swiper.scrollbar.dragEvents.end);
        },
        init: function init() {
            var swiper = this;
            if (!swiper.params.scrollbar.el) {
                return;
            }
            var scrollbar = swiper.scrollbar;
            var $swiperEl = swiper.$el;
            var touchEvents = swiper.touchEvents;
            var params = swiper.params.scrollbar;
            var $el = $$1(params.el);
            if (swiper.params.uniqueNavElements && typeof params.el === "string" && $el.length > 1 && $swiperEl.find(params.el).length === 1) {
                $el = $swiperEl.find(params.el);
            }
            var $dragEl = $el.find(".swiper-scrollbar-drag");
            if ($dragEl.length === 0) {
                $dragEl = $$1('<div class="swiper-scrollbar-drag"></div>');
                $el.append($dragEl);
            }
            swiper.scrollbar.dragEvents = (function dragEvents() {
                if (swiper.params.simulateTouch === !1 && !Support.touch) {
                    return { start: "mousedown", move: "mousemove", end: "mouseup" };
                }
                return touchEvents;
            })();
            Utils.extend(scrollbar, { $el: $el, el: $el[0], $dragEl: $dragEl, dragEl: $dragEl[0] });
            if (params.draggable) {
                scrollbar.enableDraggable();
            }
        },
        destroy: function destroy() {
            var swiper = this;
            swiper.scrollbar.disableDraggable();
        },
    };
    var Scrollbar$1 = {
        name: "scrollbar",
        params: { scrollbar: { el: null, dragSize: "auto", hide: !1, draggable: !1, snapOnRelease: !0, lockClass: "swiper-scrollbar-lock" } },
        create: function create() {
            var swiper = this;
            Utils.extend(swiper, {
                scrollbar: {
                    init: Scrollbar.init.bind(swiper),
                    destroy: Scrollbar.destroy.bind(swiper),
                    updateSize: Scrollbar.updateSize.bind(swiper),
                    setTranslate: Scrollbar.setTranslate.bind(swiper),
                    setTransition: Scrollbar.setTransition.bind(swiper),
                    enableDraggable: Scrollbar.enableDraggable.bind(swiper),
                    disableDraggable: Scrollbar.disableDraggable.bind(swiper),
                    setDragPosition: Scrollbar.setDragPosition.bind(swiper),
                    onDragStart: Scrollbar.onDragStart.bind(swiper),
                    onDragMove: Scrollbar.onDragMove.bind(swiper),
                    onDragEnd: Scrollbar.onDragEnd.bind(swiper),
                    isTouched: !1,
                    timeout: null,
                    dragTimeout: null,
                },
            });
        },
        on: {
            init: function init() {
                var swiper = this;
                swiper.scrollbar.init();
                swiper.scrollbar.updateSize();
                swiper.scrollbar.setTranslate();
            },
            update: function update() {
                var swiper = this;
                swiper.scrollbar.updateSize();
            },
            resize: function resize() {
                var swiper = this;
                swiper.scrollbar.updateSize();
            },
            observerUpdate: function observerUpdate() {
                var swiper = this;
                swiper.scrollbar.updateSize();
            },
            setTranslate: function setTranslate() {
                var swiper = this;
                swiper.scrollbar.setTranslate();
            },
            setTransition: function setTransition(duration) {
                var swiper = this;
                swiper.scrollbar.setTransition(duration);
            },
            destroy: function destroy() {
                var swiper = this;
                swiper.scrollbar.destroy();
            },
        },
    };
    var Parallax = {
        setTransform: function setTransform(el, progress) {
            var swiper = this;
            var rtl = swiper.rtl;
            var $el = $$1(el);
            var rtlFactor = rtl ? -1 : 1;
            var p = $el.attr("data-swiper-parallax") || "0";
            var x = $el.attr("data-swiper-parallax-x");
            var y = $el.attr("data-swiper-parallax-y");
            var scale = $el.attr("data-swiper-parallax-scale");
            var opacity = $el.attr("data-swiper-parallax-opacity");
            if (x || y) {
                x = x || "0";
                y = y || "0";
            } else if (swiper.isHorizontal()) {
                x = p;
                y = "0";
            } else {
                y = p;
                x = "0";
            }
            if (x.indexOf("%") >= 0) {
                x = parseInt(x, 10) * progress * rtlFactor + "%";
            } else {
                x = x * progress * rtlFactor + "px";
            }
            if (y.indexOf("%") >= 0) {
                y = parseInt(y, 10) * progress + "%";
            } else {
                y = y * progress + "px";
            }
            if (typeof opacity !== "undefined" && opacity !== null) {
                var currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));
                $el[0].style.opacity = currentOpacity;
            }
            if (typeof scale === "undefined" || scale === null) {
                $el.transform("translate3d(" + x + ", " + y + ", 0px)");
            } else {
                var currentScale = scale - (scale - 1) * (1 - Math.abs(progress));
                $el.transform("translate3d(" + x + ", " + y + ", 0px) scale(" + currentScale + ")");
            }
        },
        setTranslate: function setTranslate() {
            var swiper = this;
            var $el = swiper.$el;
            var slides = swiper.slides;
            var progress = swiper.progress;
            var snapGrid = swiper.snapGrid;
            $el.children("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function (index, el) {
                swiper.parallax.setTransform(el, progress);
            });
            slides.each(function (slideIndex, slideEl) {
                var slideProgress = slideEl.progress;
                if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== "auto") {
                    slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);
                }
                slideProgress = Math.min(Math.max(slideProgress, -1), 1);
                $$1(slideEl)
                    .find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]")
                    .each(function (index, el) {
                        swiper.parallax.setTransform(el, slideProgress);
                    });
            });
        },
        setTransition: function setTransition(duration) {
            if (duration === void 0) duration = this.params.speed;
            var swiper = this;
            var $el = swiper.$el;
            $el.find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function (index, parallaxEl) {
                var $parallaxEl = $$1(parallaxEl);
                var parallaxDuration = parseInt($parallaxEl.attr("data-swiper-parallax-duration"), 10) || duration;
                if (duration === 0) {
                    parallaxDuration = 0;
                }
                $parallaxEl.transition(parallaxDuration);
            });
        },
    };
    var Parallax$1 = {
        name: "parallax",
        params: { parallax: { enabled: !1 } },
        create: function create() {
            var swiper = this;
            Utils.extend(swiper, { parallax: { setTransform: Parallax.setTransform.bind(swiper), setTranslate: Parallax.setTranslate.bind(swiper), setTransition: Parallax.setTransition.bind(swiper) } });
        },
        on: {
            beforeInit: function beforeInit() {
                var swiper = this;
                swiper.params.watchSlidesProgress = !0;
            },
            init: function init() {
                var swiper = this;
                if (!swiper.params.parallax) {
                    return;
                }
                swiper.parallax.setTranslate();
            },
            setTranslate: function setTranslate() {
                var swiper = this;
                if (!swiper.params.parallax) {
                    return;
                }
                swiper.parallax.setTranslate();
            },
            setTransition: function setTransition(duration) {
                var swiper = this;
                if (!swiper.params.parallax) {
                    return;
                }
                swiper.parallax.setTransition(duration);
            },
        },
    };
    var Zoom = {
        getDistanceBetweenTouches: function getDistanceBetweenTouches(e) {
            if (e.targetTouches.length < 2) {
                return 1;
            }
            var x1 = e.targetTouches[0].pageX;
            var y1 = e.targetTouches[0].pageY;
            var x2 = e.targetTouches[1].pageX;
            var y2 = e.targetTouches[1].pageY;
            var distance = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));
            return distance;
        },
        onGestureStart: function onGestureStart(e) {
            var swiper = this;
            var params = swiper.params.zoom;
            var zoom = swiper.zoom;
            var gesture = zoom.gesture;
            zoom.fakeGestureTouched = !1;
            zoom.fakeGestureMoved = !1;
            if (!Support.gestures) {
                if (e.type !== "touchstart" || (e.type === "touchstart" && e.targetTouches.length < 2)) {
                    return;
                }
                zoom.fakeGestureTouched = !0;
                gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);
            }
            if (!gesture.$slideEl || !gesture.$slideEl.length) {
                gesture.$slideEl = $$1(this);
                if (gesture.$slideEl.length === 0) {
                    gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);
                }
                gesture.$imageEl = gesture.$slideEl.find("img, svg, canvas");
                gesture.$imageWrapEl = gesture.$imageEl.parent("." + params.containerClass);
                gesture.maxRatio = gesture.$imageWrapEl.attr("data-swiper-zoom") || params.maxRatio;
                if (gesture.$imageWrapEl.length === 0) {
                    gesture.$imageEl = undefined;
                    return;
                }
            }
            gesture.$imageEl.transition(0);
            swiper.zoom.isScaling = !0;
        },
        onGestureChange: function onGestureChange(e) {
            var swiper = this;
            var params = swiper.params.zoom;
            var zoom = swiper.zoom;
            var gesture = zoom.gesture;
            if (!Support.gestures) {
                if (e.type !== "touchmove" || (e.type === "touchmove" && e.targetTouches.length < 2)) {
                    return;
                }
                zoom.fakeGestureMoved = !0;
                gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);
            }
            if (!gesture.$imageEl || gesture.$imageEl.length === 0) {
                return;
            }
            if (Support.gestures) {
                swiper.zoom.scale = e.scale * zoom.currentScale;
            } else {
                zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;
            }
            if (zoom.scale > gesture.maxRatio) {
                zoom.scale = gesture.maxRatio - 1 + Math.pow(zoom.scale - gesture.maxRatio + 1, 0.5);
            }
            if (zoom.scale < params.minRatio) {
                zoom.scale = params.minRatio + 1 - Math.pow(params.minRatio - zoom.scale + 1, 0.5);
            }
            gesture.$imageEl.transform("translate3d(0,0,0) scale(" + zoom.scale + ")");
        },
        onGestureEnd: function onGestureEnd(e) {
            var swiper = this;
            var params = swiper.params.zoom;
            var zoom = swiper.zoom;
            var gesture = zoom.gesture;
            if (!Support.gestures) {
                if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {
                    return;
                }
                if (e.type !== "touchend" || (e.type === "touchend" && e.changedTouches.length < 2 && !Device.android)) {
                    return;
                }
                zoom.fakeGestureTouched = !1;
                zoom.fakeGestureMoved = !1;
            }
            if (!gesture.$imageEl || gesture.$imageEl.length === 0) {
                return;
            }
            zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);
            gesture.$imageEl.transition(swiper.params.speed).transform("translate3d(0,0,0) scale(" + zoom.scale + ")");
            zoom.currentScale = zoom.scale;
            zoom.isScaling = !1;
            if (zoom.scale === 1) {
                gesture.$slideEl = undefined;
            }
        },
        onTouchStart: function onTouchStart(e) {
            var swiper = this;
            var zoom = swiper.zoom;
            var gesture = zoom.gesture;
            var image = zoom.image;
            if (!gesture.$imageEl || gesture.$imageEl.length === 0) {
                return;
            }
            if (image.isTouched) {
                return;
            }
            if (Device.android) {
                e.preventDefault();
            }
            image.isTouched = !0;
            image.touchesStart.x = e.type === "touchstart" ? e.targetTouches[0].pageX : e.pageX;
            image.touchesStart.y = e.type === "touchstart" ? e.targetTouches[0].pageY : e.pageY;
        },
        onTouchMove: function onTouchMove(e) {
            var swiper = this;
            var zoom = swiper.zoom;
            var gesture = zoom.gesture;
            var image = zoom.image;
            var velocity = zoom.velocity;
            if (!gesture.$imageEl || gesture.$imageEl.length === 0) {
                return;
            }
            swiper.allowClick = !1;
            if (!image.isTouched || !gesture.$slideEl) {
                return;
            }
            if (!image.isMoved) {
                image.width = gesture.$imageEl[0].offsetWidth;
                image.height = gesture.$imageEl[0].offsetHeight;
                image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], "x") || 0;
                image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], "y") || 0;
                gesture.slideWidth = gesture.$slideEl[0].offsetWidth;
                gesture.slideHeight = gesture.$slideEl[0].offsetHeight;
                gesture.$imageWrapEl.transition(0);
                if (swiper.rtl) {
                    image.startX = -image.startX;
                }
                if (swiper.rtl) {
                    image.startY = -image.startY;
                }
            }
            var scaledWidth = image.width * zoom.scale;
            var scaledHeight = image.height * zoom.scale;
            if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) {
                return;
            }
            image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);
            image.maxX = -image.minX;
            image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);
            image.maxY = -image.minY;
            image.touchesCurrent.x = e.type === "touchmove" ? e.targetTouches[0].pageX : e.pageX;
            image.touchesCurrent.y = e.type === "touchmove" ? e.targetTouches[0].pageY : e.pageY;
            if (!image.isMoved && !zoom.isScaling) {
                if (
                    swiper.isHorizontal() &&
                    ((Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x) || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x))
                ) {
                    image.isTouched = !1;
                    return;
                } else if (
                    !swiper.isHorizontal() &&
                    ((Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y) || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y))
                ) {
                    image.isTouched = !1;
                    return;
                }
            }
            e.preventDefault();
            e.stopPropagation();
            image.isMoved = !0;
            image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX;
            image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY;
            if (image.currentX < image.minX) {
                image.currentX = image.minX + 1 - Math.pow(image.minX - image.currentX + 1, 0.8);
            }
            if (image.currentX > image.maxX) {
                image.currentX = image.maxX - 1 + Math.pow(image.currentX - image.maxX + 1, 0.8);
            }
            if (image.currentY < image.minY) {
                image.currentY = image.minY + 1 - Math.pow(image.minY - image.currentY + 1, 0.8);
            }
            if (image.currentY > image.maxY) {
                image.currentY = image.maxY - 1 + Math.pow(image.currentY - image.maxY + 1, 0.8);
            }
            if (!velocity.prevPositionX) {
                velocity.prevPositionX = image.touchesCurrent.x;
            }
            if (!velocity.prevPositionY) {
                velocity.prevPositionY = image.touchesCurrent.y;
            }
            if (!velocity.prevTime) {
                velocity.prevTime = Date.now();
            }
            velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;
            velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;
            if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) {
                velocity.x = 0;
            }
            if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) {
                velocity.y = 0;
            }
            velocity.prevPositionX = image.touchesCurrent.x;
            velocity.prevPositionY = image.touchesCurrent.y;
            velocity.prevTime = Date.now();
            gesture.$imageWrapEl.transform("translate3d(" + image.currentX + "px, " + image.currentY + "px,0)");
        },
        onTouchEnd: function onTouchEnd() {
            var swiper = this;
            var zoom = swiper.zoom;
            var gesture = zoom.gesture;
            var image = zoom.image;
            var velocity = zoom.velocity;
            if (!gesture.$imageEl || gesture.$imageEl.length === 0) {
                return;
            }
            if (!image.isTouched || !image.isMoved) {
                image.isTouched = !1;
                image.isMoved = !1;
                return;
            }
            image.isTouched = !1;
            image.isMoved = !1;
            var momentumDurationX = 300;
            var momentumDurationY = 300;
            var momentumDistanceX = velocity.x * momentumDurationX;
            var newPositionX = image.currentX + momentumDistanceX;
            var momentumDistanceY = velocity.y * momentumDurationY;
            var newPositionY = image.currentY + momentumDistanceY;
            if (velocity.x !== 0) {
                momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);
            }
            if (velocity.y !== 0) {
                momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);
            }
            var momentumDuration = Math.max(momentumDurationX, momentumDurationY);
            image.currentX = newPositionX;
            image.currentY = newPositionY;
            var scaledWidth = image.width * zoom.scale;
            var scaledHeight = image.height * zoom.scale;
            image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);
            image.maxX = -image.minX;
            image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);
            image.maxY = -image.minY;
            image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);
            image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);
            gesture.$imageWrapEl.transition(momentumDuration).transform("translate3d(" + image.currentX + "px, " + image.currentY + "px,0)");
        },
        onTransitionEnd: function onTransitionEnd() {
            var swiper = this;
            var zoom = swiper.zoom;
            var gesture = zoom.gesture;
            if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {
                gesture.$imageEl.transform("translate3d(0,0,0) scale(1)");
                gesture.$imageWrapEl.transform("translate3d(0,0,0)");
                gesture.$slideEl = undefined;
                gesture.$imageEl = undefined;
                gesture.$imageWrapEl = undefined;
                zoom.scale = 1;
                zoom.currentScale = 1;
            }
        },
        toggle: function toggle(e) {
            var swiper = this;
            var zoom = swiper.zoom;
            if (zoom.scale && zoom.scale !== 1) {
                zoom.out();
            } else {
                zoom.in(e);
            }
        },
        in: function in$1(e) {
            var swiper = this;
            var zoom = swiper.zoom;
            var params = swiper.params.zoom;
            var gesture = zoom.gesture;
            var image = zoom.image;
            if (!gesture.$slideEl) {
                gesture.$slideEl = swiper.clickedSlide ? $$1(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);
                gesture.$imageEl = gesture.$slideEl.find("img, svg, canvas");
                gesture.$imageWrapEl = gesture.$imageEl.parent("." + params.containerClass);
            }
            if (!gesture.$imageEl || gesture.$imageEl.length === 0) {
                return;
            }
            gesture.$slideEl.addClass("" + params.zoomedSlideClass);
            var touchX;
            var touchY;
            var offsetX;
            var offsetY;
            var diffX;
            var diffY;
            var translateX;
            var translateY;
            var imageWidth;
            var imageHeight;
            var scaledWidth;
            var scaledHeight;
            var translateMinX;
            var translateMinY;
            var translateMaxX;
            var translateMaxY;
            var slideWidth;
            var slideHeight;
            if (typeof image.touchesStart.x === "undefined" && e) {
                touchX = e.type === "touchend" ? e.changedTouches[0].pageX : e.pageX;
                touchY = e.type === "touchend" ? e.changedTouches[0].pageY : e.pageY;
            } else {
                touchX = image.touchesStart.x;
                touchY = image.touchesStart.y;
            }
            zoom.scale = gesture.$imageWrapEl.attr("data-swiper-zoom") || params.maxRatio;
            zoom.currentScale = gesture.$imageWrapEl.attr("data-swiper-zoom") || params.maxRatio;
            if (e) {
                slideWidth = gesture.$slideEl[0].offsetWidth;
                slideHeight = gesture.$slideEl[0].offsetHeight;
                offsetX = gesture.$slideEl.offset().left;
                offsetY = gesture.$slideEl.offset().top;
                diffX = offsetX + slideWidth / 2 - touchX;
                diffY = offsetY + slideHeight / 2 - touchY;
                imageWidth = gesture.$imageEl[0].offsetWidth;
                imageHeight = gesture.$imageEl[0].offsetHeight;
                scaledWidth = imageWidth * zoom.scale;
                scaledHeight = imageHeight * zoom.scale;
                translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);
                translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);
                translateMaxX = -translateMinX;
                translateMaxY = -translateMinY;
                translateX = diffX * zoom.scale;
                translateY = diffY * zoom.scale;
                if (translateX < translateMinX) {
                    translateX = translateMinX;
                }
                if (translateX > translateMaxX) {
                    translateX = translateMaxX;
                }
                if (translateY < translateMinY) {
                    translateY = translateMinY;
                }
                if (translateY > translateMaxY) {
                    translateY = translateMaxY;
                }
            } else {
                translateX = 0;
                translateY = 0;
            }
            gesture.$imageWrapEl.transition(300).transform("translate3d(" + translateX + "px, " + translateY + "px,0)");
            gesture.$imageEl.transition(300).transform("translate3d(0,0,0) scale(" + zoom.scale + ")");
        },
        out: function out() {
            var swiper = this;
            var zoom = swiper.zoom;
            var params = swiper.params.zoom;
            var gesture = zoom.gesture;
            if (!gesture.$slideEl) {
                gesture.$slideEl = swiper.clickedSlide ? $$1(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);
                gesture.$imageEl = gesture.$slideEl.find("img, svg, canvas");
                gesture.$imageWrapEl = gesture.$imageEl.parent("." + params.containerClass);
            }
            if (!gesture.$imageEl || gesture.$imageEl.length === 0) {
                return;
            }
            zoom.scale = 1;
            zoom.currentScale = 1;
            gesture.$imageWrapEl.transition(300).transform("translate3d(0,0,0)");
            gesture.$imageEl.transition(300).transform("translate3d(0,0,0) scale(1)");
            gesture.$slideEl.removeClass("" + params.zoomedSlideClass);
            gesture.$slideEl = undefined;
        },
        enable: function enable() {
            var swiper = this;
            var zoom = swiper.zoom;
            if (zoom.enabled) {
                return;
            }
            zoom.enabled = !0;
            var slides = swiper.slides;
            var passiveListener = swiper.touchEvents.start === "touchstart" && Support.passiveListener && swiper.params.passiveListeners ? { passive: !0, capture: !1 } : !1;
            if (Support.gestures) {
                slides.on("gesturestart", zoom.onGestureStart, passiveListener);
                slides.on("gesturechange", zoom.onGestureChange, passiveListener);
                slides.on("gestureend", zoom.onGestureEnd, passiveListener);
            } else if (swiper.touchEvents.start === "touchstart") {
                slides.on(swiper.touchEvents.start, zoom.onGestureStart, passiveListener);
                slides.on(swiper.touchEvents.move, zoom.onGestureChange, passiveListener);
                slides.on(swiper.touchEvents.end, zoom.onGestureEnd, passiveListener);
            }
            swiper.slides.each(function (index, slideEl) {
                var $slideEl = $$1(slideEl);
                if ($slideEl.find("." + swiper.params.zoom.containerClass).length > 0) {
                    $slideEl.on(swiper.touchEvents.move, zoom.onTouchMove);
                }
            });
        },
        disable: function disable() {
            var swiper = this;
            var zoom = swiper.zoom;
            if (!zoom.enabled) {
                return;
            }
            swiper.zoom.enabled = !1;
            var slides = swiper.slides;
            var passiveListener = swiper.touchEvents.start === "touchstart" && Support.passiveListener && swiper.params.passiveListeners ? { passive: !0, capture: !1 } : !1;
            if (Support.gestures) {
                slides.off("gesturestart", zoom.onGestureStart, passiveListener);
                slides.off("gesturechange", zoom.onGestureChange, passiveListener);
                slides.off("gestureend", zoom.onGestureEnd, passiveListener);
            } else if (swiper.touchEvents.start === "touchstart") {
                slides.off(swiper.touchEvents.start, zoom.onGestureStart, passiveListener);
                slides.off(swiper.touchEvents.move, zoom.onGestureChange, passiveListener);
                slides.off(swiper.touchEvents.end, zoom.onGestureEnd, passiveListener);
            }
            swiper.slides.each(function (index, slideEl) {
                var $slideEl = $$1(slideEl);
                if ($slideEl.find("." + swiper.params.zoom.containerClass).length > 0) {
                    $slideEl.off(swiper.touchEvents.move, zoom.onTouchMove);
                }
            });
        },
    };
    var Zoom$1 = {
        name: "zoom",
        params: { zoom: { enabled: !1, maxRatio: 3, minRatio: 1, toggle: !0, containerClass: "swiper-zoom-container", zoomedSlideClass: "swiper-slide-zoomed" } },
        create: function create() {
            var swiper = this;
            var zoom = {
                enabled: !1,
                scale: 1,
                currentScale: 1,
                isScaling: !1,
                gesture: { $slideEl: undefined, slideWidth: undefined, slideHeight: undefined, $imageEl: undefined, $imageWrapEl: undefined, maxRatio: 3 },
                image: {
                    isTouched: undefined,
                    isMoved: undefined,
                    currentX: undefined,
                    currentY: undefined,
                    minX: undefined,
                    minY: undefined,
                    maxX: undefined,
                    maxY: undefined,
                    width: undefined,
                    height: undefined,
                    startX: undefined,
                    startY: undefined,
                    touchesStart: {},
                    touchesCurrent: {},
                },
                velocity: { x: undefined, y: undefined, prevPositionX: undefined, prevPositionY: undefined, prevTime: undefined },
            };
            "onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out".split(" ").forEach(function (methodName) {
                zoom[methodName] = Zoom[methodName].bind(swiper);
            });
            Utils.extend(swiper, { zoom: zoom });
        },
        on: {
            init: function init() {
                var swiper = this;
                if (swiper.params.zoom.enabled) {
                    swiper.zoom.enable();
                }
            },
            destroy: function destroy() {
                var swiper = this;
                swiper.zoom.disable();
            },
            touchStart: function touchStart(e) {
                var swiper = this;
                if (!swiper.zoom.enabled) {
                    return;
                }
                swiper.zoom.onTouchStart(e);
            },
            touchEnd: function touchEnd(e) {
                var swiper = this;
                if (!swiper.zoom.enabled) {
                    return;
                }
                swiper.zoom.onTouchEnd(e);
            },
            doubleTap: function doubleTap(e) {
                var swiper = this;
                if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {
                    swiper.zoom.toggle(e);
                }
            },
            transitionEnd: function transitionEnd() {
                var swiper = this;
                if (swiper.zoom.enabled && swiper.params.zoom.enabled) {
                    swiper.zoom.onTransitionEnd();
                }
            },
        },
    };
    var Lazy = {
        loadInSlide: function loadInSlide(index, loadInDuplicate) {
            if (loadInDuplicate === void 0) loadInDuplicate = !0;
            var swiper = this;
            var params = swiper.params.lazy;
            if (typeof index === "undefined") {
                return;
            }
            if (swiper.slides.length === 0) {
                return;
            }
            var isVirtual = swiper.virtual && swiper.params.virtual.enabled;
            var $slideEl = isVirtual ? swiper.$wrapperEl.children("." + swiper.params.slideClass + '[data-swiper-slide-index="' + index + '"]') : swiper.slides.eq(index);
            var $images = $slideEl.find("." + params.elementClass + ":not(." + params.loadedClass + "):not(." + params.loadingClass + ")");
            if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {
                $images = $images.add($slideEl[0]);
            }
            if ($images.length === 0) {
                return;
            }
            $images.each(function (imageIndex, imageEl) {
                var $imageEl = $$1(imageEl);
                $imageEl.addClass(params.loadingClass);
                var background = $imageEl.attr("data-background");
                var src = $imageEl.attr("data-src");
                var srcset = $imageEl.attr("data-srcset");
                var sizes = $imageEl.attr("data-sizes");
                swiper.loadImage($imageEl[0], src || background, srcset, sizes, !1, function () {
                    if (typeof swiper === "undefined" || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) {
                        return;
                    }
                    if (background) {
                        $imageEl.css("background-image", 'url("' + background + '")');
                        $imageEl.removeAttr("data-background");
                    } else {
                        if (srcset) {
                            $imageEl.attr("srcset", srcset);
                            $imageEl.removeAttr("data-srcset");
                        }
                        if (sizes) {
                            $imageEl.attr("sizes", sizes);
                            $imageEl.removeAttr("data-sizes");
                        }
                        if (src) {
                            $imageEl.attr("src", src);
                            $imageEl.removeAttr("data-src");
                        }
                    }
                    $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);
                    $slideEl.find("." + params.preloaderClass).remove();
                    if (swiper.params.loop && loadInDuplicate) {
                        var slideOriginalIndex = $slideEl.attr("data-swiper-slide-index");
                        if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {
                            var originalSlide = swiper.$wrapperEl.children('[data-swiper-slide-index="' + slideOriginalIndex + '"]:not(.' + swiper.params.slideDuplicateClass + ")");
                            swiper.lazy.loadInSlide(originalSlide.index(), !1);
                        } else {
                            var duplicatedSlide = swiper.$wrapperEl.children("." + swiper.params.slideDuplicateClass + '[data-swiper-slide-index="' + slideOriginalIndex + '"]');
                            swiper.lazy.loadInSlide(duplicatedSlide.index(), !1);
                        }
                    }
                    swiper.emit("lazyImageReady", $slideEl[0], $imageEl[0]);
                });
                swiper.emit("lazyImageLoad", $slideEl[0], $imageEl[0]);
            });
        },
        load: function load() {
            var swiper = this;
            var $wrapperEl = swiper.$wrapperEl;
            var swiperParams = swiper.params;
            var slides = swiper.slides;
            var activeIndex = swiper.activeIndex;
            var isVirtual = swiper.virtual && swiperParams.virtual.enabled;
            var params = swiperParams.lazy;
            var slidesPerView = swiperParams.slidesPerView;
            if (slidesPerView === "auto") {
                slidesPerView = 0;
            }
            function slideExist(index) {
                if (isVirtual) {
                    if ($wrapperEl.children("." + swiperParams.slideClass + '[data-swiper-slide-index="' + index + '"]').length) {
                        return !0;
                    }
                } else if (slides[index]) {
                    return !0;
                }
                return !1;
            }
            function slideIndex(slideEl) {
                if (isVirtual) {
                    return $$1(slideEl).attr("data-swiper-slide-index");
                }
                return $$1(slideEl).index();
            }
            if (!swiper.lazy.initialImageLoaded) {
                swiper.lazy.initialImageLoaded = !0;
            }
            if (swiper.params.watchSlidesVisibility) {
                $wrapperEl.children("." + swiperParams.slideVisibleClass).each(function (elIndex, slideEl) {
                    var index = isVirtual ? $$1(slideEl).attr("data-swiper-slide-index") : $$1(slideEl).index();
                    swiper.lazy.loadInSlide(index);
                });
            } else if (slidesPerView > 1) {
                for (var i = activeIndex; i < activeIndex + slidesPerView; i += 1) {
                    if (slideExist(i)) {
                        swiper.lazy.loadInSlide(i);
                    }
                }
            } else {
                swiper.lazy.loadInSlide(activeIndex);
            }
            if (params.loadPrevNext) {
                if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {
                    var amount = params.loadPrevNextAmount;
                    var spv = slidesPerView;
                    var maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);
                    var minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);
                    for (var i$1 = activeIndex + slidesPerView; i$1 < maxIndex; i$1 += 1) {
                        if (slideExist(i$1)) {
                            swiper.lazy.loadInSlide(i$1);
                        }
                    }
                    for (var i$2 = minIndex; i$2 < activeIndex; i$2 += 1) {
                        if (slideExist(i$2)) {
                            swiper.lazy.loadInSlide(i$2);
                        }
                    }
                } else {
                    var nextSlide = $wrapperEl.children("." + swiperParams.slideNextClass);
                    if (nextSlide.length > 0) {
                        swiper.lazy.loadInSlide(slideIndex(nextSlide));
                    }
                    var prevSlide = $wrapperEl.children("." + swiperParams.slidePrevClass);
                    if (prevSlide.length > 0) {
                        swiper.lazy.loadInSlide(slideIndex(prevSlide));
                    }
                }
            }
        },
    };
    var Lazy$1 = {
        name: "lazy",
        params: {
            lazy: {
                enabled: !1,
                loadPrevNext: !1,
                loadPrevNextAmount: 1,
                loadOnTransitionStart: !1,
                elementClass: "swiper-lazy",
                loadingClass: "swiper-lazy-loading",
                loadedClass: "swiper-lazy-loaded",
                preloaderClass: "swiper-lazy-preloader",
            },
        },
        create: function create() {
            var swiper = this;
            Utils.extend(swiper, { lazy: { initialImageLoaded: !1, load: Lazy.load.bind(swiper), loadInSlide: Lazy.loadInSlide.bind(swiper) } });
        },
        on: {
            beforeInit: function beforeInit() {
                var swiper = this;
                if (swiper.params.lazy.enabled && swiper.params.preloadImages) {
                    swiper.params.preloadImages = !1;
                }
            },
            init: function init() {
                var swiper = this;
                if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {
                    swiper.lazy.load();
                }
            },
            scroll: function scroll() {
                var swiper = this;
                if (swiper.params.freeMode && !swiper.params.freeModeSticky) {
                    swiper.lazy.load();
                }
            },
            resize: function resize() {
                var swiper = this;
                if (swiper.params.lazy.enabled) {
                    swiper.lazy.load();
                }
            },
            scrollbarDragMove: function scrollbarDragMove() {
                var swiper = this;
                if (swiper.params.lazy.enabled) {
                    swiper.lazy.load();
                }
            },
            transitionStart: function transitionStart() {
                var swiper = this;
                if (swiper.params.lazy.enabled) {
                    if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {
                        swiper.lazy.load();
                    }
                }
            },
            transitionEnd: function transitionEnd() {
                var swiper = this;
                if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {
                    swiper.lazy.load();
                }
            },
        },
    };
    var Controller = {
        LinearSpline: function LinearSpline(x, y) {
            var binarySearch = (function search() {
                var maxIndex;
                var minIndex;
                var guess;
                return function (array, val) {
                    minIndex = -1;
                    maxIndex = array.length;
                    while (maxIndex - minIndex > 1) {
                        guess = (maxIndex + minIndex) >> 1;
                        if (array[guess] <= val) {
                            minIndex = guess;
                        } else {
                            maxIndex = guess;
                        }
                    }
                    return maxIndex;
                };
            })();
            this.x = x;
            this.y = y;
            this.lastIndex = x.length - 1;
            var i1;
            var i3;
            this.interpolate = function interpolate(x2) {
                if (!x2) {
                    return 0;
                }
                i3 = binarySearch(this.x, x2);
                i1 = i3 - 1;
                return ((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1]) + this.y[i1];
            };
            return this;
        },
        getInterpolateFunction: function getInterpolateFunction(c) {
            var swiper = this;
            if (!swiper.controller.spline) {
                swiper.controller.spline = swiper.params.loop ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid) : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);
            }
        },
        setTranslate: function setTranslate(setTranslate$1, byController) {
            var swiper = this;
            var controlled = swiper.controller.control;
            var multiplier;
            var controlledTranslate;
            function setControlledTranslate(c) {
                var translate = c.rtl && c.params.direction === "horizontal" ? -swiper.translate : swiper.translate;
                if (swiper.params.controller.by === "slide") {
                    swiper.controller.getInterpolateFunction(c);
                    controlledTranslate = -swiper.controller.spline.interpolate(-translate);
                }
                if (!controlledTranslate || swiper.params.controller.by === "container") {
                    multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());
                    controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();
                }
                if (swiper.params.controller.inverse) {
                    controlledTranslate = c.maxTranslate() - controlledTranslate;
                }
                c.updateProgress(controlledTranslate);
                c.setTranslate(controlledTranslate, swiper);
                c.updateActiveIndex();
                c.updateSlidesClasses();
            }
            if (Array.isArray(controlled)) {
                for (var i = 0; i < controlled.length; i += 1) {
                    if (controlled[i] !== byController && controlled[i] instanceof Swiper$1) {
                        setControlledTranslate(controlled[i]);
                    }
                }
            } else if (controlled instanceof Swiper$1 && byController !== controlled) {
                setControlledTranslate(controlled);
            }
        },
        setTransition: function setTransition(duration, byController) {
            var swiper = this;
            var controlled = swiper.controller.control;
            var i;
            function setControlledTransition(c) {
                c.setTransition(duration, swiper);
                if (duration !== 0) {
                    c.transitionStart();
                    c.$wrapperEl.transitionEnd(function () {
                        if (!controlled) {
                            return;
                        }
                        if (c.params.loop && swiper.params.controller.by === "slide") {
                            c.loopFix();
                        }
                        c.transitionEnd();
                    });
                }
            }
            if (Array.isArray(controlled)) {
                for (i = 0; i < controlled.length; i += 1) {
                    if (controlled[i] !== byController && controlled[i] instanceof Swiper$1) {
                        setControlledTransition(controlled[i]);
                    }
                }
            } else if (controlled instanceof Swiper$1 && byController !== controlled) {
                setControlledTransition(controlled);
            }
        },
    };
    var Controller$1 = {
        name: "controller",
        params: { controller: { control: undefined, inverse: !1, by: "slide" } },
        create: function create() {
            var swiper = this;
            Utils.extend(swiper, {
                controller: {
                    control: swiper.params.controller.control,
                    getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),
                    setTranslate: Controller.setTranslate.bind(swiper),
                    setTransition: Controller.setTransition.bind(swiper),
                },
            });
        },
        on: {
            update: function update() {
                var swiper = this;
                if (!swiper.controller.control) {
                    return;
                }
                if (swiper.controller.spline) {
                    swiper.controller.spline = undefined;
                    delete swiper.controller.spline;
                }
            },
            resize: function resize() {
                var swiper = this;
                if (!swiper.controller.control) {
                    return;
                }
                if (swiper.controller.spline) {
                    swiper.controller.spline = undefined;
                    delete swiper.controller.spline;
                }
            },
            observerUpdate: function observerUpdate() {
                var swiper = this;
                if (!swiper.controller.control) {
                    return;
                }
                if (swiper.controller.spline) {
                    swiper.controller.spline = undefined;
                    delete swiper.controller.spline;
                }
            },
            setTranslate: function setTranslate(translate, byController) {
                var swiper = this;
                if (!swiper.controller.control) {
                    return;
                }
                swiper.controller.setTranslate(translate, byController);
            },
            setTransition: function setTransition(duration, byController) {
                var swiper = this;
                if (!swiper.controller.control) {
                    return;
                }
                swiper.controller.setTransition(duration, byController);
            },
        },
    };
    var a11y = {
        makeElFocusable: function makeElFocusable($el) {
            $el.attr("tabIndex", "0");
            return $el;
        },
        addElRole: function addElRole($el, role) {
            $el.attr("role", role);
            return $el;
        },
        addElLabel: function addElLabel($el, label) {
            $el.attr("aria-label", label);
            return $el;
        },
        disableEl: function disableEl($el) {
            $el.attr("aria-disabled", !0);
            return $el;
        },
        enableEl: function enableEl($el) {
            $el.attr("aria-disabled", !1);
            return $el;
        },
        onEnterKey: function onEnterKey(e) {
            var swiper = this;
            var params = swiper.params.a11y;
            if (e.keyCode !== 13) {
                return;
            }
            var $targetEl = $$1(e.target);
            if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {
                if (!(swiper.isEnd && !swiper.params.loop)) {
                    swiper.slideNext();
                }
                if (swiper.isEnd) {
                    swiper.a11y.notify(params.lastSlideMessage);
                } else {
                    swiper.a11y.notify(params.nextSlideMessage);
                }
            }
            if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {
                if (!(swiper.isBeginning && !swiper.params.loop)) {
                    swiper.slidePrev();
                }
                if (swiper.isBeginning) {
                    swiper.a11y.notify(params.firstSlideMessage);
                } else {
                    swiper.a11y.notify(params.prevSlideMessage);
                }
            }
            if (swiper.pagination && $targetEl.is("." + swiper.params.pagination.bulletClass)) {
                $targetEl[0].click();
            }
        },
        notify: function notify(message) {
            var swiper = this;
            var notification = swiper.a11y.liveRegion;
            if (notification.length === 0) {
                return;
            }
            notification.html("");
            notification.html(message);
        },
        updateNavigation: function updateNavigation() {
            var swiper = this;
            if (swiper.params.loop) {
                return;
            }
            var ref = swiper.navigation;
            var $nextEl = ref.$nextEl;
            var $prevEl = ref.$prevEl;
            if ($prevEl && $prevEl.length > 0) {
                if (swiper.isBeginning) {
                    swiper.a11y.disableEl($prevEl);
                } else {
                    swiper.a11y.enableEl($prevEl);
                }
            }
            if ($nextEl && $nextEl.length > 0) {
                if (swiper.isEnd) {
                    swiper.a11y.disableEl($nextEl);
                } else {
                    swiper.a11y.enableEl($nextEl);
                }
            }
        },
        updatePagination: function updatePagination() {
            var swiper = this;
            var params = swiper.params.a11y;
            if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {
                swiper.pagination.bullets.each(function (bulletIndex, bulletEl) {
                    var $bulletEl = $$1(bulletEl);
                    swiper.a11y.makeElFocusable($bulletEl);
                    swiper.a11y.addElRole($bulletEl, "button");
                    swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));
                });
            }
        },
        init: function init() {
            var swiper = this;
            swiper.$el.append(swiper.a11y.liveRegion);
            var params = swiper.params.a11y;
            var $nextEl;
            var $prevEl;
            if (swiper.navigation && swiper.navigation.$nextEl) {
                $nextEl = swiper.navigation.$nextEl;
            }
            if (swiper.navigation && swiper.navigation.$prevEl) {
                $prevEl = swiper.navigation.$prevEl;
            }
            if ($nextEl) {
                swiper.a11y.makeElFocusable($nextEl);
                swiper.a11y.addElRole($nextEl, "button");
                swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);
                $nextEl.on("keydown", swiper.a11y.onEnterKey);
            }
            if ($prevEl) {
                swiper.a11y.makeElFocusable($prevEl);
                swiper.a11y.addElRole($prevEl, "button");
                swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);
                $prevEl.on("keydown", swiper.a11y.onEnterKey);
            }
            if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {
                swiper.pagination.$el.on("keydown", "." + swiper.params.pagination.bulletClass, swiper.a11y.onEnterKey);
            }
        },
        destroy: function destroy() {
            var swiper = this;
            if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) {
                swiper.a11y.liveRegion.remove();
            }
            var $nextEl;
            var $prevEl;
            if (swiper.navigation && swiper.navigation.$nextEl) {
                $nextEl = swiper.navigation.$nextEl;
            }
            if (swiper.navigation && swiper.navigation.$prevEl) {
                $prevEl = swiper.navigation.$prevEl;
            }
            if ($nextEl) {
                $nextEl.off("keydown", swiper.a11y.onEnterKey);
            }
            if ($prevEl) {
                $prevEl.off("keydown", swiper.a11y.onEnterKey);
            }
            if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {
                swiper.pagination.$el.off("keydown", "." + swiper.params.pagination.bulletClass, swiper.a11y.onEnterKey);
            }
        },
    };
    var A11y = {
        name: "a11y",
        params: {
            a11y: {
                enabled: !1,
                notificationClass: "swiper-notification",
                prevSlideMessage: "Previous slide",
                nextSlideMessage: "Next slide",
                firstSlideMessage: "This is the first slide",
                lastSlideMessage: "This is the last slide",
                paginationBulletMessage: "Go to slide {{index}}",
            },
        },
        create: function create() {
            var swiper = this;
            Utils.extend(swiper, { a11y: { liveRegion: $$1('<span class="' + swiper.params.a11y.notificationClass + '" aria-live="assertive" aria-atomic="true"></span>') } });
            Object.keys(a11y).forEach(function (methodName) {
                swiper.a11y[methodName] = a11y[methodName].bind(swiper);
            });
        },
        on: {
            init: function init() {
                var swiper = this;
                if (!swiper.params.a11y.enabled) {
                    return;
                }
                swiper.a11y.init();
                swiper.a11y.updateNavigation();
            },
            toEdge: function toEdge() {
                var swiper = this;
                if (!swiper.params.a11y.enabled) {
                    return;
                }
                swiper.a11y.updateNavigation();
            },
            fromEdge: function fromEdge() {
                var swiper = this;
                if (!swiper.params.a11y.enabled) {
                    return;
                }
                swiper.a11y.updateNavigation();
            },
            paginationUpdate: function paginationUpdate() {
                var swiper = this;
                if (!swiper.params.a11y.enabled) {
                    return;
                }
                swiper.a11y.updatePagination();
            },
            destroy: function destroy() {
                var swiper = this;
                if (!swiper.params.a11y.enabled) {
                    return;
                }
                swiper.a11y.destroy();
            },
        },
    };
    var History = {
        init: function init() {
            var swiper = this;
            if (!swiper.params.history) {
                return;
            }
            if (!win.history || !win.history.pushState) {
                swiper.params.history.enabled = !1;
                swiper.params.hashNavigation.enabled = !0;
                return;
            }
            var history = swiper.history;
            history.initialized = !0;
            history.paths = History.getPathValues();
            if (!history.paths.key && !history.paths.value) {
                return;
            }
            history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);
            if (!swiper.params.history.replaceState) {
                win.addEventListener("popstate", swiper.history.setHistoryPopState);
            }
        },
        destroy: function destroy() {
            var swiper = this;
            if (!swiper.params.history.replaceState) {
                win.removeEventListener("popstate", swiper.history.setHistoryPopState);
            }
        },
        setHistoryPopState: function setHistoryPopState() {
            var swiper = this;
            swiper.history.paths = History.getPathValues();
            swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, !1);
        },
        getPathValues: function getPathValues() {
            var pathArray = win.location.pathname
                .slice(1)
                .split("/")
                .filter(function (part) {
                    return part !== "";
                });
            var total = pathArray.length;
            var key = pathArray[total - 2];
            var value = pathArray[total - 1];
            return { key: key, value: value };
        },
        setHistory: function setHistory(key, index) {
            var swiper = this;
            if (!swiper.history.initialized || !swiper.params.history.enabled) {
                return;
            }
            var slide = swiper.slides.eq(index);
            var value = History.slugify(slide.attr("data-history"));
            if (!win.location.pathname.includes(key)) {
                value = key + "/" + value;
            }
            var currentState = win.history.state;
            if (currentState && currentState.value === value) {
                return;
            }
            if (swiper.params.history.replaceState) {
                win.history.replaceState({ value: value }, null, value);
            } else {
                win.history.pushState({ value: value }, null, value);
            }
        },
        slugify: function slugify(text) {
            return text
                .toString()
                .toLowerCase()
                .replace(/\s+/g, "-")
                .replace(/[^\w-]+/g, "")
                .replace(/--+/g, "-")
                .replace(/^-+/, "")
                .replace(/-+$/, "");
        },
        scrollToSlide: function scrollToSlide(speed, value, runCallbacks) {
            var swiper = this;
            if (value) {
                for (var i = 0, length = swiper.slides.length; i < length; i += 1) {
                    var slide = swiper.slides.eq(i);
                    var slideHistory = History.slugify(slide.attr("data-history"));
                    if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {
                        var index = slide.index();
                        swiper.slideTo(index, speed, runCallbacks);
                    }
                }
            } else {
                swiper.slideTo(0, speed, runCallbacks);
            }
        },
    };
    var History$1 = {
        name: "history",
        params: { history: { enabled: !1, replaceState: !1, key: "slides" } },
        create: function create() {
            var swiper = this;
            Utils.extend(swiper, {
                history: {
                    init: History.init.bind(swiper),
                    setHistory: History.setHistory.bind(swiper),
                    setHistoryPopState: History.setHistoryPopState.bind(swiper),
                    scrollToSlide: History.scrollToSlide.bind(swiper),
                    destroy: History.destroy.bind(swiper),
                },
            });
        },
        on: {
            init: function init() {
                var swiper = this;
                if (swiper.params.history.enabled) {
                    swiper.history.init();
                }
            },
            destroy: function destroy() {
                var swiper = this;
                if (swiper.params.history.enabled) {
                    swiper.history.destroy();
                }
            },
            transitionEnd: function transitionEnd() {
                var swiper = this;
                if (swiper.history.initialized) {
                    swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);
                }
            },
        },
    };
    var HashNavigation = {
        onHashCange: function onHashCange() {
            var swiper = this;
            var newHash = doc.location.hash.replace("#", "");
            var activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr("data-hash");
            if (newHash !== activeSlideHash) {
                swiper.slideTo(swiper.$wrapperEl.children("." + swiper.params.slideClass + '[data-hash="' + newHash + '"]').index());
            }
        },
        setHash: function setHash() {
            var swiper = this;
            if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) {
                return;
            }
            if (swiper.params.hashNavigation.replaceState && win.history && win.history.replaceState) {
                win.history.replaceState(null, null, "#" + swiper.slides.eq(swiper.activeIndex).attr("data-hash") || "");
            } else {
                var slide = swiper.slides.eq(swiper.activeIndex);
                var hash = slide.attr("data-hash") || slide.attr("data-history");
                doc.location.hash = hash || "";
            }
        },
        init: function init() {
            var swiper = this;
            if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) {
                return;
            }
            swiper.hashNavigation.initialized = !0;
            var hash = doc.location.hash.replace("#", "");
            if (hash) {
                var speed = 0;
                for (var i = 0, length = swiper.slides.length; i < length; i += 1) {
                    var slide = swiper.slides.eq(i);
                    var slideHash = slide.attr("data-hash") || slide.attr("data-history");
                    if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {
                        var index = slide.index();
                        swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, !0);
                    }
                }
            }
            if (swiper.params.hashNavigation.watchState) {
                $$1(win).on("hashchange", swiper.hashNavigation.onHashCange);
            }
        },
        destroy: function destroy() {
            var swiper = this;
            if (swiper.params.hashNavigation.watchState) {
                $$1(win).off("hashchange", swiper.hashNavigation.onHashCange);
            }
        },
    };
    var HashNavigation$1 = {
        name: "hash-navigation",
        params: { hashNavigation: { enabled: !1, replaceState: !1, watchState: !1 } },
        create: function create() {
            var swiper = this;
            Utils.extend(swiper, {
                hashNavigation: { initialized: !1, init: HashNavigation.init.bind(swiper), destroy: HashNavigation.destroy.bind(swiper), setHash: HashNavigation.setHash.bind(swiper), onHashCange: HashNavigation.onHashCange.bind(swiper) },
            });
        },
        on: {
            init: function init() {
                var swiper = this;
                if (swiper.params.hashNavigation.enabled) {
                    swiper.hashNavigation.init();
                }
            },
            destroy: function destroy() {
                var swiper = this;
                if (swiper.params.hashNavigation.enabled) {
                    swiper.hashNavigation.destroy();
                }
            },
            transitionEnd: function transitionEnd() {
                var swiper = this;
                if (swiper.hashNavigation.initialized) {
                    swiper.hashNavigation.setHash();
                }
            },
        },
    };
    var Autoplay = {
        run: function run() {
            var swiper = this;
            var $activeSlideEl = swiper.slides.eq(swiper.activeIndex);
            var delay = swiper.params.autoplay.delay;
            if ($activeSlideEl.attr("data-swiper-autoplay")) {
                delay = $activeSlideEl.attr("data-swiper-autoplay") || swiper.params.autoplay.delay;
            }
            swiper.autoplay.timeout = Utils.nextTick(function () {
                if (swiper.params.autoplay.reverseDirection) {
                    if (swiper.params.loop) {
                        swiper.loopFix();
                        swiper.slidePrev(swiper.params.speed, !0, !0);
                        swiper.emit("autoplay");
                    } else if (!swiper.isBeginning) {
                        swiper.slidePrev(swiper.params.speed, !0, !0);
                        swiper.emit("autoplay");
                    } else if (!swiper.params.autoplay.stopOnLastSlide) {
                        swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, !0, !0);
                        swiper.emit("autoplay");
                    } else {
                        swiper.autoplay.stop();
                    }
                } else if (swiper.params.loop) {
                    swiper.loopFix();
                    swiper.slideNext(swiper.params.speed, !0, !0);
                    swiper.emit("autoplay");
                } else if (!swiper.isEnd) {
                    swiper.slideNext(swiper.params.speed, !0, !0);
                    swiper.emit("autoplay");
                } else if (!swiper.params.autoplay.stopOnLastSlide) {
                    swiper.slideTo(0, swiper.params.speed, !0, !0);
                    swiper.emit("autoplay");
                } else {
                    swiper.autoplay.stop();
                }
            }, delay);
        },
        start: function start() {
            var swiper = this;
            if (typeof swiper.autoplay.timeout !== "undefined") {
                return !1;
            }
            if (swiper.autoplay.running) {
                return !1;
            }
            swiper.autoplay.running = !0;
            swiper.emit("autoplayStart");
            swiper.autoplay.run();
            return !0;
        },
        stop: function stop() {
            var swiper = this;
            if (!swiper.autoplay.running) {
                return !1;
            }
            if (typeof swiper.autoplay.timeout === "undefined") {
                return !1;
            }
            if (swiper.autoplay.timeout) {
                clearTimeout(swiper.autoplay.timeout);
                swiper.autoplay.timeout = undefined;
            }
            swiper.autoplay.running = !1;
            swiper.emit("autoplayStop");
            return !0;
        },
        pause: function pause(speed) {
            var swiper = this;
            if (!swiper.autoplay.running) {
                return;
            }
            if (swiper.autoplay.paused) {
                return;
            }
            if (swiper.autoplay.timeout) {
                clearTimeout(swiper.autoplay.timeout);
            }
            swiper.autoplay.paused = !0;
            if (speed === 0 || !swiper.params.autoplay.waitForTransition) {
                swiper.autoplay.paused = !1;
                swiper.autoplay.run();
            } else {
                swiper.$wrapperEl.transitionEnd(function () {
                    if (!swiper || swiper.destroyed) {
                        return;
                    }
                    swiper.autoplay.paused = !1;
                    if (!swiper.autoplay.running) {
                        swiper.autoplay.stop();
                    } else {
                        swiper.autoplay.run();
                    }
                });
            }
        },
    };
    var Autoplay$1 = {
        name: "autoplay",
        params: { autoplay: { enabled: !1, delay: 3000, waitForTransition: !0, disableOnInteraction: !0, stopOnLastSlide: !1, reverseDirection: !1 } },
        create: function create() {
            var swiper = this;
            Utils.extend(swiper, { autoplay: { running: !1, paused: !1, run: Autoplay.run.bind(swiper), start: Autoplay.start.bind(swiper), stop: Autoplay.stop.bind(swiper), pause: Autoplay.pause.bind(swiper) } });
        },
        on: {
            init: function init() {
                var swiper = this;
                if (swiper.params.autoplay.enabled) {
                    swiper.autoplay.start();
                }
            },
            beforeTransitionStart: function beforeTransitionStart(speed, internal) {
                var swiper = this;
                if (swiper.autoplay.running) {
                    if (internal || !swiper.params.autoplay.disableOnInteraction) {
                        swiper.autoplay.pause(speed);
                    } else {
                        swiper.autoplay.stop();
                    }
                }
            },
            sliderFirstMove: function sliderFirstMove() {
                var swiper = this;
                if (swiper.autoplay.running) {
                    if (swiper.params.autoplay.disableOnInteraction) {
                        swiper.autoplay.stop();
                    } else {
                        swiper.autoplay.pause();
                    }
                }
            },
            destroy: function destroy() {
                var swiper = this;
                if (swiper.autoplay.running) {
                    swiper.autoplay.stop();
                }
            },
        },
    };
    var Fade = {
        setTranslate: function setTranslate() {
            var swiper = this;
            var slides = swiper.slides;
            for (var i = 0; i < slides.length; i += 1) {
                var $slideEl = swiper.slides.eq(i);
                var offset = $slideEl[0].swiperSlideOffset;
                var tx = -offset;
                if (!swiper.params.virtualTranslate) {
                    tx -= swiper.translate;
                }
                var ty = 0;
                if (!swiper.isHorizontal()) {
                    ty = tx;
                    tx = 0;
                }
                var slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs($slideEl[0].progress), 0) : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);
                $slideEl.css({ opacity: slideOpacity }).transform("translate3d(" + tx + "px, " + ty + "px, 0px)");
            }
        },
        setTransition: function setTransition(duration) {
            var swiper = this;
            var slides = swiper.slides;
            var $wrapperEl = swiper.$wrapperEl;
            slides.transition(duration);
            if (swiper.params.virtualTranslate && duration !== 0) {
                var eventTriggered = !1;
                slides.transitionEnd(function () {
                    if (eventTriggered) {
                        return;
                    }
                    if (!swiper || swiper.destroyed) {
                        return;
                    }
                    eventTriggered = !0;
                    swiper.animating = !1;
                    var triggerEvents = ["webkitTransitionEnd", "transitionend"];
                    for (var i = 0; i < triggerEvents.length; i += 1) {
                        $wrapperEl.trigger(triggerEvents[i]);
                    }
                });
            }
        },
    };
    var EffectFade = {
        name: "effect-fade",
        params: { fadeEffect: { crossFade: !1 } },
        create: function create() {
            var swiper = this;
            Utils.extend(swiper, { fadeEffect: { setTranslate: Fade.setTranslate.bind(swiper), setTransition: Fade.setTransition.bind(swiper) } });
        },
        on: {
            beforeInit: function beforeInit() {
                var swiper = this;
                if (swiper.params.effect !== "fade") {
                    return;
                }
                swiper.classNames.push(swiper.params.containerModifierClass + "fade");
                var overwriteParams = { slidesPerView: 1, slidesPerColumn: 1, slidesPerGroup: 1, watchSlidesProgress: !0, spaceBetween: 0, virtualTranslate: !0 };
                Utils.extend(swiper.params, overwriteParams);
                Utils.extend(swiper.originalParams, overwriteParams);
            },
            setTranslate: function setTranslate() {
                var swiper = this;
                if (swiper.params.effect !== "fade") {
                    return;
                }
                swiper.fadeEffect.setTranslate();
            },
            setTransition: function setTransition(duration) {
                var swiper = this;
                if (swiper.params.effect !== "fade") {
                    return;
                }
                swiper.fadeEffect.setTransition(duration);
            },
        },
    };
    var Cube = {
        setTranslate: function setTranslate() {
            var swiper = this;
            var $el = swiper.$el;
            var $wrapperEl = swiper.$wrapperEl;
            var slides = swiper.slides;
            var swiperWidth = swiper.width;
            var swiperHeight = swiper.height;
            var rtl = swiper.rtl;
            var swiperSize = swiper.size;
            var params = swiper.params.cubeEffect;
            var isHorizontal = swiper.isHorizontal();
            var isVirtual = swiper.virtual && swiper.params.virtual.enabled;
            var wrapperRotate = 0;
            var $cubeShadowEl;
            if (params.shadow) {
                if (isHorizontal) {
                    $cubeShadowEl = $wrapperEl.find(".swiper-cube-shadow");
                    if ($cubeShadowEl.length === 0) {
                        $cubeShadowEl = $$1('<div class="swiper-cube-shadow"></div>');
                        $wrapperEl.append($cubeShadowEl);
                    }
                    $cubeShadowEl.css({ height: swiperWidth + "px" });
                } else {
                    $cubeShadowEl = $el.find(".swiper-cube-shadow");
                    if ($cubeShadowEl.length === 0) {
                        $cubeShadowEl = $$1('<div class="swiper-cube-shadow"></div>');
                        $el.append($cubeShadowEl);
                    }
                }
            }
            for (var i = 0; i < slides.length; i += 1) {
                var $slideEl = slides.eq(i);
                var slideIndex = i;
                if (isVirtual) {
                    slideIndex = parseInt($slideEl.attr("data-swiper-slide-index"), 10);
                }
                var slideAngle = slideIndex * 90;
                var round = Math.floor(slideAngle / 360);
                if (rtl) {
                    slideAngle = -slideAngle;
                    round = Math.floor(-slideAngle / 360);
                }
                var progress = Math.max(Math.min($slideEl[0].progress, 1), -1);
                var tx = 0;
                var ty = 0;
                var tz = 0;
                if (slideIndex % 4 === 0) {
                    tx = -round * 4 * swiperSize;
                    tz = 0;
                } else if ((slideIndex - 1) % 4 === 0) {
                    tx = 0;
                    tz = -round * 4 * swiperSize;
                } else if ((slideIndex - 2) % 4 === 0) {
                    tx = swiperSize + round * 4 * swiperSize;
                    tz = swiperSize;
                } else if ((slideIndex - 3) % 4 === 0) {
                    tx = -swiperSize;
                    tz = 3 * swiperSize + swiperSize * 4 * round;
                }
                if (rtl) {
                    tx = -tx;
                }
                if (!isHorizontal) {
                    ty = tx;
                    tx = 0;
                }
                var transform = "rotateX(" + (isHorizontal ? 0 : -slideAngle) + "deg) rotateY(" + (isHorizontal ? slideAngle : 0) + "deg) translate3d(" + tx + "px, " + ty + "px, " + tz + "px)";
                if (progress <= 1 && progress > -1) {
                    wrapperRotate = slideIndex * 90 + progress * 90;
                    if (rtl) {
                        wrapperRotate = -slideIndex * 90 - progress * 90;
                    }
                }
                $slideEl.transform(transform);
                if (params.slideShadows) {
                    var shadowBefore = isHorizontal ? $slideEl.find(".swiper-slide-shadow-left") : $slideEl.find(".swiper-slide-shadow-top");
                    var shadowAfter = isHorizontal ? $slideEl.find(".swiper-slide-shadow-right") : $slideEl.find(".swiper-slide-shadow-bottom");
                    if (shadowBefore.length === 0) {
                        shadowBefore = $$1('<div class="swiper-slide-shadow-' + (isHorizontal ? "left" : "top") + '"></div>');
                        $slideEl.append(shadowBefore);
                    }
                    if (shadowAfter.length === 0) {
                        shadowAfter = $$1('<div class="swiper-slide-shadow-' + (isHorizontal ? "right" : "bottom") + '"></div>');
                        $slideEl.append(shadowAfter);
                    }
                    if (shadowBefore.length) {
                        shadowBefore[0].style.opacity = Math.max(-progress, 0);
                    }
                    if (shadowAfter.length) {
                        shadowAfter[0].style.opacity = Math.max(progress, 0);
                    }
                }
            }
            $wrapperEl.css({
                "-webkit-transform-origin": "50% 50% -" + swiperSize / 2 + "px",
                "-moz-transform-origin": "50% 50% -" + swiperSize / 2 + "px",
                "-ms-transform-origin": "50% 50% -" + swiperSize / 2 + "px",
                "transform-origin": "50% 50% -" + swiperSize / 2 + "px",
            });
            if (params.shadow) {
                if (isHorizontal) {
                    $cubeShadowEl.transform("translate3d(0px, " + (swiperWidth / 2 + params.shadowOffset) + "px, " + -swiperWidth / 2 + "px) rotateX(90deg) rotateZ(0deg) scale(" + params.shadowScale + ")");
                } else {
                    var shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;
                    var multiplier = 1.5 - (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2 + Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2);
                    var scale1 = params.shadowScale;
                    var scale2 = params.shadowScale / multiplier;
                    var offset = params.shadowOffset;
                    $cubeShadowEl.transform("scale3d(" + scale1 + ", 1, " + scale2 + ") translate3d(0px, " + (swiperHeight / 2 + offset) + "px, " + -swiperHeight / 2 / scale2 + "px) rotateX(-90deg)");
                }
            }
            var zFactor = Browser$1.isSafari || Browser$1.isUiWebView ? -swiperSize / 2 : 0;
            $wrapperEl.transform("translate3d(0px,0," + zFactor + "px) rotateX(" + (swiper.isHorizontal() ? 0 : wrapperRotate) + "deg) rotateY(" + (swiper.isHorizontal() ? -wrapperRotate : 0) + "deg)");
        },
        setTransition: function setTransition(duration) {
            var swiper = this;
            var $el = swiper.$el;
            var slides = swiper.slides;
            slides.transition(duration).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(duration);
            if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {
                $el.find(".swiper-cube-shadow").transition(duration);
            }
        },
    };
    var EffectCube = {
        name: "effect-cube",
        params: { cubeEffect: { slideShadows: !0, shadow: !0, shadowOffset: 20, shadowScale: 0.94 } },
        create: function create() {
            var swiper = this;
            Utils.extend(swiper, { cubeEffect: { setTranslate: Cube.setTranslate.bind(swiper), setTransition: Cube.setTransition.bind(swiper) } });
        },
        on: {
            beforeInit: function beforeInit() {
                var swiper = this;
                if (swiper.params.effect !== "cube") {
                    return;
                }
                swiper.classNames.push(swiper.params.containerModifierClass + "cube");
                swiper.classNames.push(swiper.params.containerModifierClass + "3d");
                var overwriteParams = { slidesPerView: 1, slidesPerColumn: 1, slidesPerGroup: 1, watchSlidesProgress: !0, resistanceRatio: 0, spaceBetween: 0, centeredSlides: !1, virtualTranslate: !0 };
                Utils.extend(swiper.params, overwriteParams);
                Utils.extend(swiper.originalParams, overwriteParams);
            },
            setTranslate: function setTranslate() {
                var swiper = this;
                if (swiper.params.effect !== "cube") {
                    return;
                }
                swiper.cubeEffect.setTranslate();
            },
            setTransition: function setTransition(duration) {
                var swiper = this;
                if (swiper.params.effect !== "cube") {
                    return;
                }
                swiper.cubeEffect.setTransition(duration);
            },
        },
    };
    var Flip = {
        setTranslate: function setTranslate() {
            var swiper = this;
            var slides = swiper.slides;
            for (var i = 0; i < slides.length; i += 1) {
                var $slideEl = slides.eq(i);
                var progress = $slideEl[0].progress;
                if (swiper.params.flipEffect.limitRotation) {
                    progress = Math.max(Math.min($slideEl[0].progress, 1), -1);
                }
                var offset = $slideEl[0].swiperSlideOffset;
                var rotate = -180 * progress;
                var rotateY = rotate;
                var rotateX = 0;
                var tx = -offset;
                var ty = 0;
                if (!swiper.isHorizontal()) {
                    ty = tx;
                    tx = 0;
                    rotateX = -rotateY;
                    rotateY = 0;
                } else if (swiper.rtl) {
                    rotateY = -rotateY;
                }
                $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;
                if (swiper.params.flipEffect.slideShadows) {
                    var shadowBefore = swiper.isHorizontal() ? $slideEl.find(".swiper-slide-shadow-left") : $slideEl.find(".swiper-slide-shadow-top");
                    var shadowAfter = swiper.isHorizontal() ? $slideEl.find(".swiper-slide-shadow-right") : $slideEl.find(".swiper-slide-shadow-bottom");
                    if (shadowBefore.length === 0) {
                        shadowBefore = $$1('<div class="swiper-slide-shadow-' + (swiper.isHorizontal() ? "left" : "top") + '"></div>');
                        $slideEl.append(shadowBefore);
                    }
                    if (shadowAfter.length === 0) {
                        shadowAfter = $$1('<div class="swiper-slide-shadow-' + (swiper.isHorizontal() ? "right" : "bottom") + '"></div>');
                        $slideEl.append(shadowAfter);
                    }
                    if (shadowBefore.length) {
                        shadowBefore[0].style.opacity = Math.max(-progress, 0);
                    }
                    if (shadowAfter.length) {
                        shadowAfter[0].style.opacity = Math.max(progress, 0);
                    }
                }
                $slideEl.transform("translate3d(" + tx + "px, " + ty + "px, 0px) rotateX(" + rotateX + "deg) rotateY(" + rotateY + "deg)");
            }
        },
        setTransition: function setTransition(duration) {
            var swiper = this;
            var slides = swiper.slides;
            var activeIndex = swiper.activeIndex;
            var $wrapperEl = swiper.$wrapperEl;
            slides.transition(duration).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(duration);
            if (swiper.params.virtualTranslate && duration !== 0) {
                var eventTriggered = !1;
                slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {
                    if (eventTriggered) {
                        return;
                    }
                    if (!swiper || swiper.destroyed) {
                        return;
                    }
                    eventTriggered = !0;
                    swiper.animating = !1;
                    var triggerEvents = ["webkitTransitionEnd", "transitionend"];
                    for (var i = 0; i < triggerEvents.length; i += 1) {
                        $wrapperEl.trigger(triggerEvents[i]);
                    }
                });
            }
        },
    };
    var EffectFlip = {
        name: "effect-flip",
        params: { flipEffect: { slideShadows: !0, limitRotation: !0 } },
        create: function create() {
            var swiper = this;
            Utils.extend(swiper, { flipEffect: { setTranslate: Flip.setTranslate.bind(swiper), setTransition: Flip.setTransition.bind(swiper) } });
        },
        on: {
            beforeInit: function beforeInit() {
                var swiper = this;
                if (swiper.params.effect !== "flip") {
                    return;
                }
                swiper.classNames.push(swiper.params.containerModifierClass + "flip");
                swiper.classNames.push(swiper.params.containerModifierClass + "3d");
                var overwriteParams = { slidesPerView: 1, slidesPerColumn: 1, slidesPerGroup: 1, watchSlidesProgress: !0, spaceBetween: 0, virtualTranslate: !0 };
                Utils.extend(swiper.params, overwriteParams);
                Utils.extend(swiper.originalParams, overwriteParams);
            },
            setTranslate: function setTranslate() {
                var swiper = this;
                if (swiper.params.effect !== "flip") {
                    return;
                }
                swiper.flipEffect.setTranslate();
            },
            setTransition: function setTransition(duration) {
                var swiper = this;
                if (swiper.params.effect !== "flip") {
                    return;
                }
                swiper.flipEffect.setTransition(duration);
            },
        },
    };
    var Coverflow = {
        setTranslate: function setTranslate() {
            var swiper = this;
            var swiperWidth = swiper.width;
            var swiperHeight = swiper.height;
            var slides = swiper.slides;
            var $wrapperEl = swiper.$wrapperEl;
            var slidesSizesGrid = swiper.slidesSizesGrid;
            var params = swiper.params.coverflowEffect;
            var isHorizontal = swiper.isHorizontal();
            var transform = swiper.translate;
            var center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;
            var rotate = isHorizontal ? params.rotate : -params.rotate;
            var translate = params.depth;
            for (var i = 0, length = slides.length; i < length; i += 1) {
                var $slideEl = slides.eq(i);
                var slideSize = slidesSizesGrid[i];
                var slideOffset = $slideEl[0].swiperSlideOffset;
                var offsetMultiplier = ((center - slideOffset - slideSize / 2) / slideSize) * params.modifier;
                var rotateY = isHorizontal ? rotate * offsetMultiplier : 0;
                var rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;
                var translateZ = -translate * Math.abs(offsetMultiplier);
                var translateY = isHorizontal ? 0 : params.stretch * offsetMultiplier;
                var translateX = isHorizontal ? params.stretch * offsetMultiplier : 0;
                if (Math.abs(translateX) < 0.001) {
                    translateX = 0;
                }
                if (Math.abs(translateY) < 0.001) {
                    translateY = 0;
                }
                if (Math.abs(translateZ) < 0.001) {
                    translateZ = 0;
                }
                if (Math.abs(rotateY) < 0.001) {
                    rotateY = 0;
                }
                if (Math.abs(rotateX) < 0.001) {
                    rotateX = 0;
                }
                var slideTransform = "translate3d(" + translateX + "px," + translateY + "px," + translateZ + "px)  rotateX(" + rotateX + "deg) rotateY(" + rotateY + "deg)";
                $slideEl.transform(slideTransform);
                $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;
                if (params.slideShadows) {
                    var $shadowBeforeEl = isHorizontal ? $slideEl.find(".swiper-slide-shadow-left") : $slideEl.find(".swiper-slide-shadow-top");
                    var $shadowAfterEl = isHorizontal ? $slideEl.find(".swiper-slide-shadow-right") : $slideEl.find(".swiper-slide-shadow-bottom");
                    if ($shadowBeforeEl.length === 0) {
                        $shadowBeforeEl = $$1('<div class="swiper-slide-shadow-' + (isHorizontal ? "left" : "top") + '"></div>');
                        $slideEl.append($shadowBeforeEl);
                    }
                    if ($shadowAfterEl.length === 0) {
                        $shadowAfterEl = $$1('<div class="swiper-slide-shadow-' + (isHorizontal ? "right" : "bottom") + '"></div>');
                        $slideEl.append($shadowAfterEl);
                    }
                    if ($shadowBeforeEl.length) {
                        $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;
                    }
                    if ($shadowAfterEl.length) {
                        $shadowAfterEl[0].style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;
                    }
                }
            }
            if (Support.pointerEvents || Support.prefixedPointerEvents) {
                var ws = $wrapperEl[0].style;
                ws.perspectiveOrigin = center + "px 50%";
            }
        },
        setTransition: function setTransition(duration) {
            var swiper = this;
            swiper.slides.transition(duration).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(duration);
        },
    };
    var EffectCoverflow = {
        name: "effect-coverflow",
        params: { coverflowEffect: { rotate: 50, stretch: 0, depth: 100, modifier: 1, slideShadows: !0 } },
        create: function create() {
            var swiper = this;
            Utils.extend(swiper, { coverflowEffect: { setTranslate: Coverflow.setTranslate.bind(swiper), setTransition: Coverflow.setTransition.bind(swiper) } });
        },
        on: {
            beforeInit: function beforeInit() {
                var swiper = this;
                if (swiper.params.effect !== "coverflow") {
                    return;
                }
                swiper.classNames.push(swiper.params.containerModifierClass + "coverflow");
                swiper.classNames.push(swiper.params.containerModifierClass + "3d");
                swiper.params.watchSlidesProgress = !0;
                swiper.originalParams.watchSlidesProgress = !0;
            },
            setTranslate: function setTranslate() {
                var swiper = this;
                if (swiper.params.effect !== "coverflow") {
                    return;
                }
                swiper.coverflowEffect.setTranslate();
            },
            setTransition: function setTransition(duration) {
                var swiper = this;
                if (swiper.params.effect !== "coverflow") {
                    return;
                }
                swiper.coverflowEffect.setTransition(duration);
            },
        },
    };
    var components = [
        Device$2,
        Support$2,
        Browser,
        Resize,
        Observer$1,
        Virtual$1,
        Keyboard$1,
        Mousewheel$1,
        Navigation$1,
        Pagination$1,
        Scrollbar$1,
        Parallax$1,
        Zoom$1,
        Lazy$1,
        Controller$1,
        A11y,
        History$1,
        HashNavigation$1,
        Autoplay$1,
        EffectFade,
        EffectCube,
        EffectFlip,
        EffectCoverflow,
    ];
    if (typeof Swiper$1.use === "undefined") {
        Swiper$1.use = Swiper$1.Class.use;
        Swiper$1.installModule = Swiper$1.Class.installModule;
    }
    Swiper$1.use(components);
    return Swiper$1;
});
(function (global, factory) {
    "use strict";
    if (typeof define === "function" && define.amd) {
        define(["jquery"], function ($) {
            return factory($, global, global.document);
        });
    } else if (typeof module === "object" && module.exports) {
        module.exports = factory(require("jquery"), global, global.document);
    } else {
        factory(jQuery, global, global.document);
    }
})(typeof window !== "undefined" ? window : this, function ($, window, document, undefined) {
    "use strict";
    var heights = [],
        names = [],
        elements = [],
        overflow = [],
        index = 0,
        currentIndex = 0,
        interstitialIndex = 1,
        hasLocation = !1,
        timeoutId,
        timeoutId2,
        $window = $(window),
        portHeight,
        top = $window.scrollTop(),
        scrollable = !1,
        locked = !1,
        scrolled = !1,
        manualScroll,
        swipeScroll,
        util,
        disabled = !1,
        scrollSamples = [],
        scrollTime = new Date().getTime(),
        firstLoad = !0,
        initialised = !1,
        destination = 0,
        wheelEvent = "onwheel" in document ? "wheel" : document.onmousewheel !== undefined ? "mousewheel" : "DOMMouseScroll",
        settings = {
            section: ".section",
            sectionName: "section-name",
            interstitialSection: "",
            easing: "easeOutExpo",
            scrollSpeed: 1100,
            offset: 0,
            scrollbars: !0,
            target: "html,body",
            standardScrollElements: !1,
            setHeights: !0,
            overflowScroll: !0,
            updateHash: !0,
            touchScroll: !0,
            before: function () {},
            after: function () {},
            afterResize: function () {},
            afterRender: function () {},
        };
    function getportHeight() {
        return $window.height() + settings.offset;
    }
    function animateScroll(index, instant, callbacks, toTop) {
        if (currentIndex === index) {
            callbacks = !1;
        }
        if (disabled === !0) {
            return !0;
        }
        if (names[index]) {
            scrollable = !1;
            if (firstLoad === !0) {
                settings.afterRender();
                firstLoad = !1;
            }
            if (callbacks) {
                if (typeof settings.before == "function" && settings.before(index, elements) === !1) {
                    return !0;
                }
            }
            interstitialIndex = 1;
            destination = heights[index];
            if (firstLoad === !1 && currentIndex > index && toTop === !1) {
                if (overflow[index]) {
                    portHeight = getportHeight();
                    interstitialIndex = parseInt(elements[index].outerHeight() / portHeight);
                    destination = parseInt(heights[index]) + (elements[index].outerHeight() - portHeight);
                }
            }
            if (settings.updateHash && settings.sectionName && !(firstLoad === !0 && index === 0)) {
                if (history.pushState) {
                    try {
                        history.replaceState(null, null, names[index]);
                    } catch (e) {
                        if (window.console) {
                            console.warn("Scrollify warning: Page must be hosted to manipulate the hash value.");
                        }
                    }
                } else {
                    window.location.hash = names[index];
                }
            }
            currentIndex = index;
            if (instant) {
                $(settings.target).stop().scrollTop(destination);
                if (callbacks) {
                    settings.after(index, elements);
                }
            } else {
                locked = !0;
                if ($().velocity) {
                    $(settings.target).stop().velocity("scroll", { duration: settings.scrollSpeed, easing: settings.easing, offset: destination, mobileHA: !1 });
                } else {
                    $(settings.target).stop().animate({ scrollTop: destination }, settings.scrollSpeed, settings.easing);
                }
                if (window.location.hash.length && settings.sectionName && window.console) {
                    try {
                        if ($(window.location.hash).length) {
                            console.warn("Scrollify warning: ID matches hash value - this will cause the page to anchor.");
                        }
                    } catch (e) {}
                }
                $(settings.target)
                    .promise()
                    .done(function () {
                        locked = !1;
                        firstLoad = !1;
                        if (callbacks) {
                            settings.after(index, elements);
                        }
                    });
            }
        }
    }
    function isAccelerating(samples) {
        function average(num) {
            var sum = 0;
            var lastElements = samples.slice(Math.max(samples.length - num, 1));
            for (var i = 0; i < lastElements.length; i++) {
                sum += lastElements[i];
            }
            return Math.ceil(sum / num);
        }
        var avEnd = average(10);
        var avMiddle = average(70);
        if (avEnd >= avMiddle) {
            return !0;
        } else {
            return !1;
        }
    }
    var scrollify = function (options) {
        initialised = !0;
        $.easing.easeOutExpo = function (x, t, b, c, d) {
            return t == d ? b + c : c * (-Math.pow(2, (-10 * t) / d) + 1) + b;
        };
        manualScroll = {
            handleMousedown: function () {
                if (disabled === !0) {
                    return !0;
                }
                scrollable = !1;
                scrolled = !1;
            },
            handleMouseup: function () {
                if (disabled === !0) {
                    return !0;
                }
                scrollable = !0;
                if (scrolled) {
                    manualScroll.calculateNearest(!1, !0);
                }
            },
            handleScroll: function () {
                if (disabled === !0) {
                    return !0;
                }
                if (timeoutId) {
                    clearTimeout(timeoutId);
                }
                timeoutId = setTimeout(function () {
                    scrolled = !0;
                    if (scrollable === !1) {
                        return !1;
                    }
                    scrollable = !1;
                    manualScroll.calculateNearest(!1, !0);
                }, 200);
            },
            calculateNearest: function (instant, callbacks) {
                top = $window.scrollTop();
                var i = 1,
                    max = heights.length,
                    closest = 0,
                    prev = Math.abs(heights[0] - top),
                    diff;
                for (; i < max; i++) {
                    diff = Math.abs(heights[i] - top);
                    if (diff < prev) {
                        prev = diff;
                        closest = i;
                    }
                }
                if ((atBottom() && closest > index) || atTop()) {
                    index = closest;
                    animateScroll(closest, instant, callbacks, !1);
                }
            },
            wheelHandler: function (e) {
                if (disabled === !0) {
                    return !0;
                } else if (settings.standardScrollElements) {
                    if ($(e.target).is(settings.standardScrollElements) || $(e.target).closest(settings.standardScrollElements).length) {
                        return !0;
                    }
                }
                if (!overflow[index]) {
                    e.preventDefault();
                }
                var currentScrollTime = new Date().getTime();
                e = e || window.event;
                var value = e.originalEvent.wheelDelta || -e.originalEvent.deltaY || -e.originalEvent.detail;
                var delta = Math.max(-1, Math.min(1, value));
                if (scrollSamples.length > 149) {
                    scrollSamples.shift();
                }
                scrollSamples.push(Math.abs(value));
                if (currentScrollTime - scrollTime > 200) {
                    scrollSamples = [];
                }
                scrollTime = currentScrollTime;
                if (locked) {
                    return !1;
                }
                if (delta < 0) {
                    if (index < heights.length - 1) {
                        if (atBottom()) {
                            if (isAccelerating(scrollSamples)) {
                                e.preventDefault();
                                index++;
                                locked = !0;
                                animateScroll(index, !1, !0, !1);
                            } else {
                                return !1;
                            }
                        }
                    }
                } else if (delta > 0) {
                    if (index > 0) {
                        if (atTop()) {
                            if (isAccelerating(scrollSamples)) {
                                e.preventDefault();
                                index--;
                                locked = !0;
                                animateScroll(index, !1, !0, !1);
                            } else {
                                return !1;
                            }
                        }
                    }
                }
            },
            keyHandler: function (e) {
                if (disabled === !0 || document.activeElement.readOnly === !1) {
                    return !0;
                } else if (settings.standardScrollElements) {
                    if ($(e.target).is(settings.standardScrollElements) || $(e.target).closest(settings.standardScrollElements).length) {
                        return !0;
                    }
                }
                if (locked === !0) {
                    return !1;
                }
                if (e.keyCode == 38 || e.keyCode == 33) {
                    if (index > 0) {
                        if (atTop()) {
                            e.preventDefault();
                            index--;
                            animateScroll(index, !1, !0, !1);
                        }
                    }
                } else if (e.keyCode == 40 || e.keyCode == 34) {
                    if (index < heights.length - 1) {
                        if (atBottom()) {
                            e.preventDefault();
                            index++;
                            animateScroll(index, !1, !0, !1);
                        }
                    }
                }
            },
            init: function () {
                if (settings.scrollbars) {
                    $window.on("mousedown", manualScroll.handleMousedown);
                    $window.on("mouseup", manualScroll.handleMouseup);
                    $window.on("scroll", manualScroll.handleScroll);
                } else {
                    $("body").css({ overflow: "hidden" });
                }
                $window.on(wheelEvent, manualScroll.wheelHandler);
                $window.on("keydown", manualScroll.keyHandler);
            },
        };
        swipeScroll = {
            touches: { touchstart: { y: -1, x: -1 }, touchmove: { y: -1, x: -1 }, touchend: !1, direction: "undetermined" },
            options: { distance: 30, timeGap: 800, timeStamp: new Date().getTime() },
            touchHandler: function (event) {
                if (disabled === !0) {
                    return !0;
                } else if (settings.standardScrollElements) {
                    if ($(event.target).is(settings.standardScrollElements) || $(event.target).closest(settings.standardScrollElements).length) {
                        return !0;
                    }
                }
                var touch;
                if (typeof event !== "undefined") {
                    if (typeof event.touches !== "undefined") {
                        touch = event.touches[0];
                        switch (event.type) {
                            case "touchstart":
                                swipeScroll.touches.touchstart.y = touch.pageY;
                                swipeScroll.touches.touchmove.y = -1;
                                swipeScroll.touches.touchstart.x = touch.pageX;
                                swipeScroll.touches.touchmove.x = -1;
                                swipeScroll.options.timeStamp = new Date().getTime();
                                swipeScroll.touches.touchend = !1;
                            case "touchmove":
                                swipeScroll.touches.touchmove.y = touch.pageY;
                                swipeScroll.touches.touchmove.x = touch.pageX;
                                if (
                                    swipeScroll.touches.touchstart.y !== swipeScroll.touches.touchmove.y &&
                                    Math.abs(swipeScroll.touches.touchstart.y - swipeScroll.touches.touchmove.y) > Math.abs(swipeScroll.touches.touchstart.x - swipeScroll.touches.touchmove.x)
                                ) {
                                    event.preventDefault();
                                    swipeScroll.touches.direction = "y";
                                    if (swipeScroll.options.timeStamp + swipeScroll.options.timeGap < new Date().getTime() && swipeScroll.touches.touchend == !1) {
                                        swipeScroll.touches.touchend = !0;
                                        if (swipeScroll.touches.touchstart.y > -1) {
                                            if (Math.abs(swipeScroll.touches.touchmove.y - swipeScroll.touches.touchstart.y) > swipeScroll.options.distance) {
                                                if (swipeScroll.touches.touchstart.y < swipeScroll.touches.touchmove.y) {
                                                    swipeScroll.up();
                                                } else {
                                                    swipeScroll.down();
                                                }
                                            }
                                        }
                                    }
                                }
                                break;
                            case "touchend":
                                if (swipeScroll.touches[event.type] === !1) {
                                    swipeScroll.touches[event.type] = !0;
                                    if (swipeScroll.touches.touchstart.y > -1 && swipeScroll.touches.touchmove.y > -1 && swipeScroll.touches.direction === "y") {
                                        if (Math.abs(swipeScroll.touches.touchmove.y - swipeScroll.touches.touchstart.y) > swipeScroll.options.distance) {
                                            if (swipeScroll.touches.touchstart.y < swipeScroll.touches.touchmove.y) {
                                                swipeScroll.up();
                                            } else {
                                                swipeScroll.down();
                                            }
                                        }
                                        swipeScroll.touches.touchstart.y = -1;
                                        swipeScroll.touches.touchstart.x = -1;
                                        swipeScroll.touches.direction = "undetermined";
                                    }
                                }
                            default:
                                break;
                        }
                    }
                }
            },
            down: function () {
                if (index < heights.length) {
                    if (atBottom() && index < heights.length - 1) {
                        index++;
                        animateScroll(index, !1, !0, !1);
                    } else {
                        portHeight = getportHeight();
                        if (Math.floor(elements[index].height() / portHeight) > interstitialIndex) {
                            interstitialScroll(parseInt(heights[index]) + portHeight * interstitialIndex);
                            interstitialIndex += 1;
                        } else {
                            interstitialScroll(parseInt(heights[index]) + (elements[index].outerHeight() - portHeight));
                        }
                    }
                }
            },
            up: function () {
                if (index >= 0) {
                    if (atTop() && index > 0) {
                        index--;
                        animateScroll(index, !1, !0, !1);
                    } else {
                        if (interstitialIndex > 2) {
                            portHeight = getportHeight();
                            interstitialIndex -= 1;
                            interstitialScroll(parseInt(heights[index]) + portHeight * interstitialIndex);
                        } else {
                            interstitialIndex = 1;
                            interstitialScroll(parseInt(heights[index]));
                        }
                    }
                }
            },
            init: function () {
                if (document.addEventListener && settings.touchScroll) {
                    var eventListenerOptions = { passive: !1 };
                    document.addEventListener("touchstart", swipeScroll.touchHandler, eventListenerOptions);
                    document.addEventListener("touchmove", swipeScroll.touchHandler, eventListenerOptions);
                    document.addEventListener("touchend", swipeScroll.touchHandler, eventListenerOptions);
                }
            },
        };
        util = {
            refresh: function (withCallback, scroll) {
                clearTimeout(timeoutId2);
                timeoutId2 = setTimeout(function () {
                    sizePanels(!0);
                    calculatePositions(scroll, !1);
                    if (withCallback) {
                        settings.afterResize();
                    }
                }, 400);
            },
            handleUpdate: function () {
                util.refresh(!1, !1);
            },
            handleResize: function () {
                util.refresh(!0, !1);
            },
            handleOrientation: function () {
                util.refresh(!0, !0);
            },
        };
        settings = $.extend(settings, options);
        sizePanels(!1);
        calculatePositions(!1, !0);
        if (!0 === hasLocation) {
            animateScroll(index, !1, !0, !0);
        } else {
            setTimeout(function () {
                manualScroll.calculateNearest(!0, !1);
            }, 200);
        }
        if (heights.length) {
            manualScroll.init();
            swipeScroll.init();
            $window.on("resize", util.handleResize);
            if (document.addEventListener) {
                window.addEventListener("orientationchange", util.handleOrientation, !1);
            }
        }
        function interstitialScroll(pos) {
            if ($().velocity) {
                $(settings.target).stop().velocity("scroll", { duration: settings.scrollSpeed, easing: settings.easing, offset: pos, mobileHA: !1 });
            } else {
                $(settings.target).stop().animate({ scrollTop: pos }, settings.scrollSpeed, settings.easing);
            }
        }
        function sizePanels(keepPosition) {
            if (keepPosition) {
                top = $window.scrollTop();
            }
            var selector = settings.section;
            overflow = [];
            if (settings.interstitialSection.length) {
                selector += "," + settings.interstitialSection;
            }
            if (settings.scrollbars === !1) {
                settings.overflowScroll = !1;
            }
            portHeight = getportHeight();
            $(selector).each(function (i) {
                var $this = $(this);
                if (settings.setHeights) {
                    if ($this.is(settings.interstitialSection)) {
                        overflow[i] = !1;
                    } else {
                        if ($this.css("height", "auto").outerHeight() < portHeight || $this.css("overflow") === "hidden") {
                            $this.css({ height: portHeight });
                            overflow[i] = !1;
                        } else {
                            $this.css({ height: $this.height() });
                            if (settings.overflowScroll) {
                                overflow[i] = !0;
                            } else {
                                overflow[i] = !1;
                            }
                        }
                    }
                } else {
                    if ($this.outerHeight() < portHeight || settings.overflowScroll === !1) {
                        overflow[i] = !1;
                    } else {
                        overflow[i] = !0;
                    }
                }
            });
            if (keepPosition) {
                $window.scrollTop(top);
            }
        }
        function calculatePositions(scroll, firstLoad) {
            var selector = settings.section;
            if (settings.interstitialSection.length) {
                selector += "," + settings.interstitialSection;
            }
            heights = [];
            names = [];
            elements = [];
            $(selector).each(function (i) {
                var $this = $(this);
                if (i > 0) {
                    heights[i] = parseInt($this.offset().top) + settings.offset;
                } else {
                    heights[i] = parseInt($this.offset().top);
                }
                if (settings.sectionName && $this.data(settings.sectionName)) {
                    names[i] = "#" + $this.data(settings.sectionName).toString().replace(/ /g, "-");
                } else {
                    if ($this.is(settings.interstitialSection) === !1) {
                        names[i] = "#" + (i + 1);
                    } else {
                        names[i] = "#";
                        if (i === $(selector).length - 1 && i > 1) {
                            heights[i] = heights[i - 1] + (parseInt($($(selector)[i - 1]).outerHeight()) - parseInt($(window).height())) + parseInt($this.outerHeight());
                        }
                    }
                }
                elements[i] = $this;
                try {
                    if ($(names[i]).length && window.console) {
                        console.warn("Scrollify warning: Section names can't match IDs - this will cause the browser to anchor.");
                    }
                } catch (e) {}
                if (window.location.hash === names[i]) {
                    index = i;
                    hasLocation = !0;
                }
            });
            if (!0 === scroll) {
                animateScroll(index, !1, !1, !1);
            }
        }
        function atTop() {
            if (!overflow[index]) {
                return !0;
            }
            top = $window.scrollTop();
            if (top > parseInt(heights[index])) {
                return !1;
            } else {
                return !0;
            }
        }
        function atBottom() {
            if (!overflow[index]) {
                return !0;
            }
            top = $window.scrollTop();
            portHeight = getportHeight();
            if (top < parseInt(heights[index]) + (elements[index].outerHeight() - portHeight) - 28) {
                return !1;
            } else {
                return !0;
            }
        }
    };
    function move(panel, instant) {
        var z = names.length;
        for (; z >= 0; z--) {
            if (typeof panel === "string") {
                if (names[z] === panel) {
                    index = z;
                    animateScroll(z, instant, !0, !0);
                }
            } else {
                if (z === panel) {
                    index = z;
                    animateScroll(z, instant, !0, !0);
                }
            }
        }
    }
    scrollify.move = function (panel) {
        if (panel === undefined) {
            return !1;
        }
        if (panel.originalEvent) {
            panel = $(this).attr("href");
        }
        move(panel, !1);
    };
    scrollify.instantMove = function (panel) {
        if (panel === undefined) {
            return !1;
        }
        move(panel, !0);
    };
    scrollify.next = function () {
        if (index < names.length) {
            index += 1;
            animateScroll(index, !1, !0, !0);
        }
    };
    scrollify.previous = function () {
        if (index > 0) {
            index -= 1;
            animateScroll(index, !1, !0, !0);
        }
    };
    scrollify.instantNext = function () {
        if (index < names.length) {
            index += 1;
            animateScroll(index, !0, !0, !0);
        }
    };
    scrollify.instantPrevious = function () {
        if (index > 0) {
            index -= 1;
            animateScroll(index, !0, !0, !0);
        }
    };
    scrollify.destroy = function () {
        if (!initialised) {
            return !1;
        }
        if (settings.setHeights) {
            $(settings.section).each(function () {
                $(this).css("height", "auto");
            });
        }
        $window.off("resize", util.handleResize);
        if (settings.scrollbars) {
            $window.off("mousedown", manualScroll.handleMousedown);
            $window.off("mouseup", manualScroll.handleMouseup);
            $window.off("scroll", manualScroll.handleScroll);
        }
        $window.off(wheelEvent, manualScroll.wheelHandler);
        $window.off("keydown", manualScroll.keyHandler);
        if (document.addEventListener && settings.touchScroll) {
            document.removeEventListener("touchstart", swipeScroll.touchHandler, !1);
            document.removeEventListener("touchmove", swipeScroll.touchHandler, !1);
            document.removeEventListener("touchend", swipeScroll.touchHandler, !1);
        }
        heights = [];
        names = [];
        elements = [];
        overflow = [];
    };
    scrollify.update = function () {
        if (!initialised) {
            return !1;
        }
        util.handleUpdate();
    };
    scrollify.current = function () {
        return elements[index];
    };
    scrollify.currentIndex = function () {
        return index;
    };
    scrollify.disable = function () {
        disabled = !0;
    };
    scrollify.enable = function () {
        disabled = !1;
        if (initialised) {
            manualScroll.calculateNearest(!1, !1);
        }
    };
    scrollify.isDisabled = function () {
        return disabled;
    };
    scrollify.setOptions = function (updatedOptions) {
        if (!initialised) {
            return !1;
        }
        if (typeof updatedOptions === "object") {
            settings = $.extend(settings, updatedOptions);
            util.handleUpdate();
        } else if (window.console) {
            console.warn("Scrollify warning: setOptions expects an object.");
        }
    };
    $.scrollify = scrollify;
    return scrollify;
});
!(function (a, b, c, d) {
    function e(b, c) {
        (this.settings = null),
            (this.options = a.extend({}, e.Defaults, c)),
            (this.$element = a(b)),
            (this._handlers = {}),
            (this._plugins = {}),
            (this._supress = {}),
            (this._current = null),
            (this._speed = null),
            (this._coordinates = []),
            (this._breakpoint = null),
            (this._width = null),
            (this._items = []),
            (this._clones = []),
            (this._mergers = []),
            (this._widths = []),
            (this._invalidated = {}),
            (this._pipe = []),
            (this._drag = { time: null, target: null, pointer: null, stage: { start: null, current: null }, direction: null }),
            (this._states = { current: {}, tags: { initializing: ["busy"], animating: ["busy"], dragging: ["interacting"] } }),
            a.each(
                ["onResize", "onThrottledResize"],
                a.proxy(function (b, c) {
                    this._handlers[c] = a.proxy(this[c], this);
                }, this)
            ),
            a.each(
                e.Plugins,
                a.proxy(function (a, b) {
                    this._plugins[a.charAt(0).toLowerCase() + a.slice(1)] = new b(this);
                }, this)
            ),
            a.each(
                e.Workers,
                a.proxy(function (b, c) {
                    this._pipe.push({ filter: c.filter, run: a.proxy(c.run, this) });
                }, this)
            ),
            this.setup(),
            this.initialize();
    }
    (e.Defaults = {
        items: 3,
        loop: !1,
        center: !1,
        rewind: !1,
        mouseDrag: !0,
        touchDrag: !0,
        pullDrag: !0,
        freeDrag: !1,
        margin: 0,
        stagePadding: 0,
        merge: !1,
        mergeFit: !0,
        autoWidth: !1,
        startPosition: 0,
        rtl: !1,
        smartSpeed: 250,
        fluidSpeed: !1,
        dragEndSpeed: !1,
        responsive: {},
        responsiveRefreshRate: 200,
        responsiveBaseElement: b,
        fallbackEasing: "swing",
        info: !1,
        nestedItemSelector: !1,
        itemElement: "div",
        stageElement: "div",
        refreshClass: "owl-refresh",
        loadedClass: "owl-loaded",
        loadingClass: "owl-loading",
        rtlClass: "owl-rtl",
        responsiveClass: "owl-responsive",
        dragClass: "owl-drag",
        itemClass: "owl-item",
        stageClass: "owl-stage",
        stageOuterClass: "owl-stage-outer",
        grabClass: "owl-grab",
    }),
        (e.Width = { Default: "default", Inner: "inner", Outer: "outer" }),
        (e.Type = { Event: "event", State: "state" }),
        (e.Plugins = {}),
        (e.Workers = [
            {
                filter: ["width", "settings"],
                run: function () {
                    this._width = this.$element.width();
                },
            },
            {
                filter: ["width", "items", "settings"],
                run: function (a) {
                    a.current = this._items && this._items[this.relative(this._current)];
                },
            },
            {
                filter: ["items", "settings"],
                run: function () {
                    this.$stage.children(".cloned").remove();
                },
            },
            {
                filter: ["width", "items", "settings"],
                run: function (a) {
                    var b = this.settings.margin || "",
                        c = !this.settings.autoWidth,
                        d = this.settings.rtl,
                        e = { width: "auto", "margin-left": d ? b : "", "margin-right": d ? "" : b };
                    !c && this.$stage.children().css(e), (a.css = e);
                },
            },
            {
                filter: ["width", "items", "settings"],
                run: function (a) {
                    var b = (this.width() / this.settings.items).toFixed(3) - this.settings.margin,
                        c = null,
                        d = this._items.length,
                        e = !this.settings.autoWidth,
                        f = [];
                    for (a.items = { merge: !1, width: b }; d--; )
                        (c = this._mergers[d]), (c = (this.settings.mergeFit && Math.min(c, this.settings.items)) || c), (a.items.merge = c > 1 || a.items.merge), (f[d] = e ? b * c : this._items[d].width());
                    this._widths = f;
                },
            },
            {
                filter: ["items", "settings"],
                run: function () {
                    var b = [],
                        c = this._items,
                        d = this.settings,
                        e = Math.max(2 * d.items, 4),
                        f = 2 * Math.ceil(c.length / 2),
                        g = d.loop && c.length ? (d.rewind ? e : Math.max(e, f)) : 0,
                        h = "",
                        i = "";
                    for (g /= 2; g--; ) b.push(this.normalize(b.length / 2, !0)), (h += c[b[b.length - 1]][0].outerHTML), b.push(this.normalize(c.length - 1 - (b.length - 1) / 2, !0)), (i = c[b[b.length - 1]][0].outerHTML + i);
                    (this._clones = b), a(h).addClass("cloned").appendTo(this.$stage), a(i).addClass("cloned").prependTo(this.$stage);
                },
            },
            {
                filter: ["width", "items", "settings"],
                run: function () {
                    for (var a = this.settings.rtl ? 1 : -1, b = this._clones.length + this._items.length, c = -1, d = 0, e = 0, f = []; ++c < b; )
                        (d = f[c - 1] || 0), (e = this._widths[this.relative(c)] + this.settings.margin), f.push(d + e * a);
                    this._coordinates = f;
                },
            },
            {
                filter: ["width", "items", "settings"],
                run: function () {
                    var a = this.settings.stagePadding,
                        b = this._coordinates,
                        c = { width: Math.ceil(Math.abs(b[b.length - 1])) + 2 * a, "padding-left": a || "", "padding-right": a || "" };
                    this.$stage.css(c);
                },
            },
            {
                filter: ["width", "items", "settings"],
                run: function (a) {
                    var b = this._coordinates.length,
                        c = !this.settings.autoWidth,
                        d = this.$stage.children();
                    if (c && a.items.merge) for (; b--; ) (a.css.width = this._widths[this.relative(b)]), d.eq(b).css(a.css);
                    else c && ((a.css.width = a.items.width), d.css(a.css));
                },
            },
            {
                filter: ["items"],
                run: function () {
                    this._coordinates.length < 1 && this.$stage.removeAttr("style");
                },
            },
            {
                filter: ["width", "items", "settings"],
                run: function (a) {
                    (a.current = a.current ? this.$stage.children().index(a.current) : 0), (a.current = Math.max(this.minimum(), Math.min(this.maximum(), a.current))), this.reset(a.current);
                },
            },
            {
                filter: ["position"],
                run: function () {
                    this.animate(this.coordinates(this._current));
                },
            },
            {
                filter: ["width", "position", "items", "settings"],
                run: function () {
                    var a,
                        b,
                        c,
                        d,
                        e = this.settings.rtl ? 1 : -1,
                        f = 2 * this.settings.stagePadding,
                        g = this.coordinates(this.current()) + f,
                        h = g + this.width() * e,
                        i = [];
                    for (c = 0, d = this._coordinates.length; c < d; c++)
                        (a = this._coordinates[c - 1] || 0), (b = Math.abs(this._coordinates[c]) + f * e), ((this.op(a, "<=", g) && this.op(a, ">", h)) || (this.op(b, "<", g) && this.op(b, ">", h))) && i.push(c);
                    this.$stage.children(".active").removeClass("active"),
                        this.$stage.children(":eq(" + i.join("), :eq(") + ")").addClass("active"),
                        this.settings.center && (this.$stage.children(".center").removeClass("center"), this.$stage.children().eq(this.current()).addClass("center"));
                },
            },
        ]),
        (e.prototype.initialize = function () {
            if ((this.enter("initializing"), this.trigger("initialize"), this.$element.toggleClass(this.settings.rtlClass, this.settings.rtl), this.settings.autoWidth && !this.is("pre-loading"))) {
                var b, c, e;
                (b = this.$element.find("img")), (c = this.settings.nestedItemSelector ? "." + this.settings.nestedItemSelector : d), (e = this.$element.children(c).width()), b.length && e <= 0 && this.preloadAutoWidthImages(b);
            }
            this.$element.addClass(this.options.loadingClass),
                (this.$stage = a("<" + this.settings.stageElement + ' class="' + this.settings.stageClass + '"/>').wrap('<div class="' + this.settings.stageOuterClass + '"/>')),
                this.$element.append(this.$stage.parent()),
                this.replace(this.$element.children().not(this.$stage.parent())),
                this.$element.is(":visible") ? this.refresh() : this.invalidate("width"),
                this.$element.removeClass(this.options.loadingClass).addClass(this.options.loadedClass),
                this.registerEventHandlers(),
                this.leave("initializing"),
                this.trigger("initialized");
        }),
        (e.prototype.setup = function () {
            var b = this.viewport(),
                c = this.options.responsive,
                d = -1,
                e = null;
            c
                ? (a.each(c, function (a) {
                      a <= b && a > d && (d = Number(a));
                  }),
                  (e = a.extend({}, this.options, c[d])),
                  "function" == typeof e.stagePadding && (e.stagePadding = e.stagePadding()),
                  delete e.responsive,
                  e.responsiveClass && this.$element.attr("class", this.$element.attr("class").replace(new RegExp("(" + this.options.responsiveClass + "-)\\S+\\s", "g"), "$1" + d)))
                : (e = a.extend({}, this.options)),
                this.trigger("change", { property: { name: "settings", value: e } }),
                (this._breakpoint = d),
                (this.settings = e),
                this.invalidate("settings"),
                this.trigger("changed", { property: { name: "settings", value: this.settings } });
        }),
        (e.prototype.optionsLogic = function () {
            this.settings.autoWidth && ((this.settings.stagePadding = !1), (this.settings.merge = !1));
        }),
        (e.prototype.prepare = function (b) {
            var c = this.trigger("prepare", { content: b });
            return (
                c.data ||
                    (c.data = a("<" + this.settings.itemElement + "/>")
                        .addClass(this.options.itemClass)
                        .append(b)),
                this.trigger("prepared", { content: c.data }),
                c.data
            );
        }),
        (e.prototype.update = function () {
            for (
                var b = 0,
                    c = this._pipe.length,
                    d = a.proxy(function (a) {
                        return this[a];
                    }, this._invalidated),
                    e = {};
                b < c;

            )
                (this._invalidated.all || a.grep(this._pipe[b].filter, d).length > 0) && this._pipe[b].run(e), b++;
            (this._invalidated = {}), !this.is("valid") && this.enter("valid");
        }),
        (e.prototype.width = function (a) {
            switch ((a = a || e.Width.Default)) {
                case e.Width.Inner:
                case e.Width.Outer:
                    return this._width;
                default:
                    return this._width - 2 * this.settings.stagePadding + this.settings.margin;
            }
        }),
        (e.prototype.refresh = function () {
            this.enter("refreshing"),
                this.trigger("refresh"),
                this.setup(),
                this.optionsLogic(),
                this.$element.addClass(this.options.refreshClass),
                this.update(),
                this.$element.removeClass(this.options.refreshClass),
                this.leave("refreshing"),
                this.trigger("refreshed");
        }),
        (e.prototype.onThrottledResize = function () {
            b.clearTimeout(this.resizeTimer), (this.resizeTimer = b.setTimeout(this._handlers.onResize, this.settings.responsiveRefreshRate));
        }),
        (e.prototype.onResize = function () {
            return (
                !!this._items.length &&
                this._width !== this.$element.width() &&
                !!this.$element.is(":visible") &&
                (this.enter("resizing"), this.trigger("resize").isDefaultPrevented() ? (this.leave("resizing"), !1) : (this.invalidate("width"), this.refresh(), this.leave("resizing"), void this.trigger("resized")))
            );
        }),
        (e.prototype.registerEventHandlers = function () {
            a.support.transition && this.$stage.on(a.support.transition.end + ".owl.core", a.proxy(this.onTransitionEnd, this)),
                this.settings.responsive !== !1 && this.on(b, "resize", this._handlers.onThrottledResize),
                this.settings.mouseDrag &&
                    (this.$element.addClass(this.options.dragClass),
                    this.$stage.on("mousedown.owl.core", a.proxy(this.onDragStart, this)),
                    this.$stage.on("dragstart.owl.core selectstart.owl.core", function () {
                        return !1;
                    })),
                this.settings.touchDrag && (this.$stage.on("touchstart.owl.core", a.proxy(this.onDragStart, this)), this.$stage.on("touchcancel.owl.core", a.proxy(this.onDragEnd, this)));
        }),
        (e.prototype.onDragStart = function (b) {
            var d = null;
            3 !== b.which &&
                (a.support.transform
                    ? ((d = this.$stage
                          .css("transform")
                          .replace(/.*\(|\)| /g, "")
                          .split(",")),
                      (d = { x: d[16 === d.length ? 12 : 4], y: d[16 === d.length ? 13 : 5] }))
                    : ((d = this.$stage.position()), (d = { x: this.settings.rtl ? d.left + this.$stage.width() - this.width() + this.settings.margin : d.left, y: d.top })),
                this.is("animating") && (a.support.transform ? this.animate(d.x) : this.$stage.stop(), this.invalidate("position")),
                this.$element.toggleClass(this.options.grabClass, "mousedown" === b.type),
                this.speed(0),
                (this._drag.time = new Date().getTime()),
                (this._drag.target = a(b.target)),
                (this._drag.stage.start = d),
                (this._drag.stage.current = d),
                (this._drag.pointer = this.pointer(b)),
                a(c).on("mouseup.owl.core touchend.owl.core", a.proxy(this.onDragEnd, this)),
                a(c).one(
                    "mousemove.owl.core touchmove.owl.core",
                    a.proxy(function (b) {
                        var d = this.difference(this._drag.pointer, this.pointer(b));
                        a(c).on("mousemove.owl.core touchmove.owl.core", a.proxy(this.onDragMove, this)), (Math.abs(d.x) < Math.abs(d.y) && this.is("valid")) || (b.preventDefault(), this.enter("dragging"), this.trigger("drag"));
                    }, this)
                ));
        }),
        (e.prototype.onDragMove = function (a) {
            var b = null,
                c = null,
                d = null,
                e = this.difference(this._drag.pointer, this.pointer(a)),
                f = this.difference(this._drag.stage.start, e);
            this.is("dragging") &&
                (a.preventDefault(),
                this.settings.loop
                    ? ((b = this.coordinates(this.minimum())), (c = this.coordinates(this.maximum() + 1) - b), (f.x = ((((f.x - b) % c) + c) % c) + b))
                    : ((b = this.settings.rtl ? this.coordinates(this.maximum()) : this.coordinates(this.minimum())),
                      (c = this.settings.rtl ? this.coordinates(this.minimum()) : this.coordinates(this.maximum())),
                      (d = this.settings.pullDrag ? (-1 * e.x) / 5 : 0),
                      (f.x = Math.max(Math.min(f.x, b + d), c + d))),
                (this._drag.stage.current = f),
                this.animate(f.x));
        }),
        (e.prototype.onDragEnd = function (b) {
            var d = this.difference(this._drag.pointer, this.pointer(b)),
                e = this._drag.stage.current,
                f = (d.x > 0) ^ this.settings.rtl ? "left" : "right";
            a(c).off(".owl.core"),
                this.$element.removeClass(this.options.grabClass),
                ((0 !== d.x && this.is("dragging")) || !this.is("valid")) &&
                    (this.speed(this.settings.dragEndSpeed || this.settings.smartSpeed),
                    this.current(this.closest(e.x, 0 !== d.x ? f : this._drag.direction)),
                    this.invalidate("position"),
                    this.update(),
                    (this._drag.direction = f),
                    (Math.abs(d.x) > 3 || new Date().getTime() - this._drag.time > 300) &&
                        this._drag.target.one("click.owl.core", function () {
                            return !1;
                        })),
                this.is("dragging") && (this.leave("dragging"), this.trigger("dragged"));
        }),
        (e.prototype.closest = function (b, c) {
            var d = -1,
                e = 30,
                f = this.width(),
                g = this.coordinates();
            return (
                this.settings.freeDrag ||
                    a.each(
                        g,
                        a.proxy(function (a, h) {
                            return (
                                "left" === c && b > h - e && b < h + e ? (d = a) : "right" === c && b > h - f - e && b < h - f + e ? (d = a + 1) : this.op(b, "<", h) && this.op(b, ">", g[a + 1] || h - f) && (d = "left" === c ? a + 1 : a),
                                d === -1
                            );
                        }, this)
                    ),
                this.settings.loop || (this.op(b, ">", g[this.minimum()]) ? (d = b = this.minimum()) : this.op(b, "<", g[this.maximum()]) && (d = b = this.maximum())),
                d
            );
        }),
        (e.prototype.animate = function (b) {
            var c = this.speed() > 0;
            this.is("animating") && this.onTransitionEnd(),
                c && (this.enter("animating"), this.trigger("translate")),
                a.support.transform3d && a.support.transition
                    ? this.$stage.css({ transform: "translate3d(" + b + "px,0px,0px)", transition: this.speed() / 1e3 + "s" })
                    : c
                    ? this.$stage.animate({ left: b + "px" }, this.speed(), this.settings.fallbackEasing, a.proxy(this.onTransitionEnd, this))
                    : this.$stage.css({ left: b + "px" });
        }),
        (e.prototype.is = function (a) {
            return this._states.current[a] && this._states.current[a] > 0;
        }),
        (e.prototype.current = function (a) {
            if (a === d) return this._current;
            if (0 === this._items.length) return d;
            if (((a = this.normalize(a)), this._current !== a)) {
                var b = this.trigger("change", { property: { name: "position", value: a } });
                b.data !== d && (a = this.normalize(b.data)), (this._current = a), this.invalidate("position"), this.trigger("changed", { property: { name: "position", value: this._current } });
            }
            return this._current;
        }),
        (e.prototype.invalidate = function (b) {
            return (
                "string" === a.type(b) && ((this._invalidated[b] = !0), this.is("valid") && this.leave("valid")),
                a.map(this._invalidated, function (a, b) {
                    return b;
                })
            );
        }),
        (e.prototype.reset = function (a) {
            (a = this.normalize(a)), a !== d && ((this._speed = 0), (this._current = a), this.suppress(["translate", "translated"]), this.animate(this.coordinates(a)), this.release(["translate", "translated"]));
        }),
        (e.prototype.normalize = function (a, b) {
            var c = this._items.length,
                e = b ? 0 : this._clones.length;
            return !this.isNumeric(a) || c < 1 ? (a = d) : (a < 0 || a >= c + e) && (a = ((((a - e / 2) % c) + c) % c) + e / 2), a;
        }),
        (e.prototype.relative = function (a) {
            return (a -= this._clones.length / 2), this.normalize(a, !0);
        }),
        (e.prototype.maximum = function (a) {
            var b,
                c,
                d,
                e = this.settings,
                f = this._coordinates.length;
            if (e.loop) f = this._clones.length / 2 + this._items.length - 1;
            else if (e.autoWidth || e.merge) {
                for (b = this._items.length, c = this._items[--b].width(), d = this.$element.width(); b-- && ((c += this._items[b].width() + this.settings.margin), !(c > d)); );
                f = b + 1;
            } else f = e.center ? this._items.length - 1 : this._items.length - e.items;
            return a && (f -= this._clones.length / 2), Math.max(f, 0);
        }),
        (e.prototype.minimum = function (a) {
            return a ? 0 : this._clones.length / 2;
        }),
        (e.prototype.items = function (a) {
            return a === d ? this._items.slice() : ((a = this.normalize(a, !0)), this._items[a]);
        }),
        (e.prototype.mergers = function (a) {
            return a === d ? this._mergers.slice() : ((a = this.normalize(a, !0)), this._mergers[a]);
        }),
        (e.prototype.clones = function (b) {
            var c = this._clones.length / 2,
                e = c + this._items.length,
                f = function (a) {
                    return a % 2 === 0 ? e + a / 2 : c - (a + 1) / 2;
                };
            return b === d
                ? a.map(this._clones, function (a, b) {
                      return f(b);
                  })
                : a.map(this._clones, function (a, c) {
                      return a === b ? f(c) : null;
                  });
        }),
        (e.prototype.speed = function (a) {
            return a !== d && (this._speed = a), this._speed;
        }),
        (e.prototype.coordinates = function (b) {
            var c,
                e = 1,
                f = b - 1;
            return b === d
                ? a.map(
                      this._coordinates,
                      a.proxy(function (a, b) {
                          return this.coordinates(b);
                      }, this)
                  )
                : (this.settings.center ? (this.settings.rtl && ((e = -1), (f = b + 1)), (c = this._coordinates[b]), (c += ((this.width() - c + (this._coordinates[f] || 0)) / 2) * e)) : (c = this._coordinates[f] || 0), (c = Math.ceil(c)));
        }),
        (e.prototype.duration = function (a, b, c) {
            return 0 === c ? 0 : Math.min(Math.max(Math.abs(b - a), 1), 6) * Math.abs(c || this.settings.smartSpeed);
        }),
        (e.prototype.to = function (a, b) {
            var c = this.current(),
                d = null,
                e = a - this.relative(c),
                f = (e > 0) - (e < 0),
                g = this._items.length,
                h = this.minimum(),
                i = this.maximum();
            this.settings.loop
                ? (!this.settings.rewind && Math.abs(e) > g / 2 && (e += f * -1 * g), (a = c + e), (d = ((((a - h) % g) + g) % g) + h), d !== a && d - e <= i && d - e > 0 && ((c = d - e), (a = d), this.reset(c)))
                : this.settings.rewind
                ? ((i += 1), (a = ((a % i) + i) % i))
                : (a = Math.max(h, Math.min(i, a))),
                this.speed(this.duration(c, a, b)),
                this.current(a),
                this.$element.is(":visible") && this.update();
        }),
        (e.prototype.next = function (a) {
            (a = a || !1), this.to(this.relative(this.current()) + 1, a);
        }),
        (e.prototype.prev = function (a) {
            (a = a || !1), this.to(this.relative(this.current()) - 1, a);
        }),
        (e.prototype.onTransitionEnd = function (a) {
            if (a !== d && (a.stopPropagation(), (a.target || a.srcElement || a.originalTarget) !== this.$stage.get(0))) return !1;
            this.leave("animating"), this.trigger("translated");
        }),
        (e.prototype.viewport = function () {
            var d;
            return (
                this.options.responsiveBaseElement !== b
                    ? (d = a(this.options.responsiveBaseElement).width())
                    : b.innerWidth
                    ? (d = b.innerWidth)
                    : c.documentElement && c.documentElement.clientWidth
                    ? (d = c.documentElement.clientWidth)
                    : console.warn("Can not detect viewport width."),
                d
            );
        }),
        (e.prototype.replace = function (b) {
            this.$stage.empty(),
                (this._items = []),
                b && (b = b instanceof jQuery ? b : a(b)),
                this.settings.nestedItemSelector && (b = b.find("." + this.settings.nestedItemSelector)),
                b
                    .filter(function () {
                        return 1 === this.nodeType;
                    })
                    .each(
                        a.proxy(function (a, b) {
                            (b = this.prepare(b)), this.$stage.append(b), this._items.push(b), this._mergers.push(1 * b.find("[data-merge]").addBack("[data-merge]").attr("data-merge") || 1);
                        }, this)
                    ),
                this.reset(this.isNumeric(this.settings.startPosition) ? this.settings.startPosition : 0),
                this.invalidate("items");
        }),
        (e.prototype.add = function (b, c) {
            var e = this.relative(this._current);
            (c = c === d ? this._items.length : this.normalize(c, !0)),
                (b = b instanceof jQuery ? b : a(b)),
                this.trigger("add", { content: b, position: c }),
                (b = this.prepare(b)),
                0 === this._items.length || c === this._items.length
                    ? (0 === this._items.length && this.$stage.append(b),
                      0 !== this._items.length && this._items[c - 1].after(b),
                      this._items.push(b),
                      this._mergers.push(1 * b.find("[data-merge]").addBack("[data-merge]").attr("data-merge") || 1))
                    : (this._items[c].before(b), this._items.splice(c, 0, b), this._mergers.splice(c, 0, 1 * b.find("[data-merge]").addBack("[data-merge]").attr("data-merge") || 1)),
                this._items[e] && this.reset(this._items[e].index()),
                this.invalidate("items"),
                this.trigger("added", { content: b, position: c });
        }),
        (e.prototype.remove = function (a) {
            (a = this.normalize(a, !0)),
                a !== d &&
                    (this.trigger("remove", { content: this._items[a], position: a }),
                    this._items[a].remove(),
                    this._items.splice(a, 1),
                    this._mergers.splice(a, 1),
                    this.invalidate("items"),
                    this.trigger("removed", { content: null, position: a }));
        }),
        (e.prototype.preloadAutoWidthImages = function (b) {
            b.each(
                a.proxy(function (b, c) {
                    this.enter("pre-loading"),
                        (c = a(c)),
                        a(new Image())
                            .one(
                                "load",
                                a.proxy(function (a) {
                                    c.attr("src", a.target.src), c.css("opacity", 1), this.leave("pre-loading"), !this.is("pre-loading") && !this.is("initializing") && this.refresh();
                                }, this)
                            )
                            .attr("src", c.attr("src") || c.attr("data-src") || c.attr("data-src-retina"));
                }, this)
            );
        }),
        (e.prototype.destroy = function () {
            this.$element.off(".owl.core"), this.$stage.off(".owl.core"), a(c).off(".owl.core"), this.settings.responsive !== !1 && (b.clearTimeout(this.resizeTimer), this.off(b, "resize", this._handlers.onThrottledResize));
            for (var d in this._plugins) this._plugins[d].destroy();
            this.$stage.children(".cloned").remove(),
                this.$stage.unwrap(),
                this.$stage.children().contents().unwrap(),
                this.$stage.children().unwrap(),
                this.$element
                    .removeClass(this.options.refreshClass)
                    .removeClass(this.options.loadingClass)
                    .removeClass(this.options.loadedClass)
                    .removeClass(this.options.rtlClass)
                    .removeClass(this.options.dragClass)
                    .removeClass(this.options.grabClass)
                    .attr("class", this.$element.attr("class").replace(new RegExp(this.options.responsiveClass + "-\\S+\\s", "g"), ""))
                    .removeData("owl.carousel");
        }),
        (e.prototype.op = function (a, b, c) {
            var d = this.settings.rtl;
            switch (b) {
                case "<":
                    return d ? a > c : a < c;
                case ">":
                    return d ? a < c : a > c;
                case ">=":
                    return d ? a <= c : a >= c;
                case "<=":
                    return d ? a >= c : a <= c;
            }
        }),
        (e.prototype.on = function (a, b, c, d) {
            a.addEventListener ? a.addEventListener(b, c, d) : a.attachEvent && a.attachEvent("on" + b, c);
        }),
        (e.prototype.off = function (a, b, c, d) {
            a.removeEventListener ? a.removeEventListener(b, c, d) : a.detachEvent && a.detachEvent("on" + b, c);
        }),
        (e.prototype.trigger = function (b, c, d, f, g) {
            var h = { item: { count: this._items.length, index: this.current() } },
                i = a.camelCase(
                    a
                        .grep(["on", b, d], function (a) {
                            return a;
                        })
                        .join("-")
                        .toLowerCase()
                ),
                j = a.Event([b, "owl", d || "carousel"].join(".").toLowerCase(), a.extend({ relatedTarget: this }, h, c));
            return (
                this._supress[b] ||
                    (a.each(this._plugins, function (a, b) {
                        b.onTrigger && b.onTrigger(j);
                    }),
                    this.register({ type: e.Type.Event, name: b }),
                    this.$element.trigger(j),
                    this.settings && "function" == typeof this.settings[i] && this.settings[i].call(this, j)),
                j
            );
        }),
        (e.prototype.enter = function (b) {
            a.each(
                [b].concat(this._states.tags[b] || []),
                a.proxy(function (a, b) {
                    this._states.current[b] === d && (this._states.current[b] = 0), this._states.current[b]++;
                }, this)
            );
        }),
        (e.prototype.leave = function (b) {
            a.each(
                [b].concat(this._states.tags[b] || []),
                a.proxy(function (a, b) {
                    this._states.current[b]--;
                }, this)
            );
        }),
        (e.prototype.register = function (b) {
            if (b.type === e.Type.Event) {
                if ((a.event.special[b.name] || (a.event.special[b.name] = {}), !a.event.special[b.name].owl)) {
                    var c = a.event.special[b.name]._default;
                    (a.event.special[b.name]._default = function (a) {
                        return !c || !c.apply || (a.namespace && a.namespace.indexOf("owl") !== -1) ? a.namespace && a.namespace.indexOf("owl") > -1 : c.apply(this, arguments);
                    }),
                        (a.event.special[b.name].owl = !0);
                }
            } else
                b.type === e.Type.State &&
                    (this._states.tags[b.name] ? (this._states.tags[b.name] = this._states.tags[b.name].concat(b.tags)) : (this._states.tags[b.name] = b.tags),
                    (this._states.tags[b.name] = a.grep(
                        this._states.tags[b.name],
                        a.proxy(function (c, d) {
                            return a.inArray(c, this._states.tags[b.name]) === d;
                        }, this)
                    )));
        }),
        (e.prototype.suppress = function (b) {
            a.each(
                b,
                a.proxy(function (a, b) {
                    this._supress[b] = !0;
                }, this)
            );
        }),
        (e.prototype.release = function (b) {
            a.each(
                b,
                a.proxy(function (a, b) {
                    delete this._supress[b];
                }, this)
            );
        }),
        (e.prototype.pointer = function (a) {
            var c = { x: null, y: null };
            return (
                (a = a.originalEvent || a || b.event),
                (a = a.touches && a.touches.length ? a.touches[0] : a.changedTouches && a.changedTouches.length ? a.changedTouches[0] : a),
                a.pageX ? ((c.x = a.pageX), (c.y = a.pageY)) : ((c.x = a.clientX), (c.y = a.clientY)),
                c
            );
        }),
        (e.prototype.isNumeric = function (a) {
            return !isNaN(parseFloat(a));
        }),
        (e.prototype.difference = function (a, b) {
            return { x: a.x - b.x, y: a.y - b.y };
        }),
        (a.fn.owlCarousel = function (b) {
            var c = Array.prototype.slice.call(arguments, 1);
            return this.each(function () {
                var d = a(this),
                    f = d.data("owl.carousel");
                f ||
                    ((f = new e(this, "object" == typeof b && b)),
                    d.data("owl.carousel", f),
                    a.each(["next", "prev", "to", "destroy", "refresh", "replace", "add", "remove"], function (b, c) {
                        f.register({ type: e.Type.Event, name: c }),
                            f.$element.on(
                                c + ".owl.carousel.core",
                                a.proxy(function (a) {
                                    a.namespace && a.relatedTarget !== this && (this.suppress([c]), f[c].apply(this, [].slice.call(arguments, 1)), this.release([c]));
                                }, f)
                            );
                    })),
                    "string" == typeof b && "_" !== b.charAt(0) && f[b].apply(f, c);
            });
        }),
        (a.fn.owlCarousel.Constructor = e);
})(window.Zepto || window.jQuery, window, document),
    (function (a, b, c, d) {
        var e = function (b) {
            (this._core = b),
                (this._interval = null),
                (this._visible = null),
                (this._handlers = {
                    "initialized.owl.carousel": a.proxy(function (a) {
                        a.namespace && this._core.settings.autoRefresh && this.watch();
                    }, this),
                }),
                (this._core.options = a.extend({}, e.Defaults, this._core.options)),
                this._core.$element.on(this._handlers);
        };
        (e.Defaults = { autoRefresh: !0, autoRefreshInterval: 500 }),
            (e.prototype.watch = function () {
                this._interval || ((this._visible = this._core.$element.is(":visible")), (this._interval = b.setInterval(a.proxy(this.refresh, this), this._core.settings.autoRefreshInterval)));
            }),
            (e.prototype.refresh = function () {
                this._core.$element.is(":visible") !== this._visible &&
                    ((this._visible = !this._visible), this._core.$element.toggleClass("owl-hidden", !this._visible), this._visible && this._core.invalidate("width") && this._core.refresh());
            }),
            (e.prototype.destroy = function () {
                var a, c;
                b.clearInterval(this._interval);
                for (a in this._handlers) this._core.$element.off(a, this._handlers[a]);
                for (c in Object.getOwnPropertyNames(this)) "function" != typeof this[c] && (this[c] = null);
            }),
            (a.fn.owlCarousel.Constructor.Plugins.AutoRefresh = e);
    })(window.Zepto || window.jQuery, window, document),
    (function (a, b, c, d) {
        var e = function (b) {
            (this._core = b),
                (this._loaded = []),
                (this._handlers = {
                    "initialized.owl.carousel change.owl.carousel resized.owl.carousel": a.proxy(function (b) {
                        if (b.namespace && this._core.settings && this._core.settings.lazyLoad && ((b.property && "position" == b.property.name) || "initialized" == b.type))
                            for (
                                var c = this._core.settings,
                                    e = (c.center && Math.ceil(c.items / 2)) || c.items,
                                    f = (c.center && e * -1) || 0,
                                    g = (b.property && b.property.value !== d ? b.property.value : this._core.current()) + f,
                                    h = this._core.clones().length,
                                    i = a.proxy(function (a, b) {
                                        this.load(b);
                                    }, this);
                                f++ < e;

                            )
                                this.load(h / 2 + this._core.relative(g)), h && a.each(this._core.clones(this._core.relative(g)), i), g++;
                    }, this),
                }),
                (this._core.options = a.extend({}, e.Defaults, this._core.options)),
                this._core.$element.on(this._handlers);
        };
        (e.Defaults = { lazyLoad: !1 }),
            (e.prototype.load = function (c) {
                var d = this._core.$stage.children().eq(c),
                    e = d && d.find(".owl-lazy");
                !e ||
                    a.inArray(d.get(0), this._loaded) > -1 ||
                    (e.each(
                        a.proxy(function (c, d) {
                            var e,
                                f = a(d),
                                g = (b.devicePixelRatio > 1 && f.attr("data-src-retina")) || f.attr("data-src");
                            this._core.trigger("load", { element: f, url: g }, "lazy"),
                                f.is("img")
                                    ? f
                                          .one(
                                              "load.owl.lazy",
                                              a.proxy(function () {
                                                  f.css("opacity", 1), this._core.trigger("loaded", { element: f, url: g }, "lazy");
                                              }, this)
                                          )
                                          .attr("src", g)
                                    : ((e = new Image()),
                                      (e.onload = a.proxy(function () {
                                          f.css({ "background-image": 'url("' + g + '")', opacity: "1" }), this._core.trigger("loaded", { element: f, url: g }, "lazy");
                                      }, this)),
                                      (e.src = g));
                        }, this)
                    ),
                    this._loaded.push(d.get(0)));
            }),
            (e.prototype.destroy = function () {
                var a, b;
                for (a in this.handlers) this._core.$element.off(a, this.handlers[a]);
                for (b in Object.getOwnPropertyNames(this)) "function" != typeof this[b] && (this[b] = null);
            }),
            (a.fn.owlCarousel.Constructor.Plugins.Lazy = e);
    })(window.Zepto || window.jQuery, window, document),
    (function (a, b, c, d) {
        var e = function (b) {
            (this._core = b),
                (this._handlers = {
                    "initialized.owl.carousel refreshed.owl.carousel": a.proxy(function (a) {
                        a.namespace && this._core.settings.autoHeight && this.update();
                    }, this),
                    "changed.owl.carousel": a.proxy(function (a) {
                        a.namespace && this._core.settings.autoHeight && "position" == a.property.name && this.update();
                    }, this),
                    "loaded.owl.lazy": a.proxy(function (a) {
                        a.namespace && this._core.settings.autoHeight && a.element.closest("." + this._core.settings.itemClass).index() === this._core.current() && this.update();
                    }, this),
                }),
                (this._core.options = a.extend({}, e.Defaults, this._core.options)),
                this._core.$element.on(this._handlers);
        };
        (e.Defaults = { autoHeight: !1, autoHeightClass: "owl-height" }),
            (e.prototype.update = function () {
                var b = this._core._current,
                    c = b + this._core.settings.items,
                    d = this._core.$stage.children().toArray().slice(b, c),
                    e = [],
                    f = 0;
                a.each(d, function (b, c) {
                    e.push(a(c).height());
                }),
                    (f = Math.max.apply(null, e)),
                    this._core.$stage.parent().height(f).addClass(this._core.settings.autoHeightClass);
            }),
            (e.prototype.destroy = function () {
                var a, b;
                for (a in this._handlers) this._core.$element.off(a, this._handlers[a]);
                for (b in Object.getOwnPropertyNames(this)) "function" != typeof this[b] && (this[b] = null);
            }),
            (a.fn.owlCarousel.Constructor.Plugins.AutoHeight = e);
    })(window.Zepto || window.jQuery, window, document),
    (function (a, b, c, d) {
        var e = function (b) {
            (this._core = b),
                (this._videos = {}),
                (this._playing = null),
                (this._handlers = {
                    "initialized.owl.carousel": a.proxy(function (a) {
                        a.namespace && this._core.register({ type: "state", name: "playing", tags: ["interacting"] });
                    }, this),
                    "resize.owl.carousel": a.proxy(function (a) {
                        a.namespace && this._core.settings.video && this.isInFullScreen() && a.preventDefault();
                    }, this),
                    "refreshed.owl.carousel": a.proxy(function (a) {
                        a.namespace && this._core.is("resizing") && this._core.$stage.find(".cloned .owl-video-frame").remove();
                    }, this),
                    "changed.owl.carousel": a.proxy(function (a) {
                        a.namespace && "position" === a.property.name && this._playing && this.stop();
                    }, this),
                    "prepared.owl.carousel": a.proxy(function (b) {
                        if (b.namespace) {
                            var c = a(b.content).find(".owl-video");
                            c.length && (c.css("display", "none"), this.fetch(c, a(b.content)));
                        }
                    }, this),
                }),
                (this._core.options = a.extend({}, e.Defaults, this._core.options)),
                this._core.$element.on(this._handlers),
                this._core.$element.on(
                    "click.owl.video",
                    ".owl-video-play-icon",
                    a.proxy(function (a) {
                        this.play(a);
                    }, this)
                );
        };
        (e.Defaults = { video: !1, videoHeight: !1, videoWidth: !1 }),
            (e.prototype.fetch = function (a, b) {
                var c = (function () {
                        return a.attr("data-vimeo-id") ? "vimeo" : a.attr("data-vzaar-id") ? "vzaar" : "youtube";
                    })(),
                    d = a.attr("data-vimeo-id") || a.attr("data-youtube-id") || a.attr("data-vzaar-id"),
                    e = a.attr("data-width") || this._core.settings.videoWidth,
                    f = a.attr("data-height") || this._core.settings.videoHeight,
                    g = a.attr("href");
                if (!g) throw new Error("Missing video URL.");
                if (
                    ((d = g.match(/(http:|https:|)\/\/(player.|www.|app.)?(vimeo\.com|youtu(be\.com|\.be|be\.googleapis\.com)|vzaar\.com)\/(video\/|videos\/|embed\/|channels\/.+\/|groups\/.+\/|watch\?v=|v\/)?([A-Za-z0-9._%-]*)(\&\S+)?/)),
                    d[3].indexOf("youtu") > -1)
                )
                    c = "youtube";
                else if (d[3].indexOf("vimeo") > -1) c = "vimeo";
                else {
                    if (!(d[3].indexOf("vzaar") > -1)) throw new Error("Video URL not supported.");
                    c = "vzaar";
                }
                (d = d[6]), (this._videos[g] = { type: c, id: d, width: e, height: f }), b.attr("data-video", g), this.thumbnail(a, this._videos[g]);
            }),
            (e.prototype.thumbnail = function (b, c) {
                var d,
                    e,
                    f,
                    g = c.width && c.height ? 'style="width:' + c.width + "px;height:" + c.height + 'px;"' : "",
                    h = b.find("img"),
                    i = "src",
                    j = "",
                    k = this._core.settings,
                    l = function (a) {
                        (e = '<div class="owl-video-play-icon"></div>'),
                            (d = k.lazyLoad ? '<div class="owl-video-tn ' + j + '" ' + i + '="' + a + '"></div>' : '<div class="owl-video-tn" style="opacity:1;background-image:url(' + a + ')"></div>'),
                            b.after(d),
                            b.after(e);
                    };
                if ((b.wrap('<div class="owl-video-wrapper"' + g + "></div>"), this._core.settings.lazyLoad && ((i = "data-src"), (j = "owl-lazy")), h.length)) return l(h.attr(i)), h.remove(), !1;
                "youtube" === c.type
                    ? ((f = "//img.youtube.com/vi/" + c.id + "/hqdefault.jpg"), l(f))
                    : "vimeo" === c.type
                    ? a.ajax({
                          type: "GET",
                          url: "//vimeo.com/api/v2/video/" + c.id + ".json",
                          jsonp: "callback",
                          dataType: "jsonp",
                          success: function (a) {
                              (f = a[0].thumbnail_large), l(f);
                          },
                      })
                    : "vzaar" === c.type &&
                      a.ajax({
                          type: "GET",
                          url: "//vzaar.com/api/videos/" + c.id + ".json",
                          jsonp: "callback",
                          dataType: "jsonp",
                          success: function (a) {
                              (f = a.framegrab_url), l(f);
                          },
                      });
            }),
            (e.prototype.stop = function () {
                this._core.trigger("stop", null, "video"),
                    this._playing.find(".owl-video-frame").remove(),
                    this._playing.removeClass("owl-video-playing"),
                    (this._playing = null),
                    this._core.leave("playing"),
                    this._core.trigger("stopped", null, "video");
            }),
            (e.prototype.play = function (b) {
                var c,
                    d = a(b.target),
                    e = d.closest("." + this._core.settings.itemClass),
                    f = this._videos[e.attr("data-video")],
                    g = f.width || "100%",
                    h = f.height || this._core.$stage.height();
                this._playing ||
                    (this._core.enter("playing"),
                    this._core.trigger("play", null, "video"),
                    (e = this._core.items(this._core.relative(e.index()))),
                    this._core.reset(e.index()),
                    "youtube" === f.type
                        ? (c = '<iframe width="' + g + '" height="' + h + '" src="//www.youtube.com/embed/' + f.id + "?autoplay=1&rel=0&v=" + f.id + '" frameborder="0" allowfullscreen></iframe>')
                        : "vimeo" === f.type
                        ? (c = '<iframe src="//player.vimeo.com/video/' + f.id + '?autoplay=1" width="' + g + '" height="' + h + '" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>')
                        : "vzaar" === f.type && (c = '<iframe frameborder="0"height="' + h + '"width="' + g + '" allowfullscreen mozallowfullscreen webkitAllowFullScreen src="//view.vzaar.com/' + f.id + '/player?autoplay=true"></iframe>'),
                    a('<div class="owl-video-frame">' + c + "</div>").insertAfter(e.find(".owl-video")),
                    (this._playing = e.addClass("owl-video-playing")));
            }),
            (e.prototype.isInFullScreen = function () {
                var b = c.fullscreenElement || c.mozFullScreenElement || c.webkitFullscreenElement;
                return b && a(b).parent().hasClass("owl-video-frame");
            }),
            (e.prototype.destroy = function () {
                var a, b;
                this._core.$element.off("click.owl.video");
                for (a in this._handlers) this._core.$element.off(a, this._handlers[a]);
                for (b in Object.getOwnPropertyNames(this)) "function" != typeof this[b] && (this[b] = null);
            }),
            (a.fn.owlCarousel.Constructor.Plugins.Video = e);
    })(window.Zepto || window.jQuery, window, document),
    (function (a, b, c, d) {
        var e = function (b) {
            (this.core = b),
                (this.core.options = a.extend({}, e.Defaults, this.core.options)),
                (this.swapping = !0),
                (this.previous = d),
                (this.next = d),
                (this.handlers = {
                    "change.owl.carousel": a.proxy(function (a) {
                        a.namespace && "position" == a.property.name && ((this.previous = this.core.current()), (this.next = a.property.value));
                    }, this),
                    "drag.owl.carousel dragged.owl.carousel translated.owl.carousel": a.proxy(function (a) {
                        a.namespace && (this.swapping = "translated" == a.type);
                    }, this),
                    "translate.owl.carousel": a.proxy(function (a) {
                        a.namespace && this.swapping && (this.core.options.animateOut || this.core.options.animateIn) && this.swap();
                    }, this),
                }),
                this.core.$element.on(this.handlers);
        };
        (e.Defaults = { animateOut: !1, animateIn: !1 }),
            (e.prototype.swap = function () {
                if (1 === this.core.settings.items && a.support.animation && a.support.transition) {
                    this.core.speed(0);
                    var b,
                        c = a.proxy(this.clear, this),
                        d = this.core.$stage.children().eq(this.previous),
                        e = this.core.$stage.children().eq(this.next),
                        f = this.core.settings.animateIn,
                        g = this.core.settings.animateOut;
                    this.core.current() !== this.previous &&
                        (g &&
                            ((b = this.core.coordinates(this.previous) - this.core.coordinates(this.next)),
                            d
                                .one(a.support.animation.end, c)
                                .css({ left: b + "px" })
                                .addClass("animated owl-animated-out")
                                .addClass(g)),
                        f && e.one(a.support.animation.end, c).addClass("animated owl-animated-in").addClass(f));
                }
            }),
            (e.prototype.clear = function (b) {
                a(b.target).css({ left: "" }).removeClass("animated owl-animated-out owl-animated-in").removeClass(this.core.settings.animateIn).removeClass(this.core.settings.animateOut), this.core.onTransitionEnd();
            }),
            (e.prototype.destroy = function () {
                var a, b;
                for (a in this.handlers) this.core.$element.off(a, this.handlers[a]);
                for (b in Object.getOwnPropertyNames(this)) "function" != typeof this[b] && (this[b] = null);
            }),
            (a.fn.owlCarousel.Constructor.Plugins.Animate = e);
    })(window.Zepto || window.jQuery, window, document),
    (function (a, b, c, d) {
        var e = function (b) {
            (this._core = b),
                (this._timeout = null),
                (this._paused = !1),
                (this._handlers = {
                    "changed.owl.carousel": a.proxy(function (a) {
                        a.namespace && "settings" === a.property.name
                            ? this._core.settings.autoplay
                                ? this.play()
                                : this.stop()
                            : a.namespace && "position" === a.property.name && this._core.settings.autoplay && this._setAutoPlayInterval();
                    }, this),
                    "initialized.owl.carousel": a.proxy(function (a) {
                        a.namespace && this._core.settings.autoplay && this.play();
                    }, this),
                    "play.owl.autoplay": a.proxy(function (a, b, c) {
                        a.namespace && this.play(b, c);
                    }, this),
                    "stop.owl.autoplay": a.proxy(function (a) {
                        a.namespace && this.stop();
                    }, this),
                    "mouseover.owl.autoplay": a.proxy(function () {
                        this._core.settings.autoplayHoverPause && this._core.is("rotating") && this.pause();
                    }, this),
                    "mouseleave.owl.autoplay": a.proxy(function () {
                        this._core.settings.autoplayHoverPause && this._core.is("rotating") && this.play();
                    }, this),
                    "touchstart.owl.core": a.proxy(function () {
                        this._core.settings.autoplayHoverPause && this._core.is("rotating") && this.pause();
                    }, this),
                    "touchend.owl.core": a.proxy(function () {
                        this._core.settings.autoplayHoverPause && this.play();
                    }, this),
                }),
                this._core.$element.on(this._handlers),
                (this._core.options = a.extend({}, e.Defaults, this._core.options));
        };
        (e.Defaults = { autoplay: !1, autoplayTimeout: 5e3, autoplayHoverPause: !1, autoplaySpeed: !1 }),
            (e.prototype.play = function (a, b) {
                (this._paused = !1), this._core.is("rotating") || (this._core.enter("rotating"), this._setAutoPlayInterval());
            }),
            (e.prototype._getNextTimeout = function (d, e) {
                return (
                    this._timeout && b.clearTimeout(this._timeout),
                    b.setTimeout(
                        a.proxy(function () {
                            this._paused || this._core.is("busy") || this._core.is("interacting") || c.hidden || this._core.next(e || this._core.settings.autoplaySpeed);
                        }, this),
                        d || this._core.settings.autoplayTimeout
                    )
                );
            }),
            (e.prototype._setAutoPlayInterval = function () {
                this._timeout = this._getNextTimeout();
            }),
            (e.prototype.stop = function () {
                this._core.is("rotating") && (b.clearTimeout(this._timeout), this._core.leave("rotating"));
            }),
            (e.prototype.pause = function () {
                this._core.is("rotating") && (this._paused = !0);
            }),
            (e.prototype.destroy = function () {
                var a, b;
                this.stop();
                for (a in this._handlers) this._core.$element.off(a, this._handlers[a]);
                for (b in Object.getOwnPropertyNames(this)) "function" != typeof this[b] && (this[b] = null);
            }),
            (a.fn.owlCarousel.Constructor.Plugins.autoplay = e);
    })(window.Zepto || window.jQuery, window, document),
    (function (a, b, c, d) {
        "use strict";
        var e = function (b) {
            (this._core = b),
                (this._initialized = !1),
                (this._pages = []),
                (this._controls = {}),
                (this._templates = []),
                (this.$element = this._core.$element),
                (this._overrides = { next: this._core.next, prev: this._core.prev, to: this._core.to }),
                (this._handlers = {
                    "prepared.owl.carousel": a.proxy(function (b) {
                        b.namespace && this._core.settings.dotsData && this._templates.push('<div class="' + this._core.settings.dotClass + '">' + a(b.content).find("[data-dot]").addBack("[data-dot]").attr("data-dot") + "</div>");
                    }, this),
                    "added.owl.carousel": a.proxy(function (a) {
                        a.namespace && this._core.settings.dotsData && this._templates.splice(a.position, 0, this._templates.pop());
                    }, this),
                    "remove.owl.carousel": a.proxy(function (a) {
                        a.namespace && this._core.settings.dotsData && this._templates.splice(a.position, 1);
                    }, this),
                    "changed.owl.carousel": a.proxy(function (a) {
                        a.namespace && "position" == a.property.name && this.draw();
                    }, this),
                    "initialized.owl.carousel": a.proxy(function (a) {
                        a.namespace &&
                            !this._initialized &&
                            (this._core.trigger("initialize", null, "navigation"), this.initialize(), this.update(), this.draw(), (this._initialized = !0), this._core.trigger("initialized", null, "navigation"));
                    }, this),
                    "refreshed.owl.carousel": a.proxy(function (a) {
                        a.namespace && this._initialized && (this._core.trigger("refresh", null, "navigation"), this.update(), this.draw(), this._core.trigger("refreshed", null, "navigation"));
                    }, this),
                }),
                (this._core.options = a.extend({}, e.Defaults, this._core.options)),
                this.$element.on(this._handlers);
        };
        (e.Defaults = {
            nav: !1,
            navText: ["prev", "next"],
            navSpeed: !1,
            navElement: "div",
            navContainer: !1,
            navContainerClass: "owl-nav",
            navClass: ["owl-prev", "owl-next"],
            slideBy: 1,
            dotClass: "owl-dot",
            dotsClass: "owl-dots",
            dots: !0,
            dotsEach: !1,
            dotsData: !1,
            dotsSpeed: !1,
            dotsContainer: !1,
        }),
            (e.prototype.initialize = function () {
                var b,
                    c = this._core.settings;
                (this._controls.$relative = (c.navContainer ? a(c.navContainer) : a("<div>").addClass(c.navContainerClass).appendTo(this.$element)).addClass("disabled")),
                    (this._controls.$previous = a("<" + c.navElement + ">")
                        .addClass(c.navClass[0])
                        .html(c.navText[0])
                        .prependTo(this._controls.$relative)
                        .on(
                            "click",
                            a.proxy(function (a) {
                                this.prev(c.navSpeed);
                            }, this)
                        )),
                    (this._controls.$next = a("<" + c.navElement + ">")
                        .addClass(c.navClass[1])
                        .html(c.navText[1])
                        .appendTo(this._controls.$relative)
                        .on(
                            "click",
                            a.proxy(function (a) {
                                this.next(c.navSpeed);
                            }, this)
                        )),
                    c.dotsData || (this._templates = [a("<div>").addClass(c.dotClass).append(a("<span>")).prop("outerHTML")]),
                    (this._controls.$absolute = (c.dotsContainer ? a(c.dotsContainer) : a("<div>").addClass(c.dotsClass).appendTo(this.$element)).addClass("disabled")),
                    this._controls.$absolute.on(
                        "click",
                        "div",
                        a.proxy(function (b) {
                            var d = a(b.target).parent().is(this._controls.$absolute) ? a(b.target).index() : a(b.target).parent().index();
                            b.preventDefault(), this.to(d, c.dotsSpeed);
                        }, this)
                    );
                for (b in this._overrides) this._core[b] = a.proxy(this[b], this);
            }),
            (e.prototype.destroy = function () {
                var a, b, c, d;
                for (a in this._handlers) this.$element.off(a, this._handlers[a]);
                for (b in this._controls) this._controls[b].remove();
                for (d in this.overides) this._core[d] = this._overrides[d];
                for (c in Object.getOwnPropertyNames(this)) "function" != typeof this[c] && (this[c] = null);
            }),
            (e.prototype.update = function () {
                var a,
                    b,
                    c,
                    d = this._core.clones().length / 2,
                    e = d + this._core.items().length,
                    f = this._core.maximum(!0),
                    g = this._core.settings,
                    h = g.center || g.autoWidth || g.dotsData ? 1 : g.dotsEach || g.items;
                if (("page" !== g.slideBy && (g.slideBy = Math.min(g.slideBy, g.items)), g.dots || "page" == g.slideBy))
                    for (this._pages = [], a = d, b = 0, c = 0; a < e; a++) {
                        if (b >= h || 0 === b) {
                            if ((this._pages.push({ start: Math.min(f, a - d), end: a - d + h - 1 }), Math.min(f, a - d) === f)) break;
                            (b = 0), ++c;
                        }
                        b += this._core.mergers(this._core.relative(a));
                    }
            }),
            (e.prototype.draw = function () {
                var b,
                    c = this._core.settings,
                    d = this._core.items().length <= c.items,
                    e = this._core.relative(this._core.current()),
                    f = c.loop || c.rewind;
                this._controls.$relative.toggleClass("disabled", !c.nav || d),
                    c.nav && (this._controls.$previous.toggleClass("disabled", !f && e <= this._core.minimum(!0)), this._controls.$next.toggleClass("disabled", !f && e >= this._core.maximum(!0))),
                    this._controls.$absolute.toggleClass("disabled", !c.dots || d),
                    c.dots &&
                        ((b = this._pages.length - this._controls.$absolute.children().length),
                        c.dotsData && 0 !== b
                            ? this._controls.$absolute.html(this._templates.join(""))
                            : b > 0
                            ? this._controls.$absolute.append(new Array(b + 1).join(this._templates[0]))
                            : b < 0 && this._controls.$absolute.children().slice(b).remove(),
                        this._controls.$absolute.find(".active").removeClass("active"),
                        this._controls.$absolute.children().eq(a.inArray(this.current(), this._pages)).addClass("active"));
            }),
            (e.prototype.onTrigger = function (b) {
                var c = this._core.settings;
                b.page = { index: a.inArray(this.current(), this._pages), count: this._pages.length, size: c && (c.center || c.autoWidth || c.dotsData ? 1 : c.dotsEach || c.items) };
            }),
            (e.prototype.current = function () {
                var b = this._core.relative(this._core.current());
                return a
                    .grep(
                        this._pages,
                        a.proxy(function (a, c) {
                            return a.start <= b && a.end >= b;
                        }, this)
                    )
                    .pop();
            }),
            (e.prototype.getPosition = function (b) {
                var c,
                    d,
                    e = this._core.settings;
                return (
                    "page" == e.slideBy
                        ? ((c = a.inArray(this.current(), this._pages)), (d = this._pages.length), b ? ++c : --c, (c = this._pages[((c % d) + d) % d].start))
                        : ((c = this._core.relative(this._core.current())), (d = this._core.items().length), b ? (c += e.slideBy) : (c -= e.slideBy)),
                    c
                );
            }),
            (e.prototype.next = function (b) {
                a.proxy(this._overrides.to, this._core)(this.getPosition(!0), b);
            }),
            (e.prototype.prev = function (b) {
                a.proxy(this._overrides.to, this._core)(this.getPosition(!1), b);
            }),
            (e.prototype.to = function (b, c, d) {
                var e;
                !d && this._pages.length ? ((e = this._pages.length), a.proxy(this._overrides.to, this._core)(this._pages[((b % e) + e) % e].start, c)) : a.proxy(this._overrides.to, this._core)(b, c);
            }),
            (a.fn.owlCarousel.Constructor.Plugins.Navigation = e);
    })(window.Zepto || window.jQuery, window, document),
    (function (a, b, c, d) {
        "use strict";
        var e = function (c) {
            (this._core = c),
                (this._hashes = {}),
                (this.$element = this._core.$element),
                (this._handlers = {
                    "initialized.owl.carousel": a.proxy(function (c) {
                        c.namespace && "URLHash" === this._core.settings.startPosition && a(b).trigger("hashchange.owl.navigation");
                    }, this),
                    "prepared.owl.carousel": a.proxy(function (b) {
                        if (b.namespace) {
                            var c = a(b.content).find("[data-hash]").addBack("[data-hash]").attr("data-hash");
                            if (!c) return;
                            this._hashes[c] = b.content;
                        }
                    }, this),
                    "changed.owl.carousel": a.proxy(function (c) {
                        if (c.namespace && "position" === c.property.name) {
                            var d = this._core.items(this._core.relative(this._core.current())),
                                e = a
                                    .map(this._hashes, function (a, b) {
                                        return a === d ? b : null;
                                    })
                                    .join();
                            if (!e || b.location.hash.slice(1) === e) return;
                            b.location.hash = e;
                        }
                    }, this),
                }),
                (this._core.options = a.extend({}, e.Defaults, this._core.options)),
                this.$element.on(this._handlers),
                a(b).on(
                    "hashchange.owl.navigation",
                    a.proxy(function (a) {
                        var c = b.location.hash.substring(1),
                            e = this._core.$stage.children(),
                            f = this._hashes[c] && e.index(this._hashes[c]);
                        f !== d && f !== this._core.current() && this._core.to(this._core.relative(f), !1, !0);
                    }, this)
                );
        };
        (e.Defaults = { URLhashListener: !1 }),
            (e.prototype.destroy = function () {
                var c, d;
                a(b).off("hashchange.owl.navigation");
                for (c in this._handlers) this._core.$element.off(c, this._handlers[c]);
                for (d in Object.getOwnPropertyNames(this)) "function" != typeof this[d] && (this[d] = null);
            }),
            (a.fn.owlCarousel.Constructor.Plugins.Hash = e);
    })(window.Zepto || window.jQuery, window, document),
    (function (a, b, c, d) {
        function e(b, c) {
            var e = !1,
                f = b.charAt(0).toUpperCase() + b.slice(1);
            return (
                a.each((b + " " + h.join(f + " ") + f).split(" "), function (a, b) {
                    if (g[b] !== d) return (e = !c || b), !1;
                }),
                e
            );
        }
        function f(a) {
            return e(a, !0);
        }
        var g = a("<support>").get(0).style,
            h = "Webkit Moz O ms".split(" "),
            i = {
                transition: { end: { WebkitTransition: "webkitTransitionEnd", MozTransition: "transitionend", OTransition: "oTransitionEnd", transition: "transitionend" } },
                animation: { end: { WebkitAnimation: "webkitAnimationEnd", MozAnimation: "animationend", OAnimation: "oAnimationEnd", animation: "animationend" } },
            },
            j = {
                csstransforms: function () {
                    return !!e("transform");
                },
                csstransforms3d: function () {
                    return !!e("perspective");
                },
                csstransitions: function () {
                    return !!e("transition");
                },
                cssanimations: function () {
                    return !!e("animation");
                },
            };
        j.csstransitions() && ((a.support.transition = new String(f("transition"))), (a.support.transition.end = i.transition.end[a.support.transition])),
            j.cssanimations() && ((a.support.animation = new String(f("animation"))), (a.support.animation.end = i.animation.end[a.support.animation])),
            j.csstransforms() && ((a.support.transform = new String(f("transform"))), (a.support.transform3d = j.csstransforms3d()));
    })(window.Zepto || window.jQuery, window, document);

/*! Select2 4.0.3 | https://github.com/select2/select2/blob/master/LICENSE.md */ !(function (a) {
    "function" == typeof define && define.amd ? define(["jquery"], a) : a("object" == typeof exports ? require("jquery") : jQuery);
})(function (a) {
    var b = (function () {
            if (a && a.fn && a.fn.select2 && a.fn.select2.amd) var b = a.fn.select2.amd;
            var b;
            return (
                (function () {
                    if (!b || !b.requirejs) {
                        b ? (c = b) : (b = {});
                        var a, c, d;
                        !(function (b) {
                            function e(a, b) {
                                return u.call(a, b);
                            }
                            function f(a, b) {
                                var c,
                                    d,
                                    e,
                                    f,
                                    g,
                                    h,
                                    i,
                                    j,
                                    k,
                                    l,
                                    m,
                                    n = b && b.split("/"),
                                    o = s.map,
                                    p = (o && o["*"]) || {};
                                if (a && "." === a.charAt(0))
                                    if (b) {
                                        for (a = a.split("/"), g = a.length - 1, s.nodeIdCompat && w.test(a[g]) && (a[g] = a[g].replace(w, "")), a = n.slice(0, n.length - 1).concat(a), k = 0; k < a.length; k += 1)
                                            if (((m = a[k]), "." === m)) a.splice(k, 1), (k -= 1);
                                            else if (".." === m) {
                                                if (1 === k && (".." === a[2] || ".." === a[0])) break;
                                                k > 0 && (a.splice(k - 1, 2), (k -= 2));
                                            }
                                        a = a.join("/");
                                    } else 0 === a.indexOf("./") && (a = a.substring(2));
                                if ((n || p) && o) {
                                    for (c = a.split("/"), k = c.length; k > 0; k -= 1) {
                                        if (((d = c.slice(0, k).join("/")), n))
                                            for (l = n.length; l > 0; l -= 1)
                                                if (((e = o[n.slice(0, l).join("/")]), e && (e = e[d]))) {
                                                    (f = e), (h = k);
                                                    break;
                                                }
                                        if (f) break;
                                        !i && p && p[d] && ((i = p[d]), (j = k));
                                    }
                                    !f && i && ((f = i), (h = j)), f && (c.splice(0, h, f), (a = c.join("/")));
                                }
                                return a;
                            }
                            function g(a, c) {
                                return function () {
                                    var d = v.call(arguments, 0);
                                    return "string" != typeof d[0] && 1 === d.length && d.push(null), n.apply(b, d.concat([a, c]));
                                };
                            }
                            function h(a) {
                                return function (b) {
                                    return f(b, a);
                                };
                            }
                            function i(a) {
                                return function (b) {
                                    q[a] = b;
                                };
                            }
                            function j(a) {
                                if (e(r, a)) {
                                    var c = r[a];
                                    delete r[a], (t[a] = !0), m.apply(b, c);
                                }
                                if (!e(q, a) && !e(t, a)) throw new Error("No " + a);
                                return q[a];
                            }
                            function k(a) {
                                var b,
                                    c = a ? a.indexOf("!") : -1;
                                return c > -1 && ((b = a.substring(0, c)), (a = a.substring(c + 1, a.length))), [b, a];
                            }
                            function l(a) {
                                return function () {
                                    return (s && s.config && s.config[a]) || {};
                                };
                            }
                            var m,
                                n,
                                o,
                                p,
                                q = {},
                                r = {},
                                s = {},
                                t = {},
                                u = Object.prototype.hasOwnProperty,
                                v = [].slice,
                                w = /\.js$/;
                            (o = function (a, b) {
                                var c,
                                    d = k(a),
                                    e = d[0];
                                return (
                                    (a = d[1]),
                                    e && ((e = f(e, b)), (c = j(e))),
                                    e ? (a = c && c.normalize ? c.normalize(a, h(b)) : f(a, b)) : ((a = f(a, b)), (d = k(a)), (e = d[0]), (a = d[1]), e && (c = j(e))),
                                    { f: e ? e + "!" + a : a, n: a, pr: e, p: c }
                                );
                            }),
                                (p = {
                                    require: function (a) {
                                        return g(a);
                                    },
                                    exports: function (a) {
                                        var b = q[a];
                                        return "undefined" != typeof b ? b : (q[a] = {});
                                    },
                                    module: function (a) {
                                        return { id: a, uri: "", exports: q[a], config: l(a) };
                                    },
                                }),
                                (m = function (a, c, d, f) {
                                    var h,
                                        k,
                                        l,
                                        m,
                                        n,
                                        s,
                                        u = [],
                                        v = typeof d;
                                    if (((f = f || a), "undefined" === v || "function" === v)) {
                                        for (c = !c.length && d.length ? ["require", "exports", "module"] : c, n = 0; n < c.length; n += 1)
                                            if (((m = o(c[n], f)), (k = m.f), "require" === k)) u[n] = p.require(a);
                                            else if ("exports" === k) (u[n] = p.exports(a)), (s = !0);
                                            else if ("module" === k) h = u[n] = p.module(a);
                                            else if (e(q, k) || e(r, k) || e(t, k)) u[n] = j(k);
                                            else {
                                                if (!m.p) throw new Error(a + " missing " + k);
                                                m.p.load(m.n, g(f, !0), i(k), {}), (u[n] = q[k]);
                                            }
                                        (l = d ? d.apply(q[a], u) : void 0), a && (h && h.exports !== b && h.exports !== q[a] ? (q[a] = h.exports) : (l === b && s) || (q[a] = l));
                                    } else a && (q[a] = d);
                                }),
                                (a = c = n = function (a, c, d, e, f) {
                                    if ("string" == typeof a) return p[a] ? p[a](c) : j(o(a, c).f);
                                    if (!a.splice) {
                                        if (((s = a), s.deps && n(s.deps, s.callback), !c)) return;
                                        c.splice ? ((a = c), (c = d), (d = null)) : (a = b);
                                    }
                                    return (
                                        (c = c || function () {}),
                                        "function" == typeof d && ((d = e), (e = f)),
                                        e
                                            ? m(b, a, c, d)
                                            : setTimeout(function () {
                                                  m(b, a, c, d);
                                              }, 4),
                                        n
                                    );
                                }),
                                (n.config = function (a) {
                                    return n(a);
                                }),
                                (a._defined = q),
                                (d = function (a, b, c) {
                                    if ("string" != typeof a) throw new Error("See almond README: incorrect module build, no module name");
                                    b.splice || ((c = b), (b = [])), e(q, a) || e(r, a) || (r[a] = [a, b, c]);
                                }),
                                (d.amd = { jQuery: !0 });
                        })(),
                            (b.requirejs = a),
                            (b.require = c),
                            (b.define = d);
                    }
                })(),
                b.define("almond", function () {}),
                b.define("jquery", [], function () {
                    var b = a || $;
                    return null == b && console && console.error && console.error("Select2: An instance of jQuery or a jQuery-compatible library was not found. Make sure that you are including jQuery before Select2 on your web page."), b;
                }),
                b.define("select2/utils", ["jquery"], function (a) {
                    function b(a) {
                        var b = a.prototype,
                            c = [];
                        for (var d in b) {
                            var e = b[d];
                            "function" == typeof e && "constructor" !== d && c.push(d);
                        }
                        return c;
                    }
                    var c = {};
                    (c.Extend = function (a, b) {
                        function c() {
                            this.constructor = a;
                        }
                        var d = {}.hasOwnProperty;
                        for (var e in b) d.call(b, e) && (a[e] = b[e]);
                        return (c.prototype = b.prototype), (a.prototype = new c()), (a.__super__ = b.prototype), a;
                    }),
                        (c.Decorate = function (a, c) {
                            function d() {
                                var b = Array.prototype.unshift,
                                    d = c.prototype.constructor.length,
                                    e = a.prototype.constructor;
                                d > 0 && (b.call(arguments, a.prototype.constructor), (e = c.prototype.constructor)), e.apply(this, arguments);
                            }
                            function e() {
                                this.constructor = d;
                            }
                            var f = b(c),
                                g = b(a);
                            (c.displayName = a.displayName), (d.prototype = new e());
                            for (var h = 0; h < g.length; h++) {
                                var i = g[h];
                                d.prototype[i] = a.prototype[i];
                            }
                            for (
                                var j = function (a) {
                                        var b = function () {};
                                        (a in d.prototype) && (b = d.prototype[a]);
                                        var e = c.prototype[a];
                                        return function () {
                                            var a = Array.prototype.unshift;
                                            return a.call(arguments, b), e.apply(this, arguments);
                                        };
                                    },
                                    k = 0;
                                k < f.length;
                                k++
                            ) {
                                var l = f[k];
                                d.prototype[l] = j(l);
                            }
                            return d;
                        });
                    var d = function () {
                        this.listeners = {};
                    };
                    return (
                        (d.prototype.on = function (a, b) {
                            (this.listeners = this.listeners || {}), a in this.listeners ? this.listeners[a].push(b) : (this.listeners[a] = [b]);
                        }),
                        (d.prototype.trigger = function (a) {
                            var b = Array.prototype.slice,
                                c = b.call(arguments, 1);
                            (this.listeners = this.listeners || {}),
                                null == c && (c = []),
                                0 === c.length && c.push({}),
                                (c[0]._type = a),
                                a in this.listeners && this.invoke(this.listeners[a], b.call(arguments, 1)),
                                "*" in this.listeners && this.invoke(this.listeners["*"], arguments);
                        }),
                        (d.prototype.invoke = function (a, b) {
                            for (var c = 0, d = a.length; d > c; c++) a[c].apply(this, b);
                        }),
                        (c.Observable = d),
                        (c.generateChars = function (a) {
                            for (var b = "", c = 0; a > c; c++) {
                                var d = Math.floor(36 * Math.random());
                                b += d.toString(36);
                            }
                            return b;
                        }),
                        (c.bind = function (a, b) {
                            return function () {
                                a.apply(b, arguments);
                            };
                        }),
                        (c._convertData = function (a) {
                            for (var b in a) {
                                var c = b.split("-"),
                                    d = a;
                                if (1 !== c.length) {
                                    for (var e = 0; e < c.length; e++) {
                                        var f = c[e];
                                        (f = f.substring(0, 1).toLowerCase() + f.substring(1)), f in d || (d[f] = {}), e == c.length - 1 && (d[f] = a[b]), (d = d[f]);
                                    }
                                    delete a[b];
                                }
                            }
                            return a;
                        }),
                        (c.hasScroll = function (b, c) {
                            var d = a(c),
                                e = c.style.overflowX,
                                f = c.style.overflowY;
                            return e !== f || ("hidden" !== f && "visible" !== f) ? ("scroll" === e || "scroll" === f ? !0 : d.innerHeight() < c.scrollHeight || d.innerWidth() < c.scrollWidth) : !1;
                        }),
                        (c.escapeMarkup = function (a) {
                            var b = { "\\": "&#92;", "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#39;", "/": "&#47;" };
                            return "string" != typeof a
                                ? a
                                : String(a).replace(/[&<>"'\/\\]/g, function (a) {
                                      return b[a];
                                  });
                        }),
                        (c.appendMany = function (b, c) {
                            if ("1.7" === a.fn.jquery.substr(0, 3)) {
                                var d = a();
                                a.map(c, function (a) {
                                    d = d.add(a);
                                }),
                                    (c = d);
                            }
                            b.append(c);
                        }),
                        c
                    );
                }),
                b.define("select2/results", ["jquery", "./utils"], function (a, b) {
                    function c(a, b, d) {
                        (this.$element = a), (this.data = d), (this.options = b), c.__super__.constructor.call(this);
                    }
                    return (
                        b.Extend(c, b.Observable),
                        (c.prototype.render = function () {
                            var b = a('<ul class="select2-results__options" role="tree"></ul>');
                            return this.options.get("multiple") && b.attr("aria-multiselectable", "true"), (this.$results = b), b;
                        }),
                        (c.prototype.clear = function () {
                            this.$results.empty();
                        }),
                        (c.prototype.displayMessage = function (b) {
                            var c = this.options.get("escapeMarkup");
                            this.clear(), this.hideLoading();
                            var d = a('<li role="treeitem" aria-live="assertive" class="select2-results__option"></li>'),
                                e = this.options.get("translations").get(b.message);
                            d.append(c(e(b.args))), (d[0].className += " select2-results__message"), this.$results.append(d);
                        }),
                        (c.prototype.hideMessages = function () {
                            this.$results.find(".select2-results__message").remove();
                        }),
                        (c.prototype.append = function (a) {
                            this.hideLoading();
                            var b = [];
                            if (null == a.results || 0 === a.results.length) return void (0 === this.$results.children().length && this.trigger("results:message", { message: "noResults" }));
                            a.results = this.sort(a.results);
                            for (var c = 0; c < a.results.length; c++) {
                                var d = a.results[c],
                                    e = this.option(d);
                                b.push(e);
                            }
                            this.$results.append(b);
                        }),
                        (c.prototype.position = function (a, b) {
                            var c = b.find(".select2-results");
                            c.append(a);
                        }),
                        (c.prototype.sort = function (a) {
                            var b = this.options.get("sorter");
                            return b(a);
                        }),
                        (c.prototype.highlightFirstItem = function () {
                            var a = this.$results.find(".select2-results__option[aria-selected]"),
                                b = a.filter("[aria-selected=true]");
                            b.length > 0 ? b.first().trigger("mouseenter") : a.first().trigger("mouseenter"), this.ensureHighlightVisible();
                        }),
                        (c.prototype.setClasses = function () {
                            var b = this;
                            this.data.current(function (c) {
                                var d = a.map(c, function (a) {
                                        return a.id.toString();
                                    }),
                                    e = b.$results.find(".select2-results__option[aria-selected]");
                                e.each(function () {
                                    var b = a(this),
                                        c = a.data(this, "data"),
                                        e = "" + c.id;
                                    (null != c.element && c.element.selected) || (null == c.element && a.inArray(e, d) > -1) ? b.attr("aria-selected", "true") : b.attr("aria-selected", "false");
                                });
                            });
                        }),
                        (c.prototype.showLoading = function (a) {
                            this.hideLoading();
                            var b = this.options.get("translations").get("searching"),
                                c = { disabled: !0, loading: !0, text: b(a) },
                                d = this.option(c);
                            (d.className += " loading-results"), this.$results.prepend(d);
                        }),
                        (c.prototype.hideLoading = function () {
                            this.$results.find(".loading-results").remove();
                        }),
                        (c.prototype.option = function (b) {
                            var c = document.createElement("li");
                            c.className = "select2-results__option";
                            var d = { role: "treeitem", "aria-selected": "false" };
                            b.disabled && (delete d["aria-selected"], (d["aria-disabled"] = "true")),
                                null == b.id && delete d["aria-selected"],
                                null != b._resultId && (c.id = b._resultId),
                                b.title && (c.title = b.title),
                                b.children && ((d.role = "group"), (d["aria-label"] = b.text), delete d["aria-selected"]);
                            for (var e in d) {
                                var f = d[e];
                                c.setAttribute(e, f);
                            }
                            if (b.children) {
                                var g = a(c),
                                    h = document.createElement("strong");
                                h.className = "select2-results__group";
                                a(h);
                                this.template(b, h);
                                for (var i = [], j = 0; j < b.children.length; j++) {
                                    var k = b.children[j],
                                        l = this.option(k);
                                    i.push(l);
                                }
                                var m = a("<ul></ul>", { class: "select2-results__options select2-results__options--nested" });
                                m.append(i), g.append(h), g.append(m);
                            } else this.template(b, c);
                            return a.data(c, "data", b), c;
                        }),
                        (c.prototype.bind = function (b, c) {
                            var d = this,
                                e = b.id + "-results";
                            this.$results.attr("id", e),
                                b.on("results:all", function (a) {
                                    d.clear(), d.append(a.data), b.isOpen() && (d.setClasses(), d.highlightFirstItem());
                                }),
                                b.on("results:append", function (a) {
                                    d.append(a.data), b.isOpen() && d.setClasses();
                                }),
                                b.on("query", function (a) {
                                    d.hideMessages(), d.showLoading(a);
                                }),
                                b.on("select", function () {
                                    b.isOpen() && (d.setClasses(), d.highlightFirstItem());
                                }),
                                b.on("unselect", function () {
                                    b.isOpen() && (d.setClasses(), d.highlightFirstItem());
                                }),
                                b.on("open", function () {
                                    d.$results.attr("aria-expanded", "true"), d.$results.attr("aria-hidden", "false"), d.setClasses(), d.ensureHighlightVisible();
                                }),
                                b.on("close", function () {
                                    d.$results.attr("aria-expanded", "false"), d.$results.attr("aria-hidden", "true"), d.$results.removeAttr("aria-activedescendant");
                                }),
                                b.on("results:toggle", function () {
                                    var a = d.getHighlightedResults();
                                    0 !== a.length && a.trigger("mouseup");
                                }),
                                b.on("results:select", function () {
                                    var a = d.getHighlightedResults();
                                    if (0 !== a.length) {
                                        var b = a.data("data");
                                        "true" == a.attr("aria-selected") ? d.trigger("close", {}) : d.trigger("select", { data: b });
                                    }
                                }),
                                b.on("results:previous", function () {
                                    var a = d.getHighlightedResults(),
                                        b = d.$results.find("[aria-selected]"),
                                        c = b.index(a);
                                    if (0 !== c) {
                                        var e = c - 1;
                                        0 === a.length && (e = 0);
                                        var f = b.eq(e);
                                        f.trigger("mouseenter");
                                        var g = d.$results.offset().top,
                                            h = f.offset().top,
                                            i = d.$results.scrollTop() + (h - g);
                                        0 === e ? d.$results.scrollTop(0) : 0 > h - g && d.$results.scrollTop(i);
                                    }
                                }),
                                b.on("results:next", function () {
                                    var a = d.getHighlightedResults(),
                                        b = d.$results.find("[aria-selected]"),
                                        c = b.index(a),
                                        e = c + 1;
                                    if (!(e >= b.length)) {
                                        var f = b.eq(e);
                                        f.trigger("mouseenter");
                                        var g = d.$results.offset().top + d.$results.outerHeight(!1),
                                            h = f.offset().top + f.outerHeight(!1),
                                            i = d.$results.scrollTop() + h - g;
                                        0 === e ? d.$results.scrollTop(0) : h > g && d.$results.scrollTop(i);
                                    }
                                }),
                                b.on("results:focus", function (a) {
                                    a.element.addClass("select2-results__option--highlighted");
                                }),
                                b.on("results:message", function (a) {
                                    d.displayMessage(a);
                                }),
                                a.fn.mousewheel &&
                                    this.$results.on("mousewheel", function (a) {
                                        var b = d.$results.scrollTop(),
                                            c = d.$results.get(0).scrollHeight - b + a.deltaY,
                                            e = a.deltaY > 0 && b - a.deltaY <= 0,
                                            f = a.deltaY < 0 && c <= d.$results.height();
                                        e ? (d.$results.scrollTop(0), a.preventDefault(), a.stopPropagation()) : f && (d.$results.scrollTop(d.$results.get(0).scrollHeight - d.$results.height()), a.preventDefault(), a.stopPropagation());
                                    }),
                                this.$results.on("mouseup", ".select2-results__option[aria-selected]", function (b) {
                                    var c = a(this),
                                        e = c.data("data");
                                    return "true" === c.attr("aria-selected")
                                        ? void (d.options.get("multiple") ? d.trigger("unselect", { originalEvent: b, data: e }) : d.trigger("close", {}))
                                        : void d.trigger("select", { originalEvent: b, data: e });
                                }),
                                this.$results.on("mouseenter", ".select2-results__option[aria-selected]", function (b) {
                                    var c = a(this).data("data");
                                    d.getHighlightedResults().removeClass("select2-results__option--highlighted"), d.trigger("results:focus", { data: c, element: a(this) });
                                });
                        }),
                        (c.prototype.getHighlightedResults = function () {
                            var a = this.$results.find(".select2-results__option--highlighted");
                            return a;
                        }),
                        (c.prototype.destroy = function () {
                            this.$results.remove();
                        }),
                        (c.prototype.ensureHighlightVisible = function () {
                            var a = this.getHighlightedResults();
                            if (0 !== a.length) {
                                var b = this.$results.find("[aria-selected]"),
                                    c = b.index(a),
                                    d = this.$results.offset().top,
                                    e = a.offset().top,
                                    f = this.$results.scrollTop() + (e - d),
                                    g = e - d;
                                (f -= 2 * a.outerHeight(!1)), 2 >= c ? this.$results.scrollTop(0) : (g > this.$results.outerHeight() || 0 > g) && this.$results.scrollTop(f);
                            }
                        }),
                        (c.prototype.template = function (b, c) {
                            var d = this.options.get("templateResult"),
                                e = this.options.get("escapeMarkup"),
                                f = d(b, c);
                            null == f ? (c.style.display = "none") : "string" == typeof f ? (c.innerHTML = e(f)) : a(c).append(f);
                        }),
                        c
                    );
                }),
                b.define("select2/keys", [], function () {
                    var a = { BACKSPACE: 8, TAB: 9, ENTER: 13, SHIFT: 16, CTRL: 17, ALT: 18, ESC: 27, SPACE: 32, PAGE_UP: 33, PAGE_DOWN: 34, END: 35, HOME: 36, LEFT: 37, UP: 38, RIGHT: 39, DOWN: 40, DELETE: 46 };
                    return a;
                }),
                b.define("select2/selection/base", ["jquery", "../utils", "../keys"], function (a, b, c) {
                    function d(a, b) {
                        (this.$element = a), (this.options = b), d.__super__.constructor.call(this);
                    }
                    return (
                        b.Extend(d, b.Observable),
                        (d.prototype.render = function () {
                            var b = a('<span class="select2-selection" role="combobox"  aria-haspopup="true" aria-expanded="false"></span>');
                            return (
                                (this._tabindex = 0),
                                null != this.$element.data("old-tabindex") ? (this._tabindex = this.$element.data("old-tabindex")) : null != this.$element.attr("tabindex") && (this._tabindex = this.$element.attr("tabindex")),
                                b.attr("title", this.$element.attr("title")),
                                b.attr("tabindex", this._tabindex),
                                (this.$selection = b),
                                b
                            );
                        }),
                        (d.prototype.bind = function (a, b) {
                            var d = this,
                                e = (a.id + "-container", a.id + "-results");
                            (this.container = a),
                                this.$selection.on("focus", function (a) {
                                    d.trigger("focus", a);
                                }),
                                this.$selection.on("blur", function (a) {
                                    d._handleBlur(a);
                                }),
                                this.$selection.on("keydown", function (a) {
                                    d.trigger("keypress", a), a.which === c.SPACE && a.preventDefault();
                                }),
                                a.on("results:focus", function (a) {
                                    d.$selection.attr("aria-activedescendant", a.data._resultId);
                                }),
                                a.on("selection:update", function (a) {
                                    d.update(a.data);
                                }),
                                a.on("open", function () {
                                    d.$selection.attr("aria-expanded", "true"), d.$selection.attr("aria-owns", e), d._attachCloseHandler(a);
                                }),
                                a.on("close", function () {
                                    d.$selection.attr("aria-expanded", "false"), d.$selection.removeAttr("aria-activedescendant"), d.$selection.removeAttr("aria-owns"), d.$selection.focus(), d._detachCloseHandler(a);
                                }),
                                a.on("enable", function () {
                                    d.$selection.attr("tabindex", d._tabindex);
                                }),
                                a.on("disable", function () {
                                    d.$selection.attr("tabindex", "-1");
                                });
                        }),
                        (d.prototype._handleBlur = function (b) {
                            var c = this;
                            window.setTimeout(function () {
                                document.activeElement == c.$selection[0] || a.contains(c.$selection[0], document.activeElement) || c.trigger("blur", b);
                            }, 1);
                        }),
                        (d.prototype._attachCloseHandler = function (b) {
                            a(document.body).on("mousedown.select2." + b.id, function (b) {
                                var c = a(b.target),
                                    d = c.closest(".select2"),
                                    e = a(".select2.select2-container--open");
                                e.each(function () {
                                    var b = a(this);
                                    if (this != d[0]) {
                                        var c = b.data("element");
                                        c.select2("close");
                                    }
                                });
                            });
                        }),
                        (d.prototype._detachCloseHandler = function (b) {
                            a(document.body).off("mousedown.select2." + b.id);
                        }),
                        (d.prototype.position = function (a, b) {
                            var c = b.find(".selection");
                            c.append(a);
                        }),
                        (d.prototype.destroy = function () {
                            this._detachCloseHandler(this.container);
                        }),
                        (d.prototype.update = function (a) {
                            throw new Error("The `update` method must be defined in child classes.");
                        }),
                        d
                    );
                }),
                b.define("select2/selection/single", ["jquery", "./base", "../utils", "../keys"], function (a, b, c, d) {
                    function e() {
                        e.__super__.constructor.apply(this, arguments);
                    }
                    return (
                        c.Extend(e, b),
                        (e.prototype.render = function () {
                            var a = e.__super__.render.call(this);
                            return a.addClass("select2-selection--single"), a.html('<span class="select2-selection__rendered"></span><span class="select2-selection__arrow" role="presentation"><b role="presentation"></b></span>'), a;
                        }),
                        (e.prototype.bind = function (a, b) {
                            var c = this;
                            e.__super__.bind.apply(this, arguments);
                            var d = a.id + "-container";
                            this.$selection.find(".select2-selection__rendered").attr("id", d),
                                this.$selection.attr("aria-labelledby", d),
                                this.$selection.on("mousedown", function (a) {
                                    1 === a.which && c.trigger("toggle", { originalEvent: a });
                                }),
                                this.$selection.on("focus", function (a) {}),
                                this.$selection.on("blur", function (a) {}),
                                a.on("focus", function (b) {
                                    a.isOpen() || c.$selection.focus();
                                }),
                                a.on("selection:update", function (a) {
                                    c.update(a.data);
                                });
                        }),
                        (e.prototype.clear = function () {
                            this.$selection.find(".select2-selection__rendered").empty();
                        }),
                        (e.prototype.display = function (a, b) {
                            var c = this.options.get("templateSelection"),
                                d = this.options.get("escapeMarkup");
                            return d(c(a, b));
                        }),
                        (e.prototype.selectionContainer = function () {
                            return a("<span></span>");
                        }),
                        (e.prototype.update = function (a) {
                            if (0 === a.length) return void this.clear();
                            var b = a[0],
                                c = this.$selection.find(".select2-selection__rendered"),
                                d = this.display(b, c);
                            c.empty().append(d), c.prop("title", b.title || b.text);
                        }),
                        e
                    );
                }),
                b.define("select2/selection/multiple", ["jquery", "./base", "../utils"], function (a, b, c) {
                    function d(a, b) {
                        d.__super__.constructor.apply(this, arguments);
                    }
                    return (
                        c.Extend(d, b),
                        (d.prototype.render = function () {
                            var a = d.__super__.render.call(this);
                            return a.addClass("select2-selection--multiple"), a.html('<ul class="select2-selection__rendered"></ul>'), a;
                        }),
                        (d.prototype.bind = function (b, c) {
                            var e = this;
                            d.__super__.bind.apply(this, arguments),
                                this.$selection.on("click", function (a) {
                                    e.trigger("toggle", { originalEvent: a });
                                }),
                                this.$selection.on("click", ".select2-selection__choice__remove", function (b) {
                                    if (!e.options.get("disabled")) {
                                        var c = a(this),
                                            d = c.parent(),
                                            f = d.data("data");
                                        e.trigger("unselect", { originalEvent: b, data: f });
                                    }
                                });
                        }),
                        (d.prototype.clear = function () {
                            this.$selection.find(".select2-selection__rendered").empty();
                        }),
                        (d.prototype.display = function (a, b) {
                            var c = this.options.get("templateSelection"),
                                d = this.options.get("escapeMarkup");
                            return d(c(a, b));
                        }),
                        (d.prototype.selectionContainer = function () {
                            var b = a('<li class="select2-selection__choice"><span class="select2-selection__choice__remove" role="presentation">&times;</span></li>');
                            return b;
                        }),
                        (d.prototype.update = function (a) {
                            if ((this.clear(), 0 !== a.length)) {
                                for (var b = [], d = 0; d < a.length; d++) {
                                    var e = a[d],
                                        f = this.selectionContainer(),
                                        g = this.display(e, f);
                                    f.append(g), f.prop("title", e.title || e.text), f.data("data", e), b.push(f);
                                }
                                var h = this.$selection.find(".select2-selection__rendered");
                                c.appendMany(h, b);
                            }
                        }),
                        d
                    );
                }),
                b.define("select2/selection/placeholder", ["../utils"], function (a) {
                    function b(a, b, c) {
                        (this.placeholder = this.normalizePlaceholder(c.get("placeholder"))), a.call(this, b, c);
                    }
                    return (
                        (b.prototype.normalizePlaceholder = function (a, b) {
                            return "string" == typeof b && (b = { id: "", text: b }), b;
                        }),
                        (b.prototype.createPlaceholder = function (a, b) {
                            var c = this.selectionContainer();
                            return c.html(this.display(b)), c.addClass("select2-selection__placeholder").removeClass("select2-selection__choice"), c;
                        }),
                        (b.prototype.update = function (a, b) {
                            var c = 1 == b.length && b[0].id != this.placeholder.id,
                                d = b.length > 1;
                            if (d || c) return a.call(this, b);
                            this.clear();
                            var e = this.createPlaceholder(this.placeholder);
                            this.$selection.find(".select2-selection__rendered").append(e);
                        }),
                        b
                    );
                }),
                b.define("select2/selection/allowClear", ["jquery", "../keys"], function (a, b) {
                    function c() {}
                    return (
                        (c.prototype.bind = function (a, b, c) {
                            var d = this;
                            a.call(this, b, c),
                                null == this.placeholder && this.options.get("debug") && window.console && console.error && console.error("Select2: The `allowClear` option should be used in combination with the `placeholder` option."),
                                this.$selection.on("mousedown", ".select2-selection__clear", function (a) {
                                    d._handleClear(a);
                                }),
                                b.on("keypress", function (a) {
                                    d._handleKeyboardClear(a, b);
                                });
                        }),
                        (c.prototype._handleClear = function (a, b) {
                            if (!this.options.get("disabled")) {
                                var c = this.$selection.find(".select2-selection__clear");
                                if (0 !== c.length) {
                                    b.stopPropagation();
                                    for (var d = c.data("data"), e = 0; e < d.length; e++) {
                                        var f = { data: d[e] };
                                        if ((this.trigger("unselect", f), f.prevented)) return;
                                    }
                                    this.$element.val(this.placeholder.id).trigger("change"), this.trigger("toggle", {});
                                }
                            }
                        }),
                        (c.prototype._handleKeyboardClear = function (a, c, d) {
                            d.isOpen() || ((c.which == b.DELETE || c.which == b.BACKSPACE) && this._handleClear(c));
                        }),
                        (c.prototype.update = function (b, c) {
                            if ((b.call(this, c), !(this.$selection.find(".select2-selection__placeholder").length > 0 || 0 === c.length))) {
                                var d = a('<span class="select2-selection__clear">&times;</span>');
                                d.data("data", c), this.$selection.find(".select2-selection__rendered").prepend(d);
                            }
                        }),
                        c
                    );
                }),
                b.define("select2/selection/search", ["jquery", "../utils", "../keys"], function (a, b, c) {
                    function d(a, b, c) {
                        a.call(this, b, c);
                    }
                    return (
                        (d.prototype.render = function (b) {
                            var c = a(
                                '<li class="select2-search select2-search--inline"><input class="select2-search__field" type="search" tabindex="-1" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" role="textbox" aria-autocomplete="list" /></li>'
                            );
                            (this.$searchContainer = c), (this.$search = c.find("input"));
                            var d = b.call(this);
                            return this._transferTabIndex(), d;
                        }),
                        (d.prototype.bind = function (a, b, d) {
                            var e = this;
                            a.call(this, b, d),
                                b.on("open", function () {
                                    e.$search.trigger("focus");
                                }),
                                b.on("close", function () {
                                    e.$search.val(""), e.$search.removeAttr("aria-activedescendant"), e.$search.trigger("focus");
                                }),
                                b.on("enable", function () {
                                    e.$search.prop("disabled", !1), e._transferTabIndex();
                                }),
                                b.on("disable", function () {
                                    e.$search.prop("disabled", !0);
                                }),
                                b.on("focus", function (a) {
                                    e.$search.trigger("focus");
                                }),
                                b.on("results:focus", function (a) {
                                    e.$search.attr("aria-activedescendant", a.id);
                                }),
                                this.$selection.on("focusin", ".select2-search--inline", function (a) {
                                    e.trigger("focus", a);
                                }),
                                this.$selection.on("focusout", ".select2-search--inline", function (a) {
                                    e._handleBlur(a);
                                }),
                                this.$selection.on("keydown", ".select2-search--inline", function (a) {
                                    a.stopPropagation(), e.trigger("keypress", a), (e._keyUpPrevented = a.isDefaultPrevented());
                                    var b = a.which;
                                    if (b === c.BACKSPACE && "" === e.$search.val()) {
                                        var d = e.$searchContainer.prev(".select2-selection__choice");
                                        if (d.length > 0) {
                                            var f = d.data("data");
                                            e.searchRemoveChoice(f), a.preventDefault();
                                        }
                                    }
                                });
                            var f = document.documentMode,
                                g = f && 11 >= f;
                            this.$selection.on("input.searchcheck", ".select2-search--inline", function (a) {
                                return g ? void e.$selection.off("input.search input.searchcheck") : void e.$selection.off("keyup.search");
                            }),
                                this.$selection.on("keyup.search input.search", ".select2-search--inline", function (a) {
                                    if (g && "input" === a.type) return void e.$selection.off("input.search input.searchcheck");
                                    var b = a.which;
                                    b != c.SHIFT && b != c.CTRL && b != c.ALT && b != c.TAB && e.handleSearch(a);
                                });
                        }),
                        (d.prototype._transferTabIndex = function (a) {
                            this.$search.attr("tabindex", this.$selection.attr("tabindex")), this.$selection.attr("tabindex", "-1");
                        }),
                        (d.prototype.createPlaceholder = function (a, b) {
                            this.$search.attr("placeholder", b.text);
                        }),
                        (d.prototype.update = function (a, b) {
                            var c = this.$search[0] == document.activeElement;
                            this.$search.attr("placeholder", ""), a.call(this, b), this.$selection.find(".select2-selection__rendered").append(this.$searchContainer), this.resizeSearch(), c && this.$search.focus();
                        }),
                        (d.prototype.handleSearch = function () {
                            if ((this.resizeSearch(), !this._keyUpPrevented)) {
                                var a = this.$search.val();
                                this.trigger("query", { term: a });
                            }
                            this._keyUpPrevented = !1;
                        }),
                        (d.prototype.searchRemoveChoice = function (a, b) {
                            this.trigger("unselect", { data: b }), this.$search.val(b.text), this.handleSearch();
                        }),
                        (d.prototype.resizeSearch = function () {
                            this.$search.css("width", "25px");
                            var a = "";
                            if ("" !== this.$search.attr("placeholder")) a = this.$selection.find(".select2-selection__rendered").innerWidth();
                            else {
                                var b = this.$search.val().length + 1;
                                a = 0.75 * b + "em";
                            }
                            this.$search.css("width", a);
                        }),
                        d
                    );
                }),
                b.define("select2/selection/eventRelay", ["jquery"], function (a) {
                    function b() {}
                    return (
                        (b.prototype.bind = function (b, c, d) {
                            var e = this,
                                f = ["open", "opening", "close", "closing", "select", "selecting", "unselect", "unselecting"],
                                g = ["opening", "closing", "selecting", "unselecting"];
                            b.call(this, c, d),
                                c.on("*", function (b, c) {
                                    if (-1 !== a.inArray(b, f)) {
                                        c = c || {};
                                        var d = a.Event("select2:" + b, { params: c });
                                        e.$element.trigger(d), -1 !== a.inArray(b, g) && (c.prevented = d.isDefaultPrevented());
                                    }
                                });
                        }),
                        b
                    );
                }),
                b.define("select2/translation", ["jquery", "require"], function (a, b) {
                    function c(a) {
                        this.dict = a || {};
                    }
                    return (
                        (c.prototype.all = function () {
                            return this.dict;
                        }),
                        (c.prototype.get = function (a) {
                            return this.dict[a];
                        }),
                        (c.prototype.extend = function (b) {
                            this.dict = a.extend({}, b.all(), this.dict);
                        }),
                        (c._cache = {}),
                        (c.loadPath = function (a) {
                            if (!(a in c._cache)) {
                                var d = b(a);
                                c._cache[a] = d;
                            }
                            return new c(c._cache[a]);
                        }),
                        c
                    );
                }),
                b.define("select2/diacritics", [], function () {
                    var a = {
                        "Ⓐ": "A",
                        Ａ: "A",
                        À: "A",
                        Á: "A",
                        Â: "A",
                        Ầ: "A",
                        Ấ: "A",
                        Ẫ: "A",
                        Ẩ: "A",
                        Ã: "A",
                        Ā: "A",
                        Ă: "A",
                        Ằ: "A",
                        Ắ: "A",
                        Ẵ: "A",
                        Ẳ: "A",
                        Ȧ: "A",
                        Ǡ: "A",
                        Ä: "A",
                        Ǟ: "A",
                        Ả: "A",
                        Å: "A",
                        Ǻ: "A",
                        Ǎ: "A",
                        Ȁ: "A",
                        Ȃ: "A",
                        Ạ: "A",
                        Ậ: "A",
                        Ặ: "A",
                        Ḁ: "A",
                        Ą: "A",
                        Ⱥ: "A",
                        Ɐ: "A",
                        Ꜳ: "AA",
                        Æ: "AE",
                        Ǽ: "AE",
                        Ǣ: "AE",
                        Ꜵ: "AO",
                        Ꜷ: "AU",
                        Ꜹ: "AV",
                        Ꜻ: "AV",
                        Ꜽ: "AY",
                        "Ⓑ": "B",
                        Ｂ: "B",
                        Ḃ: "B",
                        Ḅ: "B",
                        Ḇ: "B",
                        Ƀ: "B",
                        Ƃ: "B",
                        Ɓ: "B",
                        "Ⓒ": "C",
                        Ｃ: "C",
                        Ć: "C",
                        Ĉ: "C",
                        Ċ: "C",
                        Č: "C",
                        Ç: "C",
                        Ḉ: "C",
                        Ƈ: "C",
                        Ȼ: "C",
                        Ꜿ: "C",
                        "Ⓓ": "D",
                        Ｄ: "D",
                        Ḋ: "D",
                        Ď: "D",
                        Ḍ: "D",
                        Ḑ: "D",
                        Ḓ: "D",
                        Ḏ: "D",
                        Đ: "D",
                        Ƌ: "D",
                        Ɗ: "D",
                        Ɖ: "D",
                        Ꝺ: "D",
                        Ǳ: "DZ",
                        Ǆ: "DZ",
                        ǲ: "Dz",
                        ǅ: "Dz",
                        "Ⓔ": "E",
                        Ｅ: "E",
                        È: "E",
                        É: "E",
                        Ê: "E",
                        Ề: "E",
                        Ế: "E",
                        Ễ: "E",
                        Ể: "E",
                        Ẽ: "E",
                        Ē: "E",
                        Ḕ: "E",
                        Ḗ: "E",
                        Ĕ: "E",
                        Ė: "E",
                        Ë: "E",
                        Ẻ: "E",
                        Ě: "E",
                        Ȅ: "E",
                        Ȇ: "E",
                        Ẹ: "E",
                        Ệ: "E",
                        Ȩ: "E",
                        Ḝ: "E",
                        Ę: "E",
                        Ḙ: "E",
                        Ḛ: "E",
                        Ɛ: "E",
                        Ǝ: "E",
                        "Ⓕ": "F",
                        Ｆ: "F",
                        Ḟ: "F",
                        Ƒ: "F",
                        Ꝼ: "F",
                        "Ⓖ": "G",
                        Ｇ: "G",
                        Ǵ: "G",
                        Ĝ: "G",
                        Ḡ: "G",
                        Ğ: "G",
                        Ġ: "G",
                        Ǧ: "G",
                        Ģ: "G",
                        Ǥ: "G",
                        Ɠ: "G",
                        Ꞡ: "G",
                        Ᵹ: "G",
                        Ꝿ: "G",
                        "Ⓗ": "H",
                        Ｈ: "H",
                        Ĥ: "H",
                        Ḣ: "H",
                        Ḧ: "H",
                        Ȟ: "H",
                        Ḥ: "H",
                        Ḩ: "H",
                        Ḫ: "H",
                        Ħ: "H",
                        Ⱨ: "H",
                        Ⱶ: "H",
                        Ɥ: "H",
                        "Ⓘ": "I",
                        Ｉ: "I",
                        Ì: "I",
                        Í: "I",
                        Î: "I",
                        Ĩ: "I",
                        Ī: "I",
                        Ĭ: "I",
                        İ: "I",
                        Ï: "I",
                        Ḯ: "I",
                        Ỉ: "I",
                        Ǐ: "I",
                        Ȉ: "I",
                        Ȋ: "I",
                        Ị: "I",
                        Į: "I",
                        Ḭ: "I",
                        Ɨ: "I",
                        "Ⓙ": "J",
                        Ｊ: "J",
                        Ĵ: "J",
                        Ɉ: "J",
                        "Ⓚ": "K",
                        Ｋ: "K",
                        Ḱ: "K",
                        Ǩ: "K",
                        Ḳ: "K",
                        Ķ: "K",
                        Ḵ: "K",
                        Ƙ: "K",
                        Ⱪ: "K",
                        Ꝁ: "K",
                        Ꝃ: "K",
                        Ꝅ: "K",
                        Ꞣ: "K",
                        "Ⓛ": "L",
                        Ｌ: "L",
                        Ŀ: "L",
                        Ĺ: "L",
                        Ľ: "L",
                        Ḷ: "L",
                        Ḹ: "L",
                        Ļ: "L",
                        Ḽ: "L",
                        Ḻ: "L",
                        Ł: "L",
                        Ƚ: "L",
                        Ɫ: "L",
                        Ⱡ: "L",
                        Ꝉ: "L",
                        Ꝇ: "L",
                        Ꞁ: "L",
                        Ǉ: "LJ",
                        ǈ: "Lj",
                        "Ⓜ": "M",
                        Ｍ: "M",
                        Ḿ: "M",
                        Ṁ: "M",
                        Ṃ: "M",
                        Ɱ: "M",
                        Ɯ: "M",
                        "Ⓝ": "N",
                        Ｎ: "N",
                        Ǹ: "N",
                        Ń: "N",
                        Ñ: "N",
                        Ṅ: "N",
                        Ň: "N",
                        Ṇ: "N",
                        Ņ: "N",
                        Ṋ: "N",
                        Ṉ: "N",
                        Ƞ: "N",
                        Ɲ: "N",
                        Ꞑ: "N",
                        Ꞥ: "N",
                        Ǌ: "NJ",
                        ǋ: "Nj",
                        "Ⓞ": "O",
                        Ｏ: "O",
                        Ò: "O",
                        Ó: "O",
                        Ô: "O",
                        Ồ: "O",
                        Ố: "O",
                        Ỗ: "O",
                        Ổ: "O",
                        Õ: "O",
                        Ṍ: "O",
                        Ȭ: "O",
                        Ṏ: "O",
                        Ō: "O",
                        Ṑ: "O",
                        Ṓ: "O",
                        Ŏ: "O",
                        Ȯ: "O",
                        Ȱ: "O",
                        Ö: "O",
                        Ȫ: "O",
                        Ỏ: "O",
                        Ő: "O",
                        Ǒ: "O",
                        Ȍ: "O",
                        Ȏ: "O",
                        Ơ: "O",
                        Ờ: "O",
                        Ớ: "O",
                        Ỡ: "O",
                        Ở: "O",
                        Ợ: "O",
                        Ọ: "O",
                        Ộ: "O",
                        Ǫ: "O",
                        Ǭ: "O",
                        Ø: "O",
                        Ǿ: "O",
                        Ɔ: "O",
                        Ɵ: "O",
                        Ꝋ: "O",
                        Ꝍ: "O",
                        Ƣ: "OI",
                        Ꝏ: "OO",
                        Ȣ: "OU",
                        "Ⓟ": "P",
                        Ｐ: "P",
                        Ṕ: "P",
                        Ṗ: "P",
                        Ƥ: "P",
                        Ᵽ: "P",
                        Ꝑ: "P",
                        Ꝓ: "P",
                        Ꝕ: "P",
                        "Ⓠ": "Q",
                        Ｑ: "Q",
                        Ꝗ: "Q",
                        Ꝙ: "Q",
                        Ɋ: "Q",
                        "Ⓡ": "R",
                        Ｒ: "R",
                        Ŕ: "R",
                        Ṙ: "R",
                        Ř: "R",
                        Ȑ: "R",
                        Ȓ: "R",
                        Ṛ: "R",
                        Ṝ: "R",
                        Ŗ: "R",
                        Ṟ: "R",
                        Ɍ: "R",
                        Ɽ: "R",
                        Ꝛ: "R",
                        Ꞧ: "R",
                        Ꞃ: "R",
                        "Ⓢ": "S",
                        Ｓ: "S",
                        ẞ: "S",
                        Ś: "S",
                        Ṥ: "S",
                        Ŝ: "S",
                        Ṡ: "S",
                        Š: "S",
                        Ṧ: "S",
                        Ṣ: "S",
                        Ṩ: "S",
                        Ș: "S",
                        Ş: "S",
                        Ȿ: "S",
                        Ꞩ: "S",
                        Ꞅ: "S",
                        "Ⓣ": "T",
                        Ｔ: "T",
                        Ṫ: "T",
                        Ť: "T",
                        Ṭ: "T",
                        Ț: "T",
                        Ţ: "T",
                        Ṱ: "T",
                        Ṯ: "T",
                        Ŧ: "T",
                        Ƭ: "T",
                        Ʈ: "T",
                        Ⱦ: "T",
                        Ꞇ: "T",
                        Ꜩ: "TZ",
                        "Ⓤ": "U",
                        Ｕ: "U",
                        Ù: "U",
                        Ú: "U",
                        Û: "U",
                        Ũ: "U",
                        Ṹ: "U",
                        Ū: "U",
                        Ṻ: "U",
                        Ŭ: "U",
                        Ü: "U",
                        Ǜ: "U",
                        Ǘ: "U",
                        Ǖ: "U",
                        Ǚ: "U",
                        Ủ: "U",
                        Ů: "U",
                        Ű: "U",
                        Ǔ: "U",
                        Ȕ: "U",
                        Ȗ: "U",
                        Ư: "U",
                        Ừ: "U",
                        Ứ: "U",
                        Ữ: "U",
                        Ử: "U",
                        Ự: "U",
                        Ụ: "U",
                        Ṳ: "U",
                        Ų: "U",
                        Ṷ: "U",
                        Ṵ: "U",
                        Ʉ: "U",
                        "Ⓥ": "V",
                        Ｖ: "V",
                        Ṽ: "V",
                        Ṿ: "V",
                        Ʋ: "V",
                        Ꝟ: "V",
                        Ʌ: "V",
                        Ꝡ: "VY",
                        "Ⓦ": "W",
                        Ｗ: "W",
                        Ẁ: "W",
                        Ẃ: "W",
                        Ŵ: "W",
                        Ẇ: "W",
                        Ẅ: "W",
                        Ẉ: "W",
                        Ⱳ: "W",
                        "Ⓧ": "X",
                        Ｘ: "X",
                        Ẋ: "X",
                        Ẍ: "X",
                        "Ⓨ": "Y",
                        Ｙ: "Y",
                        Ỳ: "Y",
                        Ý: "Y",
                        Ŷ: "Y",
                        Ỹ: "Y",
                        Ȳ: "Y",
                        Ẏ: "Y",
                        Ÿ: "Y",
                        Ỷ: "Y",
                        Ỵ: "Y",
                        Ƴ: "Y",
                        Ɏ: "Y",
                        Ỿ: "Y",
                        "Ⓩ": "Z",
                        Ｚ: "Z",
                        Ź: "Z",
                        Ẑ: "Z",
                        Ż: "Z",
                        Ž: "Z",
                        Ẓ: "Z",
                        Ẕ: "Z",
                        Ƶ: "Z",
                        Ȥ: "Z",
                        Ɀ: "Z",
                        Ⱬ: "Z",
                        Ꝣ: "Z",
                        "ⓐ": "a",
                        ａ: "a",
                        ẚ: "a",
                        à: "a",
                        á: "a",
                        â: "a",
                        ầ: "a",
                        ấ: "a",
                        ẫ: "a",
                        ẩ: "a",
                        ã: "a",
                        ā: "a",
                        ă: "a",
                        ằ: "a",
                        ắ: "a",
                        ẵ: "a",
                        ẳ: "a",
                        ȧ: "a",
                        ǡ: "a",
                        ä: "a",
                        ǟ: "a",
                        ả: "a",
                        å: "a",
                        ǻ: "a",
                        ǎ: "a",
                        ȁ: "a",
                        ȃ: "a",
                        ạ: "a",
                        ậ: "a",
                        ặ: "a",
                        ḁ: "a",
                        ą: "a",
                        ⱥ: "a",
                        ɐ: "a",
                        ꜳ: "aa",
                        æ: "ae",
                        ǽ: "ae",
                        ǣ: "ae",
                        ꜵ: "ao",
                        ꜷ: "au",
                        ꜹ: "av",
                        ꜻ: "av",
                        ꜽ: "ay",
                        "ⓑ": "b",
                        ｂ: "b",
                        ḃ: "b",
                        ḅ: "b",
                        ḇ: "b",
                        ƀ: "b",
                        ƃ: "b",
                        ɓ: "b",
                        "ⓒ": "c",
                        ｃ: "c",
                        ć: "c",
                        ĉ: "c",
                        ċ: "c",
                        č: "c",
                        ç: "c",
                        ḉ: "c",
                        ƈ: "c",
                        ȼ: "c",
                        ꜿ: "c",
                        ↄ: "c",
                        "ⓓ": "d",
                        ｄ: "d",
                        ḋ: "d",
                        ď: "d",
                        ḍ: "d",
                        ḑ: "d",
                        ḓ: "d",
                        ḏ: "d",
                        đ: "d",
                        ƌ: "d",
                        ɖ: "d",
                        ɗ: "d",
                        ꝺ: "d",
                        ǳ: "dz",
                        ǆ: "dz",
                        "ⓔ": "e",
                        ｅ: "e",
                        è: "e",
                        é: "e",
                        ê: "e",
                        ề: "e",
                        ế: "e",
                        ễ: "e",
                        ể: "e",
                        ẽ: "e",
                        ē: "e",
                        ḕ: "e",
                        ḗ: "e",
                        ĕ: "e",
                        ė: "e",
                        ë: "e",
                        ẻ: "e",
                        ě: "e",
                        ȅ: "e",
                        ȇ: "e",
                        ẹ: "e",
                        ệ: "e",
                        ȩ: "e",
                        ḝ: "e",
                        ę: "e",
                        ḙ: "e",
                        ḛ: "e",
                        ɇ: "e",
                        ɛ: "e",
                        ǝ: "e",
                        "ⓕ": "f",
                        ｆ: "f",
                        ḟ: "f",
                        ƒ: "f",
                        ꝼ: "f",
                        "ⓖ": "g",
                        ｇ: "g",
                        ǵ: "g",
                        ĝ: "g",
                        ḡ: "g",
                        ğ: "g",
                        ġ: "g",
                        ǧ: "g",
                        ģ: "g",
                        ǥ: "g",
                        ɠ: "g",
                        ꞡ: "g",
                        ᵹ: "g",
                        ꝿ: "g",
                        "ⓗ": "h",
                        ｈ: "h",
                        ĥ: "h",
                        ḣ: "h",
                        ḧ: "h",
                        ȟ: "h",
                        ḥ: "h",
                        ḩ: "h",
                        ḫ: "h",
                        ẖ: "h",
                        ħ: "h",
                        ⱨ: "h",
                        ⱶ: "h",
                        ɥ: "h",
                        ƕ: "hv",
                        "ⓘ": "i",
                        ｉ: "i",
                        ì: "i",
                        í: "i",
                        î: "i",
                        ĩ: "i",
                        ī: "i",
                        ĭ: "i",
                        ï: "i",
                        ḯ: "i",
                        ỉ: "i",
                        ǐ: "i",
                        ȉ: "i",
                        ȋ: "i",
                        ị: "i",
                        į: "i",
                        ḭ: "i",
                        ɨ: "i",
                        ı: "i",
                        "ⓙ": "j",
                        ｊ: "j",
                        ĵ: "j",
                        ǰ: "j",
                        ɉ: "j",
                        "ⓚ": "k",
                        ｋ: "k",
                        ḱ: "k",
                        ǩ: "k",
                        ḳ: "k",
                        ķ: "k",
                        ḵ: "k",
                        ƙ: "k",
                        ⱪ: "k",
                        ꝁ: "k",
                        ꝃ: "k",
                        ꝅ: "k",
                        ꞣ: "k",
                        "ⓛ": "l",
                        ｌ: "l",
                        ŀ: "l",
                        ĺ: "l",
                        ľ: "l",
                        ḷ: "l",
                        ḹ: "l",
                        ļ: "l",
                        ḽ: "l",
                        ḻ: "l",
                        ſ: "l",
                        ł: "l",
                        ƚ: "l",
                        ɫ: "l",
                        ⱡ: "l",
                        ꝉ: "l",
                        ꞁ: "l",
                        ꝇ: "l",
                        ǉ: "lj",
                        "ⓜ": "m",
                        ｍ: "m",
                        ḿ: "m",
                        ṁ: "m",
                        ṃ: "m",
                        ɱ: "m",
                        ɯ: "m",
                        "ⓝ": "n",
                        ｎ: "n",
                        ǹ: "n",
                        ń: "n",
                        ñ: "n",
                        ṅ: "n",
                        ň: "n",
                        ṇ: "n",
                        ņ: "n",
                        ṋ: "n",
                        ṉ: "n",
                        ƞ: "n",
                        ɲ: "n",
                        ŉ: "n",
                        ꞑ: "n",
                        ꞥ: "n",
                        ǌ: "nj",
                        "ⓞ": "o",
                        ｏ: "o",
                        ò: "o",
                        ó: "o",
                        ô: "o",
                        ồ: "o",
                        ố: "o",
                        ỗ: "o",
                        ổ: "o",
                        õ: "o",
                        ṍ: "o",
                        ȭ: "o",
                        ṏ: "o",
                        ō: "o",
                        ṑ: "o",
                        ṓ: "o",
                        ŏ: "o",
                        ȯ: "o",
                        ȱ: "o",
                        ö: "o",
                        ȫ: "o",
                        ỏ: "o",
                        ő: "o",
                        ǒ: "o",
                        ȍ: "o",
                        ȏ: "o",
                        ����: "o",
                        ờ: "o",
                        ớ: "o",
                        ỡ: "o",
                        ở: "o",
                        ợ: "o",
                        ọ: "o",
                        ộ: "o",
                        ǫ: "o",
                        ǭ: "o",
                        ø: "o",
                        ǿ: "o",
                        ɔ: "o",
                        ꝋ: "o",
                        ꝍ: "o",
                        ɵ: "o",
                        ƣ: "oi",
                        ȣ: "ou",
                        ꝏ: "oo",
                        "ⓟ": "p",
                        ｐ: "p",
                        ṕ: "p",
                        ṗ: "p",
                        ƥ: "p",
                        ᵽ: "p",
                        ꝑ: "p",
                        ꝓ: "p",
                        ꝕ: "p",
                        "ⓠ": "q",
                        ｑ: "q",
                        ɋ: "q",
                        ꝗ: "q",
                        ꝙ: "q",
                        "ⓡ": "r",
                        ｒ: "r",
                        ŕ: "r",
                        ṙ: "r",
                        ř: "r",
                        ȑ: "r",
                        ȓ: "r",
                        ṛ: "r",
                        ṝ: "r",
                        ŗ: "r",
                        ṟ: "r",
                        ɍ: "r",
                        ɽ: "r",
                        ꝛ: "r",
                        ꞧ: "r",
                        ꞃ: "r",
                        "ⓢ": "s",
                        ｓ: "s",
                        ß: "s",
                        ś: "s",
                        ṥ: "s",
                        ŝ: "s",
                        ṡ: "s",
                        š: "s",
                        ṧ: "s",
                        ṣ: "s",
                        ṩ: "s",
                        ș: "s",
                        ş: "s",
                        ȿ: "s",
                        ꞩ: "s",
                        ꞅ: "s",
                        ẛ: "s",
                        "ⓣ": "t",
                        ｔ: "t",
                        ṫ: "t",
                        ẗ: "t",
                        ť: "t",
                        ṭ: "t",
                        ț: "t",
                        ţ: "t",
                        ṱ: "t",
                        ṯ: "t",
                        ŧ: "t",
                        ƭ: "t",
                        ʈ: "t",
                        ⱦ: "t",
                        ꞇ: "t",
                        ꜩ: "tz",
                        "ⓤ": "u",
                        ｕ: "u",
                        ù: "u",
                        ú: "u",
                        û: "u",
                        ũ: "u",
                        ṹ: "u",
                        ū: "u",
                        ṻ: "u",
                        ŭ: "u",
                        ü: "u",
                        ǜ: "u",
                        ǘ: "u",
                        ǖ: "u",
                        ǚ: "u",
                        ủ: "u",
                        ů: "u",
                        ű: "u",
                        ǔ: "u",
                        ȕ: "u",
                        ȗ: "u",
                        ư: "u",
                        ừ: "u",
                        ứ: "u",
                        ữ: "u",
                        ử: "u",
                        ự: "u",
                        ụ: "u",
                        ṳ: "u",
                        ų: "u",
                        ṷ: "u",
                        ṵ: "u",
                        ʉ: "u",
                        "ⓥ": "v",
                        ｖ: "v",
                        ṽ: "v",
                        ṿ: "v",
                        ʋ: "v",
                        ꝟ: "v",
                        ʌ: "v",
                        ꝡ: "vy",
                        "ⓦ": "w",
                        ｗ: "w",
                        ẁ: "w",
                        ẃ: "w",
                        ŵ: "w",
                        ẇ: "w",
                        ẅ: "w",
                        ẘ: "w",
                        ẉ: "w",
                        ⱳ: "w",
                        "ⓧ": "x",
                        ｘ: "x",
                        ẋ: "x",
                        ẍ: "x",
                        "ⓨ": "y",
                        ｙ: "y",
                        ỳ: "y",
                        ý: "y",
                        ŷ: "y",
                        ỹ: "y",
                        ȳ: "y",
                        ẏ: "y",
                        ÿ: "y",
                        ỷ: "y",
                        ẙ: "y",
                        ỵ: "y",
                        ƴ: "y",
                        ɏ: "y",
                        ỿ: "y",
                        "ⓩ": "z",
                        ｚ: "z",
                        ź: "z",
                        ẑ: "z",
                        ż: "z",
                        ž: "z",
                        ẓ: "z",
                        ẕ: "z",
                        ƶ: "z",
                        ȥ: "z",
                        ɀ: "z",
                        ⱬ: "z",
                        ꝣ: "z",
                        Ά: "Α",
                        Έ: "Ε",
                        Ή: "Η",
                        Ί: "Ι",
                        Ϊ: "Ι",
                        Ό: "Ο",
                        Ύ: "Υ",
                        Ϋ: "Υ",
                        Ώ: "Ω",
                        ά: "α",
                        έ: "ε",
                        ή: "η",
                        ί: "ι",
                        ϊ: "ι",
                        ΐ: "ι",
                        ό: "ο",
                        ύ: "υ",
                        ϋ: "υ",
                        ΰ: "υ",
                        ω: "ω",
                        ς: "σ",
                    };
                    return a;
                }),
                b.define("select2/data/base", ["../utils"], function (a) {
                    function b(a, c) {
                        b.__super__.constructor.call(this);
                    }
                    return (
                        a.Extend(b, a.Observable),
                        (b.prototype.current = function (a) {
                            throw new Error("The `current` method must be defined in child classes.");
                        }),
                        (b.prototype.query = function (a, b) {
                            throw new Error("The `query` method must be defined in child classes.");
                        }),
                        (b.prototype.bind = function (a, b) {}),
                        (b.prototype.destroy = function () {}),
                        (b.prototype.generateResultId = function (b, c) {
                            var d = b.id + "-result-";
                            return (d += a.generateChars(4)), (d += null != c.id ? "-" + c.id.toString() : "-" + a.generateChars(4));
                        }),
                        b
                    );
                }),
                b.define("select2/data/select", ["./base", "../utils", "jquery"], function (a, b, c) {
                    function d(a, b) {
                        (this.$element = a), (this.options = b), d.__super__.constructor.call(this);
                    }
                    return (
                        b.Extend(d, a),
                        (d.prototype.current = function (a) {
                            var b = [],
                                d = this;
                            this.$element.find(":selected").each(function () {
                                var a = c(this),
                                    e = d.item(a);
                                b.push(e);
                            }),
                                a(b);
                        }),
                        (d.prototype.select = function (a) {
                            var b = this;
                            if (((a.selected = !0), c(a.element).is("option"))) return (a.element.selected = !0), void this.$element.trigger("change");
                            if (this.$element.prop("multiple"))
                                this.current(function (d) {
                                    var e = [];
                                    (a = [a]), a.push.apply(a, d);
                                    for (var f = 0; f < a.length; f++) {
                                        var g = a[f].id;
                                        -1 === c.inArray(g, e) && e.push(g);
                                    }
                                    b.$element.val(e), b.$element.trigger("change");
                                });
                            else {
                                var d = a.id;
                                this.$element.val(d), this.$element.trigger("change");
                            }
                        }),
                        (d.prototype.unselect = function (a) {
                            var b = this;
                            if (this.$element.prop("multiple"))
                                return (
                                    (a.selected = !1),
                                    c(a.element).is("option")
                                        ? ((a.element.selected = !1), void this.$element.trigger("change"))
                                        : void this.current(function (d) {
                                              for (var e = [], f = 0; f < d.length; f++) {
                                                  var g = d[f].id;
                                                  g !== a.id && -1 === c.inArray(g, e) && e.push(g);
                                              }
                                              b.$element.val(e), b.$element.trigger("change");
                                          })
                                );
                        }),
                        (d.prototype.bind = function (a, b) {
                            var c = this;
                            (this.container = a),
                                a.on("select", function (a) {
                                    c.select(a.data);
                                }),
                                a.on("unselect", function (a) {
                                    c.unselect(a.data);
                                });
                        }),
                        (d.prototype.destroy = function () {
                            this.$element.find("*").each(function () {
                                c.removeData(this, "data");
                            });
                        }),
                        (d.prototype.query = function (a, b) {
                            var d = [],
                                e = this,
                                f = this.$element.children();
                            f.each(function () {
                                var b = c(this);
                                if (b.is("option") || b.is("optgroup")) {
                                    var f = e.item(b),
                                        g = e.matches(a, f);
                                    null !== g && d.push(g);
                                }
                            }),
                                b({ results: d });
                        }),
                        (d.prototype.addOptions = function (a) {
                            b.appendMany(this.$element, a);
                        }),
                        (d.prototype.option = function (a) {
                            var b;
                            a.children ? ((b = document.createElement("optgroup")), (b.label = a.text)) : ((b = document.createElement("option")), void 0 !== b.textContent ? (b.textContent = a.text) : (b.innerText = a.text)),
                                a.id && (b.value = a.id),
                                a.disabled && (b.disabled = !0),
                                a.selected && (b.selected = !0),
                                a.title && (b.title = a.title);
                            var d = c(b),
                                e = this._normalizeItem(a);
                            return (e.element = b), c.data(b, "data", e), d;
                        }),
                        (d.prototype.item = function (a) {
                            var b = {};
                            if (((b = c.data(a[0], "data")), null != b)) return b;
                            if (a.is("option")) b = { id: a.val(), text: a.text(), disabled: a.prop("disabled"), selected: a.prop("selected"), title: a.prop("title") };
                            else if (a.is("optgroup")) {
                                b = { text: a.prop("label"), children: [], title: a.prop("title") };
                                for (var d = a.children("option"), e = [], f = 0; f < d.length; f++) {
                                    var g = c(d[f]),
                                        h = this.item(g);
                                    e.push(h);
                                }
                                b.children = e;
                            }
                            return (b = this._normalizeItem(b)), (b.element = a[0]), c.data(a[0], "data", b), b;
                        }),
                        (d.prototype._normalizeItem = function (a) {
                            c.isPlainObject(a) || (a = { id: a, text: a }), (a = c.extend({}, { text: "" }, a));
                            var b = { selected: !1, disabled: !1 };
                            return (
                                null != a.id && (a.id = a.id.toString()),
                                null != a.text && (a.text = a.text.toString()),
                                null == a._resultId && a.id && null != this.container && (a._resultId = this.generateResultId(this.container, a)),
                                c.extend({}, b, a)
                            );
                        }),
                        (d.prototype.matches = function (a, b) {
                            var c = this.options.get("matcher");
                            return c(a, b);
                        }),
                        d
                    );
                }),
                b.define("select2/data/array", ["./select", "../utils", "jquery"], function (a, b, c) {
                    function d(a, b) {
                        var c = b.get("data") || [];
                        d.__super__.constructor.call(this, a, b), this.addOptions(this.convertToOptions(c));
                    }
                    return (
                        b.Extend(d, a),
                        (d.prototype.select = function (a) {
                            var b = this.$element.find("option").filter(function (b, c) {
                                return c.value == a.id.toString();
                            });
                            0 === b.length && ((b = this.option(a)), this.addOptions(b)), d.__super__.select.call(this, a);
                        }),
                        (d.prototype.convertToOptions = function (a) {
                            function d(a) {
                                return function () {
                                    return c(this).val() == a.id;
                                };
                            }
                            for (
                                var e = this,
                                    f = this.$element.find("option"),
                                    g = f
                                        .map(function () {
                                            return e.item(c(this)).id;
                                        })
                                        .get(),
                                    h = [],
                                    i = 0;
                                i < a.length;
                                i++
                            ) {
                                var j = this._normalizeItem(a[i]);
                                if (c.inArray(j.id, g) >= 0) {
                                    var k = f.filter(d(j)),
                                        l = this.item(k),
                                        m = c.extend(!0, {}, j, l),
                                        n = this.option(m);
                                    k.replaceWith(n);
                                } else {
                                    var o = this.option(j);
                                    if (j.children) {
                                        var p = this.convertToOptions(j.children);
                                        b.appendMany(o, p);
                                    }
                                    h.push(o);
                                }
                            }
                            return h;
                        }),
                        d
                    );
                }),
                b.define("select2/data/ajax", ["./array", "../utils", "jquery"], function (a, b, c) {
                    function d(a, b) {
                        (this.ajaxOptions = this._applyDefaults(b.get("ajax"))), null != this.ajaxOptions.processResults && (this.processResults = this.ajaxOptions.processResults), d.__super__.constructor.call(this, a, b);
                    }
                    return (
                        b.Extend(d, a),
                        (d.prototype._applyDefaults = function (a) {
                            var b = {
                                data: function (a) {
                                    return c.extend({}, a, { q: a.term });
                                },
                                transport: function (a, b, d) {
                                    var e = c.ajax(a);
                                    return e.then(b), e.fail(d), e;
                                },
                            };
                            return c.extend({}, b, a, !0);
                        }),
                        (d.prototype.processResults = function (a) {
                            return a;
                        }),
                        (d.prototype.query = function (a, b) {
                            function d() {
                                var d = f.transport(
                                    f,
                                    function (d) {
                                        var f = e.processResults(d, a);
                                        e.options.get("debug") &&
                                            window.console &&
                                            console.error &&
                                            ((f && f.results && c.isArray(f.results)) || console.error("Select2: The AJAX results did not return an array in the `results` key of the response.")),
                                            b(f);
                                    },
                                    function () {
                                        (d.status && "0" === d.status) || e.trigger("results:message", { message: "errorLoading" });
                                    }
                                );
                                e._request = d;
                            }
                            var e = this;
                            null != this._request && (c.isFunction(this._request.abort) && this._request.abort(), (this._request = null));
                            var f = c.extend({ type: "GET" }, this.ajaxOptions);
                            "function" == typeof f.url && (f.url = f.url.call(this.$element, a)),
                                "function" == typeof f.data && (f.data = f.data.call(this.$element, a)),
                                this.ajaxOptions.delay && null != a.term ? (this._queryTimeout && window.clearTimeout(this._queryTimeout), (this._queryTimeout = window.setTimeout(d, this.ajaxOptions.delay))) : d();
                        }),
                        d
                    );
                }),
                b.define("select2/data/tags", ["jquery"], function (a) {
                    function b(b, c, d) {
                        var e = d.get("tags"),
                            f = d.get("createTag");
                        void 0 !== f && (this.createTag = f);
                        var g = d.get("insertTag");
                        if ((void 0 !== g && (this.insertTag = g), b.call(this, c, d), a.isArray(e)))
                            for (var h = 0; h < e.length; h++) {
                                var i = e[h],
                                    j = this._normalizeItem(i),
                                    k = this.option(j);
                                this.$element.append(k);
                            }
                    }
                    return (
                        (b.prototype.query = function (a, b, c) {
                            function d(a, f) {
                                for (var g = a.results, h = 0; h < g.length; h++) {
                                    var i = g[h],
                                        j = null != i.children && !d({ results: i.children }, !0),
                                        k = i.text === b.term;
                                    if (k || j) return f ? !1 : ((a.data = g), void c(a));
                                }
                                if (f) return !0;
                                var l = e.createTag(b);
                                if (null != l) {
                                    var m = e.option(l);
                                    m.attr("data-select2-tag", !0), e.addOptions([m]), e.insertTag(g, l);
                                }
                                (a.results = g), c(a);
                            }
                            var e = this;
                            return this._removeOldTags(), null == b.term || null != b.page ? void a.call(this, b, c) : void a.call(this, b, d);
                        }),
                        (b.prototype.createTag = function (b, c) {
                            var d = a.trim(c.term);
                            return "" === d ? null : { id: d, text: d };
                        }),
                        (b.prototype.insertTag = function (a, b, c) {
                            b.unshift(c);
                        }),
                        (b.prototype._removeOldTags = function (b) {
                            var c = (this._lastTag, this.$element.find("option[data-select2-tag]"));
                            c.each(function () {
                                this.selected || a(this).remove();
                            });
                        }),
                        b
                    );
                }),
                b.define("select2/data/tokenizer", ["jquery"], function (a) {
                    function b(a, b, c) {
                        var d = c.get("tokenizer");
                        void 0 !== d && (this.tokenizer = d), a.call(this, b, c);
                    }
                    return (
                        (b.prototype.bind = function (a, b, c) {
                            a.call(this, b, c), (this.$search = b.dropdown.$search || b.selection.$search || c.find(".select2-search__field"));
                        }),
                        (b.prototype.query = function (b, c, d) {
                            function e(b) {
                                var c = g._normalizeItem(b),
                                    d = g.$element.find("option").filter(function () {
                                        return a(this).val() === c.id;
                                    });
                                if (!d.length) {
                                    var e = g.option(c);
                                    e.attr("data-select2-tag", !0), g._removeOldTags(), g.addOptions([e]);
                                }
                                f(c);
                            }
                            function f(a) {
                                g.trigger("select", { data: a });
                            }
                            var g = this;
                            c.term = c.term || "";
                            var h = this.tokenizer(c, this.options, e);
                            h.term !== c.term && (this.$search.length && (this.$search.val(h.term), this.$search.focus()), (c.term = h.term)), b.call(this, c, d);
                        }),
                        (b.prototype.tokenizer = function (b, c, d, e) {
                            for (
                                var f = d.get("tokenSeparators") || [],
                                    g = c.term,
                                    h = 0,
                                    i =
                                        this.createTag ||
                                        function (a) {
                                            return { id: a.term, text: a.term };
                                        };
                                h < g.length;

                            ) {
                                var j = g[h];
                                if (-1 !== a.inArray(j, f)) {
                                    var k = g.substr(0, h),
                                        l = a.extend({}, c, { term: k }),
                                        m = i(l);
                                    null != m ? (e(m), (g = g.substr(h + 1) || ""), (h = 0)) : h++;
                                } else h++;
                            }
                            return { term: g };
                        }),
                        b
                    );
                }),
                b.define("select2/data/minimumInputLength", [], function () {
                    function a(a, b, c) {
                        (this.minimumInputLength = c.get("minimumInputLength")), a.call(this, b, c);
                    }
                    return (
                        (a.prototype.query = function (a, b, c) {
                            return (
                                (b.term = b.term || ""),
                                b.term.length < this.minimumInputLength ? void this.trigger("results:message", { message: "inputTooShort", args: { minimum: this.minimumInputLength, input: b.term, params: b } }) : void a.call(this, b, c)
                            );
                        }),
                        a
                    );
                }),
                b.define("select2/data/maximumInputLength", [], function () {
                    function a(a, b, c) {
                        (this.maximumInputLength = c.get("maximumInputLength")), a.call(this, b, c);
                    }
                    return (
                        (a.prototype.query = function (a, b, c) {
                            return (
                                (b.term = b.term || ""),
                                this.maximumInputLength > 0 && b.term.length > this.maximumInputLength
                                    ? void this.trigger("results:message", { message: "inputTooLong", args: { maximum: this.maximumInputLength, input: b.term, params: b } })
                                    : void a.call(this, b, c)
                            );
                        }),
                        a
                    );
                }),
                b.define("select2/data/maximumSelectionLength", [], function () {
                    function a(a, b, c) {
                        (this.maximumSelectionLength = c.get("maximumSelectionLength")), a.call(this, b, c);
                    }
                    return (
                        (a.prototype.query = function (a, b, c) {
                            var d = this;
                            this.current(function (e) {
                                var f = null != e ? e.length : 0;
                                return d.maximumSelectionLength > 0 && f >= d.maximumSelectionLength ? void d.trigger("results:message", { message: "maximumSelected", args: { maximum: d.maximumSelectionLength } }) : void a.call(d, b, c);
                            });
                        }),
                        a
                    );
                }),
                b.define("select2/dropdown", ["jquery", "./utils"], function (a, b) {
                    function c(a, b) {
                        (this.$element = a), (this.options = b), c.__super__.constructor.call(this);
                    }
                    return (
                        b.Extend(c, b.Observable),
                        (c.prototype.render = function () {
                            var b = a('<span class="select2-dropdown"><span class="select2-results"></span></span>');
                            return b.attr("dir", this.options.get("dir")), (this.$dropdown = b), b;
                        }),
                        (c.prototype.bind = function () {}),
                        (c.prototype.position = function (a, b) {}),
                        (c.prototype.destroy = function () {
                            this.$dropdown.remove();
                        }),
                        c
                    );
                }),
                b.define("select2/dropdown/search", ["jquery", "../utils"], function (a, b) {
                    function c() {}
                    return (
                        (c.prototype.render = function (b) {
                            var c = b.call(this),
                                d = a(
                                    '<span class="select2-search select2-search--dropdown"><input class="select2-search__field" type="search" tabindex="-1" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" role="textbox" /></span>'
                                );
                            return (this.$searchContainer = d), (this.$search = d.find("input")), c.prepend(d), c;
                        }),
                        (c.prototype.bind = function (b, c, d) {
                            var e = this;
                            b.call(this, c, d),
                                this.$search.on("keydown", function (a) {
                                    e.trigger("keypress", a), (e._keyUpPrevented = a.isDefaultPrevented());
                                }),
                                this.$search.on("input", function (b) {
                                    a(this).off("keyup");
                                }),
                                this.$search.on("keyup input", function (a) {
                                    e.handleSearch(a);
                                }),
                                c.on("open", function () {
                                    e.$search.attr("tabindex", 0),
                                        e.$search.focus(),
                                        window.setTimeout(function () {
                                            e.$search.focus();
                                        }, 0);
                                }),
                                c.on("close", function () {
                                    e.$search.attr("tabindex", -1), e.$search.val("");
                                }),
                                c.on("focus", function () {
                                    c.isOpen() && e.$search.focus();
                                }),
                                c.on("results:all", function (a) {
                                    if (null == a.query.term || "" === a.query.term) {
                                        var b = e.showSearch(a);
                                        b ? e.$searchContainer.removeClass("select2-search--hide") : e.$searchContainer.addClass("select2-search--hide");
                                    }
                                });
                        }),
                        (c.prototype.handleSearch = function (a) {
                            if (!this._keyUpPrevented) {
                                var b = this.$search.val();
                                this.trigger("query", { term: b });
                            }
                            this._keyUpPrevented = !1;
                        }),
                        (c.prototype.showSearch = function (a, b) {
                            return !0;
                        }),
                        c
                    );
                }),
                b.define("select2/dropdown/hidePlaceholder", [], function () {
                    function a(a, b, c, d) {
                        (this.placeholder = this.normalizePlaceholder(c.get("placeholder"))), a.call(this, b, c, d);
                    }
                    return (
                        (a.prototype.append = function (a, b) {
                            (b.results = this.removePlaceholder(b.results)), a.call(this, b);
                        }),
                        (a.prototype.normalizePlaceholder = function (a, b) {
                            return "string" == typeof b && (b = { id: "", text: b }), b;
                        }),
                        (a.prototype.removePlaceholder = function (a, b) {
                            for (var c = b.slice(0), d = b.length - 1; d >= 0; d--) {
                                var e = b[d];
                                this.placeholder.id === e.id && c.splice(d, 1);
                            }
                            return c;
                        }),
                        a
                    );
                }),
                b.define("select2/dropdown/infiniteScroll", ["jquery"], function (a) {
                    function b(a, b, c, d) {
                        (this.lastParams = {}), a.call(this, b, c, d), (this.$loadingMore = this.createLoadingMore()), (this.loading = !1);
                    }
                    return (
                        (b.prototype.append = function (a, b) {
                            this.$loadingMore.remove(), (this.loading = !1), a.call(this, b), this.showLoadingMore(b) && this.$results.append(this.$loadingMore);
                        }),
                        (b.prototype.bind = function (b, c, d) {
                            var e = this;
                            b.call(this, c, d),
                                c.on("query", function (a) {
                                    (e.lastParams = a), (e.loading = !0);
                                }),
                                c.on("query:append", function (a) {
                                    (e.lastParams = a), (e.loading = !0);
                                }),
                                this.$results.on("scroll", function () {
                                    var b = a.contains(document.documentElement, e.$loadingMore[0]);
                                    if (!e.loading && b) {
                                        var c = e.$results.offset().top + e.$results.outerHeight(!1),
                                            d = e.$loadingMore.offset().top + e.$loadingMore.outerHeight(!1);
                                        c + 50 >= d && e.loadMore();
                                    }
                                });
                        }),
                        (b.prototype.loadMore = function () {
                            this.loading = !0;
                            var b = a.extend({}, { page: 1 }, this.lastParams);
                            b.page++, this.trigger("query:append", b);
                        }),
                        (b.prototype.showLoadingMore = function (a, b) {
                            return b.pagination && b.pagination.more;
                        }),
                        (b.prototype.createLoadingMore = function () {
                            var b = a('<li class="select2-results__option select2-results__option--load-more"role="treeitem" aria-disabled="true"></li>'),
                                c = this.options.get("translations").get("loadingMore");
                            return b.html(c(this.lastParams)), b;
                        }),
                        b
                    );
                }),
                b.define("select2/dropdown/attachBody", ["jquery", "../utils"], function (a, b) {
                    function c(b, c, d) {
                        (this.$dropdownParent = d.get("dropdownParent") || a(document.body)), b.call(this, c, d);
                    }
                    return (
                        (c.prototype.bind = function (a, b, c) {
                            var d = this,
                                e = !1;
                            a.call(this, b, c),
                                b.on("open", function () {
                                    d._showDropdown(),
                                        d._attachPositioningHandler(b),
                                        e ||
                                            ((e = !0),
                                            b.on("results:all", function () {
                                                d._positionDropdown(), d._resizeDropdown();
                                            }),
                                            b.on("results:append", function () {
                                                d._positionDropdown(), d._resizeDropdown();
                                            }));
                                }),
                                b.on("close", function () {
                                    d._hideDropdown(), d._detachPositioningHandler(b);
                                }),
                                this.$dropdownContainer.on("mousedown", function (a) {
                                    a.stopPropagation();
                                });
                        }),
                        (c.prototype.destroy = function (a) {
                            a.call(this), this.$dropdownContainer.remove();
                        }),
                        (c.prototype.position = function (a, b, c) {
                            b.attr("class", c.attr("class")), b.removeClass("select2"), b.addClass("select2-container--open"), b.css({ position: "absolute", top: -999999 }), (this.$container = c);
                        }),
                        (c.prototype.render = function (b) {
                            var c = a("<span></span>"),
                                d = b.call(this);
                            return c.append(d), (this.$dropdownContainer = c), c;
                        }),
                        (c.prototype._hideDropdown = function (a) {
                            this.$dropdownContainer.detach();
                        }),
                        (c.prototype._attachPositioningHandler = function (c, d) {
                            var e = this,
                                f = "scroll.select2." + d.id,
                                g = "resize.select2." + d.id,
                                h = "orientationchange.select2." + d.id,
                                i = this.$container.parents().filter(b.hasScroll);
                            i.each(function () {
                                a(this).data("select2-scroll-position", { x: a(this).scrollLeft(), y: a(this).scrollTop() });
                            }),
                                i.on(f, function (b) {
                                    var c = a(this).data("select2-scroll-position");
                                    a(this).scrollTop(c.y);
                                }),
                                a(window).on(f + " " + g + " " + h, function (a) {
                                    e._positionDropdown(), e._resizeDropdown();
                                });
                        }),
                        (c.prototype._detachPositioningHandler = function (c, d) {
                            var e = "scroll.select2." + d.id,
                                f = "resize.select2." + d.id,
                                g = "orientationchange.select2." + d.id,
                                h = this.$container.parents().filter(b.hasScroll);
                            h.off(e), a(window).off(e + " " + f + " " + g);
                        }),
                        (c.prototype._positionDropdown = function () {
                            var b = a(window),
                                c = this.$dropdown.hasClass("select2-dropdown--above"),
                                d = this.$dropdown.hasClass("select2-dropdown--below"),
                                e = null,
                                f = this.$container.offset();
                            f.bottom = f.top + this.$container.outerHeight(!1);
                            var g = { height: this.$container.outerHeight(!1) };
                            (g.top = f.top), (g.bottom = f.top + g.height);
                            var h = { height: this.$dropdown.outerHeight(!1) },
                                i = { top: b.scrollTop(), bottom: b.scrollTop() + b.height() },
                                j = i.top < f.top - h.height,
                                k = i.bottom > f.bottom + h.height,
                                l = { left: f.left, top: g.bottom },
                                m = this.$dropdownParent;
                            "static" === m.css("position") && (m = m.offsetParent());
                            var n = m.offset();
                            (l.top -= n.top),
                                (l.left -= n.left),
                                c || d || (e = "below"),
                                k || !j || c ? !j && k && c && (e = "below") : (e = "above"),
                                ("above" == e || (c && "below" !== e)) && (l.top = g.top - n.top - h.height),
                                null != e &&
                                    (this.$dropdown.removeClass("select2-dropdown--below select2-dropdown--above").addClass("select2-dropdown--" + e),
                                    this.$container.removeClass("select2-container--below select2-container--above").addClass("select2-container--" + e)),
                                this.$dropdownContainer.css(l);
                        }),
                        (c.prototype._resizeDropdown = function () {
                            var a = { width: this.$container.outerWidth(!1) + "px" };
                            this.options.get("dropdownAutoWidth") && ((a.minWidth = a.width), (a.position = "relative"), (a.width = "auto")), this.$dropdown.css(a);
                        }),
                        (c.prototype._showDropdown = function (a) {
                            this.$dropdownContainer.appendTo(this.$dropdownParent), this._positionDropdown(), this._resizeDropdown();
                        }),
                        c
                    );
                }),
                b.define("select2/dropdown/minimumResultsForSearch", [], function () {
                    function a(b) {
                        for (var c = 0, d = 0; d < b.length; d++) {
                            var e = b[d];
                            e.children ? (c += a(e.children)) : c++;
                        }
                        return c;
                    }
                    function b(a, b, c, d) {
                        (this.minimumResultsForSearch = c.get("minimumResultsForSearch")), this.minimumResultsForSearch < 0 && (this.minimumResultsForSearch = 1 / 0), a.call(this, b, c, d);
                    }
                    return (
                        (b.prototype.showSearch = function (b, c) {
                            return a(c.data.results) < this.minimumResultsForSearch ? !1 : b.call(this, c);
                        }),
                        b
                    );
                }),
                b.define("select2/dropdown/selectOnClose", [], function () {
                    function a() {}
                    return (
                        (a.prototype.bind = function (a, b, c) {
                            var d = this;
                            a.call(this, b, c),
                                b.on("close", function (a) {
                                    d._handleSelectOnClose(a);
                                });
                        }),
                        (a.prototype._handleSelectOnClose = function (a, b) {
                            if (b && null != b.originalSelect2Event) {
                                var c = b.originalSelect2Event;
                                if ("select" === c._type || "unselect" === c._type) return;
                            }
                            var d = this.getHighlightedResults();
                            if (!(d.length < 1)) {
                                var e = d.data("data");
                                (null != e.element && e.element.selected) || (null == e.element && e.selected) || this.trigger("select", { data: e });
                            }
                        }),
                        a
                    );
                }),
                b.define("select2/dropdown/closeOnSelect", [], function () {
                    function a() {}
                    return (
                        (a.prototype.bind = function (a, b, c) {
                            var d = this;
                            a.call(this, b, c),
                                b.on("select", function (a) {
                                    d._selectTriggered(a);
                                }),
                                b.on("unselect", function (a) {
                                    d._selectTriggered(a);
                                });
                        }),
                        (a.prototype._selectTriggered = function (a, b) {
                            var c = b.originalEvent;
                            (c && c.ctrlKey) || this.trigger("close", { originalEvent: c, originalSelect2Event: b });
                        }),
                        a
                    );
                }),
                b.define("select2/i18n/en", [], function () {
                    return {
                        errorLoading: function () {
                            return "The results could not be loaded.";
                        },
                        inputTooLong: function (a) {
                            var b = a.input.length - a.maximum,
                                c = "Please delete " + b + " character";
                            return 1 != b && (c += "s"), c;
                        },
                        inputTooShort: function (a) {
                            var b = a.minimum - a.input.length,
                                c = "Please enter " + b + " or more characters";
                            return c;
                        },
                        loadingMore: function () {
                            return "Loading more results…";
                        },
                        maximumSelected: function (a) {
                            var b = "You can only select " + a.maximum + " item";
                            return 1 != a.maximum && (b += "s"), b;
                        },
                        noResults: function () {
                            return "No results found";
                        },
                        searching: function () {
                            return "Searching…";
                        },
                    };
                }),
                b.define(
                    "select2/defaults",
                    [
                        "jquery",
                        "require",
                        "./results",
                        "./selection/single",
                        "./selection/multiple",
                        "./selection/placeholder",
                        "./selection/allowClear",
                        "./selection/search",
                        "./selection/eventRelay",
                        "./utils",
                        "./translation",
                        "./diacritics",
                        "./data/select",
                        "./data/array",
                        "./data/ajax",
                        "./data/tags",
                        "./data/tokenizer",
                        "./data/minimumInputLength",
                        "./data/maximumInputLength",
                        "./data/maximumSelectionLength",
                        "./dropdown",
                        "./dropdown/search",
                        "./dropdown/hidePlaceholder",
                        "./dropdown/infiniteScroll",
                        "./dropdown/attachBody",
                        "./dropdown/minimumResultsForSearch",
                        "./dropdown/selectOnClose",
                        "./dropdown/closeOnSelect",
                        "./i18n/en",
                    ],
                    function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, A, B, C) {
                        function D() {
                            this.reset();
                        }
                        (D.prototype.apply = function (l) {
                            if (((l = a.extend(!0, {}, this.defaults, l)), null == l.dataAdapter)) {
                                if (
                                    (null != l.ajax ? (l.dataAdapter = o) : null != l.data ? (l.dataAdapter = n) : (l.dataAdapter = m),
                                    l.minimumInputLength > 0 && (l.dataAdapter = j.Decorate(l.dataAdapter, r)),
                                    l.maximumInputLength > 0 && (l.dataAdapter = j.Decorate(l.dataAdapter, s)),
                                    l.maximumSelectionLength > 0 && (l.dataAdapter = j.Decorate(l.dataAdapter, t)),
                                    l.tags && (l.dataAdapter = j.Decorate(l.dataAdapter, p)),
                                    (null != l.tokenSeparators || null != l.tokenizer) && (l.dataAdapter = j.Decorate(l.dataAdapter, q)),
                                    null != l.query)
                                ) {
                                    var C = b(l.amdBase + "compat/query");
                                    l.dataAdapter = j.Decorate(l.dataAdapter, C);
                                }
                                if (null != l.initSelection) {
                                    var D = b(l.amdBase + "compat/initSelection");
                                    l.dataAdapter = j.Decorate(l.dataAdapter, D);
                                }
                            }
                            if (
                                (null == l.resultsAdapter &&
                                    ((l.resultsAdapter = c),
                                    null != l.ajax && (l.resultsAdapter = j.Decorate(l.resultsAdapter, x)),
                                    null != l.placeholder && (l.resultsAdapter = j.Decorate(l.resultsAdapter, w)),
                                    l.selectOnClose && (l.resultsAdapter = j.Decorate(l.resultsAdapter, A))),
                                null == l.dropdownAdapter)
                            ) {
                                if (l.multiple) l.dropdownAdapter = u;
                                else {
                                    var E = j.Decorate(u, v);
                                    l.dropdownAdapter = E;
                                }
                                if (
                                    (0 !== l.minimumResultsForSearch && (l.dropdownAdapter = j.Decorate(l.dropdownAdapter, z)),
                                    l.closeOnSelect && (l.dropdownAdapter = j.Decorate(l.dropdownAdapter, B)),
                                    null != l.dropdownCssClass || null != l.dropdownCss || null != l.adaptDropdownCssClass)
                                ) {
                                    var F = b(l.amdBase + "compat/dropdownCss");
                                    l.dropdownAdapter = j.Decorate(l.dropdownAdapter, F);
                                }
                                l.dropdownAdapter = j.Decorate(l.dropdownAdapter, y);
                            }
                            if (null == l.selectionAdapter) {
                                if (
                                    (l.multiple ? (l.selectionAdapter = e) : (l.selectionAdapter = d),
                                    null != l.placeholder && (l.selectionAdapter = j.Decorate(l.selectionAdapter, f)),
                                    l.allowClear && (l.selectionAdapter = j.Decorate(l.selectionAdapter, g)),
                                    l.multiple && (l.selectionAdapter = j.Decorate(l.selectionAdapter, h)),
                                    null != l.containerCssClass || null != l.containerCss || null != l.adaptContainerCssClass)
                                ) {
                                    var G = b(l.amdBase + "compat/containerCss");
                                    l.selectionAdapter = j.Decorate(l.selectionAdapter, G);
                                }
                                l.selectionAdapter = j.Decorate(l.selectionAdapter, i);
                            }
                            if ("string" == typeof l.language)
                                if (l.language.indexOf("-") > 0) {
                                    var H = l.language.split("-"),
                                        I = H[0];
                                    l.language = [l.language, I];
                                } else l.language = [l.language];
                            if (a.isArray(l.language)) {
                                var J = new k();
                                l.language.push("en");
                                for (var K = l.language, L = 0; L < K.length; L++) {
                                    var M = K[L],
                                        N = {};
                                    try {
                                        N = k.loadPath(M);
                                    } catch (O) {
                                        try {
                                            (M = this.defaults.amdLanguageBase + M), (N = k.loadPath(M));
                                        } catch (P) {
                                            l.debug && window.console && console.warn && console.warn('Select2: The language file for "' + M + '" could not be automatically loaded. A fallback will be used instead.');
                                            continue;
                                        }
                                    }
                                    J.extend(N);
                                }
                                l.translations = J;
                            } else {
                                var Q = k.loadPath(this.defaults.amdLanguageBase + "en"),
                                    R = new k(l.language);
                                R.extend(Q), (l.translations = R);
                            }
                            return l;
                        }),
                            (D.prototype.reset = function () {
                                function b(a) {
                                    function b(a) {
                                        return l[a] || a;
                                    }
                                    return a.replace(/[^\u0000-\u007E]/g, b);
                                }
                                function c(d, e) {
                                    if ("" === a.trim(d.term)) return e;
                                    if (e.children && e.children.length > 0) {
                                        for (var f = a.extend(!0, {}, e), g = e.children.length - 1; g >= 0; g--) {
                                            var h = e.children[g],
                                                i = c(d, h);
                                            null == i && f.children.splice(g, 1);
                                        }
                                        return f.children.length > 0 ? f : c(d, f);
                                    }
                                    var j = b(e.text).toUpperCase(),
                                        k = b(d.term).toUpperCase();
                                    return j.indexOf(k) > -1 ? e : null;
                                }
                                this.defaults = {
                                    amdBase: "./",
                                    amdLanguageBase: "./i18n/",
                                    closeOnSelect: !0,
                                    debug: !1,
                                    dropdownAutoWidth: !1,
                                    escapeMarkup: j.escapeMarkup,
                                    language: C,
                                    matcher: c,
                                    minimumInputLength: 0,
                                    maximumInputLength: 0,
                                    maximumSelectionLength: 0,
                                    minimumResultsForSearch: 0,
                                    selectOnClose: !1,
                                    sorter: function (a) {
                                        return a;
                                    },
                                    templateResult: function (a) {
                                        return a.text;
                                    },
                                    templateSelection: function (a) {
                                        return a.text;
                                    },
                                    theme: "default",
                                    width: "resolve",
                                };
                            }),
                            (D.prototype.set = function (b, c) {
                                var d = a.camelCase(b),
                                    e = {};
                                e[d] = c;
                                var f = j._convertData(e);
                                a.extend(this.defaults, f);
                            });
                        var E = new D();
                        return E;
                    }
                ),
                b.define("select2/options", ["require", "jquery", "./defaults", "./utils"], function (a, b, c, d) {
                    function e(b, e) {
                        if (((this.options = b), null != e && this.fromElement(e), (this.options = c.apply(this.options)), e && e.is("input"))) {
                            var f = a(this.get("amdBase") + "compat/inputData");
                            this.options.dataAdapter = d.Decorate(this.options.dataAdapter, f);
                        }
                    }
                    return (
                        (e.prototype.fromElement = function (a) {
                            var c = ["select2"];
                            null == this.options.multiple && (this.options.multiple = a.prop("multiple")),
                                null == this.options.disabled && (this.options.disabled = a.prop("disabled")),
                                null == this.options.language && (a.prop("lang") ? (this.options.language = a.prop("lang").toLowerCase()) : a.closest("[lang]").prop("lang") && (this.options.language = a.closest("[lang]").prop("lang"))),
                                null == this.options.dir && (a.prop("dir") ? (this.options.dir = a.prop("dir")) : a.closest("[dir]").prop("dir") ? (this.options.dir = a.closest("[dir]").prop("dir")) : (this.options.dir = "ltr")),
                                a.prop("disabled", this.options.disabled),
                                a.prop("multiple", this.options.multiple),
                                a.data("select2Tags") &&
                                    (this.options.debug &&
                                        window.console &&
                                        console.warn &&
                                        console.warn('Select2: The `data-select2-tags` attribute has been changed to use the `data-data` and `data-tags="true"` attributes and will be removed in future versions of Select2.'),
                                    a.data("data", a.data("select2Tags")),
                                    a.data("tags", !0)),
                                a.data("ajaxUrl") &&
                                    (this.options.debug &&
                                        window.console &&
                                        console.warn &&
                                        console.warn("Select2: The `data-ajax-url` attribute has been changed to `data-ajax--url` and support for the old attribute will be removed in future versions of Select2."),
                                    a.attr("ajax--url", a.data("ajaxUrl")),
                                    a.data("ajax--url", a.data("ajaxUrl")));
                            var e = {};
                            e = b.fn.jquery && "1." == b.fn.jquery.substr(0, 2) && a[0].dataset ? b.extend(!0, {}, a[0].dataset, a.data()) : a.data();
                            var f = b.extend(!0, {}, e);
                            f = d._convertData(f);
                            for (var g in f) b.inArray(g, c) > -1 || (b.isPlainObject(this.options[g]) ? b.extend(this.options[g], f[g]) : (this.options[g] = f[g]));
                            return this;
                        }),
                        (e.prototype.get = function (a) {
                            return this.options[a];
                        }),
                        (e.prototype.set = function (a, b) {
                            this.options[a] = b;
                        }),
                        e
                    );
                }),
                b.define("select2/core", ["jquery", "./options", "./utils", "./keys"], function (a, b, c, d) {
                    var e = function (a, c) {
                        null != a.data("select2") && a.data("select2").destroy(), (this.$element = a), (this.id = this._generateId(a)), (c = c || {}), (this.options = new b(c, a)), e.__super__.constructor.call(this);
                        var d = a.attr("tabindex") || 0;
                        a.data("old-tabindex", d), a.attr("tabindex", "-1");
                        var f = this.options.get("dataAdapter");
                        this.dataAdapter = new f(a, this.options);
                        var g = this.render();
                        this._placeContainer(g);
                        var h = this.options.get("selectionAdapter");
                        (this.selection = new h(a, this.options)), (this.$selection = this.selection.render()), this.selection.position(this.$selection, g);
                        var i = this.options.get("dropdownAdapter");
                        (this.dropdown = new i(a, this.options)), (this.$dropdown = this.dropdown.render()), this.dropdown.position(this.$dropdown, g);
                        var j = this.options.get("resultsAdapter");
                        (this.results = new j(a, this.options, this.dataAdapter)), (this.$results = this.results.render()), this.results.position(this.$results, this.$dropdown);
                        var k = this;
                        this._bindAdapters(),
                            this._registerDomEvents(),
                            this._registerDataEvents(),
                            this._registerSelectionEvents(),
                            this._registerDropdownEvents(),
                            this._registerResultsEvents(),
                            this._registerEvents(),
                            this.dataAdapter.current(function (a) {
                                k.trigger("selection:update", { data: a });
                            }),
                            a.addClass("select2-hidden-accessible"),
                            a.attr("aria-hidden", "true"),
                            this._syncAttributes(),
                            a.data("select2", this);
                    };
                    return (
                        c.Extend(e, c.Observable),
                        (e.prototype._generateId = function (a) {
                            var b = "";
                            return (b = null != a.attr("id") ? a.attr("id") : null != a.attr("name") ? a.attr("name") + "-" + c.generateChars(2) : c.generateChars(4)), (b = b.replace(/(:|\.|\[|\]|,)/g, "")), (b = "select2-" + b);
                        }),
                        (e.prototype._placeContainer = function (a) {
                            a.insertAfter(this.$element);
                            var b = this._resolveWidth(this.$element, this.options.get("width"));
                            null != b && a.css("width", b);
                        }),
                        (e.prototype._resolveWidth = function (a, b) {
                            var c = /^width:(([-+]?([0-9]*\.)?[0-9]+)(px|em|ex|%|in|cm|mm|pt|pc))/i;
                            if ("resolve" == b) {
                                var d = this._resolveWidth(a, "style");
                                return null != d ? d : this._resolveWidth(a, "element");
                            }
                            if ("element" == b) {
                                var e = a.outerWidth(!1);
                                return 0 >= e ? "auto" : e + "px";
                            }
                            if ("style" == b) {
                                var f = a.attr("style");
                                if ("string" != typeof f) return null;
                                for (var g = f.split(";"), h = 0, i = g.length; i > h; h += 1) {
                                    var j = g[h].replace(/\s/g, ""),
                                        k = j.match(c);
                                    if (null !== k && k.length >= 1) return k[1];
                                }
                                return null;
                            }
                            return b;
                        }),
                        (e.prototype._bindAdapters = function () {
                            this.dataAdapter.bind(this, this.$container), this.selection.bind(this, this.$container), this.dropdown.bind(this, this.$container), this.results.bind(this, this.$container);
                        }),
                        (e.prototype._registerDomEvents = function () {
                            var b = this;
                            this.$element.on("change.select2", function () {
                                b.dataAdapter.current(function (a) {
                                    b.trigger("selection:update", { data: a });
                                });
                            }),
                                this.$element.on("focus.select2", function (a) {
                                    b.trigger("focus", a);
                                }),
                                (this._syncA = c.bind(this._syncAttributes, this)),
                                (this._syncS = c.bind(this._syncSubtree, this)),
                                this.$element[0].attachEvent && this.$element[0].attachEvent("onpropertychange", this._syncA);
                            var d = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver;
                            null != d
                                ? ((this._observer = new d(function (c) {
                                      a.each(c, b._syncA), a.each(c, b._syncS);
                                  })),
                                  this._observer.observe(this.$element[0], { attributes: !0, childList: !0, subtree: !1 }))
                                : this.$element[0].addEventListener &&
                                  (this.$element[0].addEventListener("DOMAttrModified", b._syncA, !1), this.$element[0].addEventListener("DOMNodeInserted", b._syncS, !1), this.$element[0].addEventListener("DOMNodeRemoved", b._syncS, !1));
                        }),
                        (e.prototype._registerDataEvents = function () {
                            var a = this;
                            this.dataAdapter.on("*", function (b, c) {
                                a.trigger(b, c);
                            });
                        }),
                        (e.prototype._registerSelectionEvents = function () {
                            var b = this,
                                c = ["toggle", "focus"];
                            this.selection.on("toggle", function () {
                                b.toggleDropdown();
                            }),
                                this.selection.on("focus", function (a) {
                                    b.focus(a);
                                }),
                                this.selection.on("*", function (d, e) {
                                    -1 === a.inArray(d, c) && b.trigger(d, e);
                                });
                        }),
                        (e.prototype._registerDropdownEvents = function () {
                            var a = this;
                            this.dropdown.on("*", function (b, c) {
                                a.trigger(b, c);
                            });
                        }),
                        (e.prototype._registerResultsEvents = function () {
                            var a = this;
                            this.results.on("*", function (b, c) {
                                a.trigger(b, c);
                            });
                        }),
                        (e.prototype._registerEvents = function () {
                            var a = this;
                            this.on("open", function () {
                                a.$container.addClass("select2-container--open");
                            }),
                                this.on("close", function () {
                                    a.$container.removeClass("select2-container--open");
                                }),
                                this.on("enable", function () {
                                    a.$container.removeClass("select2-container--disabled");
                                }),
                                this.on("disable", function () {
                                    a.$container.addClass("select2-container--disabled");
                                }),
                                this.on("blur", function () {
                                    a.$container.removeClass("select2-container--focus");
                                }),
                                this.on("query", function (b) {
                                    a.isOpen() || a.trigger("open", {}),
                                        this.dataAdapter.query(b, function (c) {
                                            a.trigger("results:all", { data: c, query: b });
                                        });
                                }),
                                this.on("query:append", function (b) {
                                    this.dataAdapter.query(b, function (c) {
                                        a.trigger("results:append", { data: c, query: b });
                                    });
                                }),
                                this.on("keypress", function (b) {
                                    var c = b.which;
                                    a.isOpen()
                                        ? c === d.ESC || c === d.TAB || (c === d.UP && b.altKey)
                                            ? (a.close(), b.preventDefault())
                                            : c === d.ENTER
                                            ? (a.trigger("results:select", {}), b.preventDefault())
                                            : c === d.SPACE && b.ctrlKey
                                            ? (a.trigger("results:toggle", {}), b.preventDefault())
                                            : c === d.UP
                                            ? (a.trigger("results:previous", {}), b.preventDefault())
                                            : c === d.DOWN && (a.trigger("results:next", {}), b.preventDefault())
                                        : (c === d.ENTER || c === d.SPACE || (c === d.DOWN && b.altKey)) && (a.open(), b.preventDefault());
                                });
                        }),
                        (e.prototype._syncAttributes = function () {
                            this.options.set("disabled", this.$element.prop("disabled")), this.options.get("disabled") ? (this.isOpen() && this.close(), this.trigger("disable", {})) : this.trigger("enable", {});
                        }),
                        (e.prototype._syncSubtree = function (a, b) {
                            var c = !1,
                                d = this;
                            if (!a || !a.target || "OPTION" === a.target.nodeName || "OPTGROUP" === a.target.nodeName) {
                                if (b)
                                    if (b.addedNodes && b.addedNodes.length > 0)
                                        for (var e = 0; e < b.addedNodes.length; e++) {
                                            var f = b.addedNodes[e];
                                            f.selected && (c = !0);
                                        }
                                    else b.removedNodes && b.removedNodes.length > 0 && (c = !0);
                                else c = !0;
                                c &&
                                    this.dataAdapter.current(function (a) {
                                        d.trigger("selection:update", { data: a });
                                    });
                            }
                        }),
                        (e.prototype.trigger = function (a, b) {
                            var c = e.__super__.trigger,
                                d = { open: "opening", close: "closing", select: "selecting", unselect: "unselecting" };
                            if ((void 0 === b && (b = {}), a in d)) {
                                var f = d[a],
                                    g = { prevented: !1, name: a, args: b };
                                if ((c.call(this, f, g), g.prevented)) return void (b.prevented = !0);
                            }
                            c.call(this, a, b);
                        }),
                        (e.prototype.toggleDropdown = function () {
                            this.options.get("disabled") || (this.isOpen() ? this.close() : this.open());
                        }),
                        (e.prototype.open = function () {
                            this.isOpen() || this.trigger("query", {});
                        }),
                        (e.prototype.close = function () {
                            this.isOpen() && this.trigger("close", {});
                        }),
                        (e.prototype.isOpen = function () {
                            return this.$container.hasClass("select2-container--open");
                        }),
                        (e.prototype.hasFocus = function () {
                            return this.$container.hasClass("select2-container--focus");
                        }),
                        (e.prototype.focus = function (a) {
                            this.hasFocus() || (this.$container.addClass("select2-container--focus"), this.trigger("focus", {}));
                        }),
                        (e.prototype.enable = function (a) {
                            this.options.get("debug") &&
                                window.console &&
                                console.warn &&
                                console.warn('Select2: The `select2("enable")` method has been deprecated and will be removed in later Select2 versions. Use $element.prop("disabled") instead.'),
                                (null == a || 0 === a.length) && (a = [!0]);
                            var b = !a[0];
                            this.$element.prop("disabled", b);
                        }),
                        (e.prototype.data = function () {
                            this.options.get("debug") &&
                                arguments.length > 0 &&
                                window.console &&
                                console.warn &&
                                console.warn('Select2: Data can no longer be set using `select2("data")`. You should consider setting the value instead using `$element.val()`.');
                            var a = [];
                            return (
                                this.dataAdapter.current(function (b) {
                                    a = b;
                                }),
                                a
                            );
                        }),
                        (e.prototype.val = function (b) {
                            if (
                                (this.options.get("debug") &&
                                    window.console &&
                                    console.warn &&
                                    console.warn('Select2: The `select2("val")` method has been deprecated and will be removed in later Select2 versions. Use $element.val() instead.'),
                                null == b || 0 === b.length)
                            )
                                return this.$element.val();
                            var c = b[0];
                            a.isArray(c) &&
                                (c = a.map(c, function (a) {
                                    return a.toString();
                                })),
                                this.$element.val(c).trigger("change");
                        }),
                        (e.prototype.destroy = function () {
                            this.$container.remove(),
                                this.$element[0].detachEvent && this.$element[0].detachEvent("onpropertychange", this._syncA),
                                null != this._observer
                                    ? (this._observer.disconnect(), (this._observer = null))
                                    : this.$element[0].removeEventListener &&
                                      (this.$element[0].removeEventListener("DOMAttrModified", this._syncA, !1),
                                      this.$element[0].removeEventListener("DOMNodeInserted", this._syncS, !1),
                                      this.$element[0].removeEventListener("DOMNodeRemoved", this._syncS, !1)),
                                (this._syncA = null),
                                (this._syncS = null),
                                this.$element.off(".select2"),
                                this.$element.attr("tabindex", this.$element.data("old-tabindex")),
                                this.$element.removeClass("select2-hidden-accessible"),
                                this.$element.attr("aria-hidden", "false"),
                                this.$element.removeData("select2"),
                                this.dataAdapter.destroy(),
                                this.selection.destroy(),
                                this.dropdown.destroy(),
                                this.results.destroy(),
                                (this.dataAdapter = null),
                                (this.selection = null),
                                (this.dropdown = null),
                                (this.results = null);
                        }),
                        (e.prototype.render = function () {
                            var b = a('<span class="select2 select2-container"><span class="selection"></span><span class="dropdown-wrapper" aria-hidden="true"></span></span>');
                            return b.attr("dir", this.options.get("dir")), (this.$container = b), this.$container.addClass("select2-container--" + this.options.get("theme")), b.data("element", this.$element), b;
                        }),
                        e
                    );
                }),
                b.define("jquery-mousewheel", ["jquery"], function (a) {
                    return a;
                }),
                b.define("jquery.select2", ["jquery", "jquery-mousewheel", "./select2/core", "./select2/defaults"], function (a, b, c, d) {
                    if (null == a.fn.select2) {
                        var e = ["open", "close", "destroy"];
                        a.fn.select2 = function (b) {
                            if (((b = b || {}), "object" == typeof b))
                                return (
                                    this.each(function () {
                                        var d = a.extend(!0, {}, b);
                                        new c(a(this), d);
                                    }),
                                    this
                                );
                            if ("string" == typeof b) {
                                var d,
                                    f = Array.prototype.slice.call(arguments, 1);
                                return (
                                    this.each(function () {
                                        var c = a(this).data("select2");
                                        null == c && window.console && console.error && console.error("The select2('" + b + "') method was called on an element that is not using Select2."), (d = c[b].apply(c, f));
                                    }),
                                    a.inArray(b, e) > -1 ? this : d
                                );
                            }
                            throw new Error("Invalid arguments for Select2: " + b);
                        };
                    }
                    return null == a.fn.select2.defaults && (a.fn.select2.defaults = d), c;
                }),
                { define: b.define, require: b.require }
            );
        })(),
        c = b.require("jquery.select2");
    return (a.fn.select2.amd = b), c;
});
(function (factory) {
    if (typeof define === "function" && define.amd) {
        define(["jquery"], factory);
    } else {
        factory(jQuery);
    }
})(function (jQuery) {
    var domfocus = !1;
    var mousefocus = !1;
    var zoomactive = !1;
    var tabindexcounter = 5000;
    var ascrailcounter = 2000;
    var globalmaxzindex = 0;
    var $ = jQuery;
    function getScriptPath() {
        var scripts = document.getElementsByTagName("script");
        var path = scripts[scripts.length - 1].src.split("?")[0];
        return path.split("/").length > 0 ? path.split("/").slice(0, -1).join("/") + "/" : "";
    }
    var vendors = ["ms", "moz", "webkit", "o"];
    var setAnimationFrame = window.requestAnimationFrame || !1;
    var clearAnimationFrame = window.cancelAnimationFrame || !1;
    if (!setAnimationFrame) {
        for (var vx in vendors) {
            var v = vendors[vx];
            if (!setAnimationFrame) setAnimationFrame = window[v + "RequestAnimationFrame"];
            if (!clearAnimationFrame) clearAnimationFrame = window[v + "CancelAnimationFrame"] || window[v + "CancelRequestAnimationFrame"];
        }
    }
    var clsMutationObserver = window.MutationObserver || window.WebKitMutationObserver || !1;
    var _globaloptions = {
        zindex: "auto",
        cursoropacitymin: 0,
        cursoropacitymax: 1,
        cursorcolor: "#424242",
        cursorwidth: "5px",
        cursorborder: "1px solid #fff",
        cursorborderradius: "5px",
        scrollspeed: 60,
        mousescrollstep: 8 * 3,
        touchbehavior: !1,
        hwacceleration: !0,
        usetransition: !0,
        boxzoom: !1,
        dblclickzoom: !0,
        gesturezoom: !0,
        grabcursorenabled: !0,
        autohidemode: !0,
        background: "",
        iframeautoresize: !0,
        cursorminheight: 32,
        preservenativescrolling: !0,
        railoffset: !1,
        bouncescroll: !0,
        spacebarenabled: !0,
        railpadding: { top: 0, right: 0, left: 0, bottom: 0 },
        disableoutline: !0,
        horizrailenabled: !0,
        railalign: "right",
        railvalign: "bottom",
        enabletranslate3d: !0,
        enablemousewheel: !0,
        enablekeyboard: !0,
        smoothscroll: !0,
        sensitiverail: !0,
        enablemouselockapi: !0,
        cursorfixedheight: !1,
        directionlockdeadzone: 6,
        hidecursordelay: 400,
        nativeparentscrolling: !0,
        enablescrollonselection: !0,
        overflowx: !0,
        overflowy: !0,
        cursordragspeed: 0.3,
        rtlmode: "auto",
        cursordragontouch: !1,
        oneaxismousemode: "auto",
        scriptpath: getScriptPath(),
    };
    var browserdetected = !1;
    var getBrowserDetection = function () {
        if (browserdetected) return browserdetected;
        var domtest = document.createElement("DIV");
        var d = {};
        d.haspointerlock = "pointerLockElement" in document || "mozPointerLockElement" in document || "webkitPointerLockElement" in document;
        d.isopera = "opera" in window;
        d.isopera12 = d.isopera && "getUserMedia" in navigator;
        d.isoperamini = Object.prototype.toString.call(window.operamini) === "[object OperaMini]";
        d.isie = "all" in document && "attachEvent" in domtest && !d.isopera;
        d.isieold = d.isie && !("msInterpolationMode" in domtest.style);
        d.isie7 = d.isie && !d.isieold && (!("documentMode" in document) || document.documentMode == 7);
        d.isie8 = d.isie && "documentMode" in document && document.documentMode == 8;
        d.isie9 = d.isie && "performance" in window && document.documentMode >= 9;
        d.isie10 = d.isie && "performance" in window && document.documentMode >= 10;
        d.isie9mobile = /iemobile.9/i.test(navigator.userAgent);
        if (d.isie9mobile) d.isie9 = !1;
        d.isie7mobile = !d.isie9mobile && d.isie7 && /iemobile/i.test(navigator.userAgent);
        d.ismozilla = "MozAppearance" in domtest.style;
        d.iswebkit = "WebkitAppearance" in domtest.style;
        d.ischrome = "chrome" in window;
        d.ischrome22 = d.ischrome && d.haspointerlock;
        d.ischrome26 = d.ischrome && "transition" in domtest.style;
        d.cantouch = "ontouchstart" in document.documentElement || "ontouchstart" in window;
        d.hasmstouch = window.navigator.msPointerEnabled || !1;
        d.ismac = /^mac$/i.test(navigator.platform);
        d.isios = d.cantouch && /iphone|ipad|ipod/i.test(navigator.platform);
        d.isios4 = d.isios && !("seal" in Object);
        d.isandroid = /android/i.test(navigator.userAgent);
        d.trstyle = !1;
        d.hastransform = !1;
        d.hastranslate3d = !1;
        d.transitionstyle = !1;
        d.hastransition = !1;
        d.transitionend = !1;
        var check = ["transform", "msTransform", "webkitTransform", "MozTransform", "OTransform"];
        for (var a = 0; a < check.length; a++) {
            if (typeof domtest.style[check[a]] != "undefined") {
                d.trstyle = check[a];
                break;
            }
        }
        d.hastransform = d.trstyle != !1;
        if (d.hastransform) {
            domtest.style[d.trstyle] = "translate3d(1px,2px,3px)";
            d.hastranslate3d = /translate3d/.test(domtest.style[d.trstyle]);
        }
        d.transitionstyle = !1;
        d.prefixstyle = "";
        d.transitionend = !1;
        var check = ["transition", "webkitTransition", "MozTransition", "OTransition", "OTransition", "msTransition", "KhtmlTransition"];
        var prefix = ["", "-webkit-", "-moz-", "-o-", "-o", "-ms-", "-khtml-"];
        var evs = ["transitionend", "webkitTransitionEnd", "transitionend", "otransitionend", "oTransitionEnd", "msTransitionEnd", "KhtmlTransitionEnd"];
        for (var a = 0; a < check.length; a++) {
            if (check[a] in domtest.style) {
                d.transitionstyle = check[a];
                d.prefixstyle = prefix[a];
                d.transitionend = evs[a];
                break;
            }
        }
        if (d.ischrome26) {
            d.prefixstyle = prefix[1];
        }
        d.hastransition = d.transitionstyle;
        function detectCursorGrab() {
            var lst = ["-moz-grab", "-webkit-grab", "grab"];
            if ((d.ischrome && !d.ischrome22) || d.isie) lst = [];
            for (var a = 0; a < lst.length; a++) {
                var p = lst[a];
                domtest.style.cursor = p;
                if (domtest.style.cursor == p) return p;
            }
            return "url(http://www.google.com/intl/en_ALL/mapfiles/openhand.cur),n-resize";
        }
        d.cursorgrabvalue = detectCursorGrab();
        d.hasmousecapture = "setCapture" in domtest;
        d.hasMutationObserver = clsMutationObserver !== !1;
        domtest = null;
        browserdetected = d;
        return d;
    };
    var NiceScrollClass = function (myopt, me) {
        var self = this;
        this.version = "3.5.4";
        this.name = "nicescroll";
        this.me = me;
        this.opt = { doc: $("body"), win: !1 };
        $.extend(this.opt, _globaloptions);
        this.opt.snapbackspeed = 80;
        if (myopt || !1) {
            for (var a in self.opt) {
                if (typeof myopt[a] != "undefined") self.opt[a] = myopt[a];
            }
        }
        this.doc = self.opt.doc;
        this.iddoc = this.doc && this.doc[0] ? this.doc[0].id || "" : "";
        this.ispage = /^BODY|HTML/.test(self.opt.win ? self.opt.win[0].nodeName : this.doc[0].nodeName);
        this.haswrapper = self.opt.win !== !1;
        this.win = self.opt.win || (this.ispage ? $(window) : this.doc);
        this.docscroll = this.ispage && !this.haswrapper ? $(window) : this.win;
        this.body = $("body");
        this.viewport = !1;
        this.isfixed = !1;
        this.iframe = !1;
        this.isiframe = this.doc[0].nodeName == "IFRAME" && this.win[0].nodeName == "IFRAME";
        this.istextarea = this.win[0].nodeName == "TEXTAREA";
        this.forcescreen = !1;
        this.canshowonmouseevent = self.opt.autohidemode != "scroll";
        this.onmousedown = !1;
        this.onmouseup = !1;
        this.onmousemove = !1;
        this.onmousewheel = !1;
        this.onkeypress = !1;
        this.ongesturezoom = !1;
        this.onclick = !1;
        this.onscrollstart = !1;
        this.onscrollend = !1;
        this.onscrollcancel = !1;
        this.onzoomin = !1;
        this.onzoomout = !1;
        this.view = !1;
        this.page = !1;
        this.scroll = { x: 0, y: 0 };
        this.scrollratio = { x: 0, y: 0 };
        this.cursorheight = 20;
        this.scrollvaluemax = 0;
        this.isrtlmode = !1;
        this.scrollrunning = !1;
        this.scrollmom = !1;
        this.observer = !1;
        this.observerremover = !1;
        do {
            this.id = "ascrail" + ascrailcounter++;
        } while (document.getElementById(this.id));
        this.rail = !1;
        this.cursor = !1;
        this.cursorfreezed = !1;
        this.selectiondrag = !1;
        this.zoom = !1;
        this.zoomactive = !1;
        this.hasfocus = !1;
        this.hasmousefocus = !1;
        this.visibility = !0;
        this.locked = !1;
        this.hidden = !1;
        this.cursoractive = !0;
        this.wheelprevented = !1;
        this.overflowx = self.opt.overflowx;
        this.overflowy = self.opt.overflowy;
        this.nativescrollingarea = !1;
        this.checkarea = 0;
        this.events = [];
        this.saved = {};
        this.delaylist = {};
        this.synclist = {};
        this.lastdeltax = 0;
        this.lastdeltay = 0;
        this.detected = getBrowserDetection();
        var cap = $.extend({}, this.detected);
        this.canhwscroll = cap.hastransform && self.opt.hwacceleration;
        this.ishwscroll = this.canhwscroll && self.haswrapper;
        this.istouchcapable = !1;
        if (cap.cantouch && cap.iswebkit && !cap.isios && !cap.isandroid) {
            this.istouchcapable = !0;
            cap.cantouch = !1;
        }
        if (cap.cantouch && cap.ismozilla && !cap.isios && !cap.isandroid) {
            this.istouchcapable = !0;
            cap.cantouch = !1;
        }
        if (!self.opt.enablemouselockapi) {
            cap.hasmousecapture = !1;
            cap.haspointerlock = !1;
        }
        this.delayed = function (name, fn, tm, lazy) {
            var dd = self.delaylist[name];
            var nw = new Date().getTime();
            if (!lazy && dd && dd.tt) return !1;
            if (dd && dd.tt) clearTimeout(dd.tt);
            if (dd && dd.last + tm > nw && !dd.tt) {
                self.delaylist[name] = {
                    last: nw + tm,
                    tt: setTimeout(function () {
                        if (self || !1) {
                            self.delaylist[name].tt = 0;
                            fn.call();
                        }
                    }, tm),
                };
            } else if (!dd || !dd.tt) {
                self.delaylist[name] = { last: nw, tt: 0 };
                setTimeout(function () {
                    fn.call();
                }, 0);
            }
        };
        this.debounced = function (name, fn, tm) {
            var dd = self.delaylist[name];
            var nw = new Date().getTime();
            self.delaylist[name] = fn;
            if (!dd) {
                setTimeout(function () {
                    var fn = self.delaylist[name];
                    self.delaylist[name] = !1;
                    fn.call();
                }, tm);
            }
        };
        var _onsync = !1;
        this.synched = function (name, fn) {
            function requestSync() {
                if (_onsync) return;
                setAnimationFrame(function () {
                    _onsync = !1;
                    for (name in self.synclist) {
                        var fn = self.synclist[name];
                        if (fn) fn.call(self);
                        self.synclist[name] = !1;
                    }
                });
                _onsync = !0;
            }
            self.synclist[name] = fn;
            requestSync();
            return name;
        };
        this.unsynched = function (name) {
            if (self.synclist[name]) self.synclist[name] = !1;
        };
        this.css = function (el, pars) {
            for (var n in pars) {
                self.saved.css.push([el, n, el.css(n)]);
                el.css(n, pars[n]);
            }
        };
        this.scrollTop = function (val) {
            return typeof val == "undefined" ? self.getScrollTop() : self.setScrollTop(val);
        };
        this.scrollLeft = function (val) {
            return typeof val == "undefined" ? self.getScrollLeft() : self.setScrollLeft(val);
        };
        BezierClass = function (st, ed, spd, p1, p2, p3, p4) {
            this.st = st;
            this.ed = ed;
            this.spd = spd;
            this.p1 = p1 || 0;
            this.p2 = p2 || 1;
            this.p3 = p3 || 0;
            this.p4 = p4 || 1;
            this.ts = new Date().getTime();
            this.df = this.ed - this.st;
        };
        BezierClass.prototype = {
            B2: function (t) {
                return 3 * t * t * (1 - t);
            },
            B3: function (t) {
                return 3 * t * (1 - t) * (1 - t);
            },
            B4: function (t) {
                return (1 - t) * (1 - t) * (1 - t);
            },
            getNow: function () {
                var nw = new Date().getTime();
                var pc = 1 - (nw - this.ts) / this.spd;
                var bz = this.B2(pc) + this.B3(pc) + this.B4(pc);
                return pc < 0 ? this.ed : this.st + Math.round(this.df * bz);
            },
            update: function (ed, spd) {
                this.st = this.getNow();
                this.ed = ed;
                this.spd = spd;
                this.ts = new Date().getTime();
                this.df = this.ed - this.st;
                return this;
            },
        };
        if (this.ishwscroll) {
            this.doc.translate = { x: 0, y: 0, tx: "0px", ty: "0px" };
            if (cap.hastranslate3d && cap.isios) this.doc.css("-webkit-backface-visibility", "hidden");
            function getMatrixValues() {
                var tr = self.doc.css(cap.trstyle);
                if (tr && tr.substr(0, 6) == "matrix") {
                    return tr
                        .replace(/^.*\((.*)\)$/g, "$1")
                        .replace(/px/g, "")
                        .split(/, +/);
                }
                return !1;
            }
            this.getScrollTop = function (last) {
                if (!last) {
                    var mtx = getMatrixValues();
                    if (mtx) return mtx.length == 16 ? -mtx[13] : -mtx[5];
                    if (self.timerscroll && self.timerscroll.bz) return self.timerscroll.bz.getNow();
                }
                return self.doc.translate.y;
            };
            this.getScrollLeft = function (last) {
                if (!last) {
                    var mtx = getMatrixValues();
                    if (mtx) return mtx.length == 16 ? -mtx[12] : -mtx[4];
                    if (self.timerscroll && self.timerscroll.bh) return self.timerscroll.bh.getNow();
                }
                return self.doc.translate.x;
            };
            if (document.createEvent) {
                this.notifyScrollEvent = function (el) {
                    var e = document.createEvent("UIEvents");
                    e.initUIEvent("scroll", !1, !0, window, 1);
                    el.dispatchEvent(e);
                };
            } else if (document.fireEvent) {
                this.notifyScrollEvent = function (el) {
                    var e = document.createEventObject();
                    el.fireEvent("onscroll");
                    e.cancelBubble = !0;
                };
            } else {
                this.notifyScrollEvent = function (el, add) {};
            }
            var cxscrollleft = -1;
            if (cap.hastranslate3d && self.opt.enabletranslate3d) {
                this.setScrollTop = function (val, silent) {
                    self.doc.translate.y = val;
                    self.doc.translate.ty = val * -1 + "px";
                    self.doc.css(cap.trstyle, "translate3d(" + self.doc.translate.tx + "," + self.doc.translate.ty + ",0px)");
                    if (!silent) self.notifyScrollEvent(self.win[0]);
                };
                this.setScrollLeft = function (val, silent) {
                    self.doc.translate.x = val;
                    self.doc.translate.tx = val * cxscrollleft + "px";
                    self.doc.css(cap.trstyle, "translate3d(" + self.doc.translate.tx + "," + self.doc.translate.ty + ",0px)");
                    if (!silent) self.notifyScrollEvent(self.win[0]);
                };
            } else {
                this.setScrollTop = function (val, silent) {
                    self.doc.translate.y = val;
                    self.doc.translate.ty = val * -1 + "px";
                    self.doc.css(cap.trstyle, "translate(" + self.doc.translate.tx + "," + self.doc.translate.ty + ")");
                    if (!silent) self.notifyScrollEvent(self.win[0]);
                };
                this.setScrollLeft = function (val, silent) {
                    self.doc.translate.x = val;
                    self.doc.translate.tx = val * cxscrollleft + "px";
                    self.doc.css(cap.trstyle, "translate(" + self.doc.translate.tx + "," + self.doc.translate.ty + ")");
                    if (!silent) self.notifyScrollEvent(self.win[0]);
                };
            }
        } else {
            this.getScrollTop = function () {
                return self.docscroll.scrollTop();
            };
            this.setScrollTop = function (val) {
                return self.docscroll.scrollTop(val);
            };
            this.getScrollLeft = function () {
                return self.docscroll.scrollLeft();
            };
            this.setScrollLeft = function (val) {
                return self.docscroll.scrollLeft(val);
            };
        }
        this.getTarget = function (e) {
            if (!e) return !1;
            if (e.target) return e.target;
            if (e.srcElement) return e.srcElement;
            return !1;
        };
        this.hasParent = function (e, id) {
            if (!e) return !1;
            var el = e.target || e.srcElement || e || !1;
            while (el && el.id != id) {
                el = el.parentNode || !1;
            }
            return el !== !1;
        };
        function getZIndex() {
            var dom = self.win;
            if ("zIndex" in dom) return dom.zIndex();
            while (dom.length > 0) {
                if (dom[0].nodeType == 9) return !1;
                var zi = dom.css("zIndex");
                if (!isNaN(zi) && zi != 0) return parseInt(zi);
                dom = dom.parent();
            }
            return !1;
        }
        var _convertBorderWidth = { thin: 1, medium: 3, thick: 5 };
        function getWidthToPixel(dom, prop, chkheight) {
            var wd = dom.css(prop);
            var px = parseFloat(wd);
            if (isNaN(px)) {
                px = _convertBorderWidth[wd] || 0;
                var brd = px == 3 ? (chkheight ? self.win.outerHeight() - self.win.innerHeight() : self.win.outerWidth() - self.win.innerWidth()) : 1;
                if (self.isie8 && px) px += 1;
                return brd ? px : 0;
            }
            return px;
        }
        this.getOffset = function () {
            if (self.isfixed) return { top: parseFloat(self.win.css("top")), left: parseFloat(self.win.css("left")) };
            if (!self.viewport) return self.win.offset();
            var ww = self.win.offset();
            var vp = self.viewport.offset();
            return { top: ww.top - vp.top + self.viewport.scrollTop(), left: ww.left - vp.left + self.viewport.scrollLeft() };
        };
        this.updateScrollBar = function (len) {
            if (self.ishwscroll) {
                self.rail.css({ height: self.win.innerHeight() });
                if (self.railh) self.railh.css({ width: self.win.innerWidth() });
            } else {
                var wpos = self.getOffset();
                var pos = { top: wpos.top, left: wpos.left };
                pos.top += getWidthToPixel(self.win, "border-top-width", !0);
                var brd = (self.win.outerWidth() - self.win.innerWidth()) / 2;
                pos.left += self.rail.align ? self.win.outerWidth() - getWidthToPixel(self.win, "border-right-width") - self.rail.width : getWidthToPixel(self.win, "border-left-width");
                var off = self.opt.railoffset;
                if (off) {
                    if (off.top) pos.top += off.top;
                    if (self.rail.align && off.left) pos.left += off.left;
                }
                if (!self.locked) self.rail.css({ top: pos.top, left: pos.left, height: len ? len.h : self.win.innerHeight() });
                if (self.zoom) {
                    self.zoom.css({ top: pos.top + 1, left: self.rail.align == 1 ? pos.left - 20 : pos.left + self.rail.width + 4 });
                }
                if (self.railh && !self.locked) {
                    var pos = { top: wpos.top, left: wpos.left };
                    var y = self.railh.align ? pos.top + getWidthToPixel(self.win, "border-top-width", !0) + self.win.innerHeight() - self.railh.height : pos.top + getWidthToPixel(self.win, "border-top-width", !0);
                    var x = pos.left + getWidthToPixel(self.win, "border-left-width");
                    self.railh.css({ top: y, left: x, width: self.railh.width });
                }
            }
        };
        this.doRailClick = function (e, dbl, hr) {
            var fn, pg, cur, pos;
            if (self.locked) return;
            self.cancelEvent(e);
            if (dbl) {
                fn = hr ? self.doScrollLeft : self.doScrollTop;
                cur = hr ? (e.pageX - self.railh.offset().left - self.cursorwidth / 2) * self.scrollratio.x : (e.pageY - self.rail.offset().top - self.cursorheight / 2) * self.scrollratio.y;
                fn(cur);
            } else {
                fn = hr ? self.doScrollLeftBy : self.doScrollBy;
                cur = hr ? self.scroll.x : self.scroll.y;
                pos = hr ? e.pageX - self.railh.offset().left : e.pageY - self.rail.offset().top;
                pg = hr ? self.view.w : self.view.h;
                cur >= pos ? fn(pg) : fn(-pg);
            }
        };
        self.hasanimationframe = setAnimationFrame;
        self.hascancelanimationframe = clearAnimationFrame;
        if (!self.hasanimationframe) {
            setAnimationFrame = function (fn) {
                return setTimeout(fn, 15 - (Math.floor(+new Date() / 1000) % 16));
            };
            clearAnimationFrame = clearInterval;
        } else if (!self.hascancelanimationframe)
            clearAnimationFrame = function () {
                self.cancelAnimationFrame = !0;
            };
        this.init = function () {
            self.saved.css = [];
            if (cap.isie7mobile) return !0;
            if (cap.isoperamini) return !0;
            if (cap.hasmstouch) self.css(self.ispage ? $("html") : self.win, { "-ms-touch-action": "none" });
            self.zindex = "auto";
            if (!self.ispage && self.opt.zindex == "auto") {
                self.zindex = getZIndex() || "auto";
            } else {
                self.zindex = self.opt.zindex;
            }
            if (!self.ispage && self.zindex != "auto") {
                if (self.zindex > globalmaxzindex) globalmaxzindex = self.zindex;
            }
            if (self.isie && self.zindex == 0 && self.opt.zindex == "auto") {
                self.zindex = "auto";
            }
            if (!self.ispage || (!cap.cantouch && !cap.isieold && !cap.isie9mobile)) {
                var cont = self.docscroll;
                if (self.ispage) cont = self.haswrapper ? self.win : self.doc;
                if (!cap.isie9mobile) self.css(cont, { "overflow-y": "hidden" });
                if (self.ispage && cap.isie7) {
                    if (self.doc[0].nodeName == "BODY") self.css($("html"), { "overflow-y": "hidden" });
                    else if (self.doc[0].nodeName == "HTML") self.css($("body"), { "overflow-y": "hidden" });
                }
                if (cap.isios && !self.ispage && !self.haswrapper) self.css($("body"), { "-webkit-overflow-scrolling": "touch" });
                var cursor = $(document.createElement("div"));
                cursor.css({
                    position: "relative",
                    top: 0,
                    float: "right",
                    width: self.opt.cursorwidth,
                    height: "0px",
                    "background-color": self.opt.cursorcolor,
                    border: self.opt.cursorborder,
                    "background-clip": "padding-box",
                    "-webkit-border-radius": self.opt.cursorborderradius,
                    "-moz-border-radius": self.opt.cursorborderradius,
                    "border-radius": self.opt.cursorborderradius,
                });
                cursor.hborder = parseFloat(cursor.outerHeight() - cursor.innerHeight());
                self.cursor = cursor;
                var rail = $(document.createElement("div"));
                rail.attr("id", self.id);
                rail.addClass("nicescroll-rails");
                var v,
                    a,
                    kp = ["left", "right"];
                for (var n in kp) {
                    a = kp[n];
                    v = self.opt.railpadding[a];
                    v ? rail.css("padding-" + a, v + "px") : (self.opt.railpadding[a] = 0);
                }
                rail.append(cursor);
                rail.width = Math.max(parseFloat(self.opt.cursorwidth), cursor.outerWidth()) + self.opt.railpadding.left + self.opt.railpadding.right;
                rail.css({ width: rail.width + "px", zIndex: self.zindex, background: self.opt.background, cursor: "default" });
                rail.visibility = !0;
                rail.scrollable = !0;
                rail.align = self.opt.railalign == "left" ? 0 : 1;
                self.rail = rail;
                self.rail.drag = !1;
                var zoom = !1;
                if (self.opt.boxzoom && !self.ispage && !cap.isieold) {
                    zoom = document.createElement("div");
                    self.bind(zoom, "click", self.doZoom);
                    self.zoom = $(zoom);
                    self.zoom.css({ cursor: "pointer", "z-index": self.zindex, backgroundImage: "url(" + self.opt.scriptpath + "zoomico.png)", height: 18, width: 18, backgroundPosition: "0px 0px" });
                    if (self.opt.dblclickzoom) self.bind(self.win, "dblclick", self.doZoom);
                    if (cap.cantouch && self.opt.gesturezoom) {
                        self.ongesturezoom = function (e) {
                            if (e.scale > 1.5) self.doZoomIn(e);
                            if (e.scale < 0.8) self.doZoomOut(e);
                            return self.cancelEvent(e);
                        };
                        self.bind(self.win, "gestureend", self.ongesturezoom);
                    }
                }
                self.railh = !1;
                if (self.opt.horizrailenabled) {
                    self.css(cont, { "overflow-x": "hidden" });
                    var cursor = $(document.createElement("div"));
                    cursor.css({
                        position: "relative",
                        top: 0,
                        height: self.opt.cursorwidth,
                        width: "0px",
                        "background-color": self.opt.cursorcolor,
                        border: self.opt.cursorborder,
                        "background-clip": "padding-box",
                        "-webkit-border-radius": self.opt.cursorborderradius,
                        "-moz-border-radius": self.opt.cursorborderradius,
                        "border-radius": self.opt.cursorborderradius,
                    });
                    cursor.wborder = parseFloat(cursor.outerWidth() - cursor.innerWidth());
                    self.cursorh = cursor;
                    var railh = $(document.createElement("div"));
                    railh.attr("id", self.id + "-hr");
                    railh.addClass("nicescroll-rails");
                    railh.height = Math.max(parseFloat(self.opt.cursorwidth), cursor.outerHeight());
                    railh.css({ height: railh.height + "px", zIndex: self.zindex, background: self.opt.background });
                    railh.append(cursor);
                    railh.visibility = !0;
                    railh.scrollable = !0;
                    railh.align = self.opt.railvalign == "top" ? 0 : 1;
                    self.railh = railh;
                    self.railh.drag = !1;
                }
                if (self.ispage) {
                    rail.css({ position: "fixed", top: "0px", height: "100%" });
                    rail.align ? rail.css({ right: "0px" }) : rail.css({ left: "0px" });
                    self.body.append(rail);
                    if (self.railh) {
                        railh.css({ position: "fixed", left: "0px", width: "100%" });
                        railh.align ? railh.css({ bottom: "0px" }) : railh.css({ top: "0px" });
                        self.body.append(railh);
                    }
                } else {
                    if (self.ishwscroll) {
                        if (self.win.css("position") == "static") self.css(self.win, { position: "relative" });
                        var bd = self.win[0].nodeName == "HTML" ? self.body : self.win;
                        if (self.zoom) {
                            self.zoom.css({ position: "absolute", top: 1, right: 0, "margin-right": rail.width + 4 });
                            bd.append(self.zoom);
                        }
                        rail.css({ position: "absolute", top: 0 });
                        rail.align ? rail.css({ right: 0 }) : rail.css({ left: 0 });
                        bd.append(rail);
                        if (railh) {
                            railh.css({ position: "absolute", left: 0, bottom: 0 });
                            railh.align ? railh.css({ bottom: 0 }) : railh.css({ top: 0 });
                            bd.append(railh);
                        }
                    } else {
                        self.isfixed = self.win.css("position") == "fixed";
                        var rlpos = self.isfixed ? "fixed" : "absolute";
                        if (!self.isfixed) self.viewport = self.getViewport(self.win[0]);
                        if (self.viewport) {
                            self.body = self.viewport;
                            if (/fixed|relative|absolute/.test(self.viewport.css("position")) == !1) self.css(self.viewport, { position: "relative" });
                        }
                        rail.css({ position: rlpos });
                        if (self.zoom) self.zoom.css({ position: rlpos });
                        self.updateScrollBar();
                        self.body.append(rail);
                        if (self.zoom) self.body.append(self.zoom);
                        if (self.railh) {
                            railh.css({ position: rlpos });
                            self.body.append(railh);
                        }
                    }
                    if (cap.isios) self.css(self.win, { "-webkit-tap-highlight-color": "rgba(0,0,0,0)", "-webkit-touch-callout": "none" });
                    if (cap.isie && self.opt.disableoutline) self.win.attr("hideFocus", "true");
                    if (cap.iswebkit && self.opt.disableoutline) self.win.css({ outline: "none" });
                }
                if (self.opt.autohidemode === !1) {
                    self.autohidedom = !1;
                    self.rail.css({ opacity: self.opt.cursoropacitymax });
                    if (self.railh) self.railh.css({ opacity: self.opt.cursoropacitymax });
                } else if (self.opt.autohidemode === !0 || self.opt.autohidemode === "leave") {
                    self.autohidedom = $().add(self.rail);
                    if (cap.isie8) self.autohidedom = self.autohidedom.add(self.cursor);
                    if (self.railh) self.autohidedom = self.autohidedom.add(self.railh);
                    if (self.railh && cap.isie8) self.autohidedom = self.autohidedom.add(self.cursorh);
                } else if (self.opt.autohidemode == "scroll") {
                    self.autohidedom = $().add(self.rail);
                    if (self.railh) self.autohidedom = self.autohidedom.add(self.railh);
                } else if (self.opt.autohidemode == "cursor") {
                    self.autohidedom = $().add(self.cursor);
                    if (self.railh) self.autohidedom = self.autohidedom.add(self.cursorh);
                } else if (self.opt.autohidemode == "hidden") {
                    self.autohidedom = !1;
                    self.hide();
                    self.locked = !1;
                }
                if (cap.isie9mobile) {
                    self.scrollmom = new ScrollMomentumClass2D(self);
                    self.onmangotouch = function (e) {
                        var py = self.getScrollTop();
                        var px = self.getScrollLeft();
                        if (py == self.scrollmom.lastscrolly && px == self.scrollmom.lastscrollx) return !0;
                        var dfy = py - self.mangotouch.sy;
                        var dfx = px - self.mangotouch.sx;
                        var df = Math.round(Math.sqrt(Math.pow(dfx, 2) + Math.pow(dfy, 2)));
                        if (df == 0) return;
                        var dry = dfy < 0 ? -1 : 1;
                        var drx = dfx < 0 ? -1 : 1;
                        var tm = +new Date();
                        if (self.mangotouch.lazy) clearTimeout(self.mangotouch.lazy);
                        if (tm - self.mangotouch.tm > 80 || self.mangotouch.dry != dry || self.mangotouch.drx != drx) {
                            self.scrollmom.stop();
                            self.scrollmom.reset(px, py);
                            self.mangotouch.sy = py;
                            self.mangotouch.ly = py;
                            self.mangotouch.sx = px;
                            self.mangotouch.lx = px;
                            self.mangotouch.dry = dry;
                            self.mangotouch.drx = drx;
                            self.mangotouch.tm = tm;
                        } else {
                            self.scrollmom.stop();
                            self.scrollmom.update(self.mangotouch.sx - dfx, self.mangotouch.sy - dfy);
                            var gap = tm - self.mangotouch.tm;
                            self.mangotouch.tm = tm;
                            var ds = Math.max(Math.abs(self.mangotouch.ly - py), Math.abs(self.mangotouch.lx - px));
                            self.mangotouch.ly = py;
                            self.mangotouch.lx = px;
                            if (ds > 2) {
                                self.mangotouch.lazy = setTimeout(function () {
                                    self.mangotouch.lazy = !1;
                                    self.mangotouch.dry = 0;
                                    self.mangotouch.drx = 0;
                                    self.mangotouch.tm = 0;
                                    self.scrollmom.doMomentum(30);
                                }, 100);
                            }
                        }
                    };
                    var top = self.getScrollTop();
                    var lef = self.getScrollLeft();
                    self.mangotouch = { sy: top, ly: top, dry: 0, sx: lef, lx: lef, drx: 0, lazy: !1, tm: 0 };
                    self.bind(self.docscroll, "scroll", self.onmangotouch);
                } else {
                    if (cap.cantouch || self.istouchcapable || self.opt.touchbehavior || cap.hasmstouch) {
                        self.scrollmom = new ScrollMomentumClass2D(self);
                        self.ontouchstart = function (e) {
                            if (e.pointerType && e.pointerType != 2) return !1;
                            self.hasmoving = !1;
                            if (!self.locked) {
                                if (cap.hasmstouch) {
                                    var tg = e.target ? e.target : !1;
                                    while (tg) {
                                        var nc = $(tg).getNiceScroll();
                                        if (nc.length > 0 && nc[0].me == self.me) break;
                                        if (nc.length > 0) return !1;
                                        if (tg.nodeName == "DIV" && tg.id == self.id) break;
                                        tg = tg.parentNode ? tg.parentNode : !1;
                                    }
                                }
                                self.cancelScroll();
                                var tg = self.getTarget(e);
                                if (tg) {
                                    var skp = /INPUT/i.test(tg.nodeName) && /range/i.test(tg.type);
                                    if (skp) return self.stopPropagation(e);
                                }
                                if (!("clientX" in e) && "changedTouches" in e) {
                                    e.clientX = e.changedTouches[0].clientX;
                                    e.clientY = e.changedTouches[0].clientY;
                                }
                                if (self.forcescreen) {
                                    var le = e;
                                    var e = { original: e.original ? e.original : e };
                                    e.clientX = le.screenX;
                                    e.clientY = le.screenY;
                                }
                                self.rail.drag = { x: e.clientX, y: e.clientY, sx: self.scroll.x, sy: self.scroll.y, st: self.getScrollTop(), sl: self.getScrollLeft(), pt: 2, dl: !1 };
                                if (self.ispage || !self.opt.directionlockdeadzone) {
                                    self.rail.drag.dl = "f";
                                } else {
                                    var view = { w: $(window).width(), h: $(window).height() };
                                    var page = { w: Math.max(document.body.scrollWidth, document.documentElement.scrollWidth), h: Math.max(document.body.scrollHeight, document.documentElement.scrollHeight) };
                                    var maxh = Math.max(0, page.h - view.h);
                                    var maxw = Math.max(0, page.w - view.w);
                                    if (!self.rail.scrollable && self.railh.scrollable) self.rail.drag.ck = maxh > 0 ? "v" : !1;
                                    else if (self.rail.scrollable && !self.railh.scrollable) self.rail.drag.ck = maxw > 0 ? "h" : !1;
                                    else self.rail.drag.ck = !1;
                                    if (!self.rail.drag.ck) self.rail.drag.dl = "f";
                                }
                                if (self.opt.touchbehavior && self.isiframe && cap.isie) {
                                    var wp = self.win.position();
                                    self.rail.drag.x += wp.left;
                                    self.rail.drag.y += wp.top;
                                }
                                self.hasmoving = !1;
                                self.lastmouseup = !1;
                                self.scrollmom.reset(e.clientX, e.clientY);
                                if (!cap.cantouch && !this.istouchcapable && !cap.hasmstouch) {
                                    var ip = tg ? /INPUT|SELECT|TEXTAREA/i.test(tg.nodeName) : !1;
                                    if (!ip) {
                                        if (!self.ispage && cap.hasmousecapture) tg.setCapture();
                                        if (self.opt.touchbehavior) {
                                            if (tg.onclick && !(tg._onclick || !1)) {
                                                tg._onclick = tg.onclick;
                                                tg.onclick = function (e) {
                                                    if (self.hasmoving) return !1;
                                                    tg._onclick.call(this, e);
                                                };
                                            }
                                            return self.cancelEvent(e);
                                        }
                                        return self.stopPropagation(e);
                                    }
                                    if (/SUBMIT|CANCEL|BUTTON/i.test($(tg).attr("type"))) {
                                        pc = { tg: tg, click: !1 };
                                        self.preventclick = pc;
                                    }
                                }
                            }
                        };
                        self.ontouchend = function (e) {
                            if (e.pointerType && e.pointerType != 2) return !1;
                            if (self.rail.drag && self.rail.drag.pt == 2) {
                                self.scrollmom.doMomentum();
                                self.rail.drag = !1;
                                if (self.hasmoving) {
                                    self.lastmouseup = !0;
                                    self.hideCursor();
                                    if (cap.hasmousecapture) document.releaseCapture();
                                    if (!cap.cantouch) return self.cancelEvent(e);
                                }
                            }
                        };
                        var moveneedoffset = self.opt.touchbehavior && self.isiframe && !cap.hasmousecapture;
                        self.ontouchmove = function (e, byiframe) {
                            if (e.pointerType && e.pointerType != 2) return !1;
                            if (self.rail.drag && self.rail.drag.pt == 2) {
                                if (cap.cantouch && typeof e.original == "undefined") return !0;
                                self.hasmoving = !0;
                                if (self.preventclick && !self.preventclick.click) {
                                    self.preventclick.click = self.preventclick.tg.onclick || !1;
                                    self.preventclick.tg.onclick = self.onpreventclick;
                                }
                                var ev = $.extend({ original: e }, e);
                                e = ev;
                                if ("changedTouches" in e) {
                                    e.clientX = e.changedTouches[0].clientX;
                                    e.clientY = e.changedTouches[0].clientY;
                                }
                                if (self.forcescreen) {
                                    var le = e;
                                    var e = { original: e.original ? e.original : e };
                                    e.clientX = le.screenX;
                                    e.clientY = le.screenY;
                                }
                                var ofx = (ofy = 0);
                                if (moveneedoffset && !byiframe) {
                                    var wp = self.win.position();
                                    ofx = -wp.left;
                                    ofy = -wp.top;
                                }
                                var fy = e.clientY + ofy;
                                var my = fy - self.rail.drag.y;
                                var fx = e.clientX + ofx;
                                var mx = fx - self.rail.drag.x;
                                var ny = self.rail.drag.st - my;
                                if (self.ishwscroll && self.opt.bouncescroll) {
                                    if (ny < 0) {
                                        ny = Math.round(ny / 2);
                                    } else if (ny > self.page.maxh) {
                                        ny = self.page.maxh + Math.round((ny - self.page.maxh) / 2);
                                    }
                                } else {
                                    if (ny < 0) {
                                        ny = 0;
                                        fy = 0;
                                    }
                                    if (ny > self.page.maxh) {
                                        ny = self.page.maxh;
                                        fy = 0;
                                    }
                                }
                                if (self.railh && self.railh.scrollable) {
                                    var nx = self.rail.drag.sl - mx;
                                    if (self.ishwscroll && self.opt.bouncescroll) {
                                        if (nx < 0) {
                                            nx = Math.round(nx / 2);
                                        } else if (nx > self.page.maxw) {
                                            nx = self.page.maxw + Math.round((nx - self.page.maxw) / 2);
                                        }
                                    } else {
                                        if (nx < 0) {
                                            nx = 0;
                                            fx = 0;
                                        }
                                        if (nx > self.page.maxw) {
                                            nx = self.page.maxw;
                                            fx = 0;
                                        }
                                    }
                                }
                                var grabbed = !1;
                                if (self.rail.drag.dl) {
                                    grabbed = !0;
                                    if (self.rail.drag.dl == "v") nx = self.rail.drag.sl;
                                    else if (self.rail.drag.dl == "h") ny = self.rail.drag.st;
                                } else {
                                    var ay = Math.abs(my);
                                    var ax = Math.abs(mx);
                                    var dz = self.opt.directionlockdeadzone;
                                    if (self.rail.drag.ck == "v") {
                                        if (ay > dz && ax <= ay * 0.3) {
                                            self.rail.drag = !1;
                                            return !0;
                                        } else if (ax > dz) {
                                            self.rail.drag.dl = "f";
                                            $("body").scrollTop($("body").scrollTop());
                                        }
                                    } else if (self.rail.drag.ck == "h") {
                                        if (ax > dz && ay <= ax * 0.3) {
                                            self.rail.drag = !1;
                                            return !0;
                                        } else if (ay > dz) {
                                            self.rail.drag.dl = "f";
                                            $("body").scrollLeft($("body").scrollLeft());
                                        }
                                    }
                                }
                                self.synched("touchmove", function () {
                                    if (self.rail.drag && self.rail.drag.pt == 2) {
                                        if (self.prepareTransition) self.prepareTransition(0);
                                        if (self.rail.scrollable) self.setScrollTop(ny);
                                        self.scrollmom.update(fx, fy);
                                        if (self.railh && self.railh.scrollable) {
                                            self.setScrollLeft(nx);
                                            self.showCursor(ny, nx);
                                        } else {
                                            self.showCursor(ny);
                                        }
                                        if (cap.isie10) document.selection.clear();
                                    }
                                });
                                if (cap.ischrome && self.istouchcapable) grabbed = !1;
                                if (grabbed) return self.cancelEvent(e);
                            }
                        };
                    }
                    self.onmousedown = function (e, hronly) {
                        if (self.rail.drag && self.rail.drag.pt != 1) return;
                        if (self.locked) return self.cancelEvent(e);
                        self.cancelScroll();
                        self.rail.drag = { x: e.clientX, y: e.clientY, sx: self.scroll.x, sy: self.scroll.y, pt: 1, hr: !!hronly };
                        var tg = self.getTarget(e);
                        if (!self.ispage && cap.hasmousecapture) tg.setCapture();
                        if (self.isiframe && !cap.hasmousecapture) {
                            self.saved.csspointerevents = self.doc.css("pointer-events");
                            self.css(self.doc, { "pointer-events": "none" });
                        }
                        self.hasmoving = !1;
                        return self.cancelEvent(e);
                    };
                    self.onmouseup = function (e) {
                        if (self.rail.drag) {
                            if (cap.hasmousecapture) document.releaseCapture();
                            if (self.isiframe && !cap.hasmousecapture) self.doc.css("pointer-events", self.saved.csspointerevents);
                            if (self.rail.drag.pt != 1) return;
                            self.rail.drag = !1;
                            if (self.hasmoving) self.triggerScrollEnd();
                            return self.cancelEvent(e);
                        }
                    };
                    self.onmousemove = function (e) {
                        if (self.rail.drag) {
                            if (self.rail.drag.pt != 1) return;
                            if (cap.ischrome && e.which == 0) return self.onmouseup(e);
                            self.cursorfreezed = !0;
                            self.hasmoving = !0;
                            if (self.rail.drag.hr) {
                                self.scroll.x = self.rail.drag.sx + (e.clientX - self.rail.drag.x);
                                if (self.scroll.x < 0) self.scroll.x = 0;
                                var mw = self.scrollvaluemaxw;
                                if (self.scroll.x > mw) self.scroll.x = mw;
                            } else {
                                self.scroll.y = self.rail.drag.sy + (e.clientY - self.rail.drag.y);
                                if (self.scroll.y < 0) self.scroll.y = 0;
                                var my = self.scrollvaluemax;
                                if (self.scroll.y > my) self.scroll.y = my;
                            }
                            self.synched("mousemove", function () {
                                if (self.rail.drag && self.rail.drag.pt == 1) {
                                    self.showCursor();
                                    if (self.rail.drag.hr) self.doScrollLeft(Math.round(self.scroll.x * self.scrollratio.x), self.opt.cursordragspeed);
                                    else self.doScrollTop(Math.round(self.scroll.y * self.scrollratio.y), self.opt.cursordragspeed);
                                }
                            });
                            return self.cancelEvent(e);
                        }
                    };
                    if (cap.cantouch || self.opt.touchbehavior) {
                        self.onpreventclick = function (e) {
                            if (self.preventclick) {
                                self.preventclick.tg.onclick = self.preventclick.click;
                                self.preventclick = !1;
                                return self.cancelEvent(e);
                            }
                        };
                        self.bind(self.win, "mousedown", self.ontouchstart);
                        self.onclick = cap.isios
                            ? !1
                            : function (e) {
                                  if (self.lastmouseup) {
                                      self.lastmouseup = !1;
                                      return self.cancelEvent(e);
                                  } else {
                                      return !0;
                                  }
                              };
                        if (self.opt.grabcursorenabled && cap.cursorgrabvalue) {
                            self.css(self.ispage ? self.doc : self.win, { cursor: cap.cursorgrabvalue });
                            self.css(self.rail, { cursor: cap.cursorgrabvalue });
                        }
                    } else {
                        function checkSelectionScroll(e) {
                            if (!self.selectiondrag) return;
                            if (e) {
                                var ww = self.win.outerHeight();
                                var df = e.pageY - self.selectiondrag.top;
                                if (df > 0 && df < ww) df = 0;
                                if (df >= ww) df -= ww;
                                self.selectiondrag.df = df;
                            }
                            if (self.selectiondrag.df == 0) return;
                            var rt = -Math.floor(self.selectiondrag.df / 6) * 2;
                            self.doScrollBy(rt);
                            self.debounced(
                                "doselectionscroll",
                                function () {
                                    checkSelectionScroll();
                                },
                                50
                            );
                        }
                        if ("getSelection" in document) {
                            self.hasTextSelected = function () {
                                return document.getSelection().rangeCount > 0;
                            };
                        } else if ("selection" in document) {
                            self.hasTextSelected = function () {
                                return document.selection.type != "None";
                            };
                        } else {
                            self.hasTextSelected = function () {
                                return !1;
                            };
                        }
                        self.onselectionstart = function (e) {
                            if (self.ispage) return;
                            self.selectiondrag = self.win.offset();
                        };
                        self.onselectionend = function (e) {
                            self.selectiondrag = !1;
                        };
                        self.onselectiondrag = function (e) {
                            if (!self.selectiondrag) return;
                            if (self.hasTextSelected())
                                self.debounced(
                                    "selectionscroll",
                                    function () {
                                        checkSelectionScroll(e);
                                    },
                                    250
                                );
                        };
                    }
                    if (cap.hasmstouch) {
                        self.css(self.rail, { "-ms-touch-action": "none" });
                        self.css(self.cursor, { "-ms-touch-action": "none" });
                        self.bind(self.win, "MSPointerDown", self.ontouchstart);
                        self.bind(document, "MSPointerUp", self.ontouchend);
                        self.bind(document, "MSPointerMove", self.ontouchmove);
                        self.bind(self.cursor, "MSGestureHold", function (e) {
                            e.preventDefault();
                        });
                        self.bind(self.cursor, "contextmenu", function (e) {
                            e.preventDefault();
                        });
                    }
                    if (this.istouchcapable) {
                        self.bind(self.win, "touchstart", self.ontouchstart);
                        self.bind(document, "touchend", self.ontouchend);
                        self.bind(document, "touchcancel", self.ontouchend);
                        self.bind(document, "touchmove", self.ontouchmove);
                    }
                    self.bind(self.cursor, "mousedown", self.onmousedown);
                    self.bind(self.cursor, "mouseup", self.onmouseup);
                    if (self.railh) {
                        self.bind(self.cursorh, "mousedown", function (e) {
                            self.onmousedown(e, !0);
                        });
                        self.bind(self.cursorh, "mouseup", self.onmouseup);
                    }
                    if (self.opt.cursordragontouch || (!cap.cantouch && !self.opt.touchbehavior)) {
                        self.rail.css({ cursor: "default" });
                        self.railh && self.railh.css({ cursor: "default" });
                        self.jqbind(self.rail, "mouseenter", function () {
                            if (!self.win.is(":visible")) return !1;
                            if (self.canshowonmouseevent) self.showCursor();
                            self.rail.active = !0;
                        });
                        self.jqbind(self.rail, "mouseleave", function () {
                            self.rail.active = !1;
                            if (!self.rail.drag) self.hideCursor();
                        });
                        if (self.opt.sensitiverail) {
                            self.bind(self.rail, "click", function (e) {
                                self.doRailClick(e, !1, !1);
                            });
                            self.bind(self.rail, "dblclick", function (e) {
                                self.doRailClick(e, !0, !1);
                            });
                            self.bind(self.cursor, "click", function (e) {
                                self.cancelEvent(e);
                            });
                            self.bind(self.cursor, "dblclick", function (e) {
                                self.cancelEvent(e);
                            });
                        }
                        if (self.railh) {
                            self.jqbind(self.railh, "mouseenter", function () {
                                if (!self.win.is(":visible")) return !1;
                                if (self.canshowonmouseevent) self.showCursor();
                                self.rail.active = !0;
                            });
                            self.jqbind(self.railh, "mouseleave", function () {
                                self.rail.active = !1;
                                if (!self.rail.drag) self.hideCursor();
                            });
                            if (self.opt.sensitiverail) {
                                self.bind(self.railh, "click", function (e) {
                                    self.doRailClick(e, !1, !0);
                                });
                                self.bind(self.railh, "dblclick", function (e) {
                                    self.doRailClick(e, !0, !0);
                                });
                                self.bind(self.cursorh, "click", function (e) {
                                    self.cancelEvent(e);
                                });
                                self.bind(self.cursorh, "dblclick", function (e) {
                                    self.cancelEvent(e);
                                });
                            }
                        }
                    }
                    if (!cap.cantouch && !self.opt.touchbehavior) {
                        self.bind(cap.hasmousecapture ? self.win : document, "mouseup", self.onmouseup);
                        self.bind(document, "mousemove", self.onmousemove);
                        if (self.onclick) self.bind(document, "click", self.onclick);
                        if (!self.ispage && self.opt.enablescrollonselection) {
                            self.bind(self.win[0], "mousedown", self.onselectionstart);
                            self.bind(document, "mouseup", self.onselectionend);
                            self.bind(self.cursor, "mouseup", self.onselectionend);
                            if (self.cursorh) self.bind(self.cursorh, "mouseup", self.onselectionend);
                            self.bind(document, "mousemove", self.onselectiondrag);
                        }
                        if (self.zoom) {
                            self.jqbind(self.zoom, "mouseenter", function () {
                                if (self.canshowonmouseevent) self.showCursor();
                                self.rail.active = !0;
                            });
                            self.jqbind(self.zoom, "mouseleave", function () {
                                self.rail.active = !1;
                                if (!self.rail.drag) self.hideCursor();
                            });
                        }
                    } else {
                        self.bind(cap.hasmousecapture ? self.win : document, "mouseup", self.ontouchend);
                        self.bind(document, "mousemove", self.ontouchmove);
                        if (self.onclick) self.bind(document, "click", self.onclick);
                        if (self.opt.cursordragontouch) {
                            self.bind(self.cursor, "mousedown", self.onmousedown);
                            self.bind(self.cursor, "mousemove", self.onmousemove);
                            self.cursorh &&
                                self.bind(self.cursorh, "mousedown", function (e) {
                                    self.onmousedown(e, !0);
                                });
                            self.cursorh && self.bind(self.cursorh, "mousemove", self.onmousemove);
                        }
                    }
                    if (self.opt.enablemousewheel) {
                        if (!self.isiframe) self.bind(cap.isie && self.ispage ? document : self.win, "mousewheel", self.onmousewheel);
                        self.bind(self.rail, "mousewheel", self.onmousewheel);
                        if (self.railh) self.bind(self.railh, "mousewheel", self.onmousewheelhr);
                    }
                    if (!self.ispage && !cap.cantouch && !/HTML|^BODY/.test(self.win[0].nodeName)) {
                        if (!self.win.attr("tabindex")) self.win.attr({ tabindex: tabindexcounter++ });
                        self.jqbind(self.win, "focus", function (e) {
                            domfocus = self.getTarget(e).id || !0;
                            self.hasfocus = !0;
                            if (self.canshowonmouseevent) self.noticeCursor();
                        });
                        self.jqbind(self.win, "blur", function (e) {
                            domfocus = !1;
                            self.hasfocus = !1;
                        });
                        self.jqbind(self.win, "mouseenter", function (e) {
                            mousefocus = self.getTarget(e).id || !0;
                            self.hasmousefocus = !0;
                            if (self.canshowonmouseevent) self.noticeCursor();
                        });
                        self.jqbind(self.win, "mouseleave", function () {
                            mousefocus = !1;
                            self.hasmousefocus = !1;
                            if (!self.rail.drag) self.hideCursor();
                        });
                    }
                }
                self.onkeypress = function (e) {
                    if (self.locked && self.page.maxh == 0) return !0;
                    e = e ? e : window.e;
                    var tg = self.getTarget(e);
                    if (tg && /INPUT|TEXTAREA|SELECT|OPTION/.test(tg.nodeName)) {
                        var tp = tg.getAttribute("type") || tg.type || !1;
                        if (!tp || !/submit|button|cancel/i.tp) return !0;
                    }
                    if ($(tg).attr("contenteditable")) return !0;
                    if (self.hasfocus || (self.hasmousefocus && !domfocus) || (self.ispage && !domfocus && !mousefocus)) {
                        var key = e.keyCode;
                        if (self.locked && key != 27) return self.cancelEvent(e);
                        var ctrl = e.ctrlKey || !1;
                        var shift = e.shiftKey || !1;
                        var ret = !1;
                        switch (key) {
                            case 38:
                            case 63233:
                                self.doScrollBy(24 * 3);
                                ret = !0;
                                break;
                            case 40:
                            case 63235:
                                self.doScrollBy(-24 * 3);
                                ret = !0;
                                break;
                            case 37:
                            case 63232:
                                if (self.railh) {
                                    ctrl ? self.doScrollLeft(0) : self.doScrollLeftBy(24 * 3);
                                    ret = !0;
                                }
                                break;
                            case 39:
                            case 63234:
                                if (self.railh) {
                                    ctrl ? self.doScrollLeft(self.page.maxw) : self.doScrollLeftBy(-24 * 3);
                                    ret = !0;
                                }
                                break;
                            case 33:
                            case 63276:
                                self.doScrollBy(self.view.h);
                                ret = !0;
                                break;
                            case 34:
                            case 63277:
                                self.doScrollBy(-self.view.h);
                                ret = !0;
                                break;
                            case 36:
                            case 63273:
                                self.railh && ctrl ? self.doScrollPos(0, 0) : self.doScrollTo(0);
                                ret = !0;
                                break;
                            case 35:
                            case 63275:
                                self.railh && ctrl ? self.doScrollPos(self.page.maxw, self.page.maxh) : self.doScrollTo(self.page.maxh);
                                ret = !0;
                                break;
                            case 32:
                                if (self.opt.spacebarenabled) {
                                    shift ? self.doScrollBy(self.view.h) : self.doScrollBy(-self.view.h);
                                    ret = !0;
                                }
                                break;
                            case 27:
                                if (self.zoomactive) {
                                    self.doZoom();
                                    ret = !0;
                                }
                                break;
                        }
                        if (ret) return self.cancelEvent(e);
                    }
                };
                if (self.opt.enablekeyboard) self.bind(document, cap.isopera && !cap.isopera12 ? "keypress" : "keydown", self.onkeypress);
                self.bind(document, "keydown", function (e) {
                    var ctrl = e.ctrlKey || !1;
                    if (ctrl) self.wheelprevented = !0;
                });
                self.bind(document, "keyup", function (e) {
                    var ctrl = e.ctrlKey || !1;
                    if (!ctrl) self.wheelprevented = !1;
                });
                self.bind(window, "resize", self.lazyResize);
                self.bind(window, "orientationchange", self.lazyResize);
                self.bind(window, "load", self.lazyResize);
                if (cap.ischrome && !self.ispage && !self.haswrapper) {
                    var tmp = self.win.attr("style");
                    var ww = parseFloat(self.win.css("width")) + 1;
                    self.win.css("width", ww);
                    self.synched("chromefix", function () {
                        self.win.attr("style", tmp);
                    });
                }
                self.onAttributeChange = function (e) {
                    self.lazyResize(250);
                };
                if (!self.ispage && !self.haswrapper) {
                    if (clsMutationObserver !== !1) {
                        self.observer = new clsMutationObserver(function (mutations) {
                            mutations.forEach(self.onAttributeChange);
                        });
                        self.observer.observe(self.win[0], { childList: !0, characterData: !1, attributes: !0, subtree: !1 });
                        self.observerremover = new clsMutationObserver(function (mutations) {
                            mutations.forEach(function (mo) {
                                if (mo.removedNodes.length > 0) {
                                    for (var dd in mo.removedNodes) {
                                        if (mo.removedNodes[dd] == self.win[0]) return self.remove();
                                    }
                                }
                            });
                        });
                        self.observerremover.observe(self.win[0].parentNode, { childList: !0, characterData: !1, attributes: !1, subtree: !1 });
                    } else {
                        self.bind(self.win, cap.isie && !cap.isie9 ? "propertychange" : "DOMAttrModified", self.onAttributeChange);
                        if (cap.isie9) self.win[0].attachEvent("onpropertychange", self.onAttributeChange);
                        self.bind(self.win, "DOMNodeRemoved", function (e) {
                            if (e.target == self.win[0]) self.remove();
                        });
                    }
                }
                if (!self.ispage && self.opt.boxzoom) self.bind(window, "resize", self.resizeZoom);
                if (self.istextarea) self.bind(self.win, "mouseup", self.lazyResize);
                self.lazyResize(30);
            }
            if (this.doc[0].nodeName == "IFRAME") {
                function oniframeload(e) {
                    self.iframexd = !1;
                    try {
                        var doc = "contentDocument" in this ? this.contentDocument : this.contentWindow.document;
                        var a = doc.domain;
                    } catch (e) {
                        self.iframexd = !0;
                        doc = !1;
                    }
                    if (self.iframexd) {
                        if ("console" in window) console.log("NiceScroll error: policy restriced iframe");
                        return !0;
                    }
                    self.forcescreen = !0;
                    if (self.isiframe) {
                        self.iframe = { doc: $(doc), html: self.doc.contents().find("html")[0], body: self.doc.contents().find("body")[0] };
                        self.getContentSize = function () {
                            return { w: Math.max(self.iframe.html.scrollWidth, self.iframe.body.scrollWidth), h: Math.max(self.iframe.html.scrollHeight, self.iframe.body.scrollHeight) };
                        };
                        self.docscroll = $(self.iframe.body);
                    }
                    if (!cap.isios && self.opt.iframeautoresize && !self.isiframe) {
                        self.win.scrollTop(0);
                        self.doc.height("");
                        var hh = Math.max(doc.getElementsByTagName("html")[0].scrollHeight, doc.body.scrollHeight);
                        self.doc.height(hh);
                    }
                    self.lazyResize(30);
                    if (cap.isie7) self.css($(self.iframe.html), { "overflow-y": "hidden" });
                    self.css($(self.iframe.body), { "overflow-y": "hidden" });
                    if (cap.isios && self.haswrapper) {
                        self.css($(doc.body), { "-webkit-transform": "translate3d(0,0,0)" });
                    }
                    if ("contentWindow" in this) {
                        self.bind(this.contentWindow, "scroll", self.onscroll);
                    } else {
                        self.bind(doc, "scroll", self.onscroll);
                    }
                    if (self.opt.enablemousewheel) {
                        self.bind(doc, "mousewheel", self.onmousewheel);
                    }
                    if (self.opt.enablekeyboard) self.bind(doc, cap.isopera ? "keypress" : "keydown", self.onkeypress);
                    if (cap.cantouch || self.opt.touchbehavior) {
                        self.bind(doc, "mousedown", self.ontouchstart);
                        self.bind(doc, "mousemove", function (e) {
                            self.ontouchmove(e, !0);
                        });
                        if (self.opt.grabcursorenabled && cap.cursorgrabvalue) self.css($(doc.body), { cursor: cap.cursorgrabvalue });
                    }
                    self.bind(doc, "mouseup", self.ontouchend);
                    if (self.zoom) {
                        if (self.opt.dblclickzoom) self.bind(doc, "dblclick", self.doZoom);
                        if (self.ongesturezoom) self.bind(doc, "gestureend", self.ongesturezoom);
                    }
                }
                if (this.doc[0].readyState && this.doc[0].readyState == "complete") {
                    setTimeout(function () {
                        oniframeload.call(self.doc[0], !1);
                    }, 500);
                }
                self.bind(this.doc, "load", oniframeload);
            }
        };
        this.showCursor = function (py, px) {
            if (self.cursortimeout) {
                clearTimeout(self.cursortimeout);
                self.cursortimeout = 0;
            }
            if (!self.rail) return;
            if (self.autohidedom) {
                self.autohidedom.stop().css({ opacity: self.opt.cursoropacitymax });
                self.cursoractive = !0;
            }
            if (!self.rail.drag || self.rail.drag.pt != 1) {
                if (typeof py != "undefined" && py !== !1) {
                    self.scroll.y = Math.round((py * 1) / self.scrollratio.y);
                }
                if (typeof px != "undefined") {
                    self.scroll.x = Math.round((px * 1) / self.scrollratio.x);
                }
            }
            self.cursor.css({ height: self.cursorheight, top: self.scroll.y });
            if (self.cursorh) {
                !self.rail.align && self.rail.visibility ? self.cursorh.css({ width: self.cursorwidth, left: self.scroll.x + self.rail.width }) : self.cursorh.css({ width: self.cursorwidth, left: self.scroll.x });
                self.cursoractive = !0;
            }
            if (self.zoom) self.zoom.stop().css({ opacity: self.opt.cursoropacitymax });
        };
        this.hideCursor = function (tm) {
            if (self.cursortimeout) return;
            if (!self.rail) return;
            if (!self.autohidedom) return;
            if (self.hasmousefocus && self.opt.autohidemode == "leave") return;
            self.cursortimeout = setTimeout(function () {
                if (!self.rail.active || !self.showonmouseevent) {
                    self.autohidedom.stop().animate({ opacity: self.opt.cursoropacitymin });
                    if (self.zoom) self.zoom.stop().animate({ opacity: self.opt.cursoropacitymin });
                    self.cursoractive = !1;
                }
                self.cursortimeout = 0;
            }, tm || self.opt.hidecursordelay);
        };
        this.noticeCursor = function (tm, py, px) {
            self.showCursor(py, px);
            if (!self.rail.active) self.hideCursor(tm);
        };
        this.getContentSize = self.ispage
            ? function () {
                  return { w: Math.max(document.body.scrollWidth, document.documentElement.scrollWidth), h: Math.max(document.body.scrollHeight, document.documentElement.scrollHeight) };
              }
            : self.haswrapper
            ? function () {
                  return {
                      w: self.doc.outerWidth() + parseInt(self.win.css("paddingLeft")) + parseInt(self.win.css("paddingRight")),
                      h: self.doc.outerHeight() + parseInt(self.win.css("paddingTop")) + parseInt(self.win.css("paddingBottom")),
                  };
              }
            : function () {
                  return { w: self.docscroll[0].scrollWidth, h: self.docscroll[0].scrollHeight };
              };
        this.onResize = function (e, page) {
            if (!self || !self.win) return !1;
            if (!self.haswrapper && !self.ispage) {
                if (self.win.css("display") == "none") {
                    if (self.visibility) self.hideRail().hideRailHr();
                    return !1;
                } else {
                    if (!self.hidden && !self.visibility) self.showRail().showRailHr();
                }
            }
            var premaxh = self.page.maxh;
            var premaxw = self.page.maxw;
            var preview = { h: self.view.h, w: self.view.w };
            self.view = { w: self.ispage ? self.win.width() : parseInt(self.win[0].clientWidth), h: self.ispage ? self.win.height() : parseInt(self.win[0].clientHeight) };
            self.page = page ? page : self.getContentSize();
            self.page.maxh = Math.max(0, self.page.h - self.view.h);
            self.page.maxw = Math.max(0, self.page.w - self.view.w);
            if (self.page.maxh == premaxh && self.page.maxw == premaxw && self.view.w == preview.w) {
                if (!self.ispage) {
                    var pos = self.win.offset();
                    if (self.lastposition) {
                        var lst = self.lastposition;
                        if (lst.top == pos.top && lst.left == pos.left) return self;
                    }
                    self.lastposition = pos;
                } else {
                    return self;
                }
            }
            if (self.page.maxh == 0) {
                self.hideRail();
                self.scrollvaluemax = 0;
                self.scroll.y = 0;
                self.scrollratio.y = 0;
                self.cursorheight = 0;
                self.setScrollTop(0);
                self.rail.scrollable = !1;
            } else {
                self.rail.scrollable = !0;
            }
            if (self.page.maxw == 0) {
                self.hideRailHr();
                self.scrollvaluemaxw = 0;
                self.scroll.x = 0;
                self.scrollratio.x = 0;
                self.cursorwidth = 0;
                self.setScrollLeft(0);
                self.railh.scrollable = !1;
            } else {
                self.railh.scrollable = !0;
            }
            self.locked = self.page.maxh == 0 && self.page.maxw == 0;
            if (self.locked) {
                if (!self.ispage) self.updateScrollBar(self.view);
                return !1;
            }
            if (!self.hidden && !self.visibility) {
                self.showRail().showRailHr();
            } else if (!self.hidden && !self.railh.visibility) self.showRailHr();
            if (self.istextarea && self.win.css("resize") && self.win.css("resize") != "none") self.view.h -= 20;
            self.cursorheight = Math.min(self.view.h, Math.round(self.view.h * (self.view.h / self.page.h)));
            self.cursorheight = self.opt.cursorfixedheight ? self.opt.cursorfixedheight : Math.max(self.opt.cursorminheight, self.cursorheight);
            self.cursorwidth = Math.min(self.view.w, Math.round(self.view.w * (self.view.w / self.page.w)));
            self.cursorwidth = self.opt.cursorfixedheight ? self.opt.cursorfixedheight : Math.max(self.opt.cursorminheight, self.cursorwidth);
            self.scrollvaluemax = self.view.h - self.cursorheight - self.cursor.hborder;
            if (self.railh) {
                self.railh.width = self.page.maxh > 0 ? self.view.w - self.rail.width : self.view.w;
                self.scrollvaluemaxw = self.railh.width - self.cursorwidth - self.cursorh.wborder;
            }
            if (!self.ispage) self.updateScrollBar(self.view);
            self.scrollratio = { x: self.page.maxw / self.scrollvaluemaxw, y: self.page.maxh / self.scrollvaluemax };
            var sy = self.getScrollTop();
            if (sy > self.page.maxh) {
                self.doScrollTop(self.page.maxh);
            } else {
                self.scroll.y = Math.round(self.getScrollTop() * (1 / self.scrollratio.y));
                self.scroll.x = Math.round(self.getScrollLeft() * (1 / self.scrollratio.x));
                if (self.cursoractive) self.noticeCursor();
            }
            if (self.scroll.y && self.getScrollTop() == 0) self.doScrollTo(Math.floor(self.scroll.y * self.scrollratio.y));
            return self;
        };
        this.resize = self.onResize;
        this.lazyResize = function (tm) {
            tm = isNaN(tm) ? 30 : tm;
            self.delayed("resize", self.resize, tm);
            return self;
        };
        function _modernWheelEvent(dom, name, fn, bubble) {
            self._bind(
                dom,
                name,
                function (e) {
                    var e = e ? e : window.event;
                    var event = {
                        original: e,
                        target: e.target || e.srcElement,
                        type: "wheel",
                        deltaMode: e.type == "MozMousePixelScroll" ? 0 : 1,
                        deltaX: 0,
                        deltaZ: 0,
                        preventDefault: function () {
                            e.preventDefault ? e.preventDefault() : (e.returnValue = !1);
                            return !1;
                        },
                        stopImmediatePropagation: function () {
                            e.stopImmediatePropagation ? e.stopImmediatePropagation() : (e.cancelBubble = !0);
                        },
                    };
                    if (name == "mousewheel") {
                        event.deltaY = (-1 / 40) * e.wheelDelta;
                        e.wheelDeltaX && (event.deltaX = (-1 / 40) * e.wheelDeltaX);
                    } else {
                        event.deltaY = e.detail;
                    }
                    return fn.call(dom, event);
                },
                bubble
            );
        }
        this._bind = function (el, name, fn, bubble) {
            self.events.push({ e: el, n: name, f: fn, b: bubble, q: !1 });
            if (el.addEventListener) {
                el.addEventListener(name, fn, bubble || !1);
            } else if (el.attachEvent) {
                el.attachEvent("on" + name, fn);
            } else {
                el["on" + name] = fn;
            }
        };
        this.jqbind = function (dom, name, fn) {
            self.events.push({ e: dom, n: name, f: fn, q: !0 });
            $(dom).bind(name, fn);
        };
        this.bind = function (dom, name, fn, bubble) {
            var el = "jquery" in dom ? dom[0] : dom;
            if (name == "mousewheel") {
                if ("onwheel" in self.win) {
                    self._bind(el, "wheel", fn, bubble || !1);
                } else {
                    var wname = typeof document.onmousewheel != "undefined" ? "mousewheel" : "DOMMouseScroll";
                    _modernWheelEvent(el, wname, fn, bubble || !1);
                    if (wname == "DOMMouseScroll") _modernWheelEvent(el, "MozMousePixelScroll", fn, bubble || !1);
                }
            } else if (el.addEventListener) {
                if (cap.cantouch && /mouseup|mousedown|mousemove/.test(name)) {
                    var tt = name == "mousedown" ? "touchstart" : name == "mouseup" ? "touchend" : "touchmove";
                    self._bind(
                        el,
                        tt,
                        function (e) {
                            if (e.touches) {
                                if (e.touches.length < 2) {
                                    var ev = e.touches.length ? e.touches[0] : e;
                                    ev.original = e;
                                    fn.call(this, ev);
                                }
                            } else if (e.changedTouches) {
                                var ev = e.changedTouches[0];
                                ev.original = e;
                                fn.call(this, ev);
                            }
                        },
                        bubble || !1
                    );
                }
                self._bind(el, name, fn, bubble || !1);
                if (cap.cantouch && name == "mouseup") self._bind(el, "touchcancel", fn, bubble || !1);
            } else {
                self._bind(el, name, function (e) {
                    e = e || window.event || !1;
                    if (e) {
                        if (e.srcElement) e.target = e.srcElement;
                    }
                    if (!("pageY" in e)) {
                        e.pageX = e.clientX + document.documentElement.scrollLeft;
                        e.pageY = e.clientY + document.documentElement.scrollTop;
                    }
                    return fn.call(el, e) === !1 || bubble === !1 ? self.cancelEvent(e) : !0;
                });
            }
        };
        this._unbind = function (el, name, fn, bub) {
            if (el.removeEventListener) {
                el.removeEventListener(name, fn, bub);
            } else if (el.detachEvent) {
                el.detachEvent("on" + name, fn);
            } else {
                el["on" + name] = !1;
            }
        };
        this.unbindAll = function () {
            for (var a = 0; a < self.events.length; a++) {
                var r = self.events[a];
                r.q ? r.e.unbind(r.n, r.f) : self._unbind(r.e, r.n, r.f, r.b);
            }
        };
        this.cancelEvent = function (e) {
            var e = e.original ? e.original : e ? e : window.event || !1;
            if (!e) return !1;
            if (e.preventDefault) e.preventDefault();
            if (e.stopPropagation) e.stopPropagation();
            if (e.preventManipulation) e.preventManipulation();
            e.cancelBubble = !0;
            e.cancel = !0;
            e.returnValue = !1;
            return !1;
        };
        this.stopPropagation = function (e) {
            var e = e.original ? e.original : e ? e : window.event || !1;
            if (!e) return !1;
            if (e.stopPropagation) return e.stopPropagation();
            if (e.cancelBubble) e.cancelBubble = !0;
            return !1;
        };
        this.showRail = function () {
            if (self.page.maxh != 0 && (self.ispage || self.win.css("display") != "none")) {
                self.visibility = !0;
                self.rail.visibility = !0;
                self.rail.css("display", "block");
            }
            return self;
        };
        this.showRailHr = function () {
            if (!self.railh) return self;
            if (self.page.maxw != 0 && (self.ispage || self.win.css("display") != "none")) {
                self.railh.visibility = !0;
                self.railh.css("display", "block");
            }
            return self;
        };
        this.hideRail = function () {
            self.visibility = !1;
            self.rail.visibility = !1;
            self.rail.css("display", "none");
            return self;
        };
        this.hideRailHr = function () {
            if (!self.railh) return self;
            self.railh.visibility = !1;
            self.railh.css("display", "none");
            return self;
        };
        this.show = function () {
            self.hidden = !1;
            self.locked = !1;
            return self.showRail().showRailHr();
        };
        this.hide = function () {
            self.hidden = !0;
            self.locked = !0;
            return self.hideRail().hideRailHr();
        };
        this.toggle = function () {
            return self.hidden ? self.show() : self.hide();
        };
        this.remove = function () {
            self.stop();
            if (self.cursortimeout) clearTimeout(self.cursortimeout);
            self.doZoomOut();
            self.unbindAll();
            if (cap.isie9) self.win[0].detachEvent("onpropertychange", self.onAttributeChange);
            if (self.observer !== !1) self.observer.disconnect();
            if (self.observerremover !== !1) self.observerremover.disconnect();
            self.events = null;
            if (self.cursor) {
                self.cursor.remove();
            }
            if (self.cursorh) {
                self.cursorh.remove();
            }
            if (self.rail) {
                self.rail.remove();
            }
            if (self.railh) {
                self.railh.remove();
            }
            if (self.zoom) {
                self.zoom.remove();
            }
            for (var a = 0; a < self.saved.css.length; a++) {
                var d = self.saved.css[a];
                d[0].css(d[1], typeof d[2] == "undefined" ? "" : d[2]);
            }
            self.saved = !1;
            self.me.data("__nicescroll", "");
            var lst = $.nicescroll;
            lst.each(function (i) {
                if (!this) return;
                if (this.id === self.id) {
                    delete lst[i];
                    for (var b = ++i; b < lst.length; b++, i++) lst[i] = lst[b];
                    lst.length--;
                    if (lst.length) delete lst[lst.length];
                }
            });
            for (var i in self) {
                self[i] = null;
                delete self[i];
            }
            self = null;
        };
        this.scrollstart = function (fn) {
            this.onscrollstart = fn;
            return self;
        };
        this.scrollend = function (fn) {
            this.onscrollend = fn;
            return self;
        };
        this.scrollcancel = function (fn) {
            this.onscrollcancel = fn;
            return self;
        };
        this.zoomin = function (fn) {
            this.onzoomin = fn;
            return self;
        };
        this.zoomout = function (fn) {
            this.onzoomout = fn;
            return self;
        };
        this.isScrollable = function (e) {
            var dom = e.target ? e.target : e;
            if (dom.nodeName == "OPTION") return !0;
            while (dom && dom.nodeType == 1 && !/^BODY|HTML/.test(dom.nodeName)) {
                var dd = $(dom);
                var ov = dd.css("overflowY") || dd.css("overflowX") || dd.css("overflow") || "";
                if (/scroll|auto/.test(ov)) return dom.clientHeight != dom.scrollHeight;
                dom = dom.parentNode ? dom.parentNode : !1;
            }
            return !1;
        };
        this.getViewport = function (me) {
            var dom = me && me.parentNode ? me.parentNode : !1;
            while (dom && dom.nodeType == 1 && !/^BODY|HTML/.test(dom.nodeName)) {
                var dd = $(dom);
                if (/fixed|absolute/.test(dd.css("position"))) return dd;
                var ov = dd.css("overflowY") || dd.css("overflowX") || dd.css("overflow") || "";
                if (/scroll|auto/.test(ov) && dom.clientHeight != dom.scrollHeight) return dd;
                if (dd.getNiceScroll().length > 0) return dd;
                dom = dom.parentNode ? dom.parentNode : !1;
            }
            return dom ? $(dom) : !1;
        };
        this.triggerScrollEnd = function () {
            if (!self.onscrollend) return;
            var px = self.getScrollLeft();
            var py = self.getScrollTop();
            var info = { type: "scrollend", current: { x: px, y: py }, end: { x: px, y: py } };
            self.onscrollend.call(self, info);
        };
        function execScrollWheel(e, hr, chkscroll) {
            var px, py;
            var rt = 1;
            if (e.deltaMode == 0) {
                px = -Math.floor(e.deltaX * (self.opt.mousescrollstep / (18 * 3)));
                py = -Math.floor(e.deltaY * (self.opt.mousescrollstep / (18 * 3)));
            } else if (e.deltaMode == 1) {
                px = -Math.floor(e.deltaX * self.opt.mousescrollstep);
                py = -Math.floor(e.deltaY * self.opt.mousescrollstep);
            }
            if (hr && self.opt.oneaxismousemode && px == 0 && py) {
                px = py;
                py = 0;
            }
            if (px) {
                if (self.scrollmom) {
                    self.scrollmom.stop();
                }
                self.lastdeltax += px;
                self.debounced(
                    "mousewheelx",
                    function () {
                        var dt = self.lastdeltax;
                        self.lastdeltax = 0;
                        if (!self.rail.drag) {
                            self.doScrollLeftBy(dt);
                        }
                    },
                    15
                );
            }
            if (py) {
                if (self.opt.nativeparentscrolling && chkscroll && !self.ispage && !self.zoomactive) {
                    if (py < 0) {
                        if (self.getScrollTop() >= self.page.maxh) return !0;
                    } else {
                        if (self.getScrollTop() <= 0) return !0;
                    }
                }
                if (self.scrollmom) {
                    self.scrollmom.stop();
                }
                self.lastdeltay += py;
                self.debounced(
                    "mousewheely",
                    function () {
                        var dt = self.lastdeltay;
                        self.lastdeltay = 0;
                        if (!self.rail.drag) {
                            self.doScrollBy(dt);
                        }
                    },
                    15
                );
            }
            e.stopImmediatePropagation();
            return e.preventDefault();
        }
        this.onmousewheel = function (e) {
            if (self.wheelprevented) return;
            if (self.locked) {
                self.debounced("checkunlock", self.resize, 250);
                return !0;
            }
            if (self.rail.drag) return self.cancelEvent(e);
            if (self.opt.oneaxismousemode == "auto" && e.deltaX != 0) self.opt.oneaxismousemode = !1;
            if (self.opt.oneaxismousemode && e.deltaX == 0) {
                if (!self.rail.scrollable) {
                    if (self.railh && self.railh.scrollable) {
                        return self.onmousewheelhr(e);
                    } else {
                        return !0;
                    }
                }
            }
            var nw = +new Date();
            var chk = !1;
            if (self.opt.preservenativescrolling && self.checkarea + 600 < nw) {
                self.nativescrollingarea = self.isScrollable(e);
                chk = !0;
            }
            self.checkarea = nw;
            if (self.nativescrollingarea) return !0;
            var ret = execScrollWheel(e, !1, chk);
            if (ret) self.checkarea = 0;
            return ret;
        };
        this.onmousewheelhr = function (e) {
            if (self.wheelprevented) return;
            if (self.locked || !self.railh.scrollable) return !0;
            if (self.rail.drag) return self.cancelEvent(e);
            var nw = +new Date();
            var chk = !1;
            if (self.opt.preservenativescrolling && self.checkarea + 600 < nw) {
                self.nativescrollingarea = self.isScrollable(e);
                chk = !0;
            }
            self.checkarea = nw;
            if (self.nativescrollingarea) return !0;
            if (self.locked) return self.cancelEvent(e);
            return execScrollWheel(e, !0, chk);
        };
        this.stop = function () {
            self.cancelScroll();
            if (self.scrollmon) self.scrollmon.stop();
            self.cursorfreezed = !1;
            self.scroll.y = Math.round(self.getScrollTop() * (1 / self.scrollratio.y));
            self.noticeCursor();
            return self;
        };
        this.getTransitionSpeed = function (dif) {
            var sp = Math.round(self.opt.scrollspeed * 10);
            var ex = Math.min(sp, Math.round((dif / 20) * self.opt.scrollspeed));
            return ex > 20 ? ex : 0;
        };
        if (!self.opt.smoothscroll) {
            this.doScrollLeft = function (x, spd) {
                var y = self.getScrollTop();
                self.doScrollPos(x, y, spd);
            };
            this.doScrollTop = function (y, spd) {
                var x = self.getScrollLeft();
                self.doScrollPos(x, y, spd);
            };
            this.doScrollPos = function (x, y, spd) {
                var nx = x > self.page.maxw ? self.page.maxw : x;
                if (nx < 0) nx = 0;
                var ny = y > self.page.maxh ? self.page.maxh : y;
                if (ny < 0) ny = 0;
                self.synched("scroll", function () {
                    self.setScrollTop(ny);
                    self.setScrollLeft(nx);
                });
            };
            this.cancelScroll = function () {};
        } else if (self.ishwscroll && cap.hastransition && self.opt.usetransition) {
            this.prepareTransition = function (dif, istime) {
                var ex = istime ? (dif > 20 ? dif : 0) : self.getTransitionSpeed(dif);
                var trans = ex ? cap.prefixstyle + "transform " + ex + "ms ease-out" : "";
                if (!self.lasttransitionstyle || self.lasttransitionstyle != trans) {
                    self.lasttransitionstyle = trans;
                    self.doc.css(cap.transitionstyle, trans);
                }
                return ex;
            };
            this.doScrollLeft = function (x, spd) {
                var y = self.scrollrunning ? self.newscrolly : self.getScrollTop();
                self.doScrollPos(x, y, spd);
            };
            this.doScrollTop = function (y, spd) {
                var x = self.scrollrunning ? self.newscrollx : self.getScrollLeft();
                self.doScrollPos(x, y, spd);
            };
            this.doScrollPos = function (x, y, spd) {
                var py = self.getScrollTop();
                var px = self.getScrollLeft();
                if ((self.newscrolly - py) * (y - py) < 0 || (self.newscrollx - px) * (x - px) < 0) self.cancelScroll();
                if (self.opt.bouncescroll == !1) {
                    if (y < 0) y = 0;
                    else if (y > self.page.maxh) y = self.page.maxh;
                    if (x < 0) x = 0;
                    else if (x > self.page.maxw) x = self.page.maxw;
                }
                if (self.scrollrunning && x == self.newscrollx && y == self.newscrolly) return !1;
                self.newscrolly = y;
                self.newscrollx = x;
                self.newscrollspeed = spd || !1;
                if (self.timer) return !1;
                self.timer = setTimeout(function () {
                    var top = self.getScrollTop();
                    var lft = self.getScrollLeft();
                    var dst = {};
                    dst.x = x - lft;
                    dst.y = y - top;
                    dst.px = lft;
                    dst.py = top;
                    var dd = Math.round(Math.sqrt(Math.pow(dst.x, 2) + Math.pow(dst.y, 2)));
                    var ms = self.newscrollspeed && self.newscrollspeed > 1 ? self.newscrollspeed : self.getTransitionSpeed(dd);
                    if (self.newscrollspeed && self.newscrollspeed <= 1) ms *= self.newscrollspeed;
                    self.prepareTransition(ms, !0);
                    if (self.timerscroll && self.timerscroll.tm) clearInterval(self.timerscroll.tm);
                    if (ms > 0) {
                        if (!self.scrollrunning && self.onscrollstart) {
                            var info = { type: "scrollstart", current: { x: lft, y: top }, request: { x: x, y: y }, end: { x: self.newscrollx, y: self.newscrolly }, speed: ms };
                            self.onscrollstart.call(self, info);
                        }
                        if (cap.transitionend) {
                            if (!self.scrollendtrapped) {
                                self.scrollendtrapped = !0;
                                self.bind(self.doc, cap.transitionend, self.onScrollTransitionEnd, !1);
                            }
                        } else {
                            if (self.scrollendtrapped) clearTimeout(self.scrollendtrapped);
                            self.scrollendtrapped = setTimeout(self.onScrollTransitionEnd, ms);
                        }
                        var py = top;
                        var px = lft;
                        self.timerscroll = { bz: new BezierClass(py, self.newscrolly, ms, 0, 0, 0.58, 1), bh: new BezierClass(px, self.newscrollx, ms, 0, 0, 0.58, 1) };
                        if (!self.cursorfreezed)
                            self.timerscroll.tm = setInterval(function () {
                                self.showCursor(self.getScrollTop(), self.getScrollLeft());
                            }, 60);
                    }
                    self.synched("doScroll-set", function () {
                        self.timer = 0;
                        if (self.scrollendtrapped) self.scrollrunning = !0;
                        self.setScrollTop(self.newscrolly);
                        self.setScrollLeft(self.newscrollx);
                        if (!self.scrollendtrapped) self.onScrollTransitionEnd();
                    });
                }, 50);
            };
            this.cancelScroll = function () {
                if (!self.scrollendtrapped) return !0;
                var py = self.getScrollTop();
                var px = self.getScrollLeft();
                self.scrollrunning = !1;
                if (!cap.transitionend) clearTimeout(cap.transitionend);
                self.scrollendtrapped = !1;
                self._unbind(self.doc, cap.transitionend, self.onScrollTransitionEnd);
                self.prepareTransition(0);
                self.setScrollTop(py);
                if (self.railh) self.setScrollLeft(px);
                if (self.timerscroll && self.timerscroll.tm) clearInterval(self.timerscroll.tm);
                self.timerscroll = !1;
                self.cursorfreezed = !1;
                self.showCursor(py, px);
                return self;
            };
            this.onScrollTransitionEnd = function () {
                if (self.scrollendtrapped) self._unbind(self.doc, cap.transitionend, self.onScrollTransitionEnd);
                self.scrollendtrapped = !1;
                self.prepareTransition(0);
                if (self.timerscroll && self.timerscroll.tm) clearInterval(self.timerscroll.tm);
                self.timerscroll = !1;
                var py = self.getScrollTop();
                var px = self.getScrollLeft();
                self.setScrollTop(py);
                if (self.railh) self.setScrollLeft(px);
                self.noticeCursor(!1, py, px);
                self.cursorfreezed = !1;
                if (py < 0) py = 0;
                else if (py > self.page.maxh) py = self.page.maxh;
                if (px < 0) px = 0;
                else if (px > self.page.maxw) px = self.page.maxw;
                if (py != self.newscrolly || px != self.newscrollx) return self.doScrollPos(px, py, self.opt.snapbackspeed);
                if (self.onscrollend && self.scrollrunning) {
                    self.triggerScrollEnd();
                }
                self.scrollrunning = !1;
            };
        } else {
            this.doScrollLeft = function (x, spd) {
                var y = self.scrollrunning ? self.newscrolly : self.getScrollTop();
                self.doScrollPos(x, y, spd);
            };
            this.doScrollTop = function (y, spd) {
                var x = self.scrollrunning ? self.newscrollx : self.getScrollLeft();
                self.doScrollPos(x, y, spd);
            };
            this.doScrollPos = function (x, y, spd) {
                var y = typeof y == "undefined" || y === !1 ? self.getScrollTop(!0) : y;
                if (self.timer && self.newscrolly == y && self.newscrollx == x) return !0;
                if (self.timer) clearAnimationFrame(self.timer);
                self.timer = 0;
                var py = self.getScrollTop();
                var px = self.getScrollLeft();
                if ((self.newscrolly - py) * (y - py) < 0 || (self.newscrollx - px) * (x - px) < 0) self.cancelScroll();
                self.newscrolly = y;
                self.newscrollx = x;
                if (!self.bouncescroll || !self.rail.visibility) {
                    if (self.newscrolly < 0) {
                        self.newscrolly = 0;
                    } else if (self.newscrolly > self.page.maxh) {
                        self.newscrolly = self.page.maxh;
                    }
                }
                if (!self.bouncescroll || !self.railh.visibility) {
                    if (self.newscrollx < 0) {
                        self.newscrollx = 0;
                    } else if (self.newscrollx > self.page.maxw) {
                        self.newscrollx = self.page.maxw;
                    }
                }
                self.dst = {};
                self.dst.x = x - px;
                self.dst.y = y - py;
                self.dst.px = px;
                self.dst.py = py;
                var dst = Math.round(Math.sqrt(Math.pow(self.dst.x, 2) + Math.pow(self.dst.y, 2)));
                self.dst.ax = self.dst.x / dst;
                self.dst.ay = self.dst.y / dst;
                var pa = 0;
                var pe = dst;
                if (self.dst.x == 0) {
                    pa = py;
                    pe = y;
                    self.dst.ay = 1;
                    self.dst.py = 0;
                } else if (self.dst.y == 0) {
                    pa = px;
                    pe = x;
                    self.dst.ax = 1;
                    self.dst.px = 0;
                }
                var ms = self.getTransitionSpeed(dst);
                if (spd && spd <= 1) ms *= spd;
                if (ms > 0) {
                    self.bzscroll = self.bzscroll ? self.bzscroll.update(pe, ms) : new BezierClass(pa, pe, ms, 0, 1, 0, 1);
                } else {
                    self.bzscroll = !1;
                }
                if (self.timer) return;
                if ((py == self.page.maxh && y >= self.page.maxh) || (px == self.page.maxw && x >= self.page.maxw)) self.checkContentSize();
                var sync = 1;
                function scrolling() {
                    if (self.cancelAnimationFrame) return !0;
                    self.scrollrunning = !0;
                    sync = 1 - sync;
                    if (sync) return (self.timer = setAnimationFrame(scrolling) || 1);
                    var done = 0;
                    var sc = (sy = self.getScrollTop());
                    if (self.dst.ay) {
                        sc = self.bzscroll ? self.dst.py + self.bzscroll.getNow() * self.dst.ay : self.newscrolly;
                        var dr = sc - sy;
                        if ((dr < 0 && sc < self.newscrolly) || (dr > 0 && sc > self.newscrolly)) sc = self.newscrolly;
                        self.setScrollTop(sc);
                        if (sc == self.newscrolly) done = 1;
                    } else {
                        done = 1;
                    }
                    var scx = (sx = self.getScrollLeft());
                    if (self.dst.ax) {
                        scx = self.bzscroll ? self.dst.px + self.bzscroll.getNow() * self.dst.ax : self.newscrollx;
                        var dr = scx - sx;
                        if ((dr < 0 && scx < self.newscrollx) || (dr > 0 && scx > self.newscrollx)) scx = self.newscrollx;
                        self.setScrollLeft(scx);
                        if (scx == self.newscrollx) done += 1;
                    } else {
                        done += 1;
                    }
                    if (done == 2) {
                        self.timer = 0;
                        self.cursorfreezed = !1;
                        self.bzscroll = !1;
                        self.scrollrunning = !1;
                        if (sc < 0) sc = 0;
                        else if (sc > self.page.maxh) sc = self.page.maxh;
                        if (scx < 0) scx = 0;
                        else if (scx > self.page.maxw) scx = self.page.maxw;
                        if (scx != self.newscrollx || sc != self.newscrolly) self.doScrollPos(scx, sc);
                        else {
                            if (self.onscrollend) {
                                self.triggerScrollEnd();
                            }
                        }
                    } else {
                        self.timer = setAnimationFrame(scrolling) || 1;
                    }
                }
                self.cancelAnimationFrame = !1;
                self.timer = 1;
                if (self.onscrollstart && !self.scrollrunning) {
                    var info = { type: "scrollstart", current: { x: px, y: py }, request: { x: x, y: y }, end: { x: self.newscrollx, y: self.newscrolly }, speed: ms };
                    self.onscrollstart.call(self, info);
                }
                scrolling();
                if ((py == self.page.maxh && y >= py) || (px == self.page.maxw && x >= px)) self.checkContentSize();
                self.noticeCursor();
            };
            this.cancelScroll = function () {
                if (self.timer) clearAnimationFrame(self.timer);
                self.timer = 0;
                self.bzscroll = !1;
                self.scrollrunning = !1;
                return self;
            };
        }
        this.doScrollBy = function (stp, relative) {
            var ny = 0;
            if (relative) {
                ny = Math.floor((self.scroll.y - stp) * self.scrollratio.y);
            } else {
                var sy = self.timer ? self.newscrolly : self.getScrollTop(!0);
                ny = sy - stp;
            }
            if (self.bouncescroll) {
                var haf = Math.round(self.view.h / 2);
                if (ny < -haf) ny = -haf;
                else if (ny > self.page.maxh + haf) ny = self.page.maxh + haf;
            }
            self.cursorfreezed = !1;
            py = self.getScrollTop(!0);
            if (ny < 0 && py <= 0) return self.noticeCursor();
            else if (ny > self.page.maxh && py >= self.page.maxh) {
                self.checkContentSize();
                return self.noticeCursor();
            }
            self.doScrollTop(ny);
        };
        this.doScrollLeftBy = function (stp, relative) {
            var nx = 0;
            if (relative) {
                nx = Math.floor((self.scroll.x - stp) * self.scrollratio.x);
            } else {
                var sx = self.timer ? self.newscrollx : self.getScrollLeft(!0);
                nx = sx - stp;
            }
            if (self.bouncescroll) {
                var haf = Math.round(self.view.w / 2);
                if (nx < -haf) nx = -haf;
                else if (nx > self.page.maxw + haf) nx = self.page.maxw + haf;
            }
            self.cursorfreezed = !1;
            px = self.getScrollLeft(!0);
            if (nx < 0 && px <= 0) return self.noticeCursor();
            else if (nx > self.page.maxw && px >= self.page.maxw) return self.noticeCursor();
            self.doScrollLeft(nx);
        };
        this.doScrollTo = function (pos, relative) {
            var ny = relative ? Math.round(pos * self.scrollratio.y) : pos;
            if (ny < 0) ny = 0;
            else if (ny > self.page.maxh) ny = self.page.maxh;
            self.cursorfreezed = !1;
            self.doScrollTop(pos);
        };
        this.checkContentSize = function () {
            var pg = self.getContentSize();
            if (pg.h != self.page.h || pg.w != self.page.w) self.resize(!1, pg);
        };
        self.onscroll = function (e) {
            if (self.rail.drag) return;
            if (!self.cursorfreezed) {
                self.synched("scroll", function () {
                    self.scroll.y = Math.round(self.getScrollTop() * (1 / self.scrollratio.y));
                    if (self.railh) self.scroll.x = Math.round(self.getScrollLeft() * (1 / self.scrollratio.x));
                    self.noticeCursor();
                });
            }
        };
        self.bind(self.docscroll, "scroll", self.onscroll);
        this.doZoomIn = function (e) {
            if (self.zoomactive) return;
            self.zoomactive = !0;
            self.zoomrestore = { style: {} };
            var lst = ["position", "top", "left", "zIndex", "backgroundColor", "marginTop", "marginBottom", "marginLeft", "marginRight"];
            var win = self.win[0].style;
            for (var a in lst) {
                var pp = lst[a];
                self.zoomrestore.style[pp] = typeof win[pp] != "undefined" ? win[pp] : "";
            }
            self.zoomrestore.style.width = self.win.css("width");
            self.zoomrestore.style.height = self.win.css("height");
            self.zoomrestore.padding = { w: self.win.outerWidth() - self.win.width(), h: self.win.outerHeight() - self.win.height() };
            if (cap.isios4) {
                self.zoomrestore.scrollTop = $(window).scrollTop();
                $(window).scrollTop(0);
            }
            self.win.css({ position: cap.isios4 ? "absolute" : "fixed", top: 0, left: 0, "z-index": globalmaxzindex + 100, margin: "0px" });
            var bkg = self.win.css("backgroundColor");
            if (bkg == "" || /transparent|rgba\(0, 0, 0, 0\)|rgba\(0,0,0,0\)/.test(bkg)) self.win.css("backgroundColor", "#fff");
            self.rail.css({ "z-index": globalmaxzindex + 101 });
            self.zoom.css({ "z-index": globalmaxzindex + 102 });
            self.zoom.css("backgroundPosition", "0px -18px");
            self.resizeZoom();
            if (self.onzoomin) self.onzoomin.call(self);
            return self.cancelEvent(e);
        };
        this.doZoomOut = function (e) {
            if (!self.zoomactive) return;
            self.zoomactive = !1;
            self.win.css("margin", "");
            self.win.css(self.zoomrestore.style);
            if (cap.isios4) {
                $(window).scrollTop(self.zoomrestore.scrollTop);
            }
            self.rail.css({ "z-index": self.zindex });
            self.zoom.css({ "z-index": self.zindex });
            self.zoomrestore = !1;
            self.zoom.css("backgroundPosition", "0px 0px");
            self.onResize();
            if (self.onzoomout) self.onzoomout.call(self);
            return self.cancelEvent(e);
        };
        this.doZoom = function (e) {
            return self.zoomactive ? self.doZoomOut(e) : self.doZoomIn(e);
        };
        this.resizeZoom = function () {
            if (!self.zoomactive) return;
            var py = self.getScrollTop();
            self.win.css({ width: $(window).width() - self.zoomrestore.padding.w + "px", height: $(window).height() - self.zoomrestore.padding.h + "px" });
            self.onResize();
            self.setScrollTop(Math.min(self.page.maxh, py));
        };
        this.init();
        $.nicescroll.push(this);
    };
    var ScrollMomentumClass2D = function (nc) {
        var self = this;
        this.nc = nc;
        this.lastx = 0;
        this.lasty = 0;
        this.speedx = 0;
        this.speedy = 0;
        this.lasttime = 0;
        this.steptime = 0;
        this.snapx = !1;
        this.snapy = !1;
        this.demulx = 0;
        this.demuly = 0;
        this.lastscrollx = -1;
        this.lastscrolly = -1;
        this.chkx = 0;
        this.chky = 0;
        this.timer = 0;
        this.time = function () {
            return +new Date();
        };
        this.reset = function (px, py) {
            self.stop();
            var now = self.time();
            self.steptime = 0;
            self.lasttime = now;
            self.speedx = 0;
            self.speedy = 0;
            self.lastx = px;
            self.lasty = py;
            self.lastscrollx = -1;
            self.lastscrolly = -1;
        };
        this.update = function (px, py) {
            var now = self.time();
            self.steptime = now - self.lasttime;
            self.lasttime = now;
            var dy = py - self.lasty;
            var dx = px - self.lastx;
            var sy = self.nc.getScrollTop();
            var sx = self.nc.getScrollLeft();
            var newy = sy + dy;
            var newx = sx + dx;
            self.snapx = newx < 0 || newx > self.nc.page.maxw;
            self.snapy = newy < 0 || newy > self.nc.page.maxh;
            self.speedx = dx;
            self.speedy = dy;
            self.lastx = px;
            self.lasty = py;
        };
        this.stop = function () {
            self.nc.unsynched("domomentum2d");
            if (self.timer) clearTimeout(self.timer);
            self.timer = 0;
            self.lastscrollx = -1;
            self.lastscrolly = -1;
        };
        this.doSnapy = function (nx, ny) {
            var snap = !1;
            if (ny < 0) {
                ny = 0;
                snap = !0;
            } else if (ny > self.nc.page.maxh) {
                ny = self.nc.page.maxh;
                snap = !0;
            }
            if (nx < 0) {
                nx = 0;
                snap = !0;
            } else if (nx > self.nc.page.maxw) {
                nx = self.nc.page.maxw;
                snap = !0;
            }
            snap ? self.nc.doScrollPos(nx, ny, self.nc.opt.snapbackspeed) : self.nc.triggerScrollEnd();
        };
        this.doMomentum = function (gp) {
            var t = self.time();
            var l = gp ? t + gp : self.lasttime;
            var sl = self.nc.getScrollLeft();
            var st = self.nc.getScrollTop();
            var pageh = self.nc.page.maxh;
            var pagew = self.nc.page.maxw;
            self.speedx = pagew > 0 ? Math.min(60, self.speedx) : 0;
            self.speedy = pageh > 0 ? Math.min(60, self.speedy) : 0;
            var chk = l && t - l <= 60;
            if (st < 0 || st > pageh || sl < 0 || sl > pagew) chk = !1;
            var sy = self.speedy && chk ? self.speedy : !1;
            var sx = self.speedx && chk ? self.speedx : !1;
            if (sy || sx) {
                var tm = Math.max(16, self.steptime);
                if (tm > 50) {
                    var xm = tm / 50;
                    self.speedx *= xm;
                    self.speedy *= xm;
                    tm = 50;
                }
                self.demulxy = 0;
                self.lastscrollx = self.nc.getScrollLeft();
                self.chkx = self.lastscrollx;
                self.lastscrolly = self.nc.getScrollTop();
                self.chky = self.lastscrolly;
                var nx = self.lastscrollx;
                var ny = self.lastscrolly;
                var onscroll = function () {
                    var df = self.time() - t > 600 ? 0.04 : 0.02;
                    if (self.speedx) {
                        nx = Math.floor(self.lastscrollx - self.speedx * (1 - self.demulxy));
                        self.lastscrollx = nx;
                        if (nx < 0 || nx > pagew) df = 0.1;
                    }
                    if (self.speedy) {
                        ny = Math.floor(self.lastscrolly - self.speedy * (1 - self.demulxy));
                        self.lastscrolly = ny;
                        if (ny < 0 || ny > pageh) df = 0.1;
                    }
                    self.demulxy = Math.min(1, self.demulxy + df);
                    self.nc.synched("domomentum2d", function () {
                        if (self.speedx) {
                            var scx = self.nc.getScrollLeft();
                            if (scx != self.chkx) self.stop();
                            self.chkx = nx;
                            self.nc.setScrollLeft(nx);
                        }
                        if (self.speedy) {
                            var scy = self.nc.getScrollTop();
                            if (scy != self.chky) self.stop();
                            self.chky = ny;
                            self.nc.setScrollTop(ny);
                        }
                        if (!self.timer) {
                            self.nc.hideCursor();
                            self.doSnapy(nx, ny);
                        }
                    });
                    if (self.demulxy < 1) {
                        self.timer = setTimeout(onscroll, tm);
                    } else {
                        self.stop();
                        self.nc.hideCursor();
                        self.doSnapy(nx, ny);
                    }
                };
                onscroll();
            } else {
                self.doSnapy(self.nc.getScrollLeft(), self.nc.getScrollTop());
            }
        };
    };
    var _scrollTop = jQuery.fn.scrollTop;
    jQuery.cssHooks.pageYOffset = {
        get: function (elem, computed, extra) {
            var nice = $.data(elem, "__nicescroll") || !1;
            return nice && nice.ishwscroll ? nice.getScrollTop() : _scrollTop.call(elem);
        },
        set: function (elem, value) {
            var nice = $.data(elem, "__nicescroll") || !1;
            nice && nice.ishwscroll ? nice.setScrollTop(parseInt(value)) : _scrollTop.call(elem, value);
            return this;
        },
    };
    jQuery.fn.scrollTop = function (value) {
        if (typeof value == "undefined") {
            var nice = this[0] ? $.data(this[0], "__nicescroll") || !1 : !1;
            return nice && nice.ishwscroll ? nice.getScrollTop() : _scrollTop.call(this);
        } else {
            return this.each(function () {
                var nice = $.data(this, "__nicescroll") || !1;
                nice && nice.ishwscroll ? nice.setScrollTop(parseInt(value)) : _scrollTop.call($(this), value);
            });
        }
    };
    var _scrollLeft = jQuery.fn.scrollLeft;
    $.cssHooks.pageXOffset = {
        get: function (elem, computed, extra) {
            var nice = $.data(elem, "__nicescroll") || !1;
            return nice && nice.ishwscroll ? nice.getScrollLeft() : _scrollLeft.call(elem);
        },
        set: function (elem, value) {
            var nice = $.data(elem, "__nicescroll") || !1;
            nice && nice.ishwscroll ? nice.setScrollLeft(parseInt(value)) : _scrollLeft.call(elem, value);
            return this;
        },
    };
    jQuery.fn.scrollLeft = function (value) {
        if (typeof value == "undefined") {
            var nice = this[0] ? $.data(this[0], "__nicescroll") || !1 : !1;
            return nice && nice.ishwscroll ? nice.getScrollLeft() : _scrollLeft.call(this);
        } else {
            return this.each(function () {
                var nice = $.data(this, "__nicescroll") || !1;
                nice && nice.ishwscroll ? nice.setScrollLeft(parseInt(value)) : _scrollLeft.call($(this), value);
            });
        }
    };
    var NiceScrollArray = function (doms) {
        var self = this;
        this.length = 0;
        this.name = "nicescrollarray";
        this.each = function (fn) {
            for (var a = 0, i = 0; a < self.length; a++) fn.call(self[a], i++);
            return self;
        };
        this.push = function (nice) {
            self[self.length] = nice;
            self.length++;
        };
        this.eq = function (idx) {
            return self[idx];
        };
        if (doms) {
            for (var a = 0; a < doms.length; a++) {
                var nice = $.data(doms[a], "__nicescroll") || !1;
                if (nice) {
                    this[this.length] = nice;
                    this.length++;
                }
            }
        }
        return this;
    };
    function mplex(el, lst, fn) {
        for (var a = 0; a < lst.length; a++) fn(el, lst[a]);
    }
    mplex(NiceScrollArray.prototype, ["show", "hide", "toggle", "onResize", "resize", "remove", "stop", "doScrollPos"], function (e, n) {
        e[n] = function () {
            var args = arguments;
            return this.each(function () {
                this[n].apply(this, args);
            });
        };
    });
    jQuery.fn.getNiceScroll = function (index) {
        if (typeof index == "undefined") {
            return new NiceScrollArray(this);
        } else {
            var nice = (this[index] && $.data(this[index], "__nicescroll")) || !1;
            return nice;
        }
    };
    jQuery.extend(jQuery.expr[":"], {
        nicescroll: function (a) {
            return $.data(a, "__nicescroll") ? true : !1;
        },
    });
    $.fn.niceScroll = function (wrapper, opt) {
        if (typeof opt == "undefined") {
            if (typeof wrapper == "object" && !("jquery" in wrapper)) {
                opt = wrapper;
                wrapper = !1;
            }
        }
        var ret = new NiceScrollArray();
        if (typeof opt == "undefined") opt = {};
        if (wrapper || !1) {
            opt.doc = $(wrapper);
            opt.win = $(this);
        }
        var docundef = !("doc" in opt);
        if (!docundef && !("win" in opt)) opt.win = $(this);
        this.each(function () {
            var nice = $(this).data("__nicescroll") || !1;
            if (!nice) {
                opt.doc = docundef ? $(this) : opt.doc;
                nice = new NiceScrollClass(opt, $(this));
                $(this).data("__nicescroll", nice);
            }
            ret.push(nice);
        });
        return ret.length == 1 ? ret[0] : ret;
    };
    window.NiceScroll = {
        getjQuery: function () {
            return jQuery;
        },
    };
    if (!$.nicescroll) {
        $.nicescroll = new NiceScrollArray();
        $.nicescroll.options = _globaloptions;
    }
});
var placeholder_milliseconds = 4000;
placeholder = function () {
    this.write_placeholder = function (field, text, n) {
        if (n < text.length) {
            if ($("#" + field).length > 0) {
                $("#" + field).attr("placeholder", text.substring(0, n + 1));
                n++;
                setTimeout(function () {
                    var obj = new placeholder();
                    obj.write_placeholder(field, text, n);
                }, 65);
            }
        }
    };
    this.set_fields = function (objFields) {
        for (var key in objFields) {
            if (!objFields.hasOwnProperty(key)) continue;
            this.write_placeholder(key, objFields[key], 0);
            this.intervallize(objFields);
        }
    };
    this.intervallize = function (objFields) {
        var interval = setInterval(function () {
            for (var key in objFields) {
                if (!objFields.hasOwnProperty(key)) continue;
                var obj = new placeholder();
                obj.write_placeholder(key, objFields[key], 0);
            }
        }, placeholder_milliseconds);
    };
    this.interval_time = function (ms) {
        placeholder_milliseconds = ms;
    };
};
var obj = new placeholder();
obj.interval_time(9000);
setTimeout(function () {
    obj.set_fields({ quickInq_vName: "John Mcclane" }, 1000);
}, 1000);
setTimeout(function () {
    obj.set_fields({ quickInq_vEmail: "John@gmail.com" }, 1000);
}, 3000);
setTimeout(function () {
    obj.set_fields({ quickInq_tInformation: "My Project is related...." }, 1000);
}, 7000);
setTimeout(function () {
    obj.set_fields({ Subscrber_vFirstName: "John Mcclane" }, 1000);
}, 1000);
setTimeout(function () {
    obj.set_fields({ Subscrber_vEmail: "John@gmail.com" }, 1000);
}, 3000);
$(document).ready(function () {
    loadSvgImages();
});
function loadSvgImages() {
    $("img.svg").each(function () {
        var $img = $(this);
        var imgID = $img.attr("id");
        var imgClass = $img.attr("class");
        var imgURL = $img.attr("src");
        $.get(
            imgURL,
            function (data) {
                var $svg = $(data).find("svg");
                if (typeof imgID !== "undefined") {
                    $svg = $svg.attr("id", imgID);
                }
                if (typeof imgClass !== "undefined") {
                    $svg = $svg.attr("class", imgClass + " replaced-svg");
                }
                $svg = $svg.removeAttr("xmlns:a");
                $img.replaceWith($svg);
            },
            "xml"
        );
    });
}
var source;
var menuJson = {
    json_array: {},
    mainmenu: [],
    menu_id: 1,
    counter: 0,
    init: function () {
        that = this;
        $("ul.main-menu li a").each(function (index, elem) {
            that.counter = 0;
            that.mainmenu[index] = {};
            that.mainmenu[index].name = $(this).text();
            that.mainmenu[index].link = "";
            that.mainmenu[index].id = that.menu_id;
            var parent = that.menu_id;
            that.menu_id++;
            if (typeof $(this).data("index") != "undefined" && $(this).data("index") != "") {
                var curr_index = $(this).data("index");
                var obj = $('.menu-open[data-item="' + curr_index + '"]');
                var sub_menu = that.subparent(obj, parent);
                if (sub_menu.length > 0) {
                    that.json_array[parent] = sub_menu;
                }
            } else {
                that.mainmenu[index].link = $(this).attr("href");
            }
        });
        that.json_array["0"] = that.mainmenu;
        return that.json_array;
    },
    subparent: function (obj, parent) {
        that = this;
        var sub_parent = [];
        if ($(obj).find(".sub-parent-menu").length > 0) {
            $(obj)
                .find(".sub-parent-menu")
                .each(function (index, elem) {
                    $(this)
                        .find("h3")
                        .each(function () {
                            if ($(this).text().trim() != "" && $(this).text() != "&nbsp;" && !$(this).hasClass("text-center")) {
                                sub_parent[index] = {};
                                sub_parent[index].name = $(this).text();
                                sub_parent[index].link = "";
                                sub_parent[index].id = that.menu_id;
                                var subparent = that.menu_id;
                                that.menu_id++;
                                var obj1 = $(elem).find("a");
                                var sub_menu1 = that.childmenu(obj1, -1);
                                that.json_array[subparent] = sub_menu1;
                            } else {
                                var obj1 = $(obj).find("a");
                                that.json_array[parent] = that.childmenu(obj1, that.counter);
                            }
                        });
                });
        }
        return sub_parent;
    },
    childmenu: function (obj, counter) {
        var sub_child = [];
        obj.each(function (index, elem) {
            if (!$(this).hasClass("skip-child")) {
                if (that.counter != -1) {
                    index = that.counter;
                }
                sub_child[index] = {};
                sub_child[index].name = $(this).text();
                sub_child[index].link = $(this).attr("href");
                sub_child[index].id = that.menu_id;
                that.menu_id++;
                if (that.counter != -1) {
                    that.counter++;
                }
            }
        });
        return sub_child;
    },
};
var is_back_button = !1;
var levels = [];
function showmenu(current_index, flag) {
    $(".drop-box").addClass("active");
    var menu = source[current_index];
    var li_html = "";
    back_index = 0;
    if (typeof menu !== "undefined" && menu.length > 0) {
        title = "";
        if (current_index != 0) {
            var title = $("#li_" + current_index).text();
        }
        if (flag) {
            levels.push(current_index + "##" + title);
        }
        $.each(menu, function (key, val) {
            if (typeof val != "undefined") {
                if (val.link != "") {
                    li_html += "<li onclick='showmenu(" + val.id + ")'><a  href='" + val.link + "'>" + val.name + "</a></li>";
                } else {
                    li_html += "<li onclick='showmenu(" + val.id + ",true)'><a id='li_" + val.id + "' href='javascript:void(0);'>" + val.name + "<i class='fa fa-angle-right'></i></a></li>";
                }
            }
        });
        back_index++;
        is_back_button = !0;
    } else {
        return !1;
    }
    li_html += "<li><a id='li_getquote' href='inquiry.html'>Get  Quote</a></li>";
    $("#listmenu").hide();
    $("#lbltitle").text(title);
    $("#listmenu").html(li_html);
    $("#listmenu").slideDown(200, "swing");
    if (is_back_button == !0 && current_index > 0) {
        $("#btnBackMenu").show();
    }
    if (is_back_button == !0 && current_index > 0) {
        $("#divback").show();
    } else {
        $("#divback").hide();
    }
}
$("#btnBackMenu").click(function () {
    back_index--;
    if (back_index == 0) {
        is_back_button == !1;
        $("#btnBackMenu").hide();
    }
    var back = levels[levels.length - 2].split("##");
    levels.splice(-1, 1);
    showmenu(back[0], !1);
    $("#lbltitle").text(back[1]);
});
$("#btnMenu").click(function (e) {
    if ($("#btnMenu").hasClass("close-menu")) {
        $("#btnMenu").removeClass("close-menu");
        $("#listmenu").slideUp(200, "swing", function () {
            $(".drop-box").removeClass("active");
            $("body").css("overflow", "scroll");
        });
        $(".device-menu").removeClass("menu-opened");
    } else {
        $(".drop-box").addClass("active");
        $("#btnMenu").addClass("close-menu");
        $(".device-menu").addClass("menu-opened");
        showmenu(0, !0);
        $("body").css("overflow", "Hidden");
    }
});
$("#menu-toggle").click(function () {
    $(this).toggleClass("open");
});
$(document).ready(function () {
    source = menuJson.init();
});
var random_numbers = [];
var stopHover = !1;
var timer_time = 2000;
$(document).ready(function () {
    $(".covid-act").click(function () {
        $(".covid-home-btn").toggleClass("covid-collapse");
        if ($(".covid-home-btn").hasClass("covid-collapse")) {
            $(this).html("+");
        } else {
            $(this).html("-");
        }
    });
    if ($("#about-us-video").length > 0) {
        setTimeout(function () {
            var src = $("#about-us-video").data("val");
            $("#about-us-video").attr("src", src);
        }, 2000);
    }
    setTimeout(function () {
        $(".topmenu.desktop-menu").addClass("active");
        $(".top-menu.cbp-hrmenu").addClass("active");
    }, 500);
    if ($(".hb-img-lazy-loading").length) {
        $(".hb-img-lazy-loading").each(function () {
            $(this).attr("src", $(this).attr("hb-data-src"));
        });
    }
    if (!mobilemode) {
        $(".left-banner-slider").css("width", Math.round(parseInt($("body").css("width")) / 2) + "px");
    }
    $(".left-banner-slider").find(".swiper-slide:first").show();
    $(".top-banner-default").addClass("ani");
    setTimeout(function () {
        $(".left-banner-slider").find(".swiper-slide").show();
        var swiper = new Swiper(".swiper-container1", { slidesPerView: 1, mousewheel: !1, loop: !0, autoplay: { delay: 4000 }, autoResize: !0, pagination: { el: ".swiper-pagination", clickable: !0 }, speed: 500 });
        swiper.on("slideChange", function () {
            updateEndPoints(swiper.realIndex);
        });
    }, 100);
    setTimeout(function () {
        var owl = $(".owl-carousel");
        owl.owlCarousel({ items: 1, loop: !0, margin: 10, autoplay: !0, autoplayTimeout: 2000, autoplayHoverPause: !0, transitionStyle: "fade" });
        $(".play").on("click", function () {
            owl.trigger("play.owl.autoplay", [10000]);
        });
        $(".stop").on("click", function () {
            owl.trigger("stop.owl.autoplay");
        });
    }, timer_time * 1);
    setTimeout(function () {
        applyHoverClass();
        $(".confetti-button").on("mouseover", function (e) {
            $(".induse-sec-rgt").find(".confetti-button").removeClass("animate");
            stopHover = !0;
        });
        $(".confetti-button").on("mouseout", function (e) {
            stopHover = !1;
        });
    }, timer_time * 2);
    setTimeout(function () {
        console.log("3st");
        var swiper_service;
        swiper_service = new Swiper(".swiper-container", {
            pagination: { el: ".swiper-pagination", type: "fraction" },
            loop: !0,
            navigation: { nextEl: ".swiper-button-next", prevEl: ".swiper-button-prev" },
            autoplay: { delay: 3000, disableOnInteraction: !1 },
        });
        swiper_service.on("slideChange", function () {
            if (swiper_service.realIndex == 4 || swiper_service.realIndex == 8 || swiper_service.realIndex == 0) {
            }
            if (swiper_service.realIndex < 4) {
                var active = swiper_service.realIndex;
            } else {
                var active = swiper_service.realIndex % 4;
            }
            var realindex = swiper_service.realIndex % 4;
            $(".our-service-pagi-box").find("li.active").removeClass("active");
            $(".our-service-pagi-box")
                .find('li[data-val="' + realindex + '"]')
                .addClass("active");
        });
        var swiper_nav = new Swiper(".our-service-pagi-box", { loop: !0, direction: "vertical", setWrapperSize: !0, autoplay: { delay: 5000, disableOnInteraction: !1 } });
    }, timer_time * 3);
});
function applyHoverClass() {
    if (!stopHover) {
        var xrange = generateRandomNumber();
        if (random_numbers.length == 11) {
            random_numbers = [];
        }
        var obj = $(".induse-sec-rgt").find(".confetti-button:nth(" + xrange + ")");
        obj.removeClass("animate");
        obj.addClass("animate");
        setTimeout(function () {
            obj.removeClass("animate");
        }, 2500);
    }
    setTimeout(function () {
        applyHoverClass();
    }, 3000);
}

function generateRandomNumber() {
    var max_x = 11;
    var min_x = 0;
    var xrange = Math.floor(Math.random() * (max_x - min_x + 1) + min_x);
    if (random_numbers.indexOf(xrange) != -1) {
        return generateRandomNumber();
    } else {
        random_numbers.push(xrange);
        return xrange;
    }
}

function disableScroll() {
    if (window.addEventListener) window.addEventListener("DOMMouseScroll", preventDefault, !1);
    window.onwheel = preventDefault;
    window.onmousewheel = document.onmousewheel = preventDefault;
    window.ontouchmove = preventDefault;
    document.onkeydown = preventDefaultForScrollKeys;
}
function enableScroll() {
    if (window.removeEventListener) window.removeEventListener("DOMMouseScroll", preventDefault, !1);
    window.onmousewheel = document.onmousewheel = null;
    window.onwheel = null;
    window.ontouchmove = null;
    document.onkeydown = null;
}
function preventDefault(e) {
    e = e || window.event;
    if (e.preventDefault) {
        e.preventDefault();
    }
    e.returnValue = !1;
}
function preventDefaultForScrollKeys(e) {
    if (typeof keys != "undefined") {
        if (keys[e.keyCode]) {
            preventDefault(e);
            return !1;
        }
    }
}
var btn = document.getElementById("fltBtn");
var act = document.getElementsByClassName("action");
function fling() {
    if (btn == null) {
        return;
    }
    if (btn.children[0].className === "plus") {
        btn.children[0].className = "plus textpand";
        btn.className = "floating-btn boxspand";
        setTimeout(function () {
            act[0].className = "action actionive";
            act[0].style.visibility = "visible";
        }, 1);
        setTimeout(function () {
            act[1].className = "action actionive";
            act[1].style.visibility = "visible";
        }, 70);
        setTimeout(function () {
            act[2].className = "action actionive";
            act[2].style.visibility = "visible";
        }, 140);
        $(".phplive_btn_1453967008").trigger("click");
    } else {
        btn.children[0].className = "plus";
        btn.className = "floating-btn";
        act[0].className = "action";
        act[1].className = "action";
        act[2].className = "action";
        act[0].style.visibility = "hidden";
        act[1].style.visibility = "hidden";
        act[2].style.visibility = "hidden";
    }
}
